2019-05-29T12:54:14.093233> no timezone support, time will be expressed only in local time
2019-05-29T12:54:14.093712> post_processing_gw.py found an alert_conf section
2019-05-29T12:54:14.093985> Starting thread to perform periodic gw status/tasks
2019-05-29T12:54:14.095359> 2019-05-29 12:54:14.094843
2019-05-29T12:54:14.095687> post status: gw ON
2019-05-29T12:54:14.095953> post status: executing periodic tasks
2019-05-29T12:54:15.097981> 
2019-05-29T12:54:15.098466> Current working directory: /
2019-05-29T12:54:15.101830> SX1276 detected, starting.
2019-05-29T12:54:15.104793> SX1276 LF/HF calibration
2019-05-29T12:54:15.105824> ...
2019-05-29T12:54:15.106658> **********Power ON: state 0
2019-05-29T12:54:15.107390> Default sync word: 0x12
2019-05-29T12:54:15.108105> LoRa mode 1
2019-05-29T12:54:15.108720> Setting mode: state 0
2019-05-29T12:54:15.109349> Frequency 865.200000: state 0
2019-05-29T12:54:15.110039> Use PA_BOOST amplifier line
2019-05-29T12:54:15.110714> Set LoRa power dBm to 14
2019-05-29T12:54:15.111492> Power: state 0
2019-05-29T12:54:15.112533> Get Preamble Length: state 0
2019-05-29T12:54:15.112994> Preamble Length: 8
2019-05-29T12:54:15.113302> LoRa addr 1: state 0
2019-05-29T12:54:15.114129> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-29T12:54:15.114598> Low-level gw status ON
2019-05-29T12:54:15.167968> no timezone support, time will be expressed only in local time
2019-05-29T12:54:15.168633> post status: start running
2019-05-29T12:54:16.264000> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T12:54:16.264575> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T12:54:16.265092> get_gps.py: invalid serial port
2019-05-29T12:54:16.409091> post status: dynamic GPS is requested
2019-05-29T12:54:16.409477> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T12:54:16.409834> post status get GPS: no GPS coordinates
2019-05-29T12:54:16.410128> post status: show current GPS position
2019-05-29T12:54:16.410404> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T12:54:16.410679> post status: exiting
2019-05-29T12:55:17.917785> --- rxlora. dst=1 type=0x12 src=8 seq=158 len=14 SNR=5 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T12:55:17.918279> 2019-05-29T12:55:17.914800
2019-05-29T12:55:17.918632> rcv ctrl pkt info (^p): 1,18,8,158,14,5,-41
2019-05-29T12:55:17.918937> splitted in: [1, 18, 8, 158, 14, 5, -41]
2019-05-29T12:55:17.919244> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=158 len=14 SNR=5 RSSI=-41)
2019-05-29T12:55:17.919538> rcv ctrl radio info (^r): 125,5,12
2019-05-29T12:55:17.919819> splitted in: [125, 5, 12]
2019-05-29T12:55:17.920097> (BW=125 CR=5 SF=12)
2019-05-29T12:55:17.920431> rcv timestamp (^t): 2019-05-29T12:55:17.911
2019-05-29T12:55:17.920781> 
2019-05-29T12:55:17.921276> Got first framing byte
2019-05-29T12:55:17.921666> --> got LoRa data prefix
2019-05-29T12:55:17.922053> --> DATA with_appkey: read app key sequence
2019-05-29T12:55:17.922413> app key is 0x05 0x06 0x07 0x08
2019-05-29T12:55:17.922753> app key disabled
2019-05-29T12:55:17.923087> valid app key: accept data
2019-05-29T12:55:17.923418> uploading with python /app/data_acq/edgeCall.py
2019-05-29T12:55:17.923750> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,158,10,5,-41" "125,5,12" "2019-05-29T12:55:17.911" "B827EB4E30A8"
2019-05-29T12:55:23.611452> CloudEdge: uploading
2019-05-29T12:55:23.612257> CloudEdge: run under guest identity, all data is public
2019-05-29T12:55:23.613002> CloudEdge: check if entity exits
2019-05-29T12:55:23.613740> CloudEdge: will issue requests with
2019-05-29T12:55:23.614458> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T12:55:23.615158> CloudEdge: returned msg from server is 200
2019-05-29T12:55:23.615828> CloudEdge: entity exists
2019-05-29T12:55:23.616486> CloudEdge: check if measurement exits
2019-05-29T12:55:23.617157> CloudEdge: will issue requests with
2019-05-29T12:55:23.617838> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T12:55:23.618629> CloudEdge: returned msg from server is 200
2019-05-29T12:55:23.619279> CloudEdge: measurement exists
2019-05-29T12:55:23.619655> CloudEdge: will issue requests with
2019-05-29T12:55:23.620035> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T12:55:23.620388> data: {"value":95.65,"timestamp":"2019-05-29T12:55:17.911"}
2019-05-29T12:55:23.620728> CloudEdge: returned msg from server is 200
2019-05-29T12:55:23.621104> CloudEdge: upload success
2019-05-29T12:55:23.794139> --> cloud end
2019-05-29T12:55:23.794495> 
2019-05-29T12:56:20.008039> --- rxlora. dst=1 type=0x12 src=8 seq=159 len=14 SNR=5 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T12:56:20.008558> 2019-05-29T12:56:20.004995
2019-05-29T12:56:20.008906> rcv ctrl pkt info (^p): 1,18,8,159,14,5,-41
2019-05-29T12:56:20.009211> splitted in: [1, 18, 8, 159, 14, 5, -41]
2019-05-29T12:56:20.009502> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=159 len=14 SNR=5 RSSI=-41)
2019-05-29T12:56:20.009833> rcv ctrl radio info (^r): 125,5,12
2019-05-29T12:56:20.010165> splitted in: [125, 5, 12]
2019-05-29T12:56:20.010514> (BW=125 CR=5 SF=12)
2019-05-29T12:56:20.010841> rcv timestamp (^t): 2019-05-29T12:56:20.001
2019-05-29T12:56:20.011388> 
2019-05-29T12:56:20.011821> Got first framing byte
2019-05-29T12:56:20.012193> --> got LoRa data prefix
2019-05-29T12:56:20.012525> --> DATA with_appkey: read app key sequence
2019-05-29T12:56:20.012867> app key is 0x05 0x06 0x07 0x08
2019-05-29T12:56:20.013186> app key disabled
2019-05-29T12:56:20.013642> valid app key: accept data
2019-05-29T12:56:20.013989> uploading with python /app/data_acq/edgeCall.py
2019-05-29T12:56:20.014294> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,159,10,5,-41" "125,5,12" "2019-05-29T12:56:20.001" "B827EB4E30A8"
2019-05-29T12:56:25.682457> CloudEdge: uploading
2019-05-29T12:56:25.683353> CloudEdge: run under guest identity, all data is public
2019-05-29T12:56:25.684229> CloudEdge: check if entity exits
2019-05-29T12:56:25.685019> CloudEdge: will issue requests with
2019-05-29T12:56:25.685832> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T12:56:25.686916> CloudEdge: returned msg from server is 200
2019-05-29T12:56:25.687961> CloudEdge: entity exists
2019-05-29T12:56:25.688926> CloudEdge: check if measurement exits
2019-05-29T12:56:25.689806> CloudEdge: will issue requests with
2019-05-29T12:56:25.690740> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T12:56:25.691898> CloudEdge: returned msg from server is 200
2019-05-29T12:56:25.692832> CloudEdge: measurement exists
2019-05-29T12:56:25.693851> CloudEdge: will issue requests with
2019-05-29T12:56:25.694908> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T12:56:25.695913> data: {"value":95.58,"timestamp":"2019-05-29T12:56:20.001"}
2019-05-29T12:56:25.696912> CloudEdge: returned msg from server is 200
2019-05-29T12:56:25.697833> CloudEdge: upload success
2019-05-29T12:56:25.898364> --> cloud end
2019-05-29T12:56:25.898758> 
2019-05-29T12:57:22.099494> --- rxlora. dst=1 type=0x12 src=8 seq=160 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T12:57:22.099988> 2019-05-29T12:57:22.096401
2019-05-29T12:57:22.100347> rcv ctrl pkt info (^p): 1,18,8,160,14,6,-39
2019-05-29T12:57:22.100660> splitted in: [1, 18, 8, 160, 14, 6, -39]
2019-05-29T12:57:22.101051> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=160 len=14 SNR=6 RSSI=-39)
2019-05-29T12:57:22.101442> rcv ctrl radio info (^r): 125,5,12
2019-05-29T12:57:22.101794> splitted in: [125, 5, 12]
2019-05-29T12:57:22.102189> (BW=125 CR=5 SF=12)
2019-05-29T12:57:22.102929> rcv timestamp (^t): 2019-05-29T12:57:22.093
2019-05-29T12:57:22.103420> 
2019-05-29T12:57:22.103815> Got first framing byte
2019-05-29T12:57:22.104168> --> got LoRa data prefix
2019-05-29T12:57:22.104497> --> DATA with_appkey: read app key sequence
2019-05-29T12:57:22.104948> app key is 0x05 0x06 0x07 0x08
2019-05-29T12:57:22.105402> app key disabled
2019-05-29T12:57:22.105713> valid app key: accept data
2019-05-29T12:57:22.106043> uploading with python /app/data_acq/edgeCall.py
2019-05-29T12:57:22.106388> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,160,10,6,-39" "125,5,12" "2019-05-29T12:57:22.093" "B827EB4E30A8"
2019-05-29T12:57:27.735991> CloudEdge: uploading
2019-05-29T12:57:27.736371> CloudEdge: run under guest identity, all data is public
2019-05-29T12:57:27.736668> CloudEdge: check if entity exits
2019-05-29T12:57:27.736945> CloudEdge: will issue requests with
2019-05-29T12:57:27.737254> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T12:57:27.737556> CloudEdge: returned msg from server is 200
2019-05-29T12:57:27.737847> CloudEdge: entity exists
2019-05-29T12:57:27.738128> CloudEdge: check if measurement exits
2019-05-29T12:57:27.738402> CloudEdge: will issue requests with
2019-05-29T12:57:27.738680> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T12:57:27.738966> CloudEdge: returned msg from server is 200
2019-05-29T12:57:27.739248> CloudEdge: measurement exists
2019-05-29T12:57:27.739539> CloudEdge: will issue requests with
2019-05-29T12:57:27.739825> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T12:57:27.740100> data: {"value":95.58,"timestamp":"2019-05-29T12:57:22.093"}
2019-05-29T12:57:27.740375> CloudEdge: returned msg from server is 200
2019-05-29T12:57:27.740647> CloudEdge: upload success
2019-05-29T12:57:27.899954> --> cloud end
2019-05-29T12:57:27.900318> 
2019-05-29T12:58:24.190486> --- rxlora. dst=1 type=0x12 src=8 seq=161 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T12:58:24.191140> 2019-05-29T12:58:24.187361
2019-05-29T12:58:24.191656> rcv ctrl pkt info (^p): 1,18,8,161,14,5,-40
2019-05-29T12:58:24.192025> splitted in: [1, 18, 8, 161, 14, 5, -40]
2019-05-29T12:58:24.192425> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=161 len=14 SNR=5 RSSI=-40)
2019-05-29T12:58:24.192836> rcv ctrl radio info (^r): 125,5,12
2019-05-29T12:58:24.193237> splitted in: [125, 5, 12]
2019-05-29T12:58:24.193660> (BW=125 CR=5 SF=12)
2019-05-29T12:58:24.194126> rcv timestamp (^t): 2019-05-29T12:58:24.184
2019-05-29T12:58:24.194578> 
2019-05-29T12:58:24.194982> Got first framing byte
2019-05-29T12:58:24.195418> --> got LoRa data prefix
2019-05-29T12:58:24.195828> --> DATA with_appkey: read app key sequence
2019-05-29T12:58:24.196252> app key is 0x05 0x06 0x07 0x08
2019-05-29T12:58:24.196800> app key disabled
2019-05-29T12:58:24.197210> valid app key: accept data
2019-05-29T12:58:24.199858> uploading with python /app/data_acq/edgeCall.py
2019-05-29T12:58:24.202123> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,161,10,5,-40" "125,5,12" "2019-05-29T12:58:24.184" "B827EB4E30A8"
2019-05-29T12:58:30.178471> CloudEdge: uploading
2019-05-29T12:58:30.178856> CloudEdge: run under guest identity, all data is public
2019-05-29T12:58:30.179126> CloudEdge: check if entity exits
2019-05-29T12:58:30.179400> CloudEdge: will issue requests with
2019-05-29T12:58:30.179683> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T12:58:30.179968> CloudEdge: returned msg from server is 200
2019-05-29T12:58:30.180272> CloudEdge: entity exists
2019-05-29T12:58:30.180558> CloudEdge: check if measurement exits
2019-05-29T12:58:30.180841> CloudEdge: will issue requests with
2019-05-29T12:58:30.181322> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T12:58:30.181684> CloudEdge: returned msg from server is 200
2019-05-29T12:58:30.181984> CloudEdge: measurement exists
2019-05-29T12:58:30.182264> CloudEdge: will issue requests with
2019-05-29T12:58:30.182574> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T12:58:30.183069> data: {"value":95.65,"timestamp":"2019-05-29T12:58:24.184"}
2019-05-29T12:58:30.183402> CloudEdge: returned msg from server is 200
2019-05-29T12:58:30.183690> CloudEdge: upload success
2019-05-29T12:58:30.339800> --> cloud end
2019-05-29T12:58:30.340162> 
2019-05-29T12:59:38.172653> no timezone support, time will be expressed only in local time
2019-05-29T12:59:38.173214> post_processing_gw.py found an alert_conf section
2019-05-29T12:59:38.173657> Starting thread to perform periodic gw status/tasks
2019-05-29T12:59:38.174039> 2019-05-29 12:59:38.172797
2019-05-29T12:59:38.174329> post status: gw ON
2019-05-29T12:59:38.174612> post status: executing periodic tasks
2019-05-29T12:59:39.174781> 
2019-05-29T12:59:39.175205> Current working directory: /
2019-05-29T12:59:39.175746> SX1276 detected, starting.
2019-05-29T12:59:39.176866> SX1276 LF/HF calibration
2019-05-29T12:59:39.177279> ...
2019-05-29T12:59:39.177643> **********Power ON: state 0
2019-05-29T12:59:39.178003> Default sync word: 0x12
2019-05-29T12:59:39.178306> LoRa mode 1
2019-05-29T12:59:39.178639> Setting mode: state 0
2019-05-29T12:59:39.178915> Frequency 865.200000: state 0
2019-05-29T12:59:39.179189> Use PA_BOOST amplifier line
2019-05-29T12:59:39.179462> Set LoRa power dBm to 14
2019-05-29T12:59:39.179743> Power: state 0
2019-05-29T12:59:39.180027> Get Preamble Length: state 0
2019-05-29T12:59:39.180298> Preamble Length: 8
2019-05-29T12:59:39.180566> LoRa addr 1: state 0
2019-05-29T12:59:39.180840> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-29T12:59:39.181285> Low-level gw status ON
2019-05-29T12:59:39.221163> no timezone support, time will be expressed only in local time
2019-05-29T12:59:39.221619> post status: start running
2019-05-29T12:59:40.316312> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T12:59:40.316714> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T12:59:40.317083> get_gps.py: invalid serial port
2019-05-29T12:59:40.457480> post status: dynamic GPS is requested
2019-05-29T12:59:40.457890> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T12:59:40.458254> post status get GPS: no GPS coordinates
2019-05-29T12:59:40.458566> post status: show current GPS position
2019-05-29T12:59:40.458859> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T12:59:40.459151> post status: exiting
2019-05-29T13:00:28.383471> --- rxlora. dst=1 type=0x12 src=8 seq=163 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:00:28.386973> 2019-05-29T13:00:28.383066
2019-05-29T13:00:28.387570> rcv ctrl pkt info (^p): 1,18,8,163,14,6,-40
2019-05-29T13:00:28.388052> splitted in: [1, 18, 8, 163, 14, 6, -40]
2019-05-29T13:00:28.388465> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=163 len=14 SNR=6 RSSI=-40)
2019-05-29T13:00:28.389200> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:00:28.389874> splitted in: [125, 5, 12]
2019-05-29T13:00:28.390685> (BW=125 CR=5 SF=12)
2019-05-29T13:00:28.391633> rcv timestamp (^t): 2019-05-29T13:00:28.376
2019-05-29T13:00:28.392433> 
2019-05-29T13:00:28.393174> Got first framing byte
2019-05-29T13:00:28.393945> --> got LoRa data prefix
2019-05-29T13:00:28.394537> --> DATA with_appkey: read app key sequence
2019-05-29T13:00:28.394997> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:00:28.395435> app key disabled
2019-05-29T13:00:28.395897> valid app key: accept data
2019-05-29T13:00:28.396516> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:00:28.397099> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,163,10,6,-40" "125,5,12" "2019-05-29T13:00:28.376" "B827EB4E30A8"
2019-05-29T13:00:35.107925> CloudEdge: uploading
2019-05-29T13:00:35.108315> CloudEdge: run under guest identity, all data is public
2019-05-29T13:00:35.108590> CloudEdge: check if entity exits
2019-05-29T13:00:35.108858> CloudEdge: will issue requests with
2019-05-29T13:00:35.109129> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:00:35.109445> CloudEdge: returned msg from server is 200
2019-05-29T13:00:35.109717> CloudEdge: entity exists
2019-05-29T13:00:35.109981> CloudEdge: check if measurement exits
2019-05-29T13:00:35.110247> CloudEdge: will issue requests with
2019-05-29T13:00:35.110514> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:00:35.110783> CloudEdge: returned msg from server is 200
2019-05-29T13:00:35.111170> CloudEdge: measurement exists
2019-05-29T13:00:35.111513> CloudEdge: will issue requests with
2019-05-29T13:00:35.111949> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:00:35.112484> data: {"value":95.58,"timestamp":"2019-05-29T13:00:28.376"}
2019-05-29T13:00:35.113023> CloudEdge: returned msg from server is 200
2019-05-29T13:00:35.113557> CloudEdge: upload success
2019-05-29T13:00:35.333509> --> cloud end
2019-05-29T13:00:35.334148> 
2019-05-29T13:01:30.461866> --- rxlora. dst=1 type=0x12 src=8 seq=164 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:01:30.462501> 2019-05-29T13:01:30.461448
2019-05-29T13:01:30.463037> rcv ctrl pkt info (^p): 1,18,8,164,14,6,-38
2019-05-29T13:01:30.463601> splitted in: [1, 18, 8, 164, 14, 6, -38]
2019-05-29T13:01:30.464058> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=164 len=14 SNR=6 RSSI=-38)
2019-05-29T13:01:30.464523> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:01:30.465769> splitted in: [125, 5, 12]
2019-05-29T13:01:30.466333> (BW=125 CR=5 SF=12)
2019-05-29T13:01:30.466853> rcv timestamp (^t): 2019-05-29T13:01:30.457
2019-05-29T13:01:30.467370> 
2019-05-29T13:01:30.467942> Got first framing byte
2019-05-29T13:01:30.468470> --> got LoRa data prefix
2019-05-29T13:01:30.468953> --> DATA with_appkey: read app key sequence
2019-05-29T13:01:30.469420> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:01:30.469827> app key disabled
2019-05-29T13:01:30.470281> valid app key: accept data
2019-05-29T13:01:30.470663> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:01:30.472195> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,164,10,6,-38" "125,5,12" "2019-05-29T13:01:30.457" "B827EB4E30A8"
2019-05-29T13:01:35.422190> CloudEdge: uploading
2019-05-29T13:01:35.423086> CloudEdge: run under guest identity, all data is public
2019-05-29T13:01:35.423747> CloudEdge: check if entity exits
2019-05-29T13:01:35.424228> CloudEdge: will issue requests with
2019-05-29T13:01:35.424756> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:01:35.425215> CloudEdge: returned msg from server is 200
2019-05-29T13:01:35.425571> CloudEdge: entity exists
2019-05-29T13:01:35.425883> CloudEdge: check if measurement exits
2019-05-29T13:01:35.426185> CloudEdge: will issue requests with
2019-05-29T13:01:35.426514> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:01:35.426899> CloudEdge: returned msg from server is 200
2019-05-29T13:01:35.427236> CloudEdge: measurement exists
2019-05-29T13:01:35.427632> CloudEdge: will issue requests with
2019-05-29T13:01:35.428145> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:01:35.428794> data: {"value":95.58,"timestamp":"2019-05-29T13:01:30.457"}
2019-05-29T13:01:35.429377> CloudEdge: returned msg from server is 200
2019-05-29T13:01:35.429918> CloudEdge: upload success
2019-05-29T13:01:35.612350> --> cloud end
2019-05-29T13:01:35.612775> 
2019-05-29T13:02:32.552095> --- rxlora. dst=1 type=0x12 src=8 seq=165 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:02:32.562052> 2019-05-29T13:02:32.552541
2019-05-29T13:02:32.562436> rcv ctrl pkt info (^p): 1,18,8,165,14,6,-40
2019-05-29T13:02:32.562761> splitted in: [1, 18, 8, 165, 14, 6, -40]
2019-05-29T13:02:32.563077> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=165 len=14 SNR=6 RSSI=-40)
2019-05-29T13:02:32.563403> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:02:32.563784> splitted in: [125, 5, 12]
2019-05-29T13:02:32.564092> (BW=125 CR=5 SF=12)
2019-05-29T13:02:32.564372> rcv timestamp (^t): 2019-05-29T13:02:32.548
2019-05-29T13:02:32.564655> 
2019-05-29T13:02:32.564935> Got first framing byte
2019-05-29T13:02:32.565218> --> got LoRa data prefix
2019-05-29T13:02:32.565499> --> DATA with_appkey: read app key sequence
2019-05-29T13:02:32.565791> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:02:32.566081> app key disabled
2019-05-29T13:02:32.566365> valid app key: accept data
2019-05-29T13:02:32.566644> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:02:32.566929> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,165,10,6,-40" "125,5,12" "2019-05-29T13:02:32.548" "B827EB4E30A8"
2019-05-29T13:02:37.219779> CloudEdge: uploading
2019-05-29T13:02:37.220644> CloudEdge: run under guest identity, all data is public
2019-05-29T13:02:37.221601> CloudEdge: check if entity exits
2019-05-29T13:02:37.222439> CloudEdge: will issue requests with
2019-05-29T13:02:37.223236> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:02:37.224011> CloudEdge: returned msg from server is 200
2019-05-29T13:02:37.224666> CloudEdge: entity exists
2019-05-29T13:02:37.225468> CloudEdge: check if measurement exits
2019-05-29T13:02:37.226220> CloudEdge: will issue requests with
2019-05-29T13:02:37.226933> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:02:37.227653> CloudEdge: returned msg from server is 200
2019-05-29T13:02:37.228359> CloudEdge: measurement exists
2019-05-29T13:02:37.229045> CloudEdge: will issue requests with
2019-05-29T13:02:37.229708> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:02:37.230357> data: {"value":95.71,"timestamp":"2019-05-29T13:02:32.548"}
2019-05-29T13:02:37.231080> CloudEdge: returned msg from server is 200
2019-05-29T13:02:37.231841> CloudEdge: upload success
2019-05-29T13:02:37.430885> --> cloud end
2019-05-29T13:02:37.431469> 
2019-05-29T13:03:34.644096> --- rxlora. dst=1 type=0x12 src=8 seq=166 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:03:34.645675> 2019-05-29T13:03:34.643487
2019-05-29T13:03:34.646857> rcv ctrl pkt info (^p): 1,18,8,166,14,6,-39
2019-05-29T13:03:34.648367> splitted in: [1, 18, 8, 166, 14, 6, -39]
2019-05-29T13:03:34.649499> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=166 len=14 SNR=6 RSSI=-39)
2019-05-29T13:03:34.650909> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:03:34.651892> splitted in: [125, 5, 12]
2019-05-29T13:03:34.652925> (BW=125 CR=5 SF=12)
2019-05-29T13:03:34.653848> rcv timestamp (^t): 2019-05-29T13:03:34.639
2019-05-29T13:03:34.655111> 
2019-05-29T13:03:34.656235> Got first framing byte
2019-05-29T13:03:34.657283> --> got LoRa data prefix
2019-05-29T13:03:34.658816> --> DATA with_appkey: read app key sequence
2019-05-29T13:03:34.659830> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:03:34.660752> app key disabled
2019-05-29T13:03:34.661807> valid app key: accept data
2019-05-29T13:03:34.663199> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:03:34.664594> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,166,10,6,-39" "125,5,12" "2019-05-29T13:03:34.639" "B827EB4E30A8"
2019-05-29T13:03:39.858768> CloudEdge: uploading
2019-05-29T13:03:39.859205> CloudEdge: run under guest identity, all data is public
2019-05-29T13:03:39.859528> CloudEdge: check if entity exits
2019-05-29T13:03:39.859875> CloudEdge: will issue requests with
2019-05-29T13:03:39.860193> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:03:39.860502> CloudEdge: returned msg from server is 200
2019-05-29T13:03:39.860803> CloudEdge: entity exists
2019-05-29T13:03:39.861311> CloudEdge: check if measurement exits
2019-05-29T13:03:39.861750> CloudEdge: will issue requests with
2019-05-29T13:03:39.862112> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:03:39.862505> CloudEdge: returned msg from server is 200
2019-05-29T13:03:39.862812> CloudEdge: measurement exists
2019-05-29T13:03:39.863098> CloudEdge: will issue requests with
2019-05-29T13:03:39.863383> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:03:39.863669> data: {"value":95.71,"timestamp":"2019-05-29T13:03:34.639"}
2019-05-29T13:03:39.863981> CloudEdge: returned msg from server is 200
2019-05-29T13:03:39.864268> CloudEdge: upload success
2019-05-29T13:03:40.027583> --> cloud end
2019-05-29T13:03:40.027986> 
2019-05-29T13:04:36.733710> --- rxlora. dst=1 type=0x12 src=8 seq=167 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:04:36.734692> 2019-05-29T13:04:36.733899
2019-05-29T13:04:36.735066> rcv ctrl pkt info (^p): 1,18,8,167,14,6,-39
2019-05-29T13:04:36.735428> splitted in: [1, 18, 8, 167, 14, 6, -39]
2019-05-29T13:04:36.735743> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=167 len=14 SNR=6 RSSI=-39)
2019-05-29T13:04:36.736095> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:04:36.736379> splitted in: [125, 5, 12]
2019-05-29T13:04:36.736698> (BW=125 CR=5 SF=12)
2019-05-29T13:04:36.737117> rcv timestamp (^t): 2019-05-29T13:04:36.729
2019-05-29T13:04:36.737492> 
2019-05-29T13:04:36.737861> Got first framing byte
2019-05-29T13:04:36.738242> --> got LoRa data prefix
2019-05-29T13:04:36.738583> --> DATA with_appkey: read app key sequence
2019-05-29T13:04:36.738971> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:04:36.739339> app key disabled
2019-05-29T13:04:36.739798> valid app key: accept data
2019-05-29T13:04:36.740188> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:04:36.740686> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,167,10,6,-39" "125,5,12" "2019-05-29T13:04:36.729" "B827EB4E30A8"
2019-05-29T13:04:41.872233> CloudEdge: uploading
2019-05-29T13:04:41.873139> CloudEdge: run under guest identity, all data is public
2019-05-29T13:04:41.873915> CloudEdge: check if entity exits
2019-05-29T13:04:41.874608> CloudEdge: will issue requests with
2019-05-29T13:04:41.875288> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:04:41.875983> CloudEdge: returned msg from server is 200
2019-05-29T13:04:41.876607> CloudEdge: entity exists
2019-05-29T13:04:41.877184> CloudEdge: check if measurement exits
2019-05-29T13:04:41.877763> CloudEdge: will issue requests with
2019-05-29T13:04:41.878347> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:04:41.878927> CloudEdge: returned msg from server is 200
2019-05-29T13:04:41.879516> CloudEdge: measurement exists
2019-05-29T13:04:41.880121> CloudEdge: will issue requests with
2019-05-29T13:04:41.880702> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:04:41.881451> data: {"value":95.71,"timestamp":"2019-05-29T13:04:36.729"}
2019-05-29T13:04:41.882097> CloudEdge: returned msg from server is 200
2019-05-29T13:04:41.882706> CloudEdge: upload success
2019-05-29T13:04:42.057353> --> cloud end
2019-05-29T13:04:42.057780> 
2019-05-29T13:05:38.823090> --- rxlora. dst=1 type=0x12 src=8 seq=168 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:05:38.823546> 2019-05-29T13:05:38.822691
2019-05-29T13:05:38.823871> rcv ctrl pkt info (^p): 1,18,8,168,14,6,-38
2019-05-29T13:05:38.824182> splitted in: [1, 18, 8, 168, 14, 6, -38]
2019-05-29T13:05:38.824472> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=168 len=14 SNR=6 RSSI=-38)
2019-05-29T13:05:38.824760> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:05:38.825042> splitted in: [125, 5, 12]
2019-05-29T13:05:38.825368> (BW=125 CR=5 SF=12)
2019-05-29T13:05:38.825699> rcv timestamp (^t): 2019-05-29T13:05:38.819
2019-05-29T13:05:38.826021> 
2019-05-29T13:05:38.826380> Got first framing byte
2019-05-29T13:05:38.826688> --> got LoRa data prefix
2019-05-29T13:05:38.827055> --> DATA with_appkey: read app key sequence
2019-05-29T13:05:38.827347> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:05:38.827666> app key disabled
2019-05-29T13:05:38.828022> valid app key: accept data
2019-05-29T13:05:38.828374> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:05:38.828704> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,168,10,6,-38" "125,5,12" "2019-05-29T13:05:38.819" "B827EB4E30A8"
2019-05-29T13:05:43.538336> CloudEdge: uploading
2019-05-29T13:05:43.538888> CloudEdge: run under guest identity, all data is public
2019-05-29T13:05:43.539264> CloudEdge: check if entity exits
2019-05-29T13:05:43.539584> CloudEdge: will issue requests with
2019-05-29T13:05:43.539886> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:05:43.540186> CloudEdge: returned msg from server is 200
2019-05-29T13:05:43.540490> CloudEdge: entity exists
2019-05-29T13:05:43.540797> CloudEdge: check if measurement exits
2019-05-29T13:05:43.541257> CloudEdge: will issue requests with
2019-05-29T13:05:43.541601> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:05:43.541901> CloudEdge: returned msg from server is 200
2019-05-29T13:05:43.542182> CloudEdge: measurement exists
2019-05-29T13:05:43.542470> CloudEdge: will issue requests with
2019-05-29T13:05:43.542762> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:05:43.543051> data: {"value":95.71,"timestamp":"2019-05-29T13:05:38.819"}
2019-05-29T13:05:43.543339> CloudEdge: returned msg from server is 200
2019-05-29T13:05:43.543624> CloudEdge: upload success
2019-05-29T13:05:43.715591> --> cloud end
2019-05-29T13:05:43.716056> 
2019-05-29T13:06:40.914802> --- rxlora. dst=1 type=0x12 src=8 seq=169 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:06:40.915338> 2019-05-29T13:06:40.911680
2019-05-29T13:06:40.915805> rcv ctrl pkt info (^p): 1,18,8,169,14,6,-38
2019-05-29T13:06:40.916181> splitted in: [1, 18, 8, 169, 14, 6, -38]
2019-05-29T13:06:40.916594> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=169 len=14 SNR=6 RSSI=-38)
2019-05-29T13:06:40.917031> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:06:40.917483> splitted in: [125, 5, 12]
2019-05-29T13:06:40.917914> (BW=125 CR=5 SF=12)
2019-05-29T13:06:40.918413> rcv timestamp (^t): 2019-05-29T13:06:40.908
2019-05-29T13:06:40.918842> 
2019-05-29T13:06:40.919290> Got first framing byte
2019-05-29T13:06:40.919699> --> got LoRa data prefix
2019-05-29T13:06:40.920493> --> DATA with_appkey: read app key sequence
2019-05-29T13:06:40.921216> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:06:40.921766> app key disabled
2019-05-29T13:06:40.922202> valid app key: accept data
2019-05-29T13:06:40.922560> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:06:40.922929> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,169,10,6,-38" "125,5,12" "2019-05-29T13:06:40.908" "B827EB4E30A8"
2019-05-29T13:06:45.903696> CloudEdge: uploading
2019-05-29T13:06:45.904472> CloudEdge: run under guest identity, all data is public
2019-05-29T13:06:45.905085> CloudEdge: check if entity exits
2019-05-29T13:06:45.905667> CloudEdge: will issue requests with
2019-05-29T13:06:45.906316> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:06:45.906985> CloudEdge: returned msg from server is 200
2019-05-29T13:06:45.907826> CloudEdge: entity exists
2019-05-29T13:06:45.908625> CloudEdge: check if measurement exits
2019-05-29T13:06:45.909427> CloudEdge: will issue requests with
2019-05-29T13:06:45.910246> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:06:45.911201> CloudEdge: returned msg from server is 200
2019-05-29T13:06:45.912042> CloudEdge: measurement exists
2019-05-29T13:06:45.913020> CloudEdge: will issue requests with
2019-05-29T13:06:45.913970> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:06:45.915077> data: {"value":95.71,"timestamp":"2019-05-29T13:06:40.908"}
2019-05-29T13:06:45.916103> CloudEdge: returned msg from server is 200
2019-05-29T13:06:45.917080> CloudEdge: upload success
2019-05-29T13:06:46.107449> --> cloud end
2019-05-29T13:06:46.107813> 
2019-05-29T13:07:43.001648> --- rxlora. dst=1 type=0x12 src=8 seq=170 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:07:43.002236> 2019-05-29T13:07:43.000078
2019-05-29T13:07:43.002615> rcv ctrl pkt info (^p): 1,18,8,170,14,6,-38
2019-05-29T13:07:43.002987> splitted in: [1, 18, 8, 170, 14, 6, -38]
2019-05-29T13:07:43.003393> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=170 len=14 SNR=6 RSSI=-38)
2019-05-29T13:07:43.003721> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:07:43.004016> splitted in: [125, 5, 12]
2019-05-29T13:07:43.004320> (BW=125 CR=5 SF=12)
2019-05-29T13:07:43.004639> rcv timestamp (^t): 2019-05-29T13:07:42.996
2019-05-29T13:07:43.004930> 
2019-05-29T13:07:43.005248> Got first framing byte
2019-05-29T13:07:43.005594> --> got LoRa data prefix
2019-05-29T13:07:43.005958> --> DATA with_appkey: read app key sequence
2019-05-29T13:07:43.006292> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:07:43.006741> app key disabled
2019-05-29T13:07:43.007315> valid app key: accept data
2019-05-29T13:07:43.007794> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:07:43.008301> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,170,10,6,-38" "125,5,12" "2019-05-29T13:07:42.996" "B827EB4E30A8"
2019-05-29T13:07:48.133128> CloudEdge: uploading
2019-05-29T13:07:48.133922> CloudEdge: run under guest identity, all data is public
2019-05-29T13:07:48.134678> CloudEdge: check if entity exits
2019-05-29T13:07:48.135339> CloudEdge: will issue requests with
2019-05-29T13:07:48.135991> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:07:48.136632> CloudEdge: returned msg from server is 200
2019-05-29T13:07:48.137246> CloudEdge: entity exists
2019-05-29T13:07:48.137828> CloudEdge: check if measurement exits
2019-05-29T13:07:48.138421> CloudEdge: will issue requests with
2019-05-29T13:07:48.139000> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:07:48.139583> CloudEdge: returned msg from server is 200
2019-05-29T13:07:48.140153> CloudEdge: measurement exists
2019-05-29T13:07:48.140738> CloudEdge: will issue requests with
2019-05-29T13:07:48.141477> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:07:48.142093> data: {"value":95.71,"timestamp":"2019-05-29T13:07:42.996"}
2019-05-29T13:07:48.142684> CloudEdge: returned msg from server is 200
2019-05-29T13:07:48.143283> CloudEdge: upload success
2019-05-29T13:07:48.342762> --> cloud end
2019-05-29T13:07:48.343145> 
2019-05-29T13:08:45.095078> --- rxlora. dst=1 type=0x12 src=8 seq=171 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:08:45.095772> 2019-05-29T13:08:45.087930
2019-05-29T13:08:45.096203> rcv ctrl pkt info (^p): 1,18,8,171,14,6,-39
2019-05-29T13:08:45.096618> splitted in: [1, 18, 8, 171, 14, 6, -39]
2019-05-29T13:08:45.097359> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=171 len=14 SNR=6 RSSI=-39)
2019-05-29T13:08:45.097802> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:08:45.098190> splitted in: [125, 5, 12]
2019-05-29T13:08:45.098502> (BW=125 CR=5 SF=12)
2019-05-29T13:08:45.098793> rcv timestamp (^t): 2019-05-29T13:08:45.084
2019-05-29T13:08:45.099122> 
2019-05-29T13:08:45.099451> Got first framing byte
2019-05-29T13:08:45.099800> --> got LoRa data prefix
2019-05-29T13:08:45.100139> --> DATA with_appkey: read app key sequence
2019-05-29T13:08:45.100448> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:08:45.100731> app key disabled
2019-05-29T13:08:45.101493> valid app key: accept data
2019-05-29T13:08:45.102040> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:08:45.102435> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,171,10,6,-39" "125,5,12" "2019-05-29T13:08:45.084" "B827EB4E30A8"
2019-05-29T13:08:49.712648> CloudEdge: uploading
2019-05-29T13:08:49.713625> CloudEdge: run under guest identity, all data is public
2019-05-29T13:08:49.714472> CloudEdge: check if entity exits
2019-05-29T13:08:49.715191> CloudEdge: will issue requests with
2019-05-29T13:08:49.715878> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:08:49.716529> CloudEdge: returned msg from server is 200
2019-05-29T13:08:49.717128> CloudEdge: entity exists
2019-05-29T13:08:49.717716> CloudEdge: check if measurement exits
2019-05-29T13:08:49.718318> CloudEdge: will issue requests with
2019-05-29T13:08:49.718911> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:08:49.719503> CloudEdge: returned msg from server is 200
2019-05-29T13:08:49.720097> CloudEdge: measurement exists
2019-05-29T13:08:49.720680> CloudEdge: will issue requests with
2019-05-29T13:08:49.721502> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:08:49.722163> data: {"value":95.71,"timestamp":"2019-05-29T13:08:45.084"}
2019-05-29T13:08:49.722789> CloudEdge: returned msg from server is 200
2019-05-29T13:08:49.723406> CloudEdge: upload success
2019-05-29T13:08:49.900854> --> cloud end
2019-05-29T13:08:49.901355> 
2019-05-29T13:09:40.652386> 2019-05-29 13:09:40.651221
2019-05-29T13:09:40.653168> post status: gw ON
2019-05-29T13:09:40.653782> post status: executing periodic tasks
2019-05-29T13:09:41.796615> no timezone support, time will be expressed only in local time
2019-05-29T13:09:41.797051> post status: start running
2019-05-29T13:09:42.846809> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T13:09:42.847195> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T13:09:42.847520> get_gps.py: invalid serial port
2019-05-29T13:09:42.988514> post status: dynamic GPS is requested
2019-05-29T13:09:42.989012> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T13:09:42.989526> post status get GPS: no GPS coordinates
2019-05-29T13:09:42.989908> post status: show current GPS position
2019-05-29T13:09:42.990289> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T13:09:42.990645> post status: exiting
2019-05-29T13:09:47.179453> --- rxlora. dst=1 type=0x12 src=8 seq=172 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:09:47.179934> 2019-05-29T13:09:47.176344
2019-05-29T13:09:47.180253> rcv ctrl pkt info (^p): 1,18,8,172,14,6,-39
2019-05-29T13:09:47.180575> splitted in: [1, 18, 8, 172, 14, 6, -39]
2019-05-29T13:09:47.180862> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=172 len=14 SNR=6 RSSI=-39)
2019-05-29T13:09:47.181406> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:09:47.182274> splitted in: [125, 5, 12]
2019-05-29T13:09:47.182802> (BW=125 CR=5 SF=12)
2019-05-29T13:09:47.183233> rcv timestamp (^t): 2019-05-29T13:09:47.172
2019-05-29T13:09:47.183618> 
2019-05-29T13:09:47.184070> Got first framing byte
2019-05-29T13:09:47.184487> --> got LoRa data prefix
2019-05-29T13:09:47.185285> --> DATA with_appkey: read app key sequence
2019-05-29T13:09:47.185959> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:09:47.186392> app key disabled
2019-05-29T13:09:47.186714> valid app key: accept data
2019-05-29T13:09:47.187039> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:09:47.187360> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,172,10,6,-39" "125,5,12" "2019-05-29T13:09:47.172" "B827EB4E30A8"
2019-05-29T13:09:51.801439> CloudEdge: uploading
2019-05-29T13:09:51.802224> CloudEdge: run under guest identity, all data is public
2019-05-29T13:09:51.802933> CloudEdge: check if entity exits
2019-05-29T13:09:51.803626> CloudEdge: will issue requests with
2019-05-29T13:09:51.804272> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:09:51.805030> CloudEdge: returned msg from server is 200
2019-05-29T13:09:51.805685> CloudEdge: entity exists
2019-05-29T13:09:51.806281> CloudEdge: check if measurement exits
2019-05-29T13:09:51.806864> CloudEdge: will issue requests with
2019-05-29T13:09:51.807451> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:09:51.808061> CloudEdge: returned msg from server is 200
2019-05-29T13:09:51.808766> CloudEdge: measurement exists
2019-05-29T13:09:51.809513> CloudEdge: will issue requests with
2019-05-29T13:09:51.810188> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:09:51.810813> data: {"value":95.71,"timestamp":"2019-05-29T13:09:47.172"}
2019-05-29T13:09:51.811570> CloudEdge: returned msg from server is 200
2019-05-29T13:09:51.812288> CloudEdge: upload success
2019-05-29T13:09:51.997518> --> cloud end
2019-05-29T13:09:51.997915> 
2019-05-29T13:09:57.435690> Low-level gw status ON
2019-05-29T13:10:49.267620> --- rxlora. dst=1 type=0x12 src=8 seq=173 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:10:49.268204> 2019-05-29T13:10:49.264516
2019-05-29T13:10:49.268644> rcv ctrl pkt info (^p): 1,18,8,173,14,6,-38
2019-05-29T13:10:49.269041> splitted in: [1, 18, 8, 173, 14, 6, -38]
2019-05-29T13:10:49.269461> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=173 len=14 SNR=6 RSSI=-38)
2019-05-29T13:10:49.269904> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:10:49.270320> splitted in: [125, 5, 12]
2019-05-29T13:10:49.270795> (BW=125 CR=5 SF=12)
2019-05-29T13:10:49.271352> rcv timestamp (^t): 2019-05-29T13:10:49.261
2019-05-29T13:10:49.271830> 
2019-05-29T13:10:49.272288> Got first framing byte
2019-05-29T13:10:49.272708> --> got LoRa data prefix
2019-05-29T13:10:49.273202> --> DATA with_appkey: read app key sequence
2019-05-29T13:10:49.273766> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:10:49.274186> app key disabled
2019-05-29T13:10:49.274602> valid app key: accept data
2019-05-29T13:10:49.274997> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:10:49.275316> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,173,10,6,-38" "125,5,12" "2019-05-29T13:10:49.261" "B827EB4E30A8"
2019-05-29T13:10:53.373104> CloudEdge: uploading
2019-05-29T13:10:53.373812> CloudEdge: run under guest identity, all data is public
2019-05-29T13:10:53.374316> CloudEdge: check if entity exits
2019-05-29T13:10:53.374778> CloudEdge: will issue requests with
2019-05-29T13:10:53.375173> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:10:53.375586> CloudEdge: returned msg from server is 200
2019-05-29T13:10:53.375978> CloudEdge: entity exists
2019-05-29T13:10:53.376353> CloudEdge: check if measurement exits
2019-05-29T13:10:53.376714> CloudEdge: will issue requests with
2019-05-29T13:10:53.377034> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:10:53.377414> CloudEdge: returned msg from server is 200
2019-05-29T13:10:53.377766> CloudEdge: measurement exists
2019-05-29T13:10:53.378152> CloudEdge: will issue requests with
2019-05-29T13:10:53.378516> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:10:53.378888> data: {"value":95.65,"timestamp":"2019-05-29T13:10:49.261"}
2019-05-29T13:10:53.379255> CloudEdge: returned msg from server is 200
2019-05-29T13:10:53.379586> CloudEdge: upload success
2019-05-29T13:10:53.553442> --> cloud end
2019-05-29T13:10:53.553829> 
2019-05-29T13:11:51.354739> --- rxlora. dst=1 type=0x12 src=8 seq=174 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:11:51.357947> 2019-05-29T13:11:51.354994
2019-05-29T13:11:51.358389> rcv ctrl pkt info (^p): 1,18,8,174,14,6,-39
2019-05-29T13:11:51.358725> splitted in: [1, 18, 8, 174, 14, 6, -39]
2019-05-29T13:11:51.359053> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=174 len=14 SNR=6 RSSI=-39)
2019-05-29T13:11:51.359350> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:11:51.359740> splitted in: [125, 5, 12]
2019-05-29T13:11:51.360094> (BW=125 CR=5 SF=12)
2019-05-29T13:11:51.360444> rcv timestamp (^t): 2019-05-29T13:11:51.350
2019-05-29T13:11:51.360781> 
2019-05-29T13:11:51.361344> Got first framing byte
2019-05-29T13:11:51.361761> --> got LoRa data prefix
2019-05-29T13:11:51.362375> --> DATA with_appkey: read app key sequence
2019-05-29T13:11:51.362786> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:11:51.363162> app key disabled
2019-05-29T13:11:51.363632> valid app key: accept data
2019-05-29T13:11:51.363979> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:11:51.364323> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,174,10,6,-39" "125,5,12" "2019-05-29T13:11:51.350" "B827EB4E30A8"
2019-05-29T13:11:56.114885> CloudEdge: uploading
2019-05-29T13:11:56.115703> CloudEdge: run under guest identity, all data is public
2019-05-29T13:11:56.116413> CloudEdge: check if entity exits
2019-05-29T13:11:56.117067> CloudEdge: will issue requests with
2019-05-29T13:11:56.117702> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:11:56.118337> CloudEdge: returned msg from server is 200
2019-05-29T13:11:56.118937> CloudEdge: entity exists
2019-05-29T13:11:56.119507> CloudEdge: check if measurement exits
2019-05-29T13:11:56.120080> CloudEdge: will issue requests with
2019-05-29T13:11:56.120654> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:11:56.121468> CloudEdge: returned msg from server is 200
2019-05-29T13:11:56.122123> CloudEdge: measurement exists
2019-05-29T13:11:56.122705> CloudEdge: will issue requests with
2019-05-29T13:11:56.123283> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:11:56.123858> data: {"value":95.65,"timestamp":"2019-05-29T13:11:51.350"}
2019-05-29T13:11:56.124428> CloudEdge: returned msg from server is 200
2019-05-29T13:11:56.125011> CloudEdge: upload success
2019-05-29T13:11:56.311608> --> cloud end
2019-05-29T13:11:56.311974> 
2019-05-29T13:12:53.444465> --- rxlora. dst=1 type=0x12 src=8 seq=175 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:12:53.444918> 2019-05-29T13:12:53.444068
2019-05-29T13:12:53.445278> rcv ctrl pkt info (^p): 1,18,8,175,14,6,-39
2019-05-29T13:12:53.445591> splitted in: [1, 18, 8, 175, 14, 6, -39]
2019-05-29T13:12:53.445878> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=175 len=14 SNR=6 RSSI=-39)
2019-05-29T13:12:53.446164> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:12:53.446451> splitted in: [125, 5, 12]
2019-05-29T13:12:53.446789> (BW=125 CR=5 SF=12)
2019-05-29T13:12:53.447097> rcv timestamp (^t): 2019-05-29T13:12:53.440
2019-05-29T13:12:53.447390> 
2019-05-29T13:12:53.447748> Got first framing byte
2019-05-29T13:12:53.448051> --> got LoRa data prefix
2019-05-29T13:12:53.448345> --> DATA with_appkey: read app key sequence
2019-05-29T13:12:53.448652> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:12:53.448993> app key disabled
2019-05-29T13:12:53.449321> valid app key: accept data
2019-05-29T13:12:53.449678> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:12:53.450029> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,175,10,6,-39" "125,5,12" "2019-05-29T13:12:53.440" "B827EB4E30A8"
2019-05-29T13:12:59.774709> CloudEdge: uploading
2019-05-29T13:12:59.775505> CloudEdge: run under guest identity, all data is public
2019-05-29T13:12:59.776282> CloudEdge: check if entity exits
2019-05-29T13:12:59.777194> CloudEdge: will issue requests with
2019-05-29T13:12:59.778031> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:12:59.778935> CloudEdge: returned msg from server is 200
2019-05-29T13:12:59.779764> CloudEdge: entity exists
2019-05-29T13:12:59.780513> CloudEdge: check if measurement exits
2019-05-29T13:12:59.781374> CloudEdge: will issue requests with
2019-05-29T13:12:59.782160> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:12:59.782989> CloudEdge: returned msg from server is 200
2019-05-29T13:12:59.783714> CloudEdge: measurement exists
2019-05-29T13:12:59.784423> CloudEdge: will issue requests with
2019-05-29T13:12:59.785143> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:12:59.785854> data: {"value":95.65,"timestamp":"2019-05-29T13:12:53.440"}
2019-05-29T13:12:59.786555> CloudEdge: returned msg from server is 200
2019-05-29T13:12:59.787253> CloudEdge: upload success
2019-05-29T13:12:59.973810> --> cloud end
2019-05-29T13:12:59.974213> 
2019-05-29T13:13:55.535035> --- rxlora. dst=1 type=0x12 src=8 seq=176 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:13:55.535951> 2019-05-29T13:13:55.534429
2019-05-29T13:13:55.536808> rcv ctrl pkt info (^p): 1,18,8,176,14,6,-38
2019-05-29T13:13:55.537724> splitted in: [1, 18, 8, 176, 14, 6, -38]
2019-05-29T13:13:55.538640> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=176 len=14 SNR=6 RSSI=-38)
2019-05-29T13:13:55.539882> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:13:55.541033> splitted in: [125, 5, 12]
2019-05-29T13:13:55.542074> (BW=125 CR=5 SF=12)
2019-05-29T13:13:55.543524> rcv timestamp (^t): 2019-05-29T13:13:55.530
2019-05-29T13:13:55.544546> 
2019-05-29T13:13:55.545437> Got first framing byte
2019-05-29T13:13:55.546299> --> got LoRa data prefix
2019-05-29T13:13:55.547118> --> DATA with_appkey: read app key sequence
2019-05-29T13:13:55.547810> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:13:55.548488> app key disabled
2019-05-29T13:13:55.549163> valid app key: accept data
2019-05-29T13:13:55.549575> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:13:55.550248> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,176,10,6,-38" "125,5,12" "2019-05-29T13:13:55.530" "B827EB4E30A8"
2019-05-29T13:14:00.389513> CloudEdge: uploading
2019-05-29T13:14:00.390182> CloudEdge: run under guest identity, all data is public
2019-05-29T13:14:00.390756> CloudEdge: check if entity exits
2019-05-29T13:14:00.391553> CloudEdge: will issue requests with
2019-05-29T13:14:00.392300> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:14:00.392971> CloudEdge: returned msg from server is 200
2019-05-29T13:14:00.393608> CloudEdge: entity exists
2019-05-29T13:14:00.394240> CloudEdge: check if measurement exits
2019-05-29T13:14:00.394857> CloudEdge: will issue requests with
2019-05-29T13:14:00.395449> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:14:00.396029> CloudEdge: returned msg from server is 200
2019-05-29T13:14:00.396616> CloudEdge: measurement exists
2019-05-29T13:14:00.397191> CloudEdge: will issue requests with
2019-05-29T13:14:00.397777> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:14:00.398367> data: {"value":95.71,"timestamp":"2019-05-29T13:13:55.530"}
2019-05-29T13:14:00.398953> CloudEdge: returned msg from server is 200
2019-05-29T13:14:00.399532> CloudEdge: upload success
2019-05-29T13:14:00.583188> --> cloud end
2019-05-29T13:14:00.583657> 
2019-05-29T13:14:57.626668> --- rxlora. dst=1 type=0x12 src=8 seq=177 len=14 SNR=5 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:14:57.627447> 2019-05-29T13:14:57.626095
2019-05-29T13:14:57.628302> rcv ctrl pkt info (^p): 1,18,8,177,14,5,-38
2019-05-29T13:14:57.629011> splitted in: [1, 18, 8, 177, 14, 5, -38]
2019-05-29T13:14:57.629762> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=177 len=14 SNR=5 RSSI=-38)
2019-05-29T13:14:57.630511> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:14:57.631358> splitted in: [125, 5, 12]
2019-05-29T13:14:57.632056> (BW=125 CR=5 SF=12)
2019-05-29T13:14:57.632740> rcv timestamp (^t): 2019-05-29T13:14:57.622
2019-05-29T13:14:57.633266> 
2019-05-29T13:14:57.633878> Got first framing byte
2019-05-29T13:14:57.634399> --> got LoRa data prefix
2019-05-29T13:14:57.635039> --> DATA with_appkey: read app key sequence
2019-05-29T13:14:57.635573> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:14:57.636222> app key disabled
2019-05-29T13:14:57.636760> valid app key: accept data
2019-05-29T13:14:57.637296> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:14:57.637776> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,177,10,5,-38" "125,5,12" "2019-05-29T13:14:57.622" "B827EB4E30A8"
2019-05-29T13:15:02.342634> CloudEdge: uploading
2019-05-29T13:15:02.343502> CloudEdge: run under guest identity, all data is public
2019-05-29T13:15:02.344338> CloudEdge: check if entity exits
2019-05-29T13:15:02.345045> CloudEdge: will issue requests with
2019-05-29T13:15:02.345719> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:15:02.346380> CloudEdge: returned msg from server is 200
2019-05-29T13:15:02.346979> CloudEdge: entity exists
2019-05-29T13:15:02.347580> CloudEdge: check if measurement exits
2019-05-29T13:15:02.348168> CloudEdge: will issue requests with
2019-05-29T13:15:02.349018> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:15:02.349695> CloudEdge: returned msg from server is 200
2019-05-29T13:15:02.350313> CloudEdge: measurement exists
2019-05-29T13:15:02.350909> CloudEdge: will issue requests with
2019-05-29T13:15:02.351680> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:15:02.352381> data: {"value":95.71,"timestamp":"2019-05-29T13:14:57.622"}
2019-05-29T13:15:02.352997> CloudEdge: returned msg from server is 200
2019-05-29T13:15:02.353590> CloudEdge: upload success
2019-05-29T13:15:02.520183> --> cloud end
2019-05-29T13:15:02.520684> 
2019-05-29T13:15:59.719492> --- rxlora. dst=1 type=0x12 src=8 seq=178 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:15:59.719930> 2019-05-29T13:15:59.716529
2019-05-29T13:15:59.720225> rcv ctrl pkt info (^p): 1,18,8,178,14,6,-40
2019-05-29T13:15:59.720520> splitted in: [1, 18, 8, 178, 14, 6, -40]
2019-05-29T13:15:59.720804> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=178 len=14 SNR=6 RSSI=-40)
2019-05-29T13:15:59.721190> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:15:59.721497> splitted in: [125, 5, 12]
2019-05-29T13:15:59.721820> (BW=125 CR=5 SF=12)
2019-05-29T13:15:59.722125> rcv timestamp (^t): 2019-05-29T13:15:59.713
2019-05-29T13:15:59.722436> 
2019-05-29T13:15:59.722752> Got first framing byte
2019-05-29T13:15:59.723069> --> got LoRa data prefix
2019-05-29T13:15:59.723364> --> DATA with_appkey: read app key sequence
2019-05-29T13:15:59.723720> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:15:59.724101> app key disabled
2019-05-29T13:15:59.724454> valid app key: accept data
2019-05-29T13:15:59.724796> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:15:59.725162> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,178,10,6,-40" "125,5,12" "2019-05-29T13:15:59.713" "B827EB4E30A8"
2019-05-29T13:16:03.771181> CloudEdge: uploading
2019-05-29T13:16:03.772075> CloudEdge: run under guest identity, all data is public
2019-05-29T13:16:03.772902> CloudEdge: check if entity exits
2019-05-29T13:16:03.773644> CloudEdge: will issue requests with
2019-05-29T13:16:03.774351> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:16:03.775017> CloudEdge: returned msg from server is 200
2019-05-29T13:16:03.775622> CloudEdge: entity exists
2019-05-29T13:16:03.776211> CloudEdge: check if measurement exits
2019-05-29T13:16:03.776810> CloudEdge: will issue requests with
2019-05-29T13:16:03.777393> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:16:03.777988> CloudEdge: returned msg from server is 200
2019-05-29T13:16:03.778570> CloudEdge: measurement exists
2019-05-29T13:16:03.779146> CloudEdge: will issue requests with
2019-05-29T13:16:03.779725> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:16:03.780391> data: {"value":95.65,"timestamp":"2019-05-29T13:15:59.713"}
2019-05-29T13:16:03.781294> CloudEdge: returned msg from server is 200
2019-05-29T13:16:03.782082> CloudEdge: upload success
2019-05-29T13:16:03.948679> --> cloud end
2019-05-29T13:16:03.949051> 
2019-05-29T13:17:01.811234> --- rxlora. dst=1 type=0x12 src=8 seq=179 len=14 SNR=7 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:17:01.811724> 2019-05-29T13:17:01.808002
2019-05-29T13:17:01.812044> rcv ctrl pkt info (^p): 1,18,8,179,14,7,-39
2019-05-29T13:17:01.812341> splitted in: [1, 18, 8, 179, 14, 7, -39]
2019-05-29T13:17:01.812626> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=179 len=14 SNR=7 RSSI=-39)
2019-05-29T13:17:01.813012> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:17:01.813392> splitted in: [125, 5, 12]
2019-05-29T13:17:01.813775> (BW=125 CR=5 SF=12)
2019-05-29T13:17:01.814109> rcv timestamp (^t): 2019-05-29T13:17:01.804
2019-05-29T13:17:01.814524> 
2019-05-29T13:17:01.814850> Got first framing byte
2019-05-29T13:17:01.815235> --> got LoRa data prefix
2019-05-29T13:17:01.815660> --> DATA with_appkey: read app key sequence
2019-05-29T13:17:01.816183> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:17:01.816623> app key disabled
2019-05-29T13:17:01.817095> valid app key: accept data
2019-05-29T13:17:01.817430> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:17:01.817730> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,179,10,7,-39" "125,5,12" "2019-05-29T13:17:01.804" "B827EB4E30A8"
2019-05-29T13:17:05.886012> CloudEdge: uploading
2019-05-29T13:17:05.886906> CloudEdge: run under guest identity, all data is public
2019-05-29T13:17:05.887656> CloudEdge: check if entity exits
2019-05-29T13:17:05.888438> CloudEdge: will issue requests with
2019-05-29T13:17:05.889122> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:17:05.889796> CloudEdge: returned msg from server is 200
2019-05-29T13:17:05.890412> CloudEdge: entity exists
2019-05-29T13:17:05.891128> CloudEdge: check if measurement exits
2019-05-29T13:17:05.891794> CloudEdge: will issue requests with
2019-05-29T13:17:05.892403> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:17:05.893003> CloudEdge: returned msg from server is 200
2019-05-29T13:17:05.893596> CloudEdge: measurement exists
2019-05-29T13:17:05.894192> CloudEdge: will issue requests with
2019-05-29T13:17:05.894793> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:17:05.895386> data: {"value":95.65,"timestamp":"2019-05-29T13:17:01.804"}
2019-05-29T13:17:05.896066> CloudEdge: returned msg from server is 200
2019-05-29T13:17:05.896684> CloudEdge: upload success
2019-05-29T13:17:06.075287> --> cloud end
2019-05-29T13:17:06.075704> 
2019-05-29T13:18:03.901900> --- rxlora. dst=1 type=0x12 src=8 seq=180 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:18:03.902721> 2019-05-29T13:18:03.898391
2019-05-29T13:18:03.903623> rcv ctrl pkt info (^p): 1,18,8,180,14,5,-39
2019-05-29T13:18:03.904447> splitted in: [1, 18, 8, 180, 14, 5, -39]
2019-05-29T13:18:03.905115> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=180 len=14 SNR=5 RSSI=-39)
2019-05-29T13:18:03.905729> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:18:03.906407> splitted in: [125, 5, 12]
2019-05-29T13:18:03.907012> (BW=125 CR=5 SF=12)
2019-05-29T13:18:03.907631> rcv timestamp (^t): 2019-05-29T13:18:03.895
2019-05-29T13:18:03.908263> 
2019-05-29T13:18:03.909049> Got first framing byte
2019-05-29T13:18:03.909644> --> got LoRa data prefix
2019-05-29T13:18:03.910222> --> DATA with_appkey: read app key sequence
2019-05-29T13:18:03.910684> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:18:03.911344> app key disabled
2019-05-29T13:18:03.912041> valid app key: accept data
2019-05-29T13:18:03.912633> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:18:03.913166> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,180,10,5,-39" "125,5,12" "2019-05-29T13:18:03.895" "B827EB4E30A8"
2019-05-29T13:18:07.881387> CloudEdge: uploading
2019-05-29T13:18:07.882297> CloudEdge: run under guest identity, all data is public
2019-05-29T13:18:07.883075> CloudEdge: check if entity exits
2019-05-29T13:18:07.883752> CloudEdge: will issue requests with
2019-05-29T13:18:07.884428> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:18:07.885087> CloudEdge: returned msg from server is 200
2019-05-29T13:18:07.885689> CloudEdge: entity exists
2019-05-29T13:18:07.886278> CloudEdge: check if measurement exits
2019-05-29T13:18:07.886878> CloudEdge: will issue requests with
2019-05-29T13:18:07.887466> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:18:07.888138> CloudEdge: returned msg from server is 200
2019-05-29T13:18:07.888739> CloudEdge: measurement exists
2019-05-29T13:18:07.889326> CloudEdge: will issue requests with
2019-05-29T13:18:07.889913> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:18:07.890503> data: {"value":95.58,"timestamp":"2019-05-29T13:18:03.895"}
2019-05-29T13:18:07.891420> CloudEdge: returned msg from server is 200
2019-05-29T13:18:07.892169> CloudEdge: upload success
2019-05-29T13:18:08.055691> --> cloud end
2019-05-29T13:18:08.056071> 
2019-05-29T13:19:05.991758> --- rxlora. dst=1 type=0x12 src=8 seq=181 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:19:05.992396> 2019-05-29T13:19:05.988940
2019-05-29T13:19:05.992792> rcv ctrl pkt info (^p): 1,18,8,181,14,6,-40
2019-05-29T13:19:05.993233> splitted in: [1, 18, 8, 181, 14, 6, -40]
2019-05-29T13:19:05.993592> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=181 len=14 SNR=6 RSSI=-40)
2019-05-29T13:19:05.993970> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:19:05.994384> splitted in: [125, 5, 12]
2019-05-29T13:19:05.994812> (BW=125 CR=5 SF=12)
2019-05-29T13:19:05.995206> rcv timestamp (^t): 2019-05-29T13:19:05.985
2019-05-29T13:19:05.995717> 
2019-05-29T13:19:05.996170> Got first framing byte
2019-05-29T13:19:05.996637> --> got LoRa data prefix
2019-05-29T13:19:05.997058> --> DATA with_appkey: read app key sequence
2019-05-29T13:19:05.997504> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:19:05.998068> app key disabled
2019-05-29T13:19:05.998583> valid app key: accept data
2019-05-29T13:19:05.998957> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:19:05.999431> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,181,10,6,-40" "125,5,12" "2019-05-29T13:19:05.985" "B827EB4E30A8"
2019-05-29T13:19:10.460686> CloudEdge: uploading
2019-05-29T13:19:10.461438> CloudEdge: run under guest identity, all data is public
2019-05-29T13:19:10.461927> CloudEdge: check if entity exits
2019-05-29T13:19:10.462339> CloudEdge: will issue requests with
2019-05-29T13:19:10.462691> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:19:10.463003> CloudEdge: returned msg from server is 200
2019-05-29T13:19:10.463317> CloudEdge: entity exists
2019-05-29T13:19:10.463629> CloudEdge: check if measurement exits
2019-05-29T13:19:10.463926> CloudEdge: will issue requests with
2019-05-29T13:19:10.464215> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:19:10.464504> CloudEdge: returned msg from server is 200
2019-05-29T13:19:10.464793> CloudEdge: measurement exists
2019-05-29T13:19:10.465083> CloudEdge: will issue requests with
2019-05-29T13:19:10.465372> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:19:10.465667> data: {"value":95.65,"timestamp":"2019-05-29T13:19:05.985"}
2019-05-29T13:19:10.465964> CloudEdge: returned msg from server is 200
2019-05-29T13:19:10.466255> CloudEdge: upload success
2019-05-29T13:19:10.664388> --> cloud end
2019-05-29T13:19:10.664879> 
2019-05-29T13:19:43.164744> 2019-05-29 13:19:43.161113
2019-05-29T13:19:43.165530> post status: gw ON
2019-05-29T13:19:43.166159> post status: executing periodic tasks
2019-05-29T13:19:44.291012> no timezone support, time will be expressed only in local time
2019-05-29T13:19:44.291485> post status: start running
2019-05-29T13:19:45.346199> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T13:19:45.346734> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T13:19:45.347217> get_gps.py: invalid serial port
2019-05-29T13:19:45.482342> post status: dynamic GPS is requested
2019-05-29T13:19:45.482779> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T13:19:45.483147> post status get GPS: no GPS coordinates
2019-05-29T13:19:45.483462> post status: show current GPS position
2019-05-29T13:19:45.483760> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T13:19:45.484053> post status: exiting
2019-05-29T13:20:08.082036> --- rxlora. dst=1 type=0x12 src=8 seq=182 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:20:08.083026> 2019-05-29T13:20:08.082304
2019-05-29T13:20:08.083392> rcv ctrl pkt info (^p): 1,18,8,182,14,6,-38
2019-05-29T13:20:08.083705> splitted in: [1, 18, 8, 182, 14, 6, -38]
2019-05-29T13:20:08.083998> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=182 len=14 SNR=6 RSSI=-38)
2019-05-29T13:20:08.087088> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:20:08.087608> splitted in: [125, 5, 12]
2019-05-29T13:20:08.088082> (BW=125 CR=5 SF=12)
2019-05-29T13:20:08.088443> rcv timestamp (^t): 2019-05-29T13:20:08.077
2019-05-29T13:20:08.088868> 
2019-05-29T13:20:08.089260> Got first framing byte
2019-05-29T13:20:08.089923> --> got LoRa data prefix
2019-05-29T13:20:08.092191> --> DATA with_appkey: read app key sequence
2019-05-29T13:20:08.093250> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:20:08.094712> app key disabled
2019-05-29T13:20:08.096455> valid app key: accept data
2019-05-29T13:20:08.098588> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:20:08.099177> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,182,10,6,-38" "125,5,12" "2019-05-29T13:20:08.077" "B827EB4E30A8"
2019-05-29T13:20:13.284340> CloudEdge: uploading
2019-05-29T13:20:13.285096> CloudEdge: run under guest identity, all data is public
2019-05-29T13:20:13.285725> CloudEdge: check if entity exits
2019-05-29T13:20:13.286323> CloudEdge: will issue requests with
2019-05-29T13:20:13.286980> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:20:13.287616> CloudEdge: returned msg from server is 200
2019-05-29T13:20:13.288237> CloudEdge: entity exists
2019-05-29T13:20:13.288822> CloudEdge: check if measurement exits
2019-05-29T13:20:13.289406> CloudEdge: will issue requests with
2019-05-29T13:20:13.289991> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:20:13.290582> CloudEdge: returned msg from server is 200
2019-05-29T13:20:13.291250> CloudEdge: measurement exists
2019-05-29T13:20:13.291860> CloudEdge: will issue requests with
2019-05-29T13:20:13.292456> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:20:13.293060> data: {"value":95.58,"timestamp":"2019-05-29T13:20:08.077"}
2019-05-29T13:20:13.298636> CloudEdge: returned msg from server is 200
2019-05-29T13:20:13.299885> CloudEdge: upload success
2019-05-29T13:20:13.485410> --> cloud end
2019-05-29T13:20:13.485839> 
2019-05-29T13:20:18.342976> Low-level gw status ON
2019-05-29T13:21:10.171721> --- rxlora. dst=1 type=0x12 src=8 seq=183 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:21:10.174021> 2019-05-29T13:21:10.171967
2019-05-29T13:21:10.174565> rcv ctrl pkt info (^p): 1,18,8,183,14,6,-40
2019-05-29T13:21:10.175011> splitted in: [1, 18, 8, 183, 14, 6, -40]
2019-05-29T13:21:10.175341> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=183 len=14 SNR=6 RSSI=-40)
2019-05-29T13:21:10.175710> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:21:10.176018> splitted in: [125, 5, 12]
2019-05-29T13:21:10.176307> (BW=125 CR=5 SF=12)
2019-05-29T13:21:10.176631> rcv timestamp (^t): 2019-05-29T13:21:10.167
2019-05-29T13:21:10.176983> 
2019-05-29T13:21:10.177329> Got first framing byte
2019-05-29T13:21:10.177674> --> got LoRa data prefix
2019-05-29T13:21:10.178054> --> DATA with_appkey: read app key sequence
2019-05-29T13:21:10.178453> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:21:10.178821> app key disabled
2019-05-29T13:21:10.179177> valid app key: accept data
2019-05-29T13:21:10.179546> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:21:10.179889> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,183,10,6,-40" "125,5,12" "2019-05-29T13:21:10.167" "B827EB4E30A8"
2019-05-29T13:21:14.930318> CloudEdge: uploading
2019-05-29T13:21:14.930696> CloudEdge: run under guest identity, all data is public
2019-05-29T13:21:14.931059> CloudEdge: check if entity exits
2019-05-29T13:21:14.931392> CloudEdge: will issue requests with
2019-05-29T13:21:14.931690> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:21:14.932247> CloudEdge: returned msg from server is 200
2019-05-29T13:21:14.932644> CloudEdge: entity exists
2019-05-29T13:21:14.932968> CloudEdge: check if measurement exits
2019-05-29T13:21:14.933271> CloudEdge: will issue requests with
2019-05-29T13:21:14.933575> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:21:14.933885> CloudEdge: returned msg from server is 200
2019-05-29T13:21:14.934193> CloudEdge: measurement exists
2019-05-29T13:21:14.934535> CloudEdge: will issue requests with
2019-05-29T13:21:14.934872> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:21:14.935171> data: {"value":95.65,"timestamp":"2019-05-29T13:21:10.167"}
2019-05-29T13:21:14.935471> CloudEdge: returned msg from server is 200
2019-05-29T13:21:14.935759> CloudEdge: upload success
2019-05-29T13:21:15.105980> --> cloud end
2019-05-29T13:21:15.106414> 
2019-05-29T13:22:12.262724> --- rxlora. dst=1 type=0x12 src=8 seq=184 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:22:12.263628> 2019-05-29T13:22:12.262087
2019-05-29T13:22:12.264837> rcv ctrl pkt info (^p): 1,18,8,184,14,6,-40
2019-05-29T13:22:12.265764> splitted in: [1, 18, 8, 184, 14, 6, -40]
2019-05-29T13:22:12.266668> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=184 len=14 SNR=6 RSSI=-40)
2019-05-29T13:22:12.267633> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:22:12.271627> splitted in: [125, 5, 12]
2019-05-29T13:22:12.272257> (BW=125 CR=5 SF=12)
2019-05-29T13:22:12.272954> rcv timestamp (^t): 2019-05-29T13:22:12.258
2019-05-29T13:22:12.273391> 
2019-05-29T13:22:12.273798> Got first framing byte
2019-05-29T13:22:12.274138> --> got LoRa data prefix
2019-05-29T13:22:12.274434> --> DATA with_appkey: read app key sequence
2019-05-29T13:22:12.274743> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:22:12.275054> app key disabled
2019-05-29T13:22:12.275368> valid app key: accept data
2019-05-29T13:22:12.275721> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:22:12.276050> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,184,10,6,-40" "125,5,12" "2019-05-29T13:22:12.258" "B827EB4E30A8"
2019-05-29T13:22:16.780525> CloudEdge: uploading
2019-05-29T13:22:16.781233> CloudEdge: run under guest identity, all data is public
2019-05-29T13:22:16.781725> CloudEdge: check if entity exits
2019-05-29T13:22:16.782141> CloudEdge: will issue requests with
2019-05-29T13:22:16.782520> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:22:16.782868> CloudEdge: returned msg from server is 200
2019-05-29T13:22:16.783187> CloudEdge: entity exists
2019-05-29T13:22:16.783500> CloudEdge: check if measurement exits
2019-05-29T13:22:16.783801> CloudEdge: will issue requests with
2019-05-29T13:22:16.784102> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:22:16.784461> CloudEdge: returned msg from server is 200
2019-05-29T13:22:16.784762> CloudEdge: measurement exists
2019-05-29T13:22:16.785057> CloudEdge: will issue requests with
2019-05-29T13:22:16.785361> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:22:16.785658> data: {"value":95.71,"timestamp":"2019-05-29T13:22:12.258"}
2019-05-29T13:22:16.785951> CloudEdge: returned msg from server is 200
2019-05-29T13:22:16.786253> CloudEdge: upload success
2019-05-29T13:22:16.973098> --> cloud end
2019-05-29T13:22:16.973509> 
2019-05-29T13:23:14.352986> --- rxlora. dst=1 type=0x12 src=8 seq=185 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:23:14.355120> 2019-05-29T13:23:14.353239
2019-05-29T13:23:14.355553> rcv ctrl pkt info (^p): 1,18,8,185,14,6,-38
2019-05-29T13:23:14.355957> splitted in: [1, 18, 8, 185, 14, 6, -38]
2019-05-29T13:23:14.356284> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=185 len=14 SNR=6 RSSI=-38)
2019-05-29T13:23:14.356584> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:23:14.356878> splitted in: [125, 5, 12]
2019-05-29T13:23:14.357186> (BW=125 CR=5 SF=12)
2019-05-29T13:23:14.357476> rcv timestamp (^t): 2019-05-29T13:23:14.348
2019-05-29T13:23:14.357843> 
2019-05-29T13:23:14.358237> Got first framing byte
2019-05-29T13:23:14.358597> --> got LoRa data prefix
2019-05-29T13:23:14.358930> --> DATA with_appkey: read app key sequence
2019-05-29T13:23:14.359354> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:23:14.359746> app key disabled
2019-05-29T13:23:14.360110> valid app key: accept data
2019-05-29T13:23:14.360465> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:23:14.361720> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,185,10,6,-38" "125,5,12" "2019-05-29T13:23:14.348" "B827EB4E30A8"
2019-05-29T13:23:19.344868> CloudEdge: uploading
2019-05-29T13:23:19.345869> CloudEdge: run under guest identity, all data is public
2019-05-29T13:23:19.346760> CloudEdge: check if entity exits
2019-05-29T13:23:19.347633> CloudEdge: will issue requests with
2019-05-29T13:23:19.348515> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:23:19.349416> CloudEdge: returned msg from server is 200
2019-05-29T13:23:19.350532> CloudEdge: entity exists
2019-05-29T13:23:19.351823> CloudEdge: check if measurement exits
2019-05-29T13:23:19.352829> CloudEdge: will issue requests with
2019-05-29T13:23:19.353825> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:23:19.354661> CloudEdge: returned msg from server is 200
2019-05-29T13:23:19.355467> CloudEdge: measurement exists
2019-05-29T13:23:19.356253> CloudEdge: will issue requests with
2019-05-29T13:23:19.357003> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:23:19.357658> data: {"value":95.58,"timestamp":"2019-05-29T13:23:14.348"}
2019-05-29T13:23:19.358370> CloudEdge: returned msg from server is 200
2019-05-29T13:23:19.358984> CloudEdge: upload success
2019-05-29T13:23:19.531573> --> cloud end
2019-05-29T13:23:19.531989> 
2019-05-29T13:24:16.443192> --- rxlora. dst=1 type=0x12 src=8 seq=186 len=14 SNR=6 RSSIpkt=-37 BW=125 CR=4/5 SF=12
2019-05-29T13:24:16.443739> 2019-05-29T13:24:16.442757
2019-05-29T13:24:16.444222> rcv ctrl pkt info (^p): 1,18,8,186,14,6,-37
2019-05-29T13:24:16.444629> splitted in: [1, 18, 8, 186, 14, 6, -37]
2019-05-29T13:24:16.445015> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=186 len=14 SNR=6 RSSI=-37)
2019-05-29T13:24:16.445366> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:24:16.445885> splitted in: [125, 5, 12]
2019-05-29T13:24:16.446250> (BW=125 CR=5 SF=12)
2019-05-29T13:24:16.446691> rcv timestamp (^t): 2019-05-29T13:24:16.439
2019-05-29T13:24:16.447077> 
2019-05-29T13:24:16.447526> Got first framing byte
2019-05-29T13:24:16.447957> --> got LoRa data prefix
2019-05-29T13:24:16.448497> --> DATA with_appkey: read app key sequence
2019-05-29T13:24:16.448946> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:24:16.449486> app key disabled
2019-05-29T13:24:16.449928> valid app key: accept data
2019-05-29T13:24:16.450391> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:24:16.450817> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,186,10,6,-37" "125,5,12" "2019-05-29T13:24:16.439" "B827EB4E30A8"
2019-05-29T13:24:21.382281> CloudEdge: uploading
2019-05-29T13:24:21.384597> CloudEdge: run under guest identity, all data is public
2019-05-29T13:24:21.385667> CloudEdge: check if entity exits
2019-05-29T13:24:21.386474> CloudEdge: will issue requests with
2019-05-29T13:24:21.387180> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:24:21.387801> CloudEdge: returned msg from server is 200
2019-05-29T13:24:21.388412> CloudEdge: entity exists
2019-05-29T13:24:21.389006> CloudEdge: check if measurement exits
2019-05-29T13:24:21.389684> CloudEdge: will issue requests with
2019-05-29T13:24:21.390310> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:24:21.391059> CloudEdge: returned msg from server is 200
2019-05-29T13:24:21.391736> CloudEdge: measurement exists
2019-05-29T13:24:21.392349> CloudEdge: will issue requests with
2019-05-29T13:24:21.392961> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:24:21.393560> data: {"value":95.65,"timestamp":"2019-05-29T13:24:16.439"}
2019-05-29T13:24:21.394159> CloudEdge: returned msg from server is 200
2019-05-29T13:24:21.394753> CloudEdge: upload success
2019-05-29T13:24:21.569338> --> cloud end
2019-05-29T13:24:21.569710> 
2019-05-29T13:25:18.537387> --- rxlora. dst=1 type=0x12 src=8 seq=187 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:25:18.537954> 2019-05-29T13:25:18.534259
2019-05-29T13:25:18.538401> rcv ctrl pkt info (^p): 1,18,8,187,14,6,-40
2019-05-29T13:25:18.538793> splitted in: [1, 18, 8, 187, 14, 6, -40]
2019-05-29T13:25:18.539195> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=187 len=14 SNR=6 RSSI=-40)
2019-05-29T13:25:18.539648> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:25:18.540103> splitted in: [125, 5, 12]
2019-05-29T13:25:18.540514> (BW=125 CR=5 SF=12)
2019-05-29T13:25:18.540878> rcv timestamp (^t): 2019-05-29T13:25:18.530
2019-05-29T13:25:18.541309> 
2019-05-29T13:25:18.541624> Got first framing byte
2019-05-29T13:25:18.541929> --> got LoRa data prefix
2019-05-29T13:25:18.542204> --> DATA with_appkey: read app key sequence
2019-05-29T13:25:18.542507> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:25:18.542782> app key disabled
2019-05-29T13:25:18.543073> valid app key: accept data
2019-05-29T13:25:18.543367> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:25:18.543652> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,187,10,6,-40" "125,5,12" "2019-05-29T13:25:18.530" "B827EB4E30A8"
2019-05-29T13:25:23.020804> CloudEdge: uploading
2019-05-29T13:25:23.021850> CloudEdge: run under guest identity, all data is public
2019-05-29T13:25:23.022715> CloudEdge: check if entity exits
2019-05-29T13:25:23.023643> CloudEdge: will issue requests with
2019-05-29T13:25:23.024596> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:25:23.025638> CloudEdge: returned msg from server is 200
2019-05-29T13:25:23.026744> CloudEdge: entity exists
2019-05-29T13:25:23.027732> CloudEdge: check if measurement exits
2019-05-29T13:25:23.028676> CloudEdge: will issue requests with
2019-05-29T13:25:23.029669> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:25:23.030631> CloudEdge: returned msg from server is 200
2019-05-29T13:25:23.031639> CloudEdge: measurement exists
2019-05-29T13:25:23.032702> CloudEdge: will issue requests with
2019-05-29T13:25:23.033653> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:25:23.034651> data: {"value":95.58,"timestamp":"2019-05-29T13:25:18.530"}
2019-05-29T13:25:23.035409> CloudEdge: returned msg from server is 200
2019-05-29T13:25:23.036075> CloudEdge: upload success
2019-05-29T13:25:23.210433> --> cloud end
2019-05-29T13:25:23.210823> 
2019-05-29T13:26:20.630054> --- rxlora. dst=1 type=0x12 src=8 seq=188 len=14 SNR=5 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:26:20.630553> 2019-05-29T13:26:20.626978
2019-05-29T13:26:20.631102> rcv ctrl pkt info (^p): 1,18,8,188,14,5,-41
2019-05-29T13:26:20.631524> splitted in: [1, 18, 8, 188, 14, 5, -41]
2019-05-29T13:26:20.631922> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=188 len=14 SNR=5 RSSI=-41)
2019-05-29T13:26:20.632309> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:26:20.632677> splitted in: [125, 5, 12]
2019-05-29T13:26:20.633044> (BW=125 CR=5 SF=12)
2019-05-29T13:26:20.633451> rcv timestamp (^t): 2019-05-29T13:26:20.623
2019-05-29T13:26:20.633840> 
2019-05-29T13:26:20.634216> Got first framing byte
2019-05-29T13:26:20.634569> --> got LoRa data prefix
2019-05-29T13:26:20.634921> --> DATA with_appkey: read app key sequence
2019-05-29T13:26:20.635274> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:26:20.635756> app key disabled
2019-05-29T13:26:20.636110> valid app key: accept data
2019-05-29T13:26:20.636441> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:26:20.636852> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,188,10,5,-41" "125,5,12" "2019-05-29T13:26:20.623" "B827EB4E30A8"
2019-05-29T13:26:25.347343> CloudEdge: uploading
2019-05-29T13:26:25.348282> CloudEdge: run under guest identity, all data is public
2019-05-29T13:26:25.349132> CloudEdge: check if entity exits
2019-05-29T13:26:25.349834> CloudEdge: will issue requests with
2019-05-29T13:26:25.350546> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:26:25.351520> CloudEdge: returned msg from server is 200
2019-05-29T13:26:25.352238> CloudEdge: entity exists
2019-05-29T13:26:25.352868> CloudEdge: check if measurement exits
2019-05-29T13:26:25.353483> CloudEdge: will issue requests with
2019-05-29T13:26:25.354086> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:26:25.354690> CloudEdge: returned msg from server is 200
2019-05-29T13:26:25.355290> CloudEdge: measurement exists
2019-05-29T13:26:25.355889> CloudEdge: will issue requests with
2019-05-29T13:26:25.356483> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:26:25.357174> data: {"value":95.71,"timestamp":"2019-05-29T13:26:20.623"}
2019-05-29T13:26:25.357792> CloudEdge: returned msg from server is 200
2019-05-29T13:26:25.358388> CloudEdge: upload success
2019-05-29T13:26:25.546461> --> cloud end
2019-05-29T13:26:25.546845> 
2019-05-29T13:27:22.721656> --- rxlora. dst=1 type=0x12 src=8 seq=189 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:27:22.722130> 2019-05-29T13:27:22.719769
2019-05-29T13:27:22.722596> rcv ctrl pkt info (^p): 1,18,8,189,14,6,-39
2019-05-29T13:27:22.722958> splitted in: [1, 18, 8, 189, 14, 6, -39]
2019-05-29T13:27:22.723268> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=189 len=14 SNR=6 RSSI=-39)
2019-05-29T13:27:22.723584> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:27:22.723905> splitted in: [125, 5, 12]
2019-05-29T13:27:22.724194> (BW=125 CR=5 SF=12)
2019-05-29T13:27:22.724519> rcv timestamp (^t): 2019-05-29T13:27:22.716
2019-05-29T13:27:22.724875> 
2019-05-29T13:27:22.725229> Got first framing byte
2019-05-29T13:27:22.725585> --> got LoRa data prefix
2019-05-29T13:27:22.725962> --> DATA with_appkey: read app key sequence
2019-05-29T13:27:22.726347> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:27:22.726733> app key disabled
2019-05-29T13:27:22.727094> valid app key: accept data
2019-05-29T13:27:22.727461> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:27:22.727885> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,189,10,6,-39" "125,5,12" "2019-05-29T13:27:22.716" "B827EB4E30A8"
2019-05-29T13:27:27.253348> CloudEdge: uploading
2019-05-29T13:27:27.256621> CloudEdge: run under guest identity, all data is public
2019-05-29T13:27:27.257191> CloudEdge: check if entity exits
2019-05-29T13:27:27.257550> CloudEdge: will issue requests with
2019-05-29T13:27:27.257858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:27:27.258166> CloudEdge: returned msg from server is 200
2019-05-29T13:27:27.258473> CloudEdge: entity exists
2019-05-29T13:27:27.258769> CloudEdge: check if measurement exits
2019-05-29T13:27:27.259273> CloudEdge: will issue requests with
2019-05-29T13:27:27.259634> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:27:27.259940> CloudEdge: returned msg from server is 200
2019-05-29T13:27:27.260241> CloudEdge: measurement exists
2019-05-29T13:27:27.260579> CloudEdge: will issue requests with
2019-05-29T13:27:27.260910> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:27:27.261390> data: {"value":95.58,"timestamp":"2019-05-29T13:27:22.716"}
2019-05-29T13:27:27.261734> CloudEdge: returned msg from server is 200
2019-05-29T13:27:27.262053> CloudEdge: upload success
2019-05-29T13:27:27.416558> --> cloud end
2019-05-29T13:27:27.416931> 
2019-05-29T13:28:24.814524> --- rxlora. dst=1 type=0x12 src=8 seq=190 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:28:24.814907> 2019-05-29T13:28:24.812863
2019-05-29T13:28:24.815183> rcv ctrl pkt info (^p): 1,18,8,190,14,6,-40
2019-05-29T13:28:24.815456> splitted in: [1, 18, 8, 190, 14, 6, -40]
2019-05-29T13:28:24.815732> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=190 len=14 SNR=6 RSSI=-40)
2019-05-29T13:28:24.816006> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:28:24.816278> splitted in: [125, 5, 12]
2019-05-29T13:28:24.816548> (BW=125 CR=5 SF=12)
2019-05-29T13:28:24.816821> rcv timestamp (^t): 2019-05-29T13:28:24.809
2019-05-29T13:28:24.817092> 
2019-05-29T13:28:24.817361> Got first framing byte
2019-05-29T13:28:24.817631> --> got LoRa data prefix
2019-05-29T13:28:24.817904> --> DATA with_appkey: read app key sequence
2019-05-29T13:28:24.818176> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:28:24.818448> app key disabled
2019-05-29T13:28:24.818718> valid app key: accept data
2019-05-29T13:28:24.818992> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:28:24.819265> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,190,10,6,-40" "125,5,12" "2019-05-29T13:28:24.809" "B827EB4E30A8"
2019-05-29T13:28:29.813786> CloudEdge: uploading
2019-05-29T13:28:29.814358> CloudEdge: run under guest identity, all data is public
2019-05-29T13:28:29.814749> CloudEdge: check if entity exits
2019-05-29T13:28:29.815067> CloudEdge: will issue requests with
2019-05-29T13:28:29.815369> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:28:29.815669> CloudEdge: returned msg from server is 200
2019-05-29T13:28:29.815973> CloudEdge: entity exists
2019-05-29T13:28:29.816269> CloudEdge: check if measurement exits
2019-05-29T13:28:29.816571> CloudEdge: will issue requests with
2019-05-29T13:28:29.816871> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:28:29.817162> CloudEdge: returned msg from server is 200
2019-05-29T13:28:29.818107> CloudEdge: measurement exists
2019-05-29T13:28:29.818530> CloudEdge: will issue requests with
2019-05-29T13:28:29.819075> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:28:29.819444> data: {"value":95.58,"timestamp":"2019-05-29T13:28:24.809"}
2019-05-29T13:28:29.819761> CloudEdge: returned msg from server is 200
2019-05-29T13:28:29.820066> CloudEdge: upload success
2019-05-29T13:28:29.980208> --> cloud end
2019-05-29T13:28:29.985506> 
2019-05-29T13:29:26.905315> --- rxlora. dst=1 type=0x12 src=8 seq=191 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:29:26.905862> 2019-05-29T13:29:26.904892
2019-05-29T13:29:26.906332> rcv ctrl pkt info (^p): 1,18,8,191,14,6,-40
2019-05-29T13:29:26.906738> splitted in: [1, 18, 8, 191, 14, 6, -40]
2019-05-29T13:29:26.907112> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=191 len=14 SNR=6 RSSI=-40)
2019-05-29T13:29:26.907463> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:29:26.907892> splitted in: [125, 5, 12]
2019-05-29T13:29:26.908321> (BW=125 CR=5 SF=12)
2019-05-29T13:29:26.908736> rcv timestamp (^t): 2019-05-29T13:29:26.901
2019-05-29T13:29:26.909100> 
2019-05-29T13:29:26.909557> Got first framing byte
2019-05-29T13:29:26.909991> --> got LoRa data prefix
2019-05-29T13:29:26.910471> --> DATA with_appkey: read app key sequence
2019-05-29T13:29:26.910881> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:29:26.911565> app key disabled
2019-05-29T13:29:26.912064> valid app key: accept data
2019-05-29T13:29:26.912514> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:29:26.912983> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,191,10,6,-40" "125,5,12" "2019-05-29T13:29:26.901" "B827EB4E30A8"
2019-05-29T13:29:32.942706> CloudEdge: uploading
2019-05-29T13:29:32.943601> CloudEdge: run under guest identity, all data is public
2019-05-29T13:29:32.944358> CloudEdge: check if entity exits
2019-05-29T13:29:32.945033> CloudEdge: will issue requests with
2019-05-29T13:29:32.945695> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:29:32.946355> CloudEdge: returned msg from server is 200
2019-05-29T13:29:32.946965> CloudEdge: entity exists
2019-05-29T13:29:32.947559> CloudEdge: check if measurement exits
2019-05-29T13:29:32.948230> CloudEdge: will issue requests with
2019-05-29T13:29:32.948848> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:29:32.949446> CloudEdge: returned msg from server is 200
2019-05-29T13:29:32.950038> CloudEdge: measurement exists
2019-05-29T13:29:32.950627> CloudEdge: will issue requests with
2019-05-29T13:29:32.951384> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:29:32.952039> data: {"value":95.46,"timestamp":"2019-05-29T13:29:26.901"}
2019-05-29T13:29:32.952649> CloudEdge: returned msg from server is 200
2019-05-29T13:29:32.953257> CloudEdge: upload success
2019-05-29T13:29:33.152152> --> cloud end
2019-05-29T13:29:33.152847> 
2019-05-29T13:29:45.642119> 2019-05-29 13:29:45.641044
2019-05-29T13:29:45.642626> post status: gw ON
2019-05-29T13:29:45.643035> post status: executing periodic tasks
2019-05-29T13:29:46.726935> no timezone support, time will be expressed only in local time
2019-05-29T13:29:46.727367> post status: start running
2019-05-29T13:29:47.805886> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T13:29:47.806451> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T13:29:47.806870> get_gps.py: invalid serial port
2019-05-29T13:29:47.945143> post status: dynamic GPS is requested
2019-05-29T13:29:47.945514> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T13:29:47.945792> post status get GPS: no GPS coordinates
2019-05-29T13:29:47.946064> post status: show current GPS position
2019-05-29T13:29:47.946337> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T13:29:47.946635> post status: exiting
2019-05-29T13:30:29.002106> --- rxlora. dst=1 type=0x12 src=8 seq=192 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:30:29.002614> 2019-05-29T13:30:28.998951
2019-05-29T13:30:29.002972> rcv ctrl pkt info (^p): 1,18,8,192,14,6,-38
2019-05-29T13:30:29.003301> splitted in: [1, 18, 8, 192, 14, 6, -38]
2019-05-29T13:30:29.003619> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=192 len=14 SNR=6 RSSI=-38)
2019-05-29T13:30:29.004002> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:30:29.004440> splitted in: [125, 5, 12]
2019-05-29T13:30:29.004802> (BW=125 CR=5 SF=12)
2019-05-29T13:30:29.005185> rcv timestamp (^t): 2019-05-29T13:30:28.995
2019-05-29T13:30:29.005556> 
2019-05-29T13:30:29.005912> Got first framing byte
2019-05-29T13:30:29.006260> --> got LoRa data prefix
2019-05-29T13:30:29.007054> --> DATA with_appkey: read app key sequence
2019-05-29T13:30:29.007947> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:30:29.008691> app key disabled
2019-05-29T13:30:29.009348> valid app key: accept data
2019-05-29T13:30:29.010023> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:30:29.010688> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,192,10,6,-38" "125,5,12" "2019-05-29T13:30:28.995" "B827EB4E30A8"
2019-05-29T13:30:33.568125> CloudEdge: uploading
2019-05-29T13:30:33.568853> CloudEdge: run under guest identity, all data is public
2019-05-29T13:30:33.569459> CloudEdge: check if entity exits
2019-05-29T13:30:33.570053> CloudEdge: will issue requests with
2019-05-29T13:30:33.570635> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:30:33.571312> CloudEdge: returned msg from server is 200
2019-05-29T13:30:33.571948> CloudEdge: entity exists
2019-05-29T13:30:33.572555> CloudEdge: check if measurement exits
2019-05-29T13:30:33.573138> CloudEdge: will issue requests with
2019-05-29T13:30:33.573712> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:30:33.574295> CloudEdge: returned msg from server is 200
2019-05-29T13:30:33.574874> CloudEdge: measurement exists
2019-05-29T13:30:33.575445> CloudEdge: will issue requests with
2019-05-29T13:30:33.576016> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:30:33.576595> data: {"value":95.39,"timestamp":"2019-05-29T13:30:28.995"}
2019-05-29T13:30:33.577174> CloudEdge: returned msg from server is 200
2019-05-29T13:30:33.577748> CloudEdge: upload success
2019-05-29T13:30:33.783508> --> cloud end
2019-05-29T13:30:33.784317> 
2019-05-29T13:30:39.257774> Low-level gw status ON
2019-05-29T13:31:31.094965> --- rxlora. dst=1 type=0x12 src=8 seq=193 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:31:31.095453> 2019-05-29T13:31:31.091965
2019-05-29T13:31:31.095816> rcv ctrl pkt info (^p): 1,18,8,193,14,6,-40
2019-05-29T13:31:31.096131> splitted in: [1, 18, 8, 193, 14, 6, -40]
2019-05-29T13:31:31.096424> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=193 len=14 SNR=6 RSSI=-40)
2019-05-29T13:31:31.096765> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:31:31.097116> splitted in: [125, 5, 12]
2019-05-29T13:31:31.097464> (BW=125 CR=5 SF=12)
2019-05-29T13:31:31.097794> rcv timestamp (^t): 2019-05-29T13:31:31.088
2019-05-29T13:31:31.098148> 
2019-05-29T13:31:31.098436> Got first framing byte
2019-05-29T13:31:31.098702> --> got LoRa data prefix
2019-05-29T13:31:31.098968> --> DATA with_appkey: read app key sequence
2019-05-29T13:31:31.099235> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:31:31.099507> app key disabled
2019-05-29T13:31:31.099775> valid app key: accept data
2019-05-29T13:31:31.100041> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:31:31.100312> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,193,10,6,-40" "125,5,12" "2019-05-29T13:31:31.088" "B827EB4E30A8"
2019-05-29T13:31:35.581615> CloudEdge: uploading
2019-05-29T13:31:35.582811> CloudEdge: run under guest identity, all data is public
2019-05-29T13:31:35.583901> CloudEdge: check if entity exits
2019-05-29T13:31:35.584980> CloudEdge: will issue requests with
2019-05-29T13:31:35.586043> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:31:35.586910> CloudEdge: returned msg from server is 200
2019-05-29T13:31:35.587752> CloudEdge: entity exists
2019-05-29T13:31:35.588494> CloudEdge: check if measurement exits
2019-05-29T13:31:35.589204> CloudEdge: will issue requests with
2019-05-29T13:31:35.589923> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:31:35.590733> CloudEdge: returned msg from server is 200
2019-05-29T13:31:35.591585> CloudEdge: measurement exists
2019-05-29T13:31:35.592361> CloudEdge: will issue requests with
2019-05-29T13:31:35.593090> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:31:35.593804> data: {"value":95.65,"timestamp":"2019-05-29T13:31:31.088"}
2019-05-29T13:31:35.594516> CloudEdge: returned msg from server is 200
2019-05-29T13:31:35.595248> CloudEdge: upload success
2019-05-29T13:31:35.754075> --> cloud end
2019-05-29T13:31:35.754445> 
2019-05-29T13:32:33.187106> --- rxlora. dst=1 type=0x12 src=8 seq=194 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:32:33.187609> 2019-05-29T13:32:33.184126
2019-05-29T13:32:33.187976> rcv ctrl pkt info (^p): 1,18,8,194,14,6,-38
2019-05-29T13:32:33.188293> splitted in: [1, 18, 8, 194, 14, 6, -38]
2019-05-29T13:32:33.188593> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=194 len=14 SNR=6 RSSI=-38)
2019-05-29T13:32:33.188950> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:32:33.189307> splitted in: [125, 5, 12]
2019-05-29T13:32:33.189671> (BW=125 CR=5 SF=12)
2019-05-29T13:32:33.190017> rcv timestamp (^t): 2019-05-29T13:32:33.180
2019-05-29T13:32:33.190418> 
2019-05-29T13:32:33.190792> Got first framing byte
2019-05-29T13:32:33.191259> --> got LoRa data prefix
2019-05-29T13:32:33.191650> --> DATA with_appkey: read app key sequence
2019-05-29T13:32:33.191999> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:32:33.192382> app key disabled
2019-05-29T13:32:33.192859> valid app key: accept data
2019-05-29T13:32:33.193184> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:32:33.193542> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,194,10,6,-38" "125,5,12" "2019-05-29T13:32:33.180" "B827EB4E30A8"
2019-05-29T13:32:37.137365> CloudEdge: uploading
2019-05-29T13:32:37.138174> CloudEdge: run under guest identity, all data is public
2019-05-29T13:32:37.138846> CloudEdge: check if entity exits
2019-05-29T13:32:37.139735> CloudEdge: will issue requests with
2019-05-29T13:32:37.140601> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:32:37.141543> CloudEdge: returned msg from server is 200
2019-05-29T13:32:37.142433> CloudEdge: entity exists
2019-05-29T13:32:37.143225> CloudEdge: check if measurement exits
2019-05-29T13:32:37.143975> CloudEdge: will issue requests with
2019-05-29T13:32:37.144717> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:32:37.145444> CloudEdge: returned msg from server is 200
2019-05-29T13:32:37.146159> CloudEdge: measurement exists
2019-05-29T13:32:37.146864> CloudEdge: will issue requests with
2019-05-29T13:32:37.147553> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:32:37.148245> data: {"value":95.65,"timestamp":"2019-05-29T13:32:33.180"}
2019-05-29T13:32:37.148936> CloudEdge: returned msg from server is 200
2019-05-29T13:32:37.149640> CloudEdge: upload success
2019-05-29T13:32:37.335415> --> cloud end
2019-05-29T13:32:37.335820> 
2019-05-29T13:33:35.278150> --- rxlora. dst=1 type=0x12 src=8 seq=195 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:33:35.278648> 2019-05-29T13:33:35.275120
2019-05-29T13:33:35.279031> rcv ctrl pkt info (^p): 1,18,8,195,14,6,-39
2019-05-29T13:33:35.279350> splitted in: [1, 18, 8, 195, 14, 6, -39]
2019-05-29T13:33:35.279658> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=195 len=14 SNR=6 RSSI=-39)
2019-05-29T13:33:35.280045> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:33:35.280399> splitted in: [125, 5, 12]
2019-05-29T13:33:35.280765> (BW=125 CR=5 SF=12)
2019-05-29T13:33:35.281317> rcv timestamp (^t): 2019-05-29T13:33:35.271
2019-05-29T13:33:35.281775> 
2019-05-29T13:33:35.282161> Got first framing byte
2019-05-29T13:33:35.282577> --> got LoRa data prefix
2019-05-29T13:33:35.282970> --> DATA with_appkey: read app key sequence
2019-05-29T13:33:35.283374> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:33:35.283870> app key disabled
2019-05-29T13:33:35.284219> valid app key: accept data
2019-05-29T13:33:35.284588> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:33:35.284941> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,195,10,6,-39" "125,5,12" "2019-05-29T13:33:35.271" "B827EB4E30A8"
2019-05-29T13:33:39.322855> CloudEdge: uploading
2019-05-29T13:33:39.323631> CloudEdge: run under guest identity, all data is public
2019-05-29T13:33:39.324191> CloudEdge: check if entity exits
2019-05-29T13:33:39.324736> CloudEdge: will issue requests with
2019-05-29T13:33:39.325280> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:33:39.325826> CloudEdge: returned msg from server is 200
2019-05-29T13:33:39.326372> CloudEdge: entity exists
2019-05-29T13:33:39.326926> CloudEdge: check if measurement exits
2019-05-29T13:33:39.327508> CloudEdge: will issue requests with
2019-05-29T13:33:39.328201> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:33:39.328881> CloudEdge: returned msg from server is 200
2019-05-29T13:33:39.329519> CloudEdge: measurement exists
2019-05-29T13:33:39.330157> CloudEdge: will issue requests with
2019-05-29T13:33:39.330809> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:33:39.332541> data: {"value":95.71,"timestamp":"2019-05-29T13:33:35.271"}
2019-05-29T13:33:39.333322> CloudEdge: returned msg from server is 200
2019-05-29T13:33:39.333976> CloudEdge: upload success
2019-05-29T13:33:39.507224> --> cloud end
2019-05-29T13:33:39.507604> 
2019-05-29T13:34:37.370340> --- rxlora. dst=1 type=0x12 src=8 seq=196 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T13:34:37.370745> 2019-05-29T13:34:37.367466
2019-05-29T13:34:37.371134> rcv ctrl pkt info (^p): 1,18,8,196,14,6,-39
2019-05-29T13:34:37.371499> splitted in: [1, 18, 8, 196, 14, 6, -39]
2019-05-29T13:34:37.371826> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=196 len=14 SNR=6 RSSI=-39)
2019-05-29T13:34:37.372126> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:34:37.372431> splitted in: [125, 5, 12]
2019-05-29T13:34:37.372730> (BW=125 CR=5 SF=12)
2019-05-29T13:34:37.373015> rcv timestamp (^t): 2019-05-29T13:34:37.364
2019-05-29T13:34:37.373328> 
2019-05-29T13:34:37.373681> Got first framing byte
2019-05-29T13:34:37.374015> --> got LoRa data prefix
2019-05-29T13:34:37.374388> --> DATA with_appkey: read app key sequence
2019-05-29T13:34:37.374736> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:34:37.375101> app key disabled
2019-05-29T13:34:37.375464> valid app key: accept data
2019-05-29T13:34:37.375821> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:34:37.376167> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,196,10,6,-39" "125,5,12" "2019-05-29T13:34:37.364" "B827EB4E30A8"
2019-05-29T13:34:42.631822> CloudEdge: uploading
2019-05-29T13:34:42.657922> CloudEdge: run under guest identity, all data is public
2019-05-29T13:34:42.658296> CloudEdge: check if entity exits
2019-05-29T13:34:42.658614> CloudEdge: will issue requests with
2019-05-29T13:34:42.658923> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:34:42.659226> CloudEdge: returned msg from server is 200
2019-05-29T13:34:42.659518> CloudEdge: entity exists
2019-05-29T13:34:42.659806> CloudEdge: check if measurement exits
2019-05-29T13:34:42.660097> CloudEdge: will issue requests with
2019-05-29T13:34:42.660401> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:34:42.660731> CloudEdge: returned msg from server is 200
2019-05-29T13:34:42.661094> CloudEdge: measurement exists
2019-05-29T13:34:42.661423> CloudEdge: will issue requests with
2019-05-29T13:34:42.661730> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:34:42.662129> data: {"value":95.65,"timestamp":"2019-05-29T13:34:37.364"}
2019-05-29T13:34:42.662433> CloudEdge: returned msg from server is 200
2019-05-29T13:34:42.662724> CloudEdge: upload success
2019-05-29T13:34:42.832905> --> cloud end
2019-05-29T13:34:42.833286> 
2019-05-29T13:35:39.462467> --- rxlora. dst=1 type=0x12 src=8 seq=197 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:35:39.463187> 2019-05-29T13:35:39.459298
2019-05-29T13:35:39.467197> rcv ctrl pkt info (^p): 1,18,8,197,14,5,-40
2019-05-29T13:35:39.467739> splitted in: [1, 18, 8, 197, 14, 5, -40]
2019-05-29T13:35:39.468386> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=197 len=14 SNR=5 RSSI=-40)
2019-05-29T13:35:39.468862> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:35:39.469282> splitted in: [125, 5, 12]
2019-05-29T13:35:39.469726> (BW=125 CR=5 SF=12)
2019-05-29T13:35:39.470099> rcv timestamp (^t): 2019-05-29T13:35:39.456
2019-05-29T13:35:39.470454> 
2019-05-29T13:35:39.470789> Got first framing byte
2019-05-29T13:35:39.471372> --> got LoRa data prefix
2019-05-29T13:35:39.471821> --> DATA with_appkey: read app key sequence
2019-05-29T13:35:39.472254> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:35:39.472573> app key disabled
2019-05-29T13:35:39.472917> valid app key: accept data
2019-05-29T13:35:39.473222> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:35:39.473538> python /app/data_acq/edgeCall.py "TC/95.52" "1,18,8,197,10,5,-40" "125,5,12" "2019-05-29T13:35:39.456" "B827EB4E30A8"
2019-05-29T13:35:44.087009> CloudEdge: uploading
2019-05-29T13:35:44.087657> CloudEdge: run under guest identity, all data is public
2019-05-29T13:35:44.088162> CloudEdge: check if entity exits
2019-05-29T13:35:44.088625> CloudEdge: will issue requests with
2019-05-29T13:35:44.089039> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:35:44.089431> CloudEdge: returned msg from server is 200
2019-05-29T13:35:44.089846> CloudEdge: entity exists
2019-05-29T13:35:44.090201> CloudEdge: check if measurement exits
2019-05-29T13:35:44.090574> CloudEdge: will issue requests with
2019-05-29T13:35:44.090907> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:35:44.091481> CloudEdge: returned msg from server is 200
2019-05-29T13:35:44.091863> CloudEdge: measurement exists
2019-05-29T13:35:44.092238> CloudEdge: will issue requests with
2019-05-29T13:35:44.092592> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:35:44.092926> data: {"value":95.52,"timestamp":"2019-05-29T13:35:39.456"}
2019-05-29T13:35:44.093295> CloudEdge: returned msg from server is 200
2019-05-29T13:35:44.093613> CloudEdge: upload success
2019-05-29T13:35:44.255521> --> cloud end
2019-05-29T13:35:44.255891> 
2019-05-29T13:36:41.552468> --- rxlora. dst=1 type=0x12 src=8 seq=198 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:36:41.554463> 2019-05-29T13:36:41.553105
2019-05-29T13:36:41.555686> rcv ctrl pkt info (^p): 1,18,8,198,14,6,-40
2019-05-29T13:36:41.556238> splitted in: [1, 18, 8, 198, 14, 6, -40]
2019-05-29T13:36:41.556934> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=198 len=14 SNR=6 RSSI=-40)
2019-05-29T13:36:41.557737> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:36:41.558656> splitted in: [125, 5, 12]
2019-05-29T13:36:41.559663> (BW=125 CR=5 SF=12)
2019-05-29T13:36:41.560532> rcv timestamp (^t): 2019-05-29T13:36:41.548
2019-05-29T13:36:41.561320> 
2019-05-29T13:36:41.562045> Got first framing byte
2019-05-29T13:36:41.562530> --> got LoRa data prefix
2019-05-29T13:36:41.562956> --> DATA with_appkey: read app key sequence
2019-05-29T13:36:41.563351> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:36:41.563822> app key disabled
2019-05-29T13:36:41.564380> valid app key: accept data
2019-05-29T13:36:41.564889> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:36:41.565513> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,198,10,6,-40" "125,5,12" "2019-05-29T13:36:41.548" "B827EB4E30A8"
2019-05-29T13:36:45.982398> CloudEdge: uploading
2019-05-29T13:36:45.982984> CloudEdge: run under guest identity, all data is public
2019-05-29T13:36:45.983393> CloudEdge: check if entity exits
2019-05-29T13:36:45.983728> CloudEdge: will issue requests with
2019-05-29T13:36:45.984048> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:36:45.984370> CloudEdge: returned msg from server is 200
2019-05-29T13:36:45.984680> CloudEdge: entity exists
2019-05-29T13:36:45.984997> CloudEdge: check if measurement exits
2019-05-29T13:36:45.985303> CloudEdge: will issue requests with
2019-05-29T13:36:45.985605> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:36:45.985902> CloudEdge: returned msg from server is 200
2019-05-29T13:36:45.986197> CloudEdge: measurement exists
2019-05-29T13:36:45.986496> CloudEdge: will issue requests with
2019-05-29T13:36:45.986789> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:36:45.987084> data: {"value":95.39,"timestamp":"2019-05-29T13:36:41.548"}
2019-05-29T13:36:45.987380> CloudEdge: returned msg from server is 200
2019-05-29T13:36:45.987675> CloudEdge: upload success
2019-05-29T13:36:46.150450> --> cloud end
2019-05-29T13:36:46.150858> 
2019-05-29T13:37:43.649038> --- rxlora. dst=1 type=0x12 src=8 seq=199 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:37:43.649601> 2019-05-29T13:37:43.645916
2019-05-29T13:37:43.650061> rcv ctrl pkt info (^p): 1,18,8,199,14,6,-40
2019-05-29T13:37:43.650449> splitted in: [1, 18, 8, 199, 14, 6, -40]
2019-05-29T13:37:43.650841> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=199 len=14 SNR=6 RSSI=-40)
2019-05-29T13:37:43.651469> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:37:43.651946> splitted in: [125, 5, 12]
2019-05-29T13:37:43.652385> (BW=125 CR=5 SF=12)
2019-05-29T13:37:43.652830> rcv timestamp (^t): 2019-05-29T13:37:43.642
2019-05-29T13:37:43.653222> 
2019-05-29T13:37:43.653589> Got first framing byte
2019-05-29T13:37:43.653940> --> got LoRa data prefix
2019-05-29T13:37:43.654298> --> DATA with_appkey: read app key sequence
2019-05-29T13:37:43.654631> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:37:43.655104> app key disabled
2019-05-29T13:37:43.655482> valid app key: accept data
2019-05-29T13:37:43.655796> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:37:43.656173> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,199,10,6,-40" "125,5,12" "2019-05-29T13:37:43.642" "B827EB4E30A8"
2019-05-29T13:37:47.695325> CloudEdge: uploading
2019-05-29T13:37:47.696130> CloudEdge: run under guest identity, all data is public
2019-05-29T13:37:47.696911> CloudEdge: check if entity exits
2019-05-29T13:37:47.697575> CloudEdge: will issue requests with
2019-05-29T13:37:47.698256> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:37:47.698936> CloudEdge: returned msg from server is 200
2019-05-29T13:37:47.699572> CloudEdge: entity exists
2019-05-29T13:37:47.700161> CloudEdge: check if measurement exits
2019-05-29T13:37:47.700739> CloudEdge: will issue requests with
2019-05-29T13:37:47.701540> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:37:47.702223> CloudEdge: returned msg from server is 200
2019-05-29T13:37:47.702851> CloudEdge: measurement exists
2019-05-29T13:37:47.703460> CloudEdge: will issue requests with
2019-05-29T13:37:47.704051> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:37:47.704648> data: {"value":95.39,"timestamp":"2019-05-29T13:37:43.642"}
2019-05-29T13:37:47.705229> CloudEdge: returned msg from server is 200
2019-05-29T13:37:47.705819> CloudEdge: upload success
2019-05-29T13:37:47.894632> --> cloud end
2019-05-29T13:37:47.900515> 
2019-05-29T13:38:45.745374> --- rxlora. dst=1 type=0x12 src=8 seq=200 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:38:45.745976> 2019-05-29T13:38:45.742216
2019-05-29T13:38:45.746478> rcv ctrl pkt info (^p): 1,18,8,200,14,6,-40
2019-05-29T13:38:45.746847> splitted in: [1, 18, 8, 200, 14, 6, -40]
2019-05-29T13:38:45.747289> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=200 len=14 SNR=6 RSSI=-40)
2019-05-29T13:38:45.747726> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:38:45.748186> splitted in: [125, 5, 12]
2019-05-29T13:38:45.748582> (BW=125 CR=5 SF=12)
2019-05-29T13:38:45.748938> rcv timestamp (^t): 2019-05-29T13:38:45.738
2019-05-29T13:38:45.749239> 
2019-05-29T13:38:45.749512> Got first framing byte
2019-05-29T13:38:45.749806> --> got LoRa data prefix
2019-05-29T13:38:45.750076> --> DATA with_appkey: read app key sequence
2019-05-29T13:38:45.750368> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:38:45.750652> app key disabled
2019-05-29T13:38:45.751016> valid app key: accept data
2019-05-29T13:38:45.751374> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:38:45.751668> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,200,10,6,-40" "125,5,12" "2019-05-29T13:38:45.738" "B827EB4E30A8"
2019-05-29T13:38:50.228776> CloudEdge: uploading
2019-05-29T13:38:50.229768> CloudEdge: run under guest identity, all data is public
2019-05-29T13:38:50.230668> CloudEdge: check if entity exits
2019-05-29T13:38:50.231734> CloudEdge: will issue requests with
2019-05-29T13:38:50.232668> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:38:50.233489> CloudEdge: returned msg from server is 200
2019-05-29T13:38:50.234272> CloudEdge: entity exists
2019-05-29T13:38:50.235021> CloudEdge: check if measurement exits
2019-05-29T13:38:50.235751> CloudEdge: will issue requests with
2019-05-29T13:38:50.236479> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:38:50.237191> CloudEdge: returned msg from server is 200
2019-05-29T13:38:50.237921> CloudEdge: measurement exists
2019-05-29T13:38:50.238632> CloudEdge: will issue requests with
2019-05-29T13:38:50.239374> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:38:50.240122> data: {"value":95.39,"timestamp":"2019-05-29T13:38:45.738"}
2019-05-29T13:38:50.240853> CloudEdge: returned msg from server is 200
2019-05-29T13:38:50.241727> CloudEdge: upload success
2019-05-29T13:38:50.431674> --> cloud end
2019-05-29T13:38:50.432061> 
2019-05-29T13:39:47.839545> --- rxlora. dst=1 type=0x12 src=8 seq=201 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:39:47.839987> 2019-05-29T13:39:47.839147
2019-05-29T13:39:47.840311> rcv ctrl pkt info (^p): 1,18,8,201,14,6,-41
2019-05-29T13:39:47.840623> splitted in: [1, 18, 8, 201, 14, 6, -41]
2019-05-29T13:39:47.840916> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=201 len=14 SNR=6 RSSI=-41)
2019-05-29T13:39:47.841484> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:39:47.841855> splitted in: [125, 5, 12]
2019-05-29T13:39:47.842207> (BW=125 CR=5 SF=12)
2019-05-29T13:39:47.842524> rcv timestamp (^t): 2019-05-29T13:39:47.835
2019-05-29T13:39:47.842821> 
2019-05-29T13:39:47.843197> Got first framing byte
2019-05-29T13:39:47.843501> --> got LoRa data prefix
2019-05-29T13:39:47.843800> --> DATA with_appkey: read app key sequence
2019-05-29T13:39:47.844152> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:39:47.844504> app key disabled
2019-05-29T13:39:47.844869> valid app key: accept data
2019-05-29T13:39:47.845212> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:39:47.845711> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,201,10,6,-41" "125,5,12" "2019-05-29T13:39:47.835" "B827EB4E30A8"
2019-05-29T13:39:48.152492> 2019-05-29 13:39:48.151467
2019-05-29T13:39:48.153204> post status: gw ON
2019-05-29T13:39:48.153889> post status: executing periodic tasks
2019-05-29T13:39:49.265842> no timezone support, time will be expressed only in local time
2019-05-29T13:39:49.266344> post status: start running
2019-05-29T13:39:50.356934> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T13:39:50.357875> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T13:39:50.358450> get_gps.py: invalid serial port
2019-05-29T13:39:50.522807> post status: dynamic GPS is requested
2019-05-29T13:39:50.523328> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T13:39:50.523830> post status get GPS: no GPS coordinates
2019-05-29T13:39:50.524221> post status: show current GPS position
2019-05-29T13:39:50.524584> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T13:39:50.524938> post status: exiting
2019-05-29T13:39:52.418093> CloudEdge: uploading
2019-05-29T13:39:52.419112> CloudEdge: run under guest identity, all data is public
2019-05-29T13:39:52.420039> CloudEdge: check if entity exits
2019-05-29T13:39:52.420894> CloudEdge: will issue requests with
2019-05-29T13:39:52.422108> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:39:52.422926> CloudEdge: returned msg from server is 200
2019-05-29T13:39:52.423677> CloudEdge: entity exists
2019-05-29T13:39:52.424416> CloudEdge: check if measurement exits
2019-05-29T13:39:52.425135> CloudEdge: will issue requests with
2019-05-29T13:39:52.425877> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:39:52.426619> CloudEdge: returned msg from server is 200
2019-05-29T13:39:52.427739> CloudEdge: measurement exists
2019-05-29T13:39:52.428593> CloudEdge: will issue requests with
2019-05-29T13:39:52.429399> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:39:52.430150> data: {"value":95.39,"timestamp":"2019-05-29T13:39:47.835"}
2019-05-29T13:39:52.430874> CloudEdge: returned msg from server is 200
2019-05-29T13:39:52.431731> CloudEdge: upload success
2019-05-29T13:39:52.601034> --> cloud end
2019-05-29T13:39:52.603172> 
2019-05-29T13:40:49.939198> --- rxlora. dst=1 type=0x12 src=8 seq=202 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-29T13:40:49.939663> 2019-05-29T13:40:49.936127
2019-05-29T13:40:49.939984> rcv ctrl pkt info (^p): 1,18,8,202,14,7,-42
2019-05-29T13:40:49.940286> splitted in: [1, 18, 8, 202, 14, 7, -42]
2019-05-29T13:40:49.940589> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=202 len=14 SNR=7 RSSI=-42)
2019-05-29T13:40:49.940874> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:40:49.941396> splitted in: [125, 5, 12]
2019-05-29T13:40:49.941763> (BW=125 CR=5 SF=12)
2019-05-29T13:40:49.942129> rcv timestamp (^t): 2019-05-29T13:40:49.932
2019-05-29T13:40:49.942559> 
2019-05-29T13:40:49.942895> Got first framing byte
2019-05-29T13:40:49.943303> --> got LoRa data prefix
2019-05-29T13:40:49.945752> --> DATA with_appkey: read app key sequence
2019-05-29T13:40:49.946369> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:40:49.946928> app key disabled
2019-05-29T13:40:49.947433> valid app key: accept data
2019-05-29T13:40:49.947966> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:40:49.948525> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,202,10,7,-42" "125,5,12" "2019-05-29T13:40:49.932" "B827EB4E30A8"
2019-05-29T13:40:55.366047> CloudEdge: uploading
2019-05-29T13:40:55.366473> CloudEdge: run under guest identity, all data is public
2019-05-29T13:40:55.366782> CloudEdge: check if entity exits
2019-05-29T13:40:55.367250> CloudEdge: will issue requests with
2019-05-29T13:40:55.367962> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:40:55.369089> CloudEdge: returned msg from server is 200
2019-05-29T13:40:55.369760> CloudEdge: entity exists
2019-05-29T13:40:55.370239> CloudEdge: check if measurement exits
2019-05-29T13:40:55.370617> CloudEdge: will issue requests with
2019-05-29T13:40:55.371055> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:40:55.371598> CloudEdge: returned msg from server is 200
2019-05-29T13:40:55.371997> CloudEdge: measurement exists
2019-05-29T13:40:55.372360> CloudEdge: will issue requests with
2019-05-29T13:40:55.372676> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:40:55.373001> data: {"value":95.39,"timestamp":"2019-05-29T13:40:49.932"}
2019-05-29T13:40:55.373356> CloudEdge: returned msg from server is 200
2019-05-29T13:40:55.373715> CloudEdge: upload success
2019-05-29T13:40:55.540547> --> cloud end
2019-05-29T13:40:55.540915> 
2019-05-29T13:41:00.195497> Low-level gw status ON
2019-05-29T13:41:52.033796> --- rxlora. dst=1 type=0x12 src=8 seq=203 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-29T13:41:52.034237> 2019-05-29T13:41:52.033391
2019-05-29T13:41:52.034564> rcv ctrl pkt info (^p): 1,18,8,203,14,7,-42
2019-05-29T13:41:52.034878> splitted in: [1, 18, 8, 203, 14, 7, -42]
2019-05-29T13:41:52.035163> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=203 len=14 SNR=7 RSSI=-42)
2019-05-29T13:41:52.035446> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:41:52.035729> splitted in: [125, 5, 12]
2019-05-29T13:41:52.036056> (BW=125 CR=5 SF=12)
2019-05-29T13:41:52.036362> rcv timestamp (^t): 2019-05-29T13:41:52.029
2019-05-29T13:41:52.036657> 
2019-05-29T13:41:52.037041> Got first framing byte
2019-05-29T13:41:52.037354> --> got LoRa data prefix
2019-05-29T13:41:52.037644> --> DATA with_appkey: read app key sequence
2019-05-29T13:41:52.037948> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:41:52.038295> app key disabled
2019-05-29T13:41:52.038628> valid app key: accept data
2019-05-29T13:41:52.038986> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:41:52.039345> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,203,10,7,-42" "125,5,12" "2019-05-29T13:41:52.029" "B827EB4E30A8"
2019-05-29T13:41:57.967639> CloudEdge: uploading
2019-05-29T13:41:57.968265> CloudEdge: run under guest identity, all data is public
2019-05-29T13:41:57.968660> CloudEdge: check if entity exits
2019-05-29T13:41:57.968989> CloudEdge: will issue requests with
2019-05-29T13:41:57.969308> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:41:57.969614> CloudEdge: returned msg from server is 200
2019-05-29T13:41:57.969916> CloudEdge: entity exists
2019-05-29T13:41:57.970215> CloudEdge: check if measurement exits
2019-05-29T13:41:57.970518> CloudEdge: will issue requests with
2019-05-29T13:41:57.970807> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:41:57.971295> CloudEdge: returned msg from server is 200
2019-05-29T13:41:57.971733> CloudEdge: measurement exists
2019-05-29T13:41:57.972132> CloudEdge: will issue requests with
2019-05-29T13:41:57.972452> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:41:57.972786> data: {"value":95.33,"timestamp":"2019-05-29T13:41:52.029"}
2019-05-29T13:41:57.973190> CloudEdge: returned msg from server is 200
2019-05-29T13:41:57.973944> CloudEdge: upload success
2019-05-29T13:41:58.150138> --> cloud end
2019-05-29T13:41:58.150547> 
2019-05-29T13:42:54.138492> --- rxlora. dst=1 type=0x12 src=8 seq=204 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-29T13:42:54.139263> 2019-05-29T13:42:54.132421
2019-05-29T13:42:54.139929> rcv ctrl pkt info (^p): 1,18,8,204,14,7,-43
2019-05-29T13:42:54.140513> splitted in: [1, 18, 8, 204, 14, 7, -43]
2019-05-29T13:42:54.141970> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=204 len=14 SNR=7 RSSI=-43)
2019-05-29T13:42:54.142588> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:42:54.143140> splitted in: [125, 5, 12]
2019-05-29T13:42:54.143860> (BW=125 CR=5 SF=12)
2019-05-29T13:42:54.144364> rcv timestamp (^t): 2019-05-29T13:42:54.128
2019-05-29T13:42:54.144974> 
2019-05-29T13:42:54.145436> Got first framing byte
2019-05-29T13:42:54.145853> --> got LoRa data prefix
2019-05-29T13:42:54.146247> --> DATA with_appkey: read app key sequence
2019-05-29T13:42:54.146620> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:42:54.147057> app key disabled
2019-05-29T13:42:54.147381> valid app key: accept data
2019-05-29T13:42:54.147711> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:42:54.148024> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,204,10,7,-43" "125,5,12" "2019-05-29T13:42:54.128" "B827EB4E30A8"
2019-05-29T13:42:58.488356> CloudEdge: uploading
2019-05-29T13:42:58.489286> CloudEdge: run under guest identity, all data is public
2019-05-29T13:42:58.490041> CloudEdge: check if entity exits
2019-05-29T13:42:58.490711> CloudEdge: will issue requests with
2019-05-29T13:42:58.491697> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:42:58.492445> CloudEdge: returned msg from server is 200
2019-05-29T13:42:58.493054> CloudEdge: entity exists
2019-05-29T13:42:58.493637> CloudEdge: check if measurement exits
2019-05-29T13:42:58.494229> CloudEdge: will issue requests with
2019-05-29T13:42:58.494807> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:42:58.495394> CloudEdge: returned msg from server is 200
2019-05-29T13:42:58.495977> CloudEdge: measurement exists
2019-05-29T13:42:58.496548> CloudEdge: will issue requests with
2019-05-29T13:42:58.497137> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:42:58.497722> data: {"value":95.39,"timestamp":"2019-05-29T13:42:54.128"}
2019-05-29T13:42:58.498306> CloudEdge: returned msg from server is 200
2019-05-29T13:42:58.498883> CloudEdge: upload success
2019-05-29T13:42:58.694164> --> cloud end
2019-05-29T13:42:58.694535> 
2019-05-29T13:46:00.421791> --- rxlora. dst=1 type=0x12 src=8 seq=207 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-29T13:46:00.422369> 2019-05-29T13:46:00.420406
2019-05-29T13:46:00.422789> rcv ctrl pkt info (^p): 1,18,8,207,14,7,-43
2019-05-29T13:46:00.423170> splitted in: [1, 18, 8, 207, 14, 7, -43]
2019-05-29T13:46:00.423624> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=207 len=14 SNR=7 RSSI=-43)
2019-05-29T13:46:00.424021> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:46:00.424423> splitted in: [125, 5, 12]
2019-05-29T13:46:00.424815> (BW=125 CR=5 SF=12)
2019-05-29T13:46:00.425164> rcv timestamp (^t): 2019-05-29T13:46:00.417
2019-05-29T13:46:00.425592> 
2019-05-29T13:46:00.426071> Got first framing byte
2019-05-29T13:46:00.426537> --> got LoRa data prefix
2019-05-29T13:46:00.427003> --> DATA with_appkey: read app key sequence
2019-05-29T13:46:00.428055> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:46:00.428668> app key disabled
2019-05-29T13:46:00.429066> valid app key: accept data
2019-05-29T13:46:00.429426> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:46:00.429774> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,207,10,7,-43" "125,5,12" "2019-05-29T13:46:00.417" "B827EB4E30A8"
2019-05-29T13:46:04.975919> CloudEdge: uploading
2019-05-29T13:46:04.976861> CloudEdge: run under guest identity, all data is public
2019-05-29T13:46:04.977704> CloudEdge: check if entity exits
2019-05-29T13:46:04.978522> CloudEdge: will issue requests with
2019-05-29T13:46:04.979273> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:46:04.979948> CloudEdge: returned msg from server is 200
2019-05-29T13:46:04.980561> CloudEdge: entity exists
2019-05-29T13:46:04.981325> CloudEdge: check if measurement exits
2019-05-29T13:46:04.982071> CloudEdge: will issue requests with
2019-05-29T13:46:04.982768> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:46:04.983492> CloudEdge: returned msg from server is 200
2019-05-29T13:46:04.984171> CloudEdge: measurement exists
2019-05-29T13:46:04.984811> CloudEdge: will issue requests with
2019-05-29T13:46:04.985541> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:46:04.986194> data: {"value":95.33,"timestamp":"2019-05-29T13:46:00.417"}
2019-05-29T13:46:04.986847> CloudEdge: returned msg from server is 200
2019-05-29T13:46:04.987492> CloudEdge: upload success
2019-05-29T13:46:05.189238> --> cloud end
2019-05-29T13:46:05.189814> 
2019-05-29T13:47:02.521222> --- rxlora. dst=1 type=0x12 src=8 seq=208 len=14 SNR=5 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:47:02.521777> 2019-05-29T13:47:02.518105
2019-05-29T13:47:02.522140> rcv ctrl pkt info (^p): 1,18,8,208,14,5,-41
2019-05-29T13:47:02.522478> splitted in: [1, 18, 8, 208, 14, 5, -41]
2019-05-29T13:47:02.522800> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=208 len=14 SNR=5 RSSI=-41)
2019-05-29T13:47:02.523097> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:47:02.523430> splitted in: [125, 5, 12]
2019-05-29T13:47:02.523791> (BW=125 CR=5 SF=12)
2019-05-29T13:47:02.524157> rcv timestamp (^t): 2019-05-29T13:47:02.514
2019-05-29T13:47:02.524496> 
2019-05-29T13:47:02.524876> Got first framing byte
2019-05-29T13:47:02.525245> --> got LoRa data prefix
2019-05-29T13:47:02.525618> --> DATA with_appkey: read app key sequence
2019-05-29T13:47:02.525966> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:47:02.526323> app key disabled
2019-05-29T13:47:02.526649> valid app key: accept data
2019-05-29T13:47:02.527082> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:47:02.527497> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,208,10,5,-41" "125,5,12" "2019-05-29T13:47:02.514" "B827EB4E30A8"
2019-05-29T13:47:07.228545> CloudEdge: uploading
2019-05-29T13:47:07.229425> CloudEdge: run under guest identity, all data is public
2019-05-29T13:47:07.230182> CloudEdge: check if entity exits
2019-05-29T13:47:07.230863> CloudEdge: will issue requests with
2019-05-29T13:47:07.231834> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:47:07.232571> CloudEdge: returned msg from server is 200
2019-05-29T13:47:07.233221> CloudEdge: entity exists
2019-05-29T13:47:07.233846> CloudEdge: check if measurement exits
2019-05-29T13:47:07.234458> CloudEdge: will issue requests with
2019-05-29T13:47:07.235065> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:47:07.235660> CloudEdge: returned msg from server is 200
2019-05-29T13:47:07.236257> CloudEdge: measurement exists
2019-05-29T13:47:07.236840> CloudEdge: will issue requests with
2019-05-29T13:47:07.237427> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:47:07.238019> data: {"value":95.39,"timestamp":"2019-05-29T13:47:02.514"}
2019-05-29T13:47:07.238635> CloudEdge: returned msg from server is 200
2019-05-29T13:47:07.239250> CloudEdge: upload success
2019-05-29T13:47:07.409916> --> cloud end
2019-05-29T13:47:07.410325> 
2019-05-29T13:48:04.618472> --- rxlora. dst=1 type=0x12 src=8 seq=209 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:48:04.618956> 2019-05-29T13:48:04.615488
2019-05-29T13:48:04.619314> rcv ctrl pkt info (^p): 1,18,8,209,14,6,-40
2019-05-29T13:48:04.619630> splitted in: [1, 18, 8, 209, 14, 6, -40]
2019-05-29T13:48:04.619926> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=209 len=14 SNR=6 RSSI=-40)
2019-05-29T13:48:04.620272> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:48:04.620620> splitted in: [125, 5, 12]
2019-05-29T13:48:04.621117> (BW=125 CR=5 SF=12)
2019-05-29T13:48:04.621569> rcv timestamp (^t): 2019-05-29T13:48:04.612
2019-05-29T13:48:04.621982> 
2019-05-29T13:48:04.622369> Got first framing byte
2019-05-29T13:48:04.622722> --> got LoRa data prefix
2019-05-29T13:48:04.623071> --> DATA with_appkey: read app key sequence
2019-05-29T13:48:04.623400> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:48:04.623843> app key disabled
2019-05-29T13:48:04.624271> valid app key: accept data
2019-05-29T13:48:04.624583> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:48:04.625023> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,209,10,6,-40" "125,5,12" "2019-05-29T13:48:04.612" "B827EB4E30A8"
2019-05-29T13:48:08.605252> CloudEdge: uploading
2019-05-29T13:48:08.606190> CloudEdge: run under guest identity, all data is public
2019-05-29T13:48:08.606978> CloudEdge: check if entity exits
2019-05-29T13:48:08.607763> CloudEdge: will issue requests with
2019-05-29T13:48:08.608476> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:48:08.609129> CloudEdge: returned msg from server is 200
2019-05-29T13:48:08.609732> CloudEdge: entity exists
2019-05-29T13:48:08.610328> CloudEdge: check if measurement exits
2019-05-29T13:48:08.611340> CloudEdge: will issue requests with
2019-05-29T13:48:08.612292> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:48:08.612975> CloudEdge: returned msg from server is 200
2019-05-29T13:48:08.613599> CloudEdge: measurement exists
2019-05-29T13:48:08.614207> CloudEdge: will issue requests with
2019-05-29T13:48:08.614815> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:48:08.615417> data: {"value":95.39,"timestamp":"2019-05-29T13:48:04.612"}
2019-05-29T13:48:08.616101> CloudEdge: returned msg from server is 200
2019-05-29T13:48:08.616711> CloudEdge: upload success
2019-05-29T13:48:08.798829> --> cloud end
2019-05-29T13:48:08.799202> 
2019-05-29T13:49:06.715419> --- rxlora. dst=1 type=0x12 src=8 seq=210 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T13:49:06.715992> 2019-05-29T13:49:06.712776
2019-05-29T13:49:06.716432> rcv ctrl pkt info (^p): 1,18,8,210,14,7,-40
2019-05-29T13:49:06.716821> splitted in: [1, 18, 8, 210, 14, 7, -40]
2019-05-29T13:49:06.717226> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=210 len=14 SNR=7 RSSI=-40)
2019-05-29T13:49:06.717591> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:49:06.718037> splitted in: [125, 5, 12]
2019-05-29T13:49:06.718450> (BW=125 CR=5 SF=12)
2019-05-29T13:49:06.718902> rcv timestamp (^t): 2019-05-29T13:49:06.709
2019-05-29T13:49:06.719376> 
2019-05-29T13:49:06.719887> Got first framing byte
2019-05-29T13:49:06.720297> --> got LoRa data prefix
2019-05-29T13:49:06.720763> --> DATA with_appkey: read app key sequence
2019-05-29T13:49:06.721430> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:49:06.722053> app key disabled
2019-05-29T13:49:06.722517> valid app key: accept data
2019-05-29T13:49:06.722938> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:49:06.723345> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,210,10,7,-40" "125,5,12" "2019-05-29T13:49:06.709" "B827EB4E30A8"
2019-05-29T13:49:11.344524> CloudEdge: uploading
2019-05-29T13:49:11.345539> CloudEdge: run under guest identity, all data is public
2019-05-29T13:49:11.346460> CloudEdge: check if entity exits
2019-05-29T13:49:11.347325> CloudEdge: will issue requests with
2019-05-29T13:49:11.348183> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:49:11.348997> CloudEdge: returned msg from server is 200
2019-05-29T13:49:11.349709> CloudEdge: entity exists
2019-05-29T13:49:11.350451> CloudEdge: check if measurement exits
2019-05-29T13:49:11.351454> CloudEdge: will issue requests with
2019-05-29T13:49:11.352290> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:49:11.353092> CloudEdge: returned msg from server is 200
2019-05-29T13:49:11.353898> CloudEdge: measurement exists
2019-05-29T13:49:11.354678> CloudEdge: will issue requests with
2019-05-29T13:49:11.355491> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:49:11.356407> data: {"value":95.39,"timestamp":"2019-05-29T13:49:06.709"}
2019-05-29T13:49:11.357324> CloudEdge: returned msg from server is 200
2019-05-29T13:49:11.358211> CloudEdge: upload success
2019-05-29T13:49:11.545923> --> cloud end
2019-05-29T13:49:11.546301> 
2019-05-29T13:49:50.731542> 2019-05-29 13:49:50.719659
2019-05-29T13:49:50.732000> post status: gw ON
2019-05-29T13:49:50.732310> post status: executing periodic tasks
2019-05-29T13:49:51.826882> no timezone support, time will be expressed only in local time
2019-05-29T13:49:51.827629> post status: start running
2019-05-29T13:49:52.901120> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T13:49:52.901530> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T13:49:52.901830> get_gps.py: invalid serial port
2019-05-29T13:49:53.049606> post status: dynamic GPS is requested
2019-05-29T13:49:53.050314> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T13:49:53.051314> post status get GPS: no GPS coordinates
2019-05-29T13:49:53.052178> post status: show current GPS position
2019-05-29T13:49:53.052914> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T13:49:53.053587> post status: exiting
2019-05-29T13:50:08.813141> --- rxlora. dst=1 type=0x12 src=8 seq=211 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:50:08.813702> 2019-05-29T13:50:08.810042
2019-05-29T13:50:08.814136> rcv ctrl pkt info (^p): 1,18,8,211,14,7,-41
2019-05-29T13:50:08.814539> splitted in: [1, 18, 8, 211, 14, 7, -41]
2019-05-29T13:50:08.814983> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=211 len=14 SNR=7 RSSI=-41)
2019-05-29T13:50:08.815462> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:50:08.815902> splitted in: [125, 5, 12]
2019-05-29T13:50:08.816360> (BW=125 CR=5 SF=12)
2019-05-29T13:50:08.816856> rcv timestamp (^t): 2019-05-29T13:50:08.806
2019-05-29T13:50:08.817343> 
2019-05-29T13:50:08.817775> Got first framing byte
2019-05-29T13:50:08.818249> --> got LoRa data prefix
2019-05-29T13:50:08.818691> --> DATA with_appkey: read app key sequence
2019-05-29T13:50:08.819337> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:50:08.819798> app key disabled
2019-05-29T13:50:08.820245> valid app key: accept data
2019-05-29T13:50:08.820621> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:50:08.821063> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,211,10,7,-41" "125,5,12" "2019-05-29T13:50:08.806" "B827EB4E30A8"
2019-05-29T13:50:14.983645> CloudEdge: uploading
2019-05-29T13:50:14.984515> CloudEdge: run under guest identity, all data is public
2019-05-29T13:50:14.985377> CloudEdge: check if entity exits
2019-05-29T13:50:14.986282> CloudEdge: will issue requests with
2019-05-29T13:50:14.999232> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:50:14.999821> CloudEdge: returned msg from server is 200
2019-05-29T13:50:15.000305> CloudEdge: entity exists
2019-05-29T13:50:15.000783> CloudEdge: check if measurement exits
2019-05-29T13:50:15.001269> CloudEdge: will issue requests with
2019-05-29T13:50:15.001654> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:50:15.001980> CloudEdge: returned msg from server is 200
2019-05-29T13:50:15.002281> CloudEdge: measurement exists
2019-05-29T13:50:15.002580> CloudEdge: will issue requests with
2019-05-29T13:50:15.002885> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:50:15.003177> data: {"value":95.39,"timestamp":"2019-05-29T13:50:08.806"}
2019-05-29T13:50:15.003471> CloudEdge: returned msg from server is 200
2019-05-29T13:50:15.003771> CloudEdge: upload success
2019-05-29T13:50:15.151194> --> cloud end
2019-05-29T13:50:15.151674> 
2019-05-29T13:51:10.911684> --- rxlora. dst=1 type=0x12 src=8 seq=212 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T13:51:10.912215> 2019-05-29T13:51:10.908529
2019-05-29T13:51:10.912679> rcv ctrl pkt info (^p): 1,18,8,212,14,6,-38
2019-05-29T13:51:10.913039> splitted in: [1, 18, 8, 212, 14, 6, -38]
2019-05-29T13:51:10.913449> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=212 len=14 SNR=6 RSSI=-38)
2019-05-29T13:51:10.913855> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:51:10.914366> splitted in: [125, 5, 12]
2019-05-29T13:51:10.914776> (BW=125 CR=5 SF=12)
2019-05-29T13:51:10.915291> rcv timestamp (^t): 2019-05-29T13:51:10.905
2019-05-29T13:51:10.915731> 
2019-05-29T13:51:10.916190> Got first framing byte
2019-05-29T13:51:10.916597> --> got LoRa data prefix
2019-05-29T13:51:10.917026> --> DATA with_appkey: read app key sequence
2019-05-29T13:51:10.917677> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:51:10.918134> app key disabled
2019-05-29T13:51:10.918542> valid app key: accept data
2019-05-29T13:51:10.918960> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:51:10.919314> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,212,10,6,-38" "125,5,12" "2019-05-29T13:51:10.905" "B827EB4E30A8"
2019-05-29T13:51:15.885475> CloudEdge: uploading
2019-05-29T13:51:15.886323> CloudEdge: run under guest identity, all data is public
2019-05-29T13:51:15.887058> CloudEdge: check if entity exits
2019-05-29T13:51:15.887710> CloudEdge: will issue requests with
2019-05-29T13:51:15.888344> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:51:15.889020> CloudEdge: returned msg from server is 200
2019-05-29T13:51:15.889627> CloudEdge: entity exists
2019-05-29T13:51:15.890204> CloudEdge: check if measurement exits
2019-05-29T13:51:15.890780> CloudEdge: will issue requests with
2019-05-29T13:51:15.891557> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:51:15.892210> CloudEdge: returned msg from server is 200
2019-05-29T13:51:15.892812> CloudEdge: measurement exists
2019-05-29T13:51:15.893407> CloudEdge: will issue requests with
2019-05-29T13:51:15.894015> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:51:15.894601> data: {"value":95.33,"timestamp":"2019-05-29T13:51:10.905"}
2019-05-29T13:51:15.895199> CloudEdge: returned msg from server is 200
2019-05-29T13:51:15.895801> CloudEdge: upload success
2019-05-29T13:51:16.090362> --> cloud end
2019-05-29T13:51:16.090732> 
2019-05-29T13:51:16.091174> Low-level gw status ON
2019-05-29T13:52:13.009633> --- rxlora. dst=1 type=0x12 src=8 seq=213 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:52:13.010044> 2019-05-29T13:52:13.006715
2019-05-29T13:52:13.010321> rcv ctrl pkt info (^p): 1,18,8,213,14,7,-41
2019-05-29T13:52:13.010595> splitted in: [1, 18, 8, 213, 14, 7, -41]
2019-05-29T13:52:13.010873> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=213 len=14 SNR=7 RSSI=-41)
2019-05-29T13:52:13.011256> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:52:13.011541> splitted in: [125, 5, 12]
2019-05-29T13:52:13.011811> (BW=125 CR=5 SF=12)
2019-05-29T13:52:13.012080> rcv timestamp (^t): 2019-05-29T13:52:13.003
2019-05-29T13:52:13.012358> 
2019-05-29T13:52:13.012658> Got first framing byte
2019-05-29T13:52:13.013006> --> got LoRa data prefix
2019-05-29T13:52:13.013329> --> DATA with_appkey: read app key sequence
2019-05-29T13:52:13.013638> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:52:13.013970> app key disabled
2019-05-29T13:52:13.014285> valid app key: accept data
2019-05-29T13:52:13.014573> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:52:13.014871> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,213,10,7,-41" "125,5,12" "2019-05-29T13:52:13.003" "B827EB4E30A8"
2019-05-29T13:52:17.520073> CloudEdge: uploading
2019-05-29T13:52:17.520737> CloudEdge: run under guest identity, all data is public
2019-05-29T13:52:17.521516> CloudEdge: check if entity exits
2019-05-29T13:52:17.522115> CloudEdge: will issue requests with
2019-05-29T13:52:17.522726> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:52:17.523382> CloudEdge: returned msg from server is 200
2019-05-29T13:52:17.523992> CloudEdge: entity exists
2019-05-29T13:52:17.524581> CloudEdge: check if measurement exits
2019-05-29T13:52:17.525181> CloudEdge: will issue requests with
2019-05-29T13:52:17.525869> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:52:17.526443> CloudEdge: returned msg from server is 200
2019-05-29T13:52:17.527017> CloudEdge: measurement exists
2019-05-29T13:52:17.527592> CloudEdge: will issue requests with
2019-05-29T13:52:17.528159> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:52:17.528730> data: {"value":95.33,"timestamp":"2019-05-29T13:52:13.003"}
2019-05-29T13:52:17.529301> CloudEdge: returned msg from server is 200
2019-05-29T13:52:17.529878> CloudEdge: upload success
2019-05-29T13:52:17.730436> --> cloud end
2019-05-29T13:52:17.731552> 
2019-05-29T13:53:15.107708> --- rxlora. dst=1 type=0x12 src=8 seq=214 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T13:53:15.108213> 2019-05-29T13:53:15.104668
2019-05-29T13:53:15.108588> rcv ctrl pkt info (^p): 1,18,8,214,14,7,-41
2019-05-29T13:53:15.108903> splitted in: [1, 18, 8, 214, 14, 7, -41]
2019-05-29T13:53:15.109222> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=214 len=14 SNR=7 RSSI=-41)
2019-05-29T13:53:15.109603> rcv ctrl radio info (^r): 125,5,12
2019-05-29T13:53:15.109962> splitted in: [125, 5, 12]
2019-05-29T13:53:15.110328> (BW=125 CR=5 SF=12)
2019-05-29T13:53:15.110723> rcv timestamp (^t): 2019-05-29T13:53:15.101
2019-05-29T13:53:15.111219> 
2019-05-29T13:53:15.111664> Got first framing byte
2019-05-29T13:53:15.113086> --> got LoRa data prefix
2019-05-29T13:53:15.113695> --> DATA with_appkey: read app key sequence
2019-05-29T13:53:15.114070> app key is 0x05 0x06 0x07 0x08
2019-05-29T13:53:15.114474> app key disabled
2019-05-29T13:53:15.114821> valid app key: accept data
2019-05-29T13:53:15.115126> uploading with python /app/data_acq/edgeCall.py
2019-05-29T13:53:15.115443> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,214,10,7,-41" "125,5,12" "2019-05-29T13:53:15.101" "B827EB4E30A8"
2019-05-29T13:53:19.390283> CloudEdge: uploading
2019-05-29T13:53:19.391353> CloudEdge: run under guest identity, all data is public
2019-05-29T13:53:19.392212> CloudEdge: check if entity exits
2019-05-29T13:53:19.392924> CloudEdge: will issue requests with
2019-05-29T13:53:19.393620> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T13:53:19.394285> CloudEdge: returned msg from server is 200
2019-05-29T13:53:19.394912> CloudEdge: entity exists
2019-05-29T13:53:19.395506> CloudEdge: check if measurement exits
2019-05-29T13:53:19.396113> CloudEdge: will issue requests with
2019-05-29T13:53:19.396702> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T13:53:19.397296> CloudEdge: returned msg from server is 200
2019-05-29T13:53:19.397878> CloudEdge: measurement exists
2019-05-29T13:53:19.398465> CloudEdge: will issue requests with
2019-05-29T13:53:19.399053> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T13:53:19.399639> data: {"value":95.26,"timestamp":"2019-05-29T13:53:15.101"}
2019-05-29T13:53:19.400237> CloudEdge: returned msg from server is 200
2019-05-29T13:53:19.400828> CloudEdge: upload success
2019-05-29T13:53:19.586862> --> cloud end
2019-05-29T13:53:19.587276> 
2019-05-29T14:01:44.972925> no timezone support, time will be expressed only in local time
2019-05-29T14:01:44.975622> post_processing_gw.py found an alert_conf section
2019-05-29T14:01:44.976133> Starting thread to perform periodic gw status/tasks
2019-05-29T14:01:44.976627> 2019-05-29 14:01:44.971752
2019-05-29T14:01:44.977049> post status: gw ON
2019-05-29T14:01:44.977533> post status: executing periodic tasks
2019-05-29T14:01:45.974721> 
2019-05-29T14:01:45.975278> Current working directory: /
2019-05-29T14:01:45.975773> SX1276 detected, starting.
2019-05-29T14:01:45.976179> SX1276 LF/HF calibration
2019-05-29T14:01:45.976540> ...
2019-05-29T14:01:45.976872> **********Power ON: state 0
2019-05-29T14:01:45.977310> Default sync word: 0x12
2019-05-29T14:01:45.977672> LoRa mode 1
2019-05-29T14:01:45.978137> Setting mode: state 0
2019-05-29T14:01:45.978495> Frequency 865.200000: state 0
2019-05-29T14:01:45.978874> Use PA_BOOST amplifier line
2019-05-29T14:01:45.979223> Set LoRa power dBm to 14
2019-05-29T14:01:45.979622> Power: state 0
2019-05-29T14:01:45.979944> Get Preamble Length: state 0
2019-05-29T14:01:45.980303> Preamble Length: 8
2019-05-29T14:01:45.980715> LoRa addr 1: state 0
2019-05-29T14:01:45.981087> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-29T14:01:45.981481> Low-level gw status ON
2019-05-29T14:01:46.074792> no timezone support, time will be expressed only in local time
2019-05-29T14:01:46.075154> post status: start running
2019-05-29T14:01:47.182454> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T14:01:47.183121> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T14:01:47.183634> get_gps.py: invalid serial port
2019-05-29T14:01:47.330171> post status: dynamic GPS is requested
2019-05-29T14:01:47.330712> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T14:01:47.331055> post status get GPS: no GPS coordinates
2019-05-29T14:01:47.331345> post status: show current GPS position
2019-05-29T14:01:47.331621> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T14:01:47.331897> post status: exiting
2019-05-29T14:04:17.587600> no timezone support, time will be expressed only in local time
2019-05-29T14:04:17.588118> post_processing_gw.py found an alert_conf section
2019-05-29T14:04:17.588496> Starting thread to perform periodic gw status/tasks
2019-05-29T14:04:17.588859> 2019-05-29 14:04:17.587818
2019-05-29T14:04:17.589144> post status: gw ON
2019-05-29T14:04:17.589423> post status: executing periodic tasks
2019-05-29T14:04:18.589036> 
2019-05-29T14:04:18.589457> Current working directory: /
2019-05-29T14:04:18.590495> SX1276 detected, starting.
2019-05-29T14:04:18.591346> SX1276 LF/HF calibration
2019-05-29T14:04:18.592245> ...
2019-05-29T14:04:18.593060> **********Power ON: state 0
2019-05-29T14:04:18.593852> Default sync word: 0x12
2019-05-29T14:04:18.594586> LoRa mode 1
2019-05-29T14:04:18.595406> Setting mode: state 0
2019-05-29T14:04:18.596197> Frequency 865.200000: state 0
2019-05-29T14:04:18.596929> Use PA_BOOST amplifier line
2019-05-29T14:04:18.597536> Set LoRa power dBm to 14
2019-05-29T14:04:18.598242> Power: state 0
2019-05-29T14:04:18.598698> Get Preamble Length: state 0
2019-05-29T14:04:18.599431> Preamble Length: 8
2019-05-29T14:04:18.600134> LoRa addr 1: state 0
2019-05-29T14:04:18.600841> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-29T14:04:18.601441> Low-level gw status ON
2019-05-29T14:04:18.661240> no timezone support, time will be expressed only in local time
2019-05-29T14:04:18.661660> post status: start running
2019-05-29T14:04:19.742878> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T14:04:19.743292> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T14:04:19.743609> get_gps.py: invalid serial port
2019-05-29T14:04:19.881790> post status: dynamic GPS is requested
2019-05-29T14:04:19.882426> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T14:04:19.883070> post status get GPS: no GPS coordinates
2019-05-29T14:04:19.883538> post status: show current GPS position
2019-05-29T14:04:19.883970> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T14:04:19.884350> post status: exiting
2019-05-29T14:04:44.698377> --- rxlora. dst=1 type=0x12 src=8 seq=254 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:04:44.699332> 2019-05-29T14:04:44.697744
2019-05-29T14:04:44.700172> rcv ctrl pkt info (^p): 1,18,8,254,14,6,-39
2019-05-29T14:04:44.701092> splitted in: [1, 18, 8, 254, 14, 6, -39]
2019-05-29T14:04:44.701936> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=254 len=14 SNR=6 RSSI=-39)
2019-05-29T14:04:44.703323> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:04:44.704383> splitted in: [125, 5, 12]
2019-05-29T14:04:44.705363> (BW=125 CR=5 SF=12)
2019-05-29T14:04:44.706817> rcv timestamp (^t): 2019-05-29T14:04:44.694
2019-05-29T14:04:44.707844> 
2019-05-29T14:04:44.708628> Got first framing byte
2019-05-29T14:04:44.709491> --> got LoRa data prefix
2019-05-29T14:04:44.710313> --> DATA with_appkey: read app key sequence
2019-05-29T14:04:44.710985> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:04:44.711389> app key disabled
2019-05-29T14:04:44.712576> valid app key: accept data
2019-05-29T14:04:44.713281> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:04:44.713689> python /app/data_acq/edgeCall.py "TC/98.03" "1,18,8,254,10,6,-39" "125,5,12" "2019-05-29T14:04:44.694" "B827EB4E30A8"
2019-05-29T14:04:56.088641> CloudEdge: uploading
2019-05-29T14:04:56.089231> CloudEdge: run under guest identity, all data is public
2019-05-29T14:04:56.089671> CloudEdge: check if entity exits
2019-05-29T14:04:56.090016> CloudEdge: will issue requests with
2019-05-29T14:04:56.090351> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:04:56.090739> CloudEdge: returned msg from server is 200
2019-05-29T14:04:56.091094> CloudEdge: entity exists
2019-05-29T14:04:56.091417> CloudEdge: check if measurement exits
2019-05-29T14:04:56.091730> CloudEdge: will issue requests with
2019-05-29T14:04:56.092148> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:04:56.092506> CloudEdge: returned msg from server is 200
2019-05-29T14:04:56.092799> CloudEdge: measurement exists
2019-05-29T14:04:56.093082> CloudEdge: will issue requests with
2019-05-29T14:04:56.093371> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:04:56.093657> data: {"value":98.03,"timestamp":"2019-05-29T14:04:44.694"}
2019-05-29T14:04:56.093943> CloudEdge: returned msg from server is 200
2019-05-29T14:04:56.094234> CloudEdge: upload success
2019-05-29T14:04:56.260598> --> cloud end
2019-05-29T14:04:56.261050> 
2019-05-29T14:05:46.730960> --- rxlora. dst=1 type=0x12 src=8 seq=255 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:05:46.731406> 2019-05-29T14:05:46.730581
2019-05-29T14:05:46.731761> rcv ctrl pkt info (^p): 1,18,8,255,14,6,-39
2019-05-29T14:05:46.732200> splitted in: [1, 18, 8, 255, 14, 6, -39]
2019-05-29T14:05:46.732571> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=255 len=14 SNR=6 RSSI=-39)
2019-05-29T14:05:46.732873> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:05:46.733192> splitted in: [125, 5, 12]
2019-05-29T14:05:46.733538> (BW=125 CR=5 SF=12)
2019-05-29T14:05:46.733842> rcv timestamp (^t): 2019-05-29T14:05:46.727
2019-05-29T14:05:46.734128> 
2019-05-29T14:05:46.734494> Got first framing byte
2019-05-29T14:05:46.734792> --> got LoRa data prefix
2019-05-29T14:05:46.735080> --> DATA with_appkey: read app key sequence
2019-05-29T14:05:46.735413> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:05:46.735759> app key disabled
2019-05-29T14:05:46.736109> valid app key: accept data
2019-05-29T14:05:46.736441> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:05:46.736847> python /app/data_acq/edgeCall.py "TC/98.16" "1,18,8,255,10,6,-39" "125,5,12" "2019-05-29T14:05:46.727" "B827EB4E30A8"
2019-05-29T14:05:51.292384> CloudEdge: uploading
2019-05-29T14:05:51.292897> CloudEdge: run under guest identity, all data is public
2019-05-29T14:05:51.293294> CloudEdge: check if entity exits
2019-05-29T14:05:51.293806> CloudEdge: will issue requests with
2019-05-29T14:05:51.294286> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:05:51.295261> CloudEdge: returned msg from server is 200
2019-05-29T14:05:51.295925> CloudEdge: entity exists
2019-05-29T14:05:51.296445> CloudEdge: check if measurement exits
2019-05-29T14:05:51.296898> CloudEdge: will issue requests with
2019-05-29T14:05:51.297239> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:05:51.297692> CloudEdge: returned msg from server is 200
2019-05-29T14:05:51.298031> CloudEdge: measurement exists
2019-05-29T14:05:51.298414> CloudEdge: will issue requests with
2019-05-29T14:05:51.298780> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:05:51.299105> data: {"value":98.16,"timestamp":"2019-05-29T14:05:46.727"}
2019-05-29T14:05:51.299818> CloudEdge: returned msg from server is 200
2019-05-29T14:05:51.300359> CloudEdge: upload success
2019-05-29T14:05:51.458041> --> cloud end
2019-05-29T14:05:51.458446> 
2019-05-29T14:06:48.765218> --- rxlora. dst=1 type=0x12 src=8 seq=0 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:06:48.765674> 2019-05-29T14:06:48.764820
2019-05-29T14:06:48.766009> rcv ctrl pkt info (^p): 1,18,8,0,14,6,-38
2019-05-29T14:06:48.766321> splitted in: [1, 18, 8, 0, 14, 6, -38]
2019-05-29T14:06:48.766612> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=0 len=14 SNR=6 RSSI=-38)
2019-05-29T14:06:48.766898> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:06:48.767179> splitted in: [125, 5, 12]
2019-05-29T14:06:48.767527> (BW=125 CR=5 SF=12)
2019-05-29T14:06:48.767838> rcv timestamp (^t): 2019-05-29T14:06:48.761
2019-05-29T14:06:48.768134> 
2019-05-29T14:06:48.768488> Got first framing byte
2019-05-29T14:06:48.768778> --> got LoRa data prefix
2019-05-29T14:06:48.769059> --> DATA with_appkey: read app key sequence
2019-05-29T14:06:48.769384> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:06:48.769715> app key disabled
2019-05-29T14:06:48.770066> valid app key: accept data
2019-05-29T14:06:48.770405> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:06:48.770765> python /app/data_acq/edgeCall.py "TC/98.03" "1,18,8,0,10,6,-38" "125,5,12" "2019-05-29T14:06:48.761" "B827EB4E30A8"
2019-05-29T14:06:51.806813> CloudEdge: uploading
2019-05-29T14:06:51.807355> CloudEdge: run under guest identity, all data is public
2019-05-29T14:06:51.807760> CloudEdge: check if entity exits
2019-05-29T14:06:51.808145> CloudEdge: will issue requests with
2019-05-29T14:06:51.808505> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:06:51.808837> CloudEdge: returned msg from server is 200
2019-05-29T14:06:51.809158> CloudEdge: entity exists
2019-05-29T14:06:51.809458> CloudEdge: check if measurement exits
2019-05-29T14:06:51.809755> CloudEdge: will issue requests with
2019-05-29T14:06:51.810045> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:06:51.810333> CloudEdge: returned msg from server is 200
2019-05-29T14:06:51.810620> CloudEdge: measurement exists
2019-05-29T14:06:51.810901> CloudEdge: will issue requests with
2019-05-29T14:06:51.811194> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:06:51.811491> data: {"value":98.03,"timestamp":"2019-05-29T14:06:48.761"}
2019-05-29T14:06:51.811777> CloudEdge: returned msg from server is 200
2019-05-29T14:06:51.822406> CloudEdge: upload success
2019-05-29T14:06:51.975733> --> cloud end
2019-05-29T14:06:51.976165> 
2019-05-29T14:07:50.799764> --- rxlora. dst=1 type=0x12 src=8 seq=1 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T14:07:50.800204> 2019-05-29T14:07:50.799370
2019-05-29T14:07:50.800551> rcv ctrl pkt info (^p): 1,18,8,1,14,6,-40
2019-05-29T14:07:50.800860> splitted in: [1, 18, 8, 1, 14, 6, -40]
2019-05-29T14:07:50.801144> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=1 len=14 SNR=6 RSSI=-40)
2019-05-29T14:07:50.801422> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:07:50.801697> splitted in: [125, 5, 12]
2019-05-29T14:07:50.802176> (BW=125 CR=5 SF=12)
2019-05-29T14:07:50.802549> rcv timestamp (^t): 2019-05-29T14:07:50.796
2019-05-29T14:07:50.802848> 
2019-05-29T14:07:50.803229> Got first framing byte
2019-05-29T14:07:50.803719> --> got LoRa data prefix
2019-05-29T14:07:50.804061> --> DATA with_appkey: read app key sequence
2019-05-29T14:07:50.804488> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:07:50.804841> app key disabled
2019-05-29T14:07:50.805158> valid app key: accept data
2019-05-29T14:07:50.805554> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:07:50.805924> python /app/data_acq/edgeCall.py "TC/97.90" "1,18,8,1,10,6,-40" "125,5,12" "2019-05-29T14:07:50.796" "B827EB4E30A8"
2019-05-29T14:07:53.819843> CloudEdge: uploading
2019-05-29T14:07:53.820550> CloudEdge: run under guest identity, all data is public
2019-05-29T14:07:53.821024> CloudEdge: check if entity exits
2019-05-29T14:07:53.821357> CloudEdge: will issue requests with
2019-05-29T14:07:53.821653> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:07:53.821945> CloudEdge: returned msg from server is 200
2019-05-29T14:07:53.822758> CloudEdge: entity exists
2019-05-29T14:07:53.823178> CloudEdge: check if measurement exits
2019-05-29T14:07:53.823483> CloudEdge: will issue requests with
2019-05-29T14:07:53.823762> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:07:53.824047> CloudEdge: returned msg from server is 200
2019-05-29T14:07:53.824329> CloudEdge: measurement exists
2019-05-29T14:07:53.824607> CloudEdge: will issue requests with
2019-05-29T14:07:53.824885> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:07:53.825167> data: {"value":97.90,"timestamp":"2019-05-29T14:07:50.796"}
2019-05-29T14:07:53.825471> CloudEdge: returned msg from server is 200
2019-05-29T14:07:53.825752> CloudEdge: upload success
2019-05-29T14:07:53.980253> --> cloud end
2019-05-29T14:07:53.980667> 
2019-05-29T14:08:52.839652> --- rxlora. dst=1 type=0x12 src=8 seq=2 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:08:52.840173> 2019-05-29T14:08:52.836904
2019-05-29T14:08:52.840512> rcv ctrl pkt info (^p): 1,18,8,2,14,6,-39
2019-05-29T14:08:52.840815> splitted in: [1, 18, 8, 2, 14, 6, -39]
2019-05-29T14:08:52.841092> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=2 len=14 SNR=6 RSSI=-39)
2019-05-29T14:08:52.841416> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:08:52.841822> splitted in: [125, 5, 12]
2019-05-29T14:08:52.842366> (BW=125 CR=5 SF=12)
2019-05-29T14:08:52.842839> rcv timestamp (^t): 2019-05-29T14:08:52.833
2019-05-29T14:08:52.843357> 
2019-05-29T14:08:52.843792> Got first framing byte
2019-05-29T14:08:52.844232> --> got LoRa data prefix
2019-05-29T14:08:52.844652> --> DATA with_appkey: read app key sequence
2019-05-29T14:08:52.845071> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:08:52.845490> app key disabled
2019-05-29T14:08:52.845857> valid app key: accept data
2019-05-29T14:08:52.846343> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:08:52.846699> python /app/data_acq/edgeCall.py "TC/97.90" "1,18,8,2,10,6,-39" "125,5,12" "2019-05-29T14:08:52.833" "B827EB4E30A8"
2019-05-29T14:08:55.947505> CloudEdge: uploading
2019-05-29T14:08:55.947912> CloudEdge: run under guest identity, all data is public
2019-05-29T14:08:55.948248> CloudEdge: check if entity exits
2019-05-29T14:08:55.948586> CloudEdge: will issue requests with
2019-05-29T14:08:55.948993> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:08:55.949384> CloudEdge: returned msg from server is 200
2019-05-29T14:08:55.949730> CloudEdge: entity exists
2019-05-29T14:08:55.950051> CloudEdge: check if measurement exits
2019-05-29T14:08:55.950359> CloudEdge: will issue requests with
2019-05-29T14:08:55.950667> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:08:55.950977> CloudEdge: returned msg from server is 200
2019-05-29T14:08:55.951296> CloudEdge: measurement exists
2019-05-29T14:08:55.951616> CloudEdge: will issue requests with
2019-05-29T14:08:55.951972> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:08:55.952716> data: {"value":97.90,"timestamp":"2019-05-29T14:08:52.833"}
2019-05-29T14:08:55.953093> CloudEdge: returned msg from server is 200
2019-05-29T14:08:55.953446> CloudEdge: upload success
2019-05-29T14:08:56.114472> --> cloud end
2019-05-29T14:08:56.114903> 
2019-05-29T14:09:54.878344> --- rxlora. dst=1 type=0x12 src=8 seq=3 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:09:54.878790> 2019-05-29T14:09:54.875463
2019-05-29T14:09:54.879105> rcv ctrl pkt info (^p): 1,18,8,3,14,6,-38
2019-05-29T14:09:54.879402> splitted in: [1, 18, 8, 3, 14, 6, -38]
2019-05-29T14:09:54.879686> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=3 len=14 SNR=6 RSSI=-38)
2019-05-29T14:09:54.879978> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:09:54.880262> splitted in: [125, 5, 12]
2019-05-29T14:09:54.880549> (BW=125 CR=5 SF=12)
2019-05-29T14:09:54.880836> rcv timestamp (^t): 2019-05-29T14:09:54.872
2019-05-29T14:09:54.881130> 
2019-05-29T14:09:54.881413> Got first framing byte
2019-05-29T14:09:54.881687> --> got LoRa data prefix
2019-05-29T14:09:54.881954> --> DATA with_appkey: read app key sequence
2019-05-29T14:09:54.882307> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:09:54.882628> app key disabled
2019-05-29T14:09:54.882915> valid app key: accept data
2019-05-29T14:09:54.883196> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:09:54.883483> python /app/data_acq/edgeCall.py "TC/97.84" "1,18,8,3,10,6,-38" "125,5,12" "2019-05-29T14:09:54.872" "B827EB4E30A8"
2019-05-29T14:09:57.963681> CloudEdge: uploading
2019-05-29T14:09:57.964142> CloudEdge: run under guest identity, all data is public
2019-05-29T14:09:57.964549> CloudEdge: check if entity exits
2019-05-29T14:09:57.964979> CloudEdge: will issue requests with
2019-05-29T14:09:57.965583> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:09:57.966207> CloudEdge: returned msg from server is 200
2019-05-29T14:09:57.966666> CloudEdge: entity exists
2019-05-29T14:09:57.967120> CloudEdge: check if measurement exits
2019-05-29T14:09:57.967510> CloudEdge: will issue requests with
2019-05-29T14:09:57.967915> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:09:57.968284> CloudEdge: returned msg from server is 200
2019-05-29T14:09:57.968610> CloudEdge: measurement exists
2019-05-29T14:09:57.968958> CloudEdge: will issue requests with
2019-05-29T14:09:57.969288> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:09:57.969665> data: {"value":97.84,"timestamp":"2019-05-29T14:09:54.872"}
2019-05-29T14:09:57.970003> CloudEdge: returned msg from server is 200
2019-05-29T14:09:57.970340> CloudEdge: upload success
2019-05-29T14:09:58.130770> --> cloud end
2019-05-29T14:09:58.131141> 
2019-05-29T14:10:56.918497> --- rxlora. dst=1 type=0x12 src=8 seq=4 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T14:10:56.918976> 2019-05-29T14:10:56.915577
2019-05-29T14:10:56.919310> rcv ctrl pkt info (^p): 1,18,8,4,14,6,-40
2019-05-29T14:10:56.919614> splitted in: [1, 18, 8, 4, 14, 6, -40]
2019-05-29T14:10:56.919905> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=4 len=14 SNR=6 RSSI=-40)
2019-05-29T14:10:56.920255> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:10:56.920632> splitted in: [125, 5, 12]
2019-05-29T14:10:56.920983> (BW=125 CR=5 SF=12)
2019-05-29T14:10:56.921324> rcv timestamp (^t): 2019-05-29T14:10:56.912
2019-05-29T14:10:56.921705> 
2019-05-29T14:10:56.922121> Got first framing byte
2019-05-29T14:10:56.922510> --> got LoRa data prefix
2019-05-29T14:10:56.922874> --> DATA with_appkey: read app key sequence
2019-05-29T14:10:56.923210> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:10:56.923549> app key disabled
2019-05-29T14:10:56.924021> valid app key: accept data
2019-05-29T14:10:56.924348> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:10:56.924695> python /app/data_acq/edgeCall.py "TC/97.84" "1,18,8,4,10,6,-40" "125,5,12" "2019-05-29T14:10:56.912" "B827EB4E30A8"
2019-05-29T14:11:00.021107> CloudEdge: uploading
2019-05-29T14:11:00.021667> CloudEdge: run under guest identity, all data is public
2019-05-29T14:11:00.022219> CloudEdge: check if entity exits
2019-05-29T14:11:00.022707> CloudEdge: will issue requests with
2019-05-29T14:11:00.023127> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:11:00.023529> CloudEdge: returned msg from server is 200
2019-05-29T14:11:00.023872> CloudEdge: entity exists
2019-05-29T14:11:00.024184> CloudEdge: check if measurement exits
2019-05-29T14:11:00.024491> CloudEdge: will issue requests with
2019-05-29T14:11:00.024781> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:11:00.025061> CloudEdge: returned msg from server is 200
2019-05-29T14:11:00.025343> CloudEdge: measurement exists
2019-05-29T14:11:00.025644> CloudEdge: will issue requests with
2019-05-29T14:11:00.025937> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:11:00.026223> data: {"value":97.84,"timestamp":"2019-05-29T14:10:56.912"}
2019-05-29T14:11:00.026509> CloudEdge: returned msg from server is 200
2019-05-29T14:11:00.026809> CloudEdge: upload success
2019-05-29T14:11:00.191545> --> cloud end
2019-05-29T14:11:00.192347> 
2019-05-29T14:11:58.958896> --- rxlora. dst=1 type=0x12 src=8 seq=5 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-29T14:11:58.959308> 2019-05-29T14:11:58.956030
2019-05-29T14:11:58.959579> rcv ctrl pkt info (^p): 1,18,8,5,14,6,-41
2019-05-29T14:11:58.959853> splitted in: [1, 18, 8, 5, 14, 6, -41]
2019-05-29T14:11:58.960121> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=5 len=14 SNR=6 RSSI=-41)
2019-05-29T14:11:58.960387> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:11:58.960654> splitted in: [125, 5, 12]
2019-05-29T14:11:58.960921> (BW=125 CR=5 SF=12)
2019-05-29T14:11:58.961186> rcv timestamp (^t): 2019-05-29T14:11:58.952
2019-05-29T14:11:58.961453> 
2019-05-29T14:11:58.961717> Got first framing byte
2019-05-29T14:11:58.961989> --> got LoRa data prefix
2019-05-29T14:11:58.962458> --> DATA with_appkey: read app key sequence
2019-05-29T14:11:58.962824> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:11:58.963137> app key disabled
2019-05-29T14:11:58.963426> valid app key: accept data
2019-05-29T14:11:58.963720> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:11:58.964006> python /app/data_acq/edgeCall.py "TC/97.65" "1,18,8,5,10,6,-41" "125,5,12" "2019-05-29T14:11:58.952" "B827EB4E30A8"
2019-05-29T14:12:01.953932> CloudEdge: uploading
2019-05-29T14:12:01.954435> CloudEdge: run under guest identity, all data is public
2019-05-29T14:12:01.954958> CloudEdge: check if entity exits
2019-05-29T14:12:01.955419> CloudEdge: will issue requests with
2019-05-29T14:12:01.955830> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:12:01.956181> CloudEdge: returned msg from server is 200
2019-05-29T14:12:01.956515> CloudEdge: entity exists
2019-05-29T14:12:01.956836> CloudEdge: check if measurement exits
2019-05-29T14:12:01.957179> CloudEdge: will issue requests with
2019-05-29T14:12:01.957524> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:12:01.957837> CloudEdge: returned msg from server is 200
2019-05-29T14:12:01.958141> CloudEdge: measurement exists
2019-05-29T14:12:01.958444> CloudEdge: will issue requests with
2019-05-29T14:12:01.958734> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:12:01.959021> data: {"value":97.65,"timestamp":"2019-05-29T14:11:58.952"}
2019-05-29T14:12:01.959303> CloudEdge: returned msg from server is 200
2019-05-29T14:12:01.959596> CloudEdge: upload success
2019-05-29T14:12:02.124234> --> cloud end
2019-05-29T14:12:02.124606> 
2019-05-29T14:13:01.001184> --- rxlora. dst=1 type=0x12 src=8 seq=6 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:13:01.001701> 2019-05-29T14:13:00.998296
2019-05-29T14:13:01.002158> rcv ctrl pkt info (^p): 1,18,8,6,14,6,-38
2019-05-29T14:13:01.002561> splitted in: [1, 18, 8, 6, 14, 6, -38]
2019-05-29T14:13:01.002892> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=6 len=14 SNR=6 RSSI=-38)
2019-05-29T14:13:01.003231> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:13:01.003577> splitted in: [125, 5, 12]
2019-05-29T14:13:01.003929> (BW=125 CR=5 SF=12)
2019-05-29T14:13:01.004257> rcv timestamp (^t): 2019-05-29T14:13:00.995
2019-05-29T14:13:01.004617> 
2019-05-29T14:13:01.004897> Got first framing byte
2019-05-29T14:13:01.005160> --> got LoRa data prefix
2019-05-29T14:13:01.005419> --> DATA with_appkey: read app key sequence
2019-05-29T14:13:01.005685> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:13:01.005947> app key disabled
2019-05-29T14:13:01.006208> valid app key: accept data
2019-05-29T14:13:01.006469> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:13:01.006732> python /app/data_acq/edgeCall.py "TC/97.71" "1,18,8,6,10,6,-38" "125,5,12" "2019-05-29T14:13:00.995" "B827EB4E30A8"
2019-05-29T14:13:04.070197> CloudEdge: uploading
2019-05-29T14:13:04.070588> CloudEdge: run under guest identity, all data is public
2019-05-29T14:13:04.070858> CloudEdge: check if entity exits
2019-05-29T14:13:04.071122> CloudEdge: will issue requests with
2019-05-29T14:13:04.071394> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:13:04.071680> CloudEdge: returned msg from server is 200
2019-05-29T14:13:04.071960> CloudEdge: entity exists
2019-05-29T14:13:04.072450> CloudEdge: check if measurement exits
2019-05-29T14:13:04.072795> CloudEdge: will issue requests with
2019-05-29T14:13:04.073103> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:13:04.073388> CloudEdge: returned msg from server is 200
2019-05-29T14:13:04.073675> CloudEdge: measurement exists
2019-05-29T14:13:04.073963> CloudEdge: will issue requests with
2019-05-29T14:13:04.074254> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:13:04.074547> data: {"value":97.71,"timestamp":"2019-05-29T14:13:00.995"}
2019-05-29T14:13:04.074832> CloudEdge: returned msg from server is 200
2019-05-29T14:13:04.075108> CloudEdge: upload success
2019-05-29T14:13:04.249835> --> cloud end
2019-05-29T14:13:04.250202> 
2019-05-29T14:14:03.043017> --- rxlora. dst=1 type=0x12 src=8 seq=7 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:14:03.043472> 2019-05-29T14:14:03.042415
2019-05-29T14:14:03.043854> rcv ctrl pkt info (^p): 1,18,8,7,14,6,-39
2019-05-29T14:14:03.044163> splitted in: [1, 18, 8, 7, 14, 6, -39]
2019-05-29T14:14:03.044452> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=7 len=14 SNR=6 RSSI=-39)
2019-05-29T14:14:03.044732> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:14:03.045104> splitted in: [125, 5, 12]
2019-05-29T14:14:03.045449> (BW=125 CR=5 SF=12)
2019-05-29T14:14:03.045743> rcv timestamp (^t): 2019-05-29T14:14:03.039
2019-05-29T14:14:03.046030> 
2019-05-29T14:14:03.046328> Got first framing byte
2019-05-29T14:14:03.046609> --> got LoRa data prefix
2019-05-29T14:14:03.046901> --> DATA with_appkey: read app key sequence
2019-05-29T14:14:03.047250> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:14:03.047593> app key disabled
2019-05-29T14:14:03.048005> valid app key: accept data
2019-05-29T14:14:03.048389> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:14:03.048773> python /app/data_acq/edgeCall.py "TC/97.65" "1,18,8,7,10,6,-39" "125,5,12" "2019-05-29T14:14:03.039" "B827EB4E30A8"
2019-05-29T14:14:06.080661> CloudEdge: uploading
2019-05-29T14:14:06.081204> CloudEdge: run under guest identity, all data is public
2019-05-29T14:14:06.081629> CloudEdge: check if entity exits
2019-05-29T14:14:06.081954> CloudEdge: will issue requests with
2019-05-29T14:14:06.082508> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:14:06.082925> CloudEdge: returned msg from server is 200
2019-05-29T14:14:06.083237> CloudEdge: entity exists
2019-05-29T14:14:06.083532> CloudEdge: check if measurement exits
2019-05-29T14:14:06.084274> CloudEdge: will issue requests with
2019-05-29T14:14:06.084856> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:14:06.085250> CloudEdge: returned msg from server is 200
2019-05-29T14:14:06.085575> CloudEdge: measurement exists
2019-05-29T14:14:06.085885> CloudEdge: will issue requests with
2019-05-29T14:14:06.086201> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:14:06.086505> data: {"value":97.65,"timestamp":"2019-05-29T14:14:03.039"}
2019-05-29T14:14:06.086809> CloudEdge: returned msg from server is 200
2019-05-29T14:14:06.087110> CloudEdge: upload success
2019-05-29T14:14:06.264207> --> cloud end
2019-05-29T14:14:06.264586> 
2019-05-29T14:14:20.045096> 2019-05-29 14:14:20.043979
2019-05-29T14:14:20.045807> post status: gw ON
2019-05-29T14:14:20.046377> post status: executing periodic tasks
2019-05-29T14:14:21.144332> no timezone support, time will be expressed only in local time
2019-05-29T14:14:21.144694> post status: start running
2019-05-29T14:14:22.163347> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-29T14:14:22.163896> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-29T14:14:22.164302> get_gps.py: invalid serial port
2019-05-29T14:14:22.310042> post status: dynamic GPS is requested
2019-05-29T14:14:22.310405> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-29T14:14:22.310674> post status get GPS: no GPS coordinates
2019-05-29T14:14:22.310940> post status: show current GPS position
2019-05-29T14:14:22.311210> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-29T14:14:22.311473> post status: exiting
2019-05-29T14:14:33.825652> Low-level gw status ON
2019-05-29T14:15:05.089951> --- rxlora. dst=1 type=0x12 src=8 seq=8 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:15:05.090410> 2019-05-29T14:15:05.086954
2019-05-29T14:15:05.090721> rcv ctrl pkt info (^p): 1,18,8,8,14,6,-38
2019-05-29T14:15:05.091039> splitted in: [1, 18, 8, 8, 14, 6, -38]
2019-05-29T14:15:05.091313> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=8 len=14 SNR=6 RSSI=-38)
2019-05-29T14:15:05.091610> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:15:05.091909> splitted in: [125, 5, 12]
2019-05-29T14:15:05.092392> (BW=125 CR=5 SF=12)
2019-05-29T14:15:05.092793> rcv timestamp (^t): 2019-05-29T14:15:05.083
2019-05-29T14:15:05.093184> 
2019-05-29T14:15:05.093542> Got first framing byte
2019-05-29T14:15:05.093876> --> got LoRa data prefix
2019-05-29T14:15:05.094226> --> DATA with_appkey: read app key sequence
2019-05-29T14:15:05.094606> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:15:05.095059> app key disabled
2019-05-29T14:15:05.095452> valid app key: accept data
2019-05-29T14:15:05.095957> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:15:05.096433> python /app/data_acq/edgeCall.py "TC/97.52" "1,18,8,8,10,6,-38" "125,5,12" "2019-05-29T14:15:05.083" "B827EB4E30A8"
2019-05-29T14:15:08.117291> CloudEdge: uploading
2019-05-29T14:15:08.117924> CloudEdge: run under guest identity, all data is public
2019-05-29T14:15:08.118455> CloudEdge: check if entity exits
2019-05-29T14:15:08.118865> CloudEdge: will issue requests with
2019-05-29T14:15:08.119218> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:15:08.119543> CloudEdge: returned msg from server is 200
2019-05-29T14:15:08.119847> CloudEdge: entity exists
2019-05-29T14:15:08.120157> CloudEdge: check if measurement exits
2019-05-29T14:15:08.120447> CloudEdge: will issue requests with
2019-05-29T14:15:08.120730> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:15:08.121013> CloudEdge: returned msg from server is 200
2019-05-29T14:15:08.121377> CloudEdge: measurement exists
2019-05-29T14:15:08.121672> CloudEdge: will issue requests with
2019-05-29T14:15:08.121957> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:15:08.122420> data: {"value":97.52,"timestamp":"2019-05-29T14:15:05.083"}
2019-05-29T14:15:08.122747> CloudEdge: returned msg from server is 200
2019-05-29T14:15:08.123040> CloudEdge: upload success
2019-05-29T14:15:08.287782> --> cloud end
2019-05-29T14:15:08.288242> 
2019-05-29T14:16:07.132684> --- rxlora. dst=1 type=0x12 src=8 seq=9 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:16:07.133159> 2019-05-29T14:16:07.132262
2019-05-29T14:16:07.133501> rcv ctrl pkt info (^p): 1,18,8,9,14,6,-38
2019-05-29T14:16:07.133817> splitted in: [1, 18, 8, 9, 14, 6, -38]
2019-05-29T14:16:07.134101> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=9 len=14 SNR=6 RSSI=-38)
2019-05-29T14:16:07.134384> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:16:07.134661> splitted in: [125, 5, 12]
2019-05-29T14:16:07.135000> (BW=125 CR=5 SF=12)
2019-05-29T14:16:07.135389> rcv timestamp (^t): 2019-05-29T14:16:07.128
2019-05-29T14:16:07.135686> 
2019-05-29T14:16:07.135965> Got first framing byte
2019-05-29T14:16:07.136246> --> got LoRa data prefix
2019-05-29T14:16:07.136520> --> DATA with_appkey: read app key sequence
2019-05-29T14:16:07.136829> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:16:07.137157> app key disabled
2019-05-29T14:16:07.137466> valid app key: accept data
2019-05-29T14:16:07.137821> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:16:07.138143> python /app/data_acq/edgeCall.py "TC/97.45" "1,18,8,9,10,6,-38" "125,5,12" "2019-05-29T14:16:07.128" "B827EB4E30A8"
2019-05-29T14:16:10.174931> CloudEdge: uploading
2019-05-29T14:16:10.175432> CloudEdge: run under guest identity, all data is public
2019-05-29T14:16:10.175801> CloudEdge: check if entity exits
2019-05-29T14:16:10.176286> CloudEdge: will issue requests with
2019-05-29T14:16:10.176876> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:16:10.177430> CloudEdge: returned msg from server is 200
2019-05-29T14:16:10.177937> CloudEdge: entity exists
2019-05-29T14:16:10.178358> CloudEdge: check if measurement exits
2019-05-29T14:16:10.178786> CloudEdge: will issue requests with
2019-05-29T14:16:10.179188> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:16:10.179596> CloudEdge: returned msg from server is 200
2019-05-29T14:16:10.179916> CloudEdge: measurement exists
2019-05-29T14:16:10.180269> CloudEdge: will issue requests with
2019-05-29T14:16:10.180604> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:16:10.180924> data: {"value":97.45,"timestamp":"2019-05-29T14:16:07.128"}
2019-05-29T14:16:10.181301> CloudEdge: returned msg from server is 200
2019-05-29T14:16:10.181619> CloudEdge: upload success
2019-05-29T14:16:10.343551> --> cloud end
2019-05-29T14:16:10.343950> 
2019-05-29T14:17:09.181118> --- rxlora. dst=1 type=0x12 src=8 seq=10 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:17:09.181571> 2019-05-29T14:17:09.180713
2019-05-29T14:17:09.181887> rcv ctrl pkt info (^p): 1,18,8,10,14,5,-39
2019-05-29T14:17:09.182367> splitted in: [1, 18, 8, 10, 14, 5, -39]
2019-05-29T14:17:09.182703> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=10 len=14 SNR=5 RSSI=-39)
2019-05-29T14:17:09.182988> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:17:09.183304> splitted in: [125, 5, 12]
2019-05-29T14:17:09.183635> (BW=125 CR=5 SF=12)
2019-05-29T14:17:09.183935> rcv timestamp (^t): 2019-05-29T14:17:09.177
2019-05-29T14:17:09.184218> 
2019-05-29T14:17:09.184577> Got first framing byte
2019-05-29T14:17:09.184867> --> got LoRa data prefix
2019-05-29T14:17:09.185146> --> DATA with_appkey: read app key sequence
2019-05-29T14:17:09.185468> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:17:09.185880> app key disabled
2019-05-29T14:17:09.186237> valid app key: accept data
2019-05-29T14:17:09.186548> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:17:09.186943> python /app/data_acq/edgeCall.py "TC/97.32" "1,18,8,10,10,5,-39" "125,5,12" "2019-05-29T14:17:09.177" "B827EB4E30A8"
2019-05-29T14:17:12.228901> CloudEdge: uploading
2019-05-29T14:17:12.229449> CloudEdge: run under guest identity, all data is public
2019-05-29T14:17:12.229826> CloudEdge: check if entity exits
2019-05-29T14:17:12.230136> CloudEdge: will issue requests with
2019-05-29T14:17:12.230424> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:17:12.230717> CloudEdge: returned msg from server is 200
2019-05-29T14:17:12.231004> CloudEdge: entity exists
2019-05-29T14:17:12.231287> CloudEdge: check if measurement exits
2019-05-29T14:17:12.231569> CloudEdge: will issue requests with
2019-05-29T14:17:12.231853> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:17:12.232281> CloudEdge: returned msg from server is 200
2019-05-29T14:17:12.232607> CloudEdge: measurement exists
2019-05-29T14:17:12.233015> CloudEdge: will issue requests with
2019-05-29T14:17:12.233539> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:17:12.234148> data: {"value":97.32,"timestamp":"2019-05-29T14:17:09.177"}
2019-05-29T14:17:12.234737> CloudEdge: returned msg from server is 200
2019-05-29T14:17:12.235674> CloudEdge: upload success
2019-05-29T14:17:12.400786> --> cloud end
2019-05-29T14:17:12.401161> 
2019-05-29T14:18:11.231415> --- rxlora. dst=1 type=0x12 src=8 seq=11 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:18:11.231884> 2019-05-29T14:18:11.228511
2019-05-29T14:18:11.232467> rcv ctrl pkt info (^p): 1,18,8,11,14,5,-39
2019-05-29T14:18:11.232834> splitted in: [1, 18, 8, 11, 14, 5, -39]
2019-05-29T14:18:11.233177> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=11 len=14 SNR=5 RSSI=-39)
2019-05-29T14:18:11.233544> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:18:11.233911> splitted in: [125, 5, 12]
2019-05-29T14:18:11.234231> (BW=125 CR=5 SF=12)
2019-05-29T14:18:11.234641> rcv timestamp (^t): 2019-05-29T14:18:11.225
2019-05-29T14:18:11.235103> 
2019-05-29T14:18:11.235474> Got first framing byte
2019-05-29T14:18:11.235858> --> got LoRa data prefix
2019-05-29T14:18:11.236222> --> DATA with_appkey: read app key sequence
2019-05-29T14:18:11.236559> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:18:11.236901> app key disabled
2019-05-29T14:18:11.237363> valid app key: accept data
2019-05-29T14:18:11.237783> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:18:11.238130> python /app/data_acq/edgeCall.py "TC/97.52" "1,18,8,11,10,5,-39" "125,5,12" "2019-05-29T14:18:11.225" "B827EB4E30A8"
2019-05-29T14:18:15.282823> CloudEdge: uploading
2019-05-29T14:18:15.283841> CloudEdge: run under guest identity, all data is public
2019-05-29T14:18:15.284635> CloudEdge: check if entity exits
2019-05-29T14:18:15.285332> CloudEdge: will issue requests with
2019-05-29T14:18:15.286027> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:18:15.286665> CloudEdge: returned msg from server is 200
2019-05-29T14:18:15.287251> CloudEdge: entity exists
2019-05-29T14:18:15.287825> CloudEdge: check if measurement exits
2019-05-29T14:18:15.288399> CloudEdge: will issue requests with
2019-05-29T14:18:15.288967> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:18:15.289537> CloudEdge: returned msg from server is 200
2019-05-29T14:18:15.290105> CloudEdge: measurement exists
2019-05-29T14:18:15.290680> CloudEdge: will issue requests with
2019-05-29T14:18:15.291256> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:18:15.291824> data: {"value":97.52,"timestamp":"2019-05-29T14:18:11.225"}
2019-05-29T14:18:15.292670> CloudEdge: returned msg from server is 200
2019-05-29T14:18:15.293308> CloudEdge: upload success
2019-05-29T14:18:15.479075> --> cloud end
2019-05-29T14:18:15.479491> 
2019-05-29T14:19:13.280321> --- rxlora. dst=1 type=0x12 src=8 seq=12 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-29T14:19:13.280728> 2019-05-29T14:19:13.277500
2019-05-29T14:19:13.280997> rcv ctrl pkt info (^p): 1,18,8,12,14,6,-40
2019-05-29T14:19:13.281261> splitted in: [1, 18, 8, 12, 14, 6, -40]
2019-05-29T14:19:13.281525> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=12 len=14 SNR=6 RSSI=-40)
2019-05-29T14:19:13.281786> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:19:13.282144> splitted in: [125, 5, 12]
2019-05-29T14:19:13.282527> (BW=125 CR=5 SF=12)
2019-05-29T14:19:13.282847> rcv timestamp (^t): 2019-05-29T14:19:13.274
2019-05-29T14:19:13.283131> 
2019-05-29T14:19:13.283412> Got first framing byte
2019-05-29T14:19:13.283703> --> got LoRa data prefix
2019-05-29T14:19:13.283976> --> DATA with_appkey: read app key sequence
2019-05-29T14:19:13.284287> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:19:13.284610> app key disabled
2019-05-29T14:19:13.284936> valid app key: accept data
2019-05-29T14:19:13.285262> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:19:13.285632> python /app/data_acq/edgeCall.py "TC/97.39" "1,18,8,12,10,6,-40" "125,5,12" "2019-05-29T14:19:13.274" "B827EB4E30A8"
2019-05-29T14:19:16.514147> CloudEdge: uploading
2019-05-29T14:19:16.514677> CloudEdge: run under guest identity, all data is public
2019-05-29T14:19:16.515297> CloudEdge: check if entity exits
2019-05-29T14:19:16.515935> CloudEdge: will issue requests with
2019-05-29T14:19:16.516450> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:19:16.516873> CloudEdge: returned msg from server is 200
2019-05-29T14:19:16.517259> CloudEdge: entity exists
2019-05-29T14:19:16.517644> CloudEdge: check if measurement exits
2019-05-29T14:19:16.518008> CloudEdge: will issue requests with
2019-05-29T14:19:16.518335> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:19:16.518663> CloudEdge: returned msg from server is 200
2019-05-29T14:19:16.518996> CloudEdge: measurement exists
2019-05-29T14:19:16.519334> CloudEdge: will issue requests with
2019-05-29T14:19:16.519664> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:19:16.519992> data: {"value":97.39,"timestamp":"2019-05-29T14:19:13.274"}
2019-05-29T14:19:16.520339> CloudEdge: returned msg from server is 200
2019-05-29T14:19:16.520682> CloudEdge: upload success
2019-05-29T14:19:16.681980> --> cloud end
2019-05-29T14:19:16.682436> 
2019-05-29T14:20:15.330577> --- rxlora. dst=1 type=0x12 src=8 seq=13 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:20:15.330984> 2019-05-29T14:20:15.327787
2019-05-29T14:20:15.331251> rcv ctrl pkt info (^p): 1,18,8,13,14,6,-38
2019-05-29T14:20:15.331518> splitted in: [1, 18, 8, 13, 14, 6, -38]
2019-05-29T14:20:15.331783> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=13 len=14 SNR=6 RSSI=-38)
2019-05-29T14:20:15.332132> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:20:15.332423> splitted in: [125, 5, 12]
2019-05-29T14:20:15.332746> (BW=125 CR=5 SF=12)
2019-05-29T14:20:15.333068> rcv timestamp (^t): 2019-05-29T14:20:15.324
2019-05-29T14:20:15.333366> 
2019-05-29T14:20:15.333653> Got first framing byte
2019-05-29T14:20:15.333944> --> got LoRa data prefix
2019-05-29T14:20:15.334224> --> DATA with_appkey: read app key sequence
2019-05-29T14:20:15.334500> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:20:15.334822> app key disabled
2019-05-29T14:20:15.335152> valid app key: accept data
2019-05-29T14:20:15.335492> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:20:15.335819> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,13,10,6,-38" "125,5,12" "2019-05-29T14:20:15.324" "B827EB4E30A8"
2019-05-29T14:20:18.421349> CloudEdge: uploading
2019-05-29T14:20:18.421895> CloudEdge: run under guest identity, all data is public
2019-05-29T14:20:18.422578> CloudEdge: check if entity exits
2019-05-29T14:20:18.423059> CloudEdge: will issue requests with
2019-05-29T14:20:18.423420> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:20:18.423735> CloudEdge: returned msg from server is 200
2019-05-29T14:20:18.424040> CloudEdge: entity exists
2019-05-29T14:20:18.424329> CloudEdge: check if measurement exits
2019-05-29T14:20:18.424620> CloudEdge: will issue requests with
2019-05-29T14:20:18.424896> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:20:18.425172> CloudEdge: returned msg from server is 200
2019-05-29T14:20:18.425448> CloudEdge: measurement exists
2019-05-29T14:20:18.425734> CloudEdge: will issue requests with
2019-05-29T14:20:18.426019> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:20:18.426302> data: {"value":97.26,"timestamp":"2019-05-29T14:20:15.324"}
2019-05-29T14:20:18.426582> CloudEdge: returned msg from server is 200
2019-05-29T14:20:18.426874> CloudEdge: upload success
2019-05-29T14:20:18.590206> --> cloud end
2019-05-29T14:20:18.590587> 
2019-05-29T14:21:17.382709> --- rxlora. dst=1 type=0x12 src=8 seq=14 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:21:17.383181> 2019-05-29T14:21:17.379684
2019-05-29T14:21:17.383537> rcv ctrl pkt info (^p): 1,18,8,14,14,6,-39
2019-05-29T14:21:17.383833> splitted in: [1, 18, 8, 14, 14, 6, -39]
2019-05-29T14:21:17.384126> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=14 len=14 SNR=6 RSSI=-39)
2019-05-29T14:21:17.384483> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:21:17.384869> splitted in: [125, 5, 12]
2019-05-29T14:21:17.385238> (BW=125 CR=5 SF=12)
2019-05-29T14:21:17.385577> rcv timestamp (^t): 2019-05-29T14:21:17.376
2019-05-29T14:21:17.385997> 
2019-05-29T14:21:17.386370> Got first framing byte
2019-05-29T14:21:17.386746> --> got LoRa data prefix
2019-05-29T14:21:17.387104> --> DATA with_appkey: read app key sequence
2019-05-29T14:21:17.387461> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:21:17.387793> app key disabled
2019-05-29T14:21:17.388286> valid app key: accept data
2019-05-29T14:21:17.388687> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:21:17.389003> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,14,10,6,-39" "125,5,12" "2019-05-29T14:21:17.376" "B827EB4E30A8"
2019-05-29T14:21:20.368055> CloudEdge: uploading
2019-05-29T14:21:20.368650> CloudEdge: run under guest identity, all data is public
2019-05-29T14:21:20.369048> CloudEdge: check if entity exits
2019-05-29T14:21:20.369380> CloudEdge: will issue requests with
2019-05-29T14:21:20.369713> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:21:20.370023> CloudEdge: returned msg from server is 200
2019-05-29T14:21:20.370319> CloudEdge: entity exists
2019-05-29T14:21:20.370624> CloudEdge: check if measurement exits
2019-05-29T14:21:20.370925> CloudEdge: will issue requests with
2019-05-29T14:21:20.371226> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:21:20.371510> CloudEdge: returned msg from server is 200
2019-05-29T14:21:20.371790> CloudEdge: measurement exists
2019-05-29T14:21:20.372733> CloudEdge: will issue requests with
2019-05-29T14:21:20.373331> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:21:20.373696> data: {"value":97.26,"timestamp":"2019-05-29T14:21:17.376"}
2019-05-29T14:21:20.374014> CloudEdge: returned msg from server is 200
2019-05-29T14:21:20.374313> CloudEdge: upload success
2019-05-29T14:21:20.531740> --> cloud end
2019-05-29T14:21:20.532266> 
2019-05-29T14:22:19.432594> --- rxlora. dst=1 type=0x12 src=8 seq=15 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-29T14:22:19.433115> 2019-05-29T14:22:19.432115
2019-05-29T14:22:19.433468> rcv ctrl pkt info (^p): 1,18,8,15,14,6,-39
2019-05-29T14:22:19.433778> splitted in: [1, 18, 8, 15, 14, 6, -39]
2019-05-29T14:22:19.434064> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=15 len=14 SNR=6 RSSI=-39)
2019-05-29T14:22:19.434341> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:22:19.434793> splitted in: [125, 5, 12]
2019-05-29T14:22:19.435172> (BW=125 CR=5 SF=12)
2019-05-29T14:22:19.435476> rcv timestamp (^t): 2019-05-29T14:22:19.428
2019-05-29T14:22:19.435768> 
2019-05-29T14:22:19.436125> Got first framing byte
2019-05-29T14:22:19.436404> --> got LoRa data prefix
2019-05-29T14:22:19.436729> --> DATA with_appkey: read app key sequence
2019-05-29T14:22:19.437094> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:22:19.437453> app key disabled
2019-05-29T14:22:19.437779> valid app key: accept data
2019-05-29T14:22:19.438178> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:22:19.438551> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,15,10,6,-39" "125,5,12" "2019-05-29T14:22:19.428" "B827EB4E30A8"
2019-05-29T14:22:22.537371> CloudEdge: uploading
2019-05-29T14:22:22.538062> CloudEdge: run under guest identity, all data is public
2019-05-29T14:22:22.538668> CloudEdge: check if entity exits
2019-05-29T14:22:22.539147> CloudEdge: will issue requests with
2019-05-29T14:22:22.539543> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:22:22.539960> CloudEdge: returned msg from server is 200
2019-05-29T14:22:22.541074> CloudEdge: entity exists
2019-05-29T14:22:22.541590> CloudEdge: check if measurement exits
2019-05-29T14:22:22.542225> CloudEdge: will issue requests with
2019-05-29T14:22:22.542763> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:22:22.543162> CloudEdge: returned msg from server is 200
2019-05-29T14:22:22.543656> CloudEdge: measurement exists
2019-05-29T14:22:22.544045> CloudEdge: will issue requests with
2019-05-29T14:22:22.544493> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:22:22.544898> data: {"value":97.26,"timestamp":"2019-05-29T14:22:19.428"}
2019-05-29T14:22:22.545242> CloudEdge: returned msg from server is 200
2019-05-29T14:22:22.545705> CloudEdge: upload success
2019-05-29T14:22:22.705327> --> cloud end
2019-05-29T14:22:22.705708> 
2019-05-29T14:23:21.484635> --- rxlora. dst=1 type=0x12 src=8 seq=16 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-29T14:23:21.485138> 2019-05-29T14:23:21.484106
2019-05-29T14:23:21.485654> rcv ctrl pkt info (^p): 1,18,8,16,14,6,-38
2019-05-29T14:23:21.486039> splitted in: [1, 18, 8, 16, 14, 6, -38]
2019-05-29T14:23:21.486421> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=16 len=14 SNR=6 RSSI=-38)
2019-05-29T14:23:21.486808> rcv ctrl radio info (^r): 125,5,12
2019-05-29T14:23:21.487240> splitted in: [125, 5, 12]
2019-05-29T14:23:21.487575> (BW=125 CR=5 SF=12)
2019-05-29T14:23:21.487960> rcv timestamp (^t): 2019-05-29T14:23:21.480
2019-05-29T14:23:21.488303> 
2019-05-29T14:23:21.488735> Got first framing byte
2019-05-29T14:23:21.489157> --> got LoRa data prefix
2019-05-29T14:23:21.489603> --> DATA with_appkey: read app key sequence
2019-05-29T14:23:21.490012> app key is 0x05 0x06 0x07 0x08
2019-05-29T14:23:21.490527> app key disabled
2019-05-29T14:23:21.490988> valid app key: accept data
2019-05-29T14:23:21.491450> uploading with python /app/data_acq/edgeCall.py
2019-05-29T14:23:21.491865> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,16,10,6,-38" "125,5,12" "2019-05-29T14:23:21.480" "B827EB4E30A8"
2019-05-29T14:23:26.633868> CloudEdge: uploading
2019-05-29T14:23:26.634875> CloudEdge: run under guest identity, all data is public
2019-05-29T14:23:26.635871> CloudEdge: check if entity exits
2019-05-29T14:23:26.636803> CloudEdge: will issue requests with
2019-05-29T14:23:26.637772> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-29T14:23:26.638735> CloudEdge: returned msg from server is 200
2019-05-29T14:23:26.639469> CloudEdge: entity exists
2019-05-29T14:23:26.640208> CloudEdge: check if measurement exits
2019-05-29T14:23:26.640942> CloudEdge: will issue requests with
2019-05-29T14:23:26.641661> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-29T14:23:26.642547> CloudEdge: returned msg from server is 200
2019-05-29T14:23:26.643342> CloudEdge: measurement exists
2019-05-29T14:23:26.644070> CloudEdge: will issue requests with
2019-05-29T14:23:26.644799> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-29T14:23:26.645516> data: {"value":97.26,"timestamp":"2019-05-29T14:23:21.480"}
2019-05-29T14:23:26.646214> CloudEdge: returned msg from server is 200
2019-05-29T14:23:26.646932> CloudEdge: upload success
2019-05-29T14:23:26.829476> --> cloud end
2019-05-29T14:23:26.829899> 
2019-05-30T08:08:55.789080> 2019-05-30 08:08:55.787962
2019-05-30T08:08:55.789821> post status: gw ON
2019-05-30T08:08:55.790391> post status: executing periodic tasks
2019-05-30T08:08:56.863939> --- rxlora. dst=1 type=0x12 src=8 seq=17 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:08:56.864479> 2019-05-30T08:08:56.860824
2019-05-30T08:08:56.864859> rcv ctrl pkt info (^p): 1,18,8,17,14,6,-39
2019-05-30T08:08:56.865240> splitted in: [1, 18, 8, 17, 14, 6, -39]
2019-05-30T08:08:56.865549> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=17 len=14 SNR=6 RSSI=-39)
2019-05-30T08:08:56.865909> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:08:56.866250> splitted in: [125, 5, 12]
2019-05-30T08:08:56.866670> (BW=125 CR=5 SF=12)
2019-05-30T08:08:56.867048> rcv timestamp (^t): 2019-05-30T08:08:56.857
2019-05-30T08:08:56.867352> 
2019-05-30T08:08:56.867682> Got first framing byte
2019-05-30T08:08:56.867981> --> got LoRa data prefix
2019-05-30T08:08:56.868301> --> DATA with_appkey: read app key sequence
2019-05-30T08:08:56.868600> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:08:56.868929> app key disabled
2019-05-30T08:08:56.869280> valid app key: accept data
2019-05-30T08:08:56.869581> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:08:56.869919> python /app/data_acq/edgeCall.py "TC/97.20" "1,18,8,17,10,6,-39" "125,5,12" "2019-05-30T08:08:56.857" "B827EB4E30A8"
2019-05-30T08:08:56.926363> no timezone support, time will be expressed only in local time
2019-05-30T08:08:56.927031> post status: start running
2019-05-30T08:08:58.084351> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:08:58.084894> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:08:58.085299> get_gps.py: invalid serial port
2019-05-30T08:08:58.227926> post status: dynamic GPS is requested
2019-05-30T08:08:58.228452> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:08:58.229165> post status get GPS: no GPS coordinates
2019-05-30T08:08:58.229594> post status: show current GPS position
2019-05-30T08:08:58.229986> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:08:58.230344> post status: exiting
2019-05-30T08:09:01.293646> CloudEdge: uploading
2019-05-30T08:09:01.294339> CloudEdge: run under guest identity, all data is public
2019-05-30T08:09:01.294907> CloudEdge: check if entity exits
2019-05-30T08:09:01.295365> CloudEdge: will issue requests with
2019-05-30T08:09:01.295907> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:09:01.296395> CloudEdge: returned msg from server is 200
2019-05-30T08:09:01.296982> CloudEdge: entity exists
2019-05-30T08:09:01.297446> CloudEdge: check if measurement exits
2019-05-30T08:09:01.297802> CloudEdge: will issue requests with
2019-05-30T08:09:01.298188> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:09:01.298543> CloudEdge: returned msg from server is 200
2019-05-30T08:09:01.298900> CloudEdge: measurement exists
2019-05-30T08:09:01.299338> CloudEdge: will issue requests with
2019-05-30T08:09:01.299694> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:09:01.300080> data: {"value":97.20,"timestamp":"2019-05-30T08:08:56.857"}
2019-05-30T08:09:01.300401> CloudEdge: returned msg from server is 200
2019-05-30T08:09:01.300774> CloudEdge: upload success
2019-05-30T08:09:01.458251> --> cloud end
2019-05-30T08:09:01.458696> 
2019-05-30T08:09:17.382439> Low-level gw status ON
2019-05-30T08:09:58.918005> --- rxlora. dst=1 type=0x12 src=8 seq=18 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:09:58.918624> 2019-05-30T08:09:58.914839
2019-05-30T08:09:58.921741> rcv ctrl pkt info (^p): 1,18,8,18,14,6,-38
2019-05-30T08:09:58.922214> splitted in: [1, 18, 8, 18, 14, 6, -38]
2019-05-30T08:09:58.922650> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=18 len=14 SNR=6 RSSI=-38)
2019-05-30T08:09:58.923322> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:09:58.923764> splitted in: [125, 5, 12]
2019-05-30T08:09:58.924159> (BW=125 CR=5 SF=12)
2019-05-30T08:09:58.924496> rcv timestamp (^t): 2019-05-30T08:09:58.911
2019-05-30T08:09:58.924782> 
2019-05-30T08:09:58.925079> Got first framing byte
2019-05-30T08:09:58.925387> --> got LoRa data prefix
2019-05-30T08:09:58.925689> --> DATA with_appkey: read app key sequence
2019-05-30T08:09:58.926028> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:09:58.926351> app key disabled
2019-05-30T08:09:58.927063> valid app key: accept data
2019-05-30T08:09:58.927408> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:09:58.927692> python /app/data_acq/edgeCall.py "TC/97.39" "1,18,8,18,10,6,-38" "125,5,12" "2019-05-30T08:09:58.911" "B827EB4E30A8"
2019-05-30T08:10:03.606738> CloudEdge: uploading
2019-05-30T08:10:03.607658> CloudEdge: run under guest identity, all data is public
2019-05-30T08:10:03.608491> CloudEdge: check if entity exits
2019-05-30T08:10:03.609177> CloudEdge: will issue requests with
2019-05-30T08:10:03.609840> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:10:03.610476> CloudEdge: returned msg from server is 200
2019-05-30T08:10:03.611069> CloudEdge: entity exists
2019-05-30T08:10:03.611646> CloudEdge: check if measurement exits
2019-05-30T08:10:03.612239> CloudEdge: will issue requests with
2019-05-30T08:10:03.612849> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:10:03.613577> CloudEdge: returned msg from server is 200
2019-05-30T08:10:03.614291> CloudEdge: measurement exists
2019-05-30T08:10:03.615060> CloudEdge: will issue requests with
2019-05-30T08:10:03.615807> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:10:03.616747> data: {"value":97.39,"timestamp":"2019-05-30T08:09:58.911"}
2019-05-30T08:10:03.617629> CloudEdge: returned msg from server is 200
2019-05-30T08:10:03.618430> CloudEdge: upload success
2019-05-30T08:10:03.789043> --> cloud end
2019-05-30T08:10:03.789442> 
2019-05-30T08:11:00.967098> --- rxlora. dst=1 type=0x12 src=8 seq=19 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:11:00.967595> 2019-05-30T08:11:00.966090
2019-05-30T08:11:00.967928> rcv ctrl pkt info (^p): 1,18,8,19,14,6,-39
2019-05-30T08:11:00.968216> splitted in: [1, 18, 8, 19, 14, 6, -39]
2019-05-30T08:11:00.968517> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=19 len=14 SNR=6 RSSI=-39)
2019-05-30T08:11:00.968898> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:11:00.969214> splitted in: [125, 5, 12]
2019-05-30T08:11:00.969501> (BW=125 CR=5 SF=12)
2019-05-30T08:11:00.969851> rcv timestamp (^t): 2019-05-30T08:11:00.962
2019-05-30T08:11:00.970143> 
2019-05-30T08:11:00.970420> Got first framing byte
2019-05-30T08:11:00.970742> --> got LoRa data prefix
2019-05-30T08:11:00.971085> --> DATA with_appkey: read app key sequence
2019-05-30T08:11:00.971440> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:11:00.971808> app key disabled
2019-05-30T08:11:00.972194> valid app key: accept data
2019-05-30T08:11:00.972547> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:11:00.972893> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,19,10,6,-39" "125,5,12" "2019-05-30T08:11:00.962" "B827EB4E30A8"
2019-05-30T08:11:05.194449> CloudEdge: uploading
2019-05-30T08:11:05.195288> CloudEdge: run under guest identity, all data is public
2019-05-30T08:11:05.195985> CloudEdge: check if entity exits
2019-05-30T08:11:05.196833> CloudEdge: will issue requests with
2019-05-30T08:11:05.197564> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:11:05.198222> CloudEdge: returned msg from server is 200
2019-05-30T08:11:05.198825> CloudEdge: entity exists
2019-05-30T08:11:05.199396> CloudEdge: check if measurement exits
2019-05-30T08:11:05.199983> CloudEdge: will issue requests with
2019-05-30T08:11:05.200556> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:11:05.201125> CloudEdge: returned msg from server is 200
2019-05-30T08:11:05.201691> CloudEdge: measurement exists
2019-05-30T08:11:05.202249> CloudEdge: will issue requests with
2019-05-30T08:11:05.202818> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:11:05.203376> data: {"value":97.26,"timestamp":"2019-05-30T08:11:00.962"}
2019-05-30T08:11:05.203932> CloudEdge: returned msg from server is 200
2019-05-30T08:11:05.204489> CloudEdge: upload success
2019-05-30T08:11:05.411989> --> cloud end
2019-05-30T08:11:05.412390> 
2019-05-30T08:12:03.022595> --- rxlora. dst=1 type=0x12 src=8 seq=20 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:12:03.023002> 2019-05-30T08:12:03.019806
2019-05-30T08:12:03.023271> rcv ctrl pkt info (^p): 1,18,8,20,14,6,-38
2019-05-30T08:12:03.023537> splitted in: [1, 18, 8, 20, 14, 6, -38]
2019-05-30T08:12:03.023802> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=20 len=14 SNR=6 RSSI=-38)
2019-05-30T08:12:03.024065> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:12:03.024331> splitted in: [125, 5, 12]
2019-05-30T08:12:03.024593> (BW=125 CR=5 SF=12)
2019-05-30T08:12:03.024855> rcv timestamp (^t): 2019-05-30T08:12:03.016
2019-05-30T08:12:03.025121> 
2019-05-30T08:12:03.025381> Got first framing byte
2019-05-30T08:12:03.025642> --> got LoRa data prefix
2019-05-30T08:12:03.025905> --> DATA with_appkey: read app key sequence
2019-05-30T08:12:03.026167> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:12:03.026429> app key disabled
2019-05-30T08:12:03.026748> valid app key: accept data
2019-05-30T08:12:03.027025> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:12:03.027288> python /app/data_acq/edgeCall.py "TC/97.26" "1,18,8,20,10,6,-38" "125,5,12" "2019-05-30T08:12:03.016" "B827EB4E30A8"
2019-05-30T08:12:07.233605> CloudEdge: uploading
2019-05-30T08:12:07.234467> CloudEdge: run under guest identity, all data is public
2019-05-30T08:12:07.235211> CloudEdge: check if entity exits
2019-05-30T08:12:07.235866> CloudEdge: will issue requests with
2019-05-30T08:12:07.236502> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:12:07.237390> CloudEdge: returned msg from server is 200
2019-05-30T08:12:07.238017> CloudEdge: entity exists
2019-05-30T08:12:07.238595> CloudEdge: check if measurement exits
2019-05-30T08:12:07.239173> CloudEdge: will issue requests with
2019-05-30T08:12:07.239746> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:12:07.240317> CloudEdge: returned msg from server is 200
2019-05-30T08:12:07.240892> CloudEdge: measurement exists
2019-05-30T08:12:07.241455> CloudEdge: will issue requests with
2019-05-30T08:12:07.242016> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:12:07.242580> data: {"value":97.26,"timestamp":"2019-05-30T08:12:03.016"}
2019-05-30T08:12:07.243230> CloudEdge: returned msg from server is 200
2019-05-30T08:12:07.243802> CloudEdge: upload success
2019-05-30T08:12:07.437110> --> cloud end
2019-05-30T08:12:07.437476> 
2019-05-30T08:13:05.077199> --- rxlora. dst=1 type=0x12 src=8 seq=21 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:13:05.077673> 2019-05-30T08:13:05.075428
2019-05-30T08:13:05.078043> rcv ctrl pkt info (^p): 1,18,8,21,14,6,-38
2019-05-30T08:13:05.078381> splitted in: [1, 18, 8, 21, 14, 6, -38]
2019-05-30T08:13:05.078683> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=21 len=14 SNR=6 RSSI=-38)
2019-05-30T08:13:05.078979> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:13:05.079281> splitted in: [125, 5, 12]
2019-05-30T08:13:05.079571> (BW=125 CR=5 SF=12)
2019-05-30T08:13:05.079854> rcv timestamp (^t): 2019-05-30T08:13:05.072
2019-05-30T08:13:05.080202> 
2019-05-30T08:13:05.080560> Got first framing byte
2019-05-30T08:13:05.080906> --> got LoRa data prefix
2019-05-30T08:13:05.081232> --> DATA with_appkey: read app key sequence
2019-05-30T08:13:05.081631> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:13:05.082009> app key disabled
2019-05-30T08:13:05.082383> valid app key: accept data
2019-05-30T08:13:05.082748> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:13:05.083105> python /app/data_acq/edgeCall.py "TC/97.07" "1,18,8,21,10,6,-38" "125,5,12" "2019-05-30T08:13:05.072" "B827EB4E30A8"
2019-05-30T08:13:09.206041> CloudEdge: uploading
2019-05-30T08:13:09.206720> CloudEdge: run under guest identity, all data is public
2019-05-30T08:13:09.207334> CloudEdge: check if entity exits
2019-05-30T08:13:09.207762> CloudEdge: will issue requests with
2019-05-30T08:13:09.208109> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:13:09.208429> CloudEdge: returned msg from server is 200
2019-05-30T08:13:09.208737> CloudEdge: entity exists
2019-05-30T08:13:09.209040> CloudEdge: check if measurement exits
2019-05-30T08:13:09.209337> CloudEdge: will issue requests with
2019-05-30T08:13:09.209619> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:13:09.209896> CloudEdge: returned msg from server is 200
2019-05-30T08:13:09.210184> CloudEdge: measurement exists
2019-05-30T08:13:09.210478> CloudEdge: will issue requests with
2019-05-30T08:13:09.210768> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:13:09.211057> data: {"value":97.07,"timestamp":"2019-05-30T08:13:05.072"}
2019-05-30T08:13:09.211345> CloudEdge: returned msg from server is 200
2019-05-30T08:13:09.211725> CloudEdge: upload success
2019-05-30T08:13:09.376384> --> cloud end
2019-05-30T08:13:09.376981> 
2019-05-30T08:14:07.133911> --- rxlora. dst=1 type=0x12 src=8 seq=22 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:14:07.134504> 2019-05-30T08:14:07.133403
2019-05-30T08:14:07.135175> rcv ctrl pkt info (^p): 1,18,8,22,14,5,-40
2019-05-30T08:14:07.135904> splitted in: [1, 18, 8, 22, 14, 5, -40]
2019-05-30T08:14:07.136777> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=22 len=14 SNR=5 RSSI=-40)
2019-05-30T08:14:07.137327> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:14:07.137737> splitted in: [125, 5, 12]
2019-05-30T08:14:07.138248> (BW=125 CR=5 SF=12)
2019-05-30T08:14:07.138776> rcv timestamp (^t): 2019-05-30T08:14:07.129
2019-05-30T08:14:07.139247> 
2019-05-30T08:14:07.139781> Got first framing byte
2019-05-30T08:14:07.140173> --> got LoRa data prefix
2019-05-30T08:14:07.140631> --> DATA with_appkey: read app key sequence
2019-05-30T08:14:07.141121> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:14:07.141558> app key disabled
2019-05-30T08:14:07.142015> valid app key: accept data
2019-05-30T08:14:07.142394> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:14:07.142810> python /app/data_acq/edgeCall.py "TC/97.00" "1,18,8,22,10,5,-40" "125,5,12" "2019-05-30T08:14:07.129" "B827EB4E30A8"
2019-05-30T08:14:11.468596> CloudEdge: uploading
2019-05-30T08:14:11.469579> CloudEdge: run under guest identity, all data is public
2019-05-30T08:14:11.470320> CloudEdge: check if entity exits
2019-05-30T08:14:11.471003> CloudEdge: will issue requests with
2019-05-30T08:14:11.472049> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:14:11.472942> CloudEdge: returned msg from server is 200
2019-05-30T08:14:11.473678> CloudEdge: entity exists
2019-05-30T08:14:11.474340> CloudEdge: check if measurement exits
2019-05-30T08:14:11.474983> CloudEdge: will issue requests with
2019-05-30T08:14:11.475636> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:14:11.476268> CloudEdge: returned msg from server is 200
2019-05-30T08:14:11.477172> CloudEdge: measurement exists
2019-05-30T08:14:11.477866> CloudEdge: will issue requests with
2019-05-30T08:14:11.478506> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:14:11.479138> data: {"value":97.00,"timestamp":"2019-05-30T08:14:07.129"}
2019-05-30T08:14:11.479797> CloudEdge: returned msg from server is 200
2019-05-30T08:14:11.480436> CloudEdge: upload success
2019-05-30T08:14:11.697593> --> cloud end
2019-05-30T08:14:11.698063> 
2019-05-30T08:15:09.188767> --- rxlora. dst=1 type=0x12 src=8 seq=23 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:15:09.189238> 2019-05-30T08:15:09.188158
2019-05-30T08:15:09.189632> rcv ctrl pkt info (^p): 1,18,8,23,14,6,-39
2019-05-30T08:15:09.189939> splitted in: [1, 18, 8, 23, 14, 6, -39]
2019-05-30T08:15:09.190224> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=23 len=14 SNR=6 RSSI=-39)
2019-05-30T08:15:09.190510> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:15:09.190877> splitted in: [125, 5, 12]
2019-05-30T08:15:09.191193> (BW=125 CR=5 SF=12)
2019-05-30T08:15:09.191488> rcv timestamp (^t): 2019-05-30T08:15:09.184
2019-05-30T08:15:09.191790> 
2019-05-30T08:15:09.192091> Got first framing byte
2019-05-30T08:15:09.192377> --> got LoRa data prefix
2019-05-30T08:15:09.192692> --> DATA with_appkey: read app key sequence
2019-05-30T08:15:09.193038> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:15:09.193384> app key disabled
2019-05-30T08:15:09.193775> valid app key: accept data
2019-05-30T08:15:09.194189> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:15:09.194572> python /app/data_acq/edgeCall.py "TC/97.07" "1,18,8,23,10,6,-39" "125,5,12" "2019-05-30T08:15:09.184" "B827EB4E30A8"
2019-05-30T08:15:13.435559> CloudEdge: uploading
2019-05-30T08:15:13.436403> CloudEdge: run under guest identity, all data is public
2019-05-30T08:15:13.437386> CloudEdge: check if entity exits
2019-05-30T08:15:13.438315> CloudEdge: will issue requests with
2019-05-30T08:15:13.439479> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:15:13.440496> CloudEdge: returned msg from server is 200
2019-05-30T08:15:13.441878> CloudEdge: entity exists
2019-05-30T08:15:13.442861> CloudEdge: check if measurement exits
2019-05-30T08:15:13.443646> CloudEdge: will issue requests with
2019-05-30T08:15:13.444404> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:15:13.445128> CloudEdge: returned msg from server is 200
2019-05-30T08:15:13.445842> CloudEdge: measurement exists
2019-05-30T08:15:13.446638> CloudEdge: will issue requests with
2019-05-30T08:15:13.447466> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:15:13.448221> data: {"value":97.07,"timestamp":"2019-05-30T08:15:09.184"}
2019-05-30T08:15:13.448967> CloudEdge: returned msg from server is 200
2019-05-30T08:15:13.449797> CloudEdge: upload success
2019-05-30T08:15:13.629290> --> cloud end
2019-05-30T08:15:13.629660> 
2019-05-30T08:16:11.247136> --- rxlora. dst=1 type=0x12 src=8 seq=24 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:16:11.247598> 2019-05-30T08:16:11.245707
2019-05-30T08:16:11.247967> rcv ctrl pkt info (^p): 1,18,8,24,14,5,-39
2019-05-30T08:16:11.248306> splitted in: [1, 18, 8, 24, 14, 5, -39]
2019-05-30T08:16:11.248620> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=24 len=14 SNR=5 RSSI=-39)
2019-05-30T08:16:11.248914> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:16:11.249198> splitted in: [125, 5, 12]
2019-05-30T08:16:11.249484> (BW=125 CR=5 SF=12)
2019-05-30T08:16:11.249765> rcv timestamp (^t): 2019-05-30T08:16:11.242
2019-05-30T08:16:11.250041> 
2019-05-30T08:16:11.250362> Got first framing byte
2019-05-30T08:16:11.250699> --> got LoRa data prefix
2019-05-30T08:16:11.251028> --> DATA with_appkey: read app key sequence
2019-05-30T08:16:11.252031> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:16:11.252525> app key disabled
2019-05-30T08:16:11.253130> valid app key: accept data
2019-05-30T08:16:11.253497> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:16:11.254081> python /app/data_acq/edgeCall.py "TC/96.94" "1,18,8,24,10,5,-39" "125,5,12" "2019-05-30T08:16:11.242" "B827EB4E30A8"
2019-05-30T08:16:15.269130> CloudEdge: uploading
2019-05-30T08:16:15.333463> CloudEdge: run under guest identity, all data is public
2019-05-30T08:16:15.333995> CloudEdge: check if entity exits
2019-05-30T08:16:15.334334> CloudEdge: will issue requests with
2019-05-30T08:16:15.334641> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:16:15.334928> CloudEdge: returned msg from server is 200
2019-05-30T08:16:15.335209> CloudEdge: entity exists
2019-05-30T08:16:15.335565> CloudEdge: check if measurement exits
2019-05-30T08:16:15.335860> CloudEdge: will issue requests with
2019-05-30T08:16:15.336148> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:16:15.336427> CloudEdge: returned msg from server is 200
2019-05-30T08:16:15.336874> CloudEdge: measurement exists
2019-05-30T08:16:15.337205> CloudEdge: will issue requests with
2019-05-30T08:16:15.337500> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:16:15.337788> data: {"value":96.94,"timestamp":"2019-05-30T08:16:11.242"}
2019-05-30T08:16:15.338070> CloudEdge: returned msg from server is 200
2019-05-30T08:16:15.338351> CloudEdge: upload success
2019-05-30T08:16:15.439943> --> cloud end
2019-05-30T08:16:15.440336> 
2019-05-30T08:17:13.305000> --- rxlora. dst=1 type=0x12 src=8 seq=25 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:17:13.305483> 2019-05-30T08:17:13.304551
2019-05-30T08:17:13.305816> rcv ctrl pkt info (^p): 1,18,8,25,14,5,-39
2019-05-30T08:17:13.306123> splitted in: [1, 18, 8, 25, 14, 5, -39]
2019-05-30T08:17:13.306411> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=25 len=14 SNR=5 RSSI=-39)
2019-05-30T08:17:13.306834> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:17:13.307342> splitted in: [125, 5, 12]
2019-05-30T08:17:13.307746> (BW=125 CR=5 SF=12)
2019-05-30T08:17:13.308170> rcv timestamp (^t): 2019-05-30T08:17:13.301
2019-05-30T08:17:13.308537> 
2019-05-30T08:17:13.308997> Got first framing byte
2019-05-30T08:17:13.309407> --> got LoRa data prefix
2019-05-30T08:17:13.309832> --> DATA with_appkey: read app key sequence
2019-05-30T08:17:13.310298> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:17:13.310755> app key disabled
2019-05-30T08:17:13.311231> valid app key: accept data
2019-05-30T08:17:13.311710> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:17:13.312133> python /app/data_acq/edgeCall.py "TC/97.07" "1,18,8,25,10,5,-39" "125,5,12" "2019-05-30T08:17:13.301" "B827EB4E30A8"
2019-05-30T08:17:17.735579> CloudEdge: uploading
2019-05-30T08:17:17.736408> CloudEdge: run under guest identity, all data is public
2019-05-30T08:17:17.737489> CloudEdge: check if entity exits
2019-05-30T08:17:17.738270> CloudEdge: will issue requests with
2019-05-30T08:17:17.738954> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:17:17.739662> CloudEdge: returned msg from server is 200
2019-05-30T08:17:17.740517> CloudEdge: entity exists
2019-05-30T08:17:17.741199> CloudEdge: check if measurement exits
2019-05-30T08:17:17.741855> CloudEdge: will issue requests with
2019-05-30T08:17:17.742481> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:17:17.743160> CloudEdge: returned msg from server is 200
2019-05-30T08:17:17.743784> CloudEdge: measurement exists
2019-05-30T08:17:17.744373> CloudEdge: will issue requests with
2019-05-30T08:17:17.744957> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:17:17.745539> data: {"value":97.07,"timestamp":"2019-05-30T08:17:13.301"}
2019-05-30T08:17:17.746107> CloudEdge: returned msg from server is 200
2019-05-30T08:17:17.746767> CloudEdge: upload success
2019-05-30T08:17:17.924331> --> cloud end
2019-05-30T08:17:17.924712> 
2019-05-30T08:18:15.366460> --- rxlora. dst=1 type=0x12 src=8 seq=26 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:18:15.367030> 2019-05-30T08:18:15.363618
2019-05-30T08:18:15.367376> rcv ctrl pkt info (^p): 1,18,8,26,14,6,-38
2019-05-30T08:18:15.367719> splitted in: [1, 18, 8, 26, 14, 6, -38]
2019-05-30T08:18:15.368026> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=26 len=14 SNR=6 RSSI=-38)
2019-05-30T08:18:15.368329> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:18:15.368627> splitted in: [125, 5, 12]
2019-05-30T08:18:15.368910> (BW=125 CR=5 SF=12)
2019-05-30T08:18:15.369193> rcv timestamp (^t): 2019-05-30T08:18:15.360
2019-05-30T08:18:15.369539> 
2019-05-30T08:18:15.369886> Got first framing byte
2019-05-30T08:18:15.370236> --> got LoRa data prefix
2019-05-30T08:18:15.370558> --> DATA with_appkey: read app key sequence
2019-05-30T08:18:15.370952> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:18:15.371315> app key disabled
2019-05-30T08:18:15.371665> valid app key: accept data
2019-05-30T08:18:15.372001> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:18:15.372349> python /app/data_acq/edgeCall.py "TC/96.94" "1,18,8,26,10,6,-38" "125,5,12" "2019-05-30T08:18:15.360" "B827EB4E30A8"
2019-05-30T08:18:19.594220> CloudEdge: uploading
2019-05-30T08:18:19.595099> CloudEdge: run under guest identity, all data is public
2019-05-30T08:18:19.595845> CloudEdge: check if entity exits
2019-05-30T08:18:19.596498> CloudEdge: will issue requests with
2019-05-30T08:18:19.597578> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:18:19.598367> CloudEdge: returned msg from server is 200
2019-05-30T08:18:19.599242> CloudEdge: entity exists
2019-05-30T08:18:19.600187> CloudEdge: check if measurement exits
2019-05-30T08:18:19.600968> CloudEdge: will issue requests with
2019-05-30T08:18:19.601772> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:18:19.602561> CloudEdge: returned msg from server is 200
2019-05-30T08:18:19.603344> CloudEdge: measurement exists
2019-05-30T08:18:19.604183> CloudEdge: will issue requests with
2019-05-30T08:18:19.605012> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:18:19.605763> data: {"value":96.94,"timestamp":"2019-05-30T08:18:15.360"}
2019-05-30T08:18:19.606513> CloudEdge: returned msg from server is 200
2019-05-30T08:18:19.607428> CloudEdge: upload success
2019-05-30T08:18:19.795767> --> cloud end
2019-05-30T08:18:19.796161> 
2019-05-30T08:18:58.377159> 2019-05-30 08:18:58.375936
2019-05-30T08:18:58.377918> post status: gw ON
2019-05-30T08:18:58.378510> post status: executing periodic tasks
2019-05-30T08:18:59.469108> no timezone support, time will be expressed only in local time
2019-05-30T08:18:59.469527> post status: start running
2019-05-30T08:19:00.507538> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:19:00.508079> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:19:00.508492> get_gps.py: invalid serial port
2019-05-30T08:19:00.646314> post status: dynamic GPS is requested
2019-05-30T08:19:00.646928> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:19:00.647400> post status get GPS: no GPS coordinates
2019-05-30T08:19:00.647818> post status: show current GPS position
2019-05-30T08:19:00.648172> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:19:00.648518> post status: exiting
2019-05-30T08:19:17.427354> --- rxlora. dst=1 type=0x12 src=8 seq=27 len=14 SNR=6 RSSIpkt=-37 BW=125 CR=4/5 SF=12
2019-05-30T08:19:17.427896> 2019-05-30T08:19:17.424177
2019-05-30T08:19:17.428324> rcv ctrl pkt info (^p): 1,18,8,27,14,6,-37
2019-05-30T08:19:17.428701> splitted in: [1, 18, 8, 27, 14, 6, -37]
2019-05-30T08:19:17.429127> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=27 len=14 SNR=6 RSSI=-37)
2019-05-30T08:19:17.429599> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:19:17.430022> splitted in: [125, 5, 12]
2019-05-30T08:19:17.430477> (BW=125 CR=5 SF=12)
2019-05-30T08:19:17.430917> rcv timestamp (^t): 2019-05-30T08:19:17.420
2019-05-30T08:19:17.431229> 
2019-05-30T08:19:17.431529> Got first framing byte
2019-05-30T08:19:17.431801> --> got LoRa data prefix
2019-05-30T08:19:17.432097> --> DATA with_appkey: read app key sequence
2019-05-30T08:19:17.432379> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:19:17.432657> app key disabled
2019-05-30T08:19:17.432956> valid app key: accept data
2019-05-30T08:19:17.433225> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:19:17.433728> python /app/data_acq/edgeCall.py "TC/96.81" "1,18,8,27,10,6,-37" "125,5,12" "2019-05-30T08:19:17.420" "B827EB4E30A8"
2019-05-30T08:19:21.690989> CloudEdge: uploading
2019-05-30T08:19:21.691865> CloudEdge: run under guest identity, all data is public
2019-05-30T08:19:21.692605> CloudEdge: check if entity exits
2019-05-30T08:19:21.693272> CloudEdge: will issue requests with
2019-05-30T08:19:21.693944> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:19:21.694600> CloudEdge: returned msg from server is 200
2019-05-30T08:19:21.695198> CloudEdge: entity exists
2019-05-30T08:19:21.695774> CloudEdge: check if measurement exits
2019-05-30T08:19:21.696356> CloudEdge: will issue requests with
2019-05-30T08:19:21.697151> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:19:21.697787> CloudEdge: returned msg from server is 200
2019-05-30T08:19:21.698382> CloudEdge: measurement exists
2019-05-30T08:19:21.698969> CloudEdge: will issue requests with
2019-05-30T08:19:21.699546> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:19:21.700129> data: {"value":96.81,"timestamp":"2019-05-30T08:19:17.420"}
2019-05-30T08:19:21.700717> CloudEdge: returned msg from server is 200
2019-05-30T08:19:21.701301> CloudEdge: upload success
2019-05-30T08:19:21.881793> --> cloud end
2019-05-30T08:19:21.882165> 
2019-05-30T08:19:37.944413> Low-level gw status ON
2019-05-30T08:20:19.487851> --- rxlora. dst=1 type=0x12 src=8 seq=28 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:20:19.490104> 2019-05-30T08:20:19.488098
2019-05-30T08:20:19.490466> rcv ctrl pkt info (^p): 1,18,8,28,14,6,-39
2019-05-30T08:20:19.490737> splitted in: [1, 18, 8, 28, 14, 6, -39]
2019-05-30T08:20:19.491005> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=28 len=14 SNR=6 RSSI=-39)
2019-05-30T08:20:19.491275> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:20:19.491541> splitted in: [125, 5, 12]
2019-05-30T08:20:19.491806> (BW=125 CR=5 SF=12)
2019-05-30T08:20:19.492073> rcv timestamp (^t): 2019-05-30T08:20:19.483
2019-05-30T08:20:19.492344> 
2019-05-30T08:20:19.492607> Got first framing byte
2019-05-30T08:20:19.492872> --> got LoRa data prefix
2019-05-30T08:20:19.493137> --> DATA with_appkey: read app key sequence
2019-05-30T08:20:19.493405> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:20:19.494759> app key disabled
2019-05-30T08:20:19.495438> valid app key: accept data
2019-05-30T08:20:19.495807> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:20:19.496119> python /app/data_acq/edgeCall.py "TC/96.81" "1,18,8,28,10,6,-39" "125,5,12" "2019-05-30T08:20:19.483" "B827EB4E30A8"
2019-05-30T08:20:23.701436> CloudEdge: uploading
2019-05-30T08:20:23.702847> CloudEdge: run under guest identity, all data is public
2019-05-30T08:20:23.704074> CloudEdge: check if entity exits
2019-05-30T08:20:23.704892> CloudEdge: will issue requests with
2019-05-30T08:20:23.705622> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:20:23.706658> CloudEdge: returned msg from server is 200
2019-05-30T08:20:23.707383> CloudEdge: entity exists
2019-05-30T08:20:23.708006> CloudEdge: check if measurement exits
2019-05-30T08:20:23.708627> CloudEdge: will issue requests with
2019-05-30T08:20:23.709235> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:20:23.709824> CloudEdge: returned msg from server is 200
2019-05-30T08:20:23.710647> CloudEdge: measurement exists
2019-05-30T08:20:23.711317> CloudEdge: will issue requests with
2019-05-30T08:20:23.711918> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:20:23.712505> data: {"value":96.81,"timestamp":"2019-05-30T08:20:19.483"}
2019-05-30T08:20:23.713083> CloudEdge: returned msg from server is 200
2019-05-30T08:20:23.713663> CloudEdge: upload success
2019-05-30T08:20:23.876093> --> cloud end
2019-05-30T08:20:23.876465> 
2019-05-30T08:21:21.550079> --- rxlora. dst=1 type=0x12 src=8 seq=29 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:21:21.550535> 2019-05-30T08:21:21.549674
2019-05-30T08:21:21.550865> rcv ctrl pkt info (^p): 1,18,8,29,14,6,-39
2019-05-30T08:21:21.551175> splitted in: [1, 18, 8, 29, 14, 6, -39]
2019-05-30T08:21:21.551461> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=29 len=14 SNR=6 RSSI=-39)
2019-05-30T08:21:21.551744> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:21:21.552018> splitted in: [125, 5, 12]
2019-05-30T08:21:21.552369> (BW=125 CR=5 SF=12)
2019-05-30T08:21:21.552689> rcv timestamp (^t): 2019-05-30T08:21:21.546
2019-05-30T08:21:21.552982> 
2019-05-30T08:21:21.553333> Got first framing byte
2019-05-30T08:21:21.553619> --> got LoRa data prefix
2019-05-30T08:21:21.553898> --> DATA with_appkey: read app key sequence
2019-05-30T08:21:21.554219> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:21:21.554566> app key disabled
2019-05-30T08:21:21.554922> valid app key: accept data
2019-05-30T08:21:21.555271> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:21:21.555607> python /app/data_acq/edgeCall.py "TC/96.87" "1,18,8,29,10,6,-39" "125,5,12" "2019-05-30T08:21:21.546" "B827EB4E30A8"
2019-05-30T08:21:25.955002> CloudEdge: uploading
2019-05-30T08:21:25.955815> CloudEdge: run under guest identity, all data is public
2019-05-30T08:21:25.956517> CloudEdge: check if entity exits
2019-05-30T08:21:25.957587> CloudEdge: will issue requests with
2019-05-30T08:21:25.958284> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:21:25.958917> CloudEdge: returned msg from server is 200
2019-05-30T08:21:25.959552> CloudEdge: entity exists
2019-05-30T08:21:25.960260> CloudEdge: check if measurement exits
2019-05-30T08:21:25.960890> CloudEdge: will issue requests with
2019-05-30T08:21:25.961528> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:21:25.962117> CloudEdge: returned msg from server is 200
2019-05-30T08:21:25.962694> CloudEdge: measurement exists
2019-05-30T08:21:25.963261> CloudEdge: will issue requests with
2019-05-30T08:21:25.963827> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:21:25.964386> data: {"value":96.87,"timestamp":"2019-05-30T08:21:21.546"}
2019-05-30T08:21:25.965034> CloudEdge: returned msg from server is 200
2019-05-30T08:21:25.965591> CloudEdge: upload success
2019-05-30T08:21:26.147779> --> cloud end
2019-05-30T08:21:26.148187> 
2019-05-30T08:22:23.616088> --- rxlora. dst=1 type=0x12 src=8 seq=30 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T08:22:23.616819> 2019-05-30T08:22:23.613138
2019-05-30T08:22:23.617238> rcv ctrl pkt info (^p): 1,18,8,30,14,6,-41
2019-05-30T08:22:23.617555> splitted in: [1, 18, 8, 30, 14, 6, -41]
2019-05-30T08:22:23.617912> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=30 len=14 SNR=6 RSSI=-41)
2019-05-30T08:22:23.618268> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:22:23.618619> splitted in: [125, 5, 12]
2019-05-30T08:22:23.618960> (BW=125 CR=5 SF=12)
2019-05-30T08:22:23.619362> rcv timestamp (^t): 2019-05-30T08:22:23.609
2019-05-30T08:22:23.619737> 
2019-05-30T08:22:23.620090> Got first framing byte
2019-05-30T08:22:23.620430> --> got LoRa data prefix
2019-05-30T08:22:23.620874> --> DATA with_appkey: read app key sequence
2019-05-30T08:22:23.621225> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:22:23.621697> app key disabled
2019-05-30T08:22:23.622077> valid app key: accept data
2019-05-30T08:22:23.622373> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:22:23.622747> python /app/data_acq/edgeCall.py "TC/96.68" "1,18,8,30,10,6,-41" "125,5,12" "2019-05-30T08:22:23.609" "B827EB4E30A8"
2019-05-30T08:22:27.791647> CloudEdge: uploading
2019-05-30T08:22:27.792498> CloudEdge: run under guest identity, all data is public
2019-05-30T08:22:27.793555> CloudEdge: check if entity exits
2019-05-30T08:22:27.794486> CloudEdge: will issue requests with
2019-05-30T08:22:27.795353> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:22:27.796222> CloudEdge: returned msg from server is 200
2019-05-30T08:22:27.797105> CloudEdge: entity exists
2019-05-30T08:22:27.797899> CloudEdge: check if measurement exits
2019-05-30T08:22:27.798668> CloudEdge: will issue requests with
2019-05-30T08:22:27.799399> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:22:27.800121> CloudEdge: returned msg from server is 200
2019-05-30T08:22:27.800878> CloudEdge: measurement exists
2019-05-30T08:22:27.801601> CloudEdge: will issue requests with
2019-05-30T08:22:27.802321> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:22:27.803046> data: {"value":96.68,"timestamp":"2019-05-30T08:22:23.609"}
2019-05-30T08:22:27.803773> CloudEdge: returned msg from server is 200
2019-05-30T08:22:27.804476> CloudEdge: upload success
2019-05-30T08:22:27.984578> --> cloud end
2019-05-30T08:22:27.984948> 
2019-05-30T08:23:25.677129> --- rxlora. dst=1 type=0x12 src=8 seq=31 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:23:25.677733> 2019-05-30T08:23:25.676198
2019-05-30T08:23:25.678213> rcv ctrl pkt info (^p): 1,18,8,31,14,6,-38
2019-05-30T08:23:25.678558> splitted in: [1, 18, 8, 31, 14, 6, -38]
2019-05-30T08:23:25.679015> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=31 len=14 SNR=6 RSSI=-38)
2019-05-30T08:23:25.679484> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:23:25.679865> splitted in: [125, 5, 12]
2019-05-30T08:23:25.680224> (BW=125 CR=5 SF=12)
2019-05-30T08:23:25.680600> rcv timestamp (^t): 2019-05-30T08:23:25.672
2019-05-30T08:23:25.680945> 
2019-05-30T08:23:25.681380> Got first framing byte
2019-05-30T08:23:25.681776> --> got LoRa data prefix
2019-05-30T08:23:25.682224> --> DATA with_appkey: read app key sequence
2019-05-30T08:23:25.682698> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:23:25.683191> app key disabled
2019-05-30T08:23:25.683623> valid app key: accept data
2019-05-30T08:23:25.684087> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:23:25.684494> python /app/data_acq/edgeCall.py "TC/96.74" "1,18,8,31,10,6,-38" "125,5,12" "2019-05-30T08:23:25.672" "B827EB4E30A8"
2019-05-30T08:23:29.858736> CloudEdge: uploading
2019-05-30T08:23:29.859611> CloudEdge: run under guest identity, all data is public
2019-05-30T08:23:29.860486> CloudEdge: check if entity exits
2019-05-30T08:23:29.861161> CloudEdge: will issue requests with
2019-05-30T08:23:29.861915> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:23:29.862583> CloudEdge: returned msg from server is 200
2019-05-30T08:23:29.863176> CloudEdge: entity exists
2019-05-30T08:23:29.863755> CloudEdge: check if measurement exits
2019-05-30T08:23:29.864341> CloudEdge: will issue requests with
2019-05-30T08:23:29.864921> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:23:29.865513> CloudEdge: returned msg from server is 200
2019-05-30T08:23:29.866087> CloudEdge: measurement exists
2019-05-30T08:23:29.867981> CloudEdge: will issue requests with
2019-05-30T08:23:29.873283> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:23:29.874160> data: {"value":96.74,"timestamp":"2019-05-30T08:23:25.672"}
2019-05-30T08:23:29.874821> CloudEdge: returned msg from server is 200
2019-05-30T08:23:29.875424> CloudEdge: upload success
2019-05-30T08:23:30.051859> --> cloud end
2019-05-30T08:23:30.052262> 
2019-05-30T08:24:27.742726> --- rxlora. dst=1 type=0x12 src=8 seq=32 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:24:27.743185> 2019-05-30T08:24:27.741071
2019-05-30T08:24:27.743524> rcv ctrl pkt info (^p): 1,18,8,32,14,5,-39
2019-05-30T08:24:27.743900> splitted in: [1, 18, 8, 32, 14, 5, -39]
2019-05-30T08:24:27.744213> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=32 len=14 SNR=5 RSSI=-39)
2019-05-30T08:24:27.744510> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:24:27.744819> splitted in: [125, 5, 12]
2019-05-30T08:24:27.745114> (BW=125 CR=5 SF=12)
2019-05-30T08:24:27.745402> rcv timestamp (^t): 2019-05-30T08:24:27.737
2019-05-30T08:24:27.745745> 
2019-05-30T08:24:27.746109> Got first framing byte
2019-05-30T08:24:27.746460> --> got LoRa data prefix
2019-05-30T08:24:27.747685> --> DATA with_appkey: read app key sequence
2019-05-30T08:24:27.749699> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:24:27.750815> app key disabled
2019-05-30T08:24:27.751911> valid app key: accept data
2019-05-30T08:24:27.752410> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:24:27.753597> python /app/data_acq/edgeCall.py "TC/96.74" "1,18,8,32,10,5,-39" "125,5,12" "2019-05-30T08:24:27.737" "B827EB4E30A8"
2019-05-30T08:24:31.923803> CloudEdge: uploading
2019-05-30T08:24:31.924537> CloudEdge: run under guest identity, all data is public
2019-05-30T08:24:31.925149> CloudEdge: check if entity exits
2019-05-30T08:24:31.925804> CloudEdge: will issue requests with
2019-05-30T08:24:31.926427> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:24:31.927768> CloudEdge: returned msg from server is 200
2019-05-30T08:24:31.940458> CloudEdge: entity exists
2019-05-30T08:24:31.941676> CloudEdge: check if measurement exits
2019-05-30T08:24:31.942717> CloudEdge: will issue requests with
2019-05-30T08:24:31.943699> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:24:31.944571> CloudEdge: returned msg from server is 200
2019-05-30T08:24:31.945401> CloudEdge: measurement exists
2019-05-30T08:24:31.946220> CloudEdge: will issue requests with
2019-05-30T08:24:31.947301> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:24:31.948236> data: {"value":96.74,"timestamp":"2019-05-30T08:24:27.737"}
2019-05-30T08:24:31.949051> CloudEdge: returned msg from server is 200
2019-05-30T08:24:31.949871> CloudEdge: upload success
2019-05-30T08:24:32.123375> --> cloud end
2019-05-30T08:24:32.123745> 
2019-05-30T08:25:29.807099> --- rxlora. dst=1 type=0x12 src=8 seq=33 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:25:29.807594> 2019-05-30T08:25:29.806352
2019-05-30T08:25:29.807985> rcv ctrl pkt info (^p): 1,18,8,33,14,6,-38
2019-05-30T08:25:29.808279> splitted in: [1, 18, 8, 33, 14, 6, -38]
2019-05-30T08:25:29.808557> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=33 len=14 SNR=6 RSSI=-38)
2019-05-30T08:25:29.808882> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:25:29.809214> splitted in: [125, 5, 12]
2019-05-30T08:25:29.809509> (BW=125 CR=5 SF=12)
2019-05-30T08:25:29.809790> rcv timestamp (^t): 2019-05-30T08:25:29.803
2019-05-30T08:25:29.810096> 
2019-05-30T08:25:29.810384> Got first framing byte
2019-05-30T08:25:29.810661> --> got LoRa data prefix
2019-05-30T08:25:29.810985> --> DATA with_appkey: read app key sequence
2019-05-30T08:25:29.811359> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:25:29.811703> app key disabled
2019-05-30T08:25:29.812034> valid app key: accept data
2019-05-30T08:25:29.818730> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:25:29.819537> python /app/data_acq/edgeCall.py "TC/96.74" "1,18,8,33,10,6,-38" "125,5,12" "2019-05-30T08:25:29.803" "B827EB4E30A8"
2019-05-30T08:25:33.988307> CloudEdge: uploading
2019-05-30T08:25:33.989178> CloudEdge: run under guest identity, all data is public
2019-05-30T08:25:33.989900> CloudEdge: check if entity exits
2019-05-30T08:25:33.990519> CloudEdge: will issue requests with
2019-05-30T08:25:33.991122> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:25:33.991727> CloudEdge: returned msg from server is 200
2019-05-30T08:25:33.992301> CloudEdge: entity exists
2019-05-30T08:25:33.992858> CloudEdge: check if measurement exits
2019-05-30T08:25:33.993409> CloudEdge: will issue requests with
2019-05-30T08:25:33.993963> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:25:33.994513> CloudEdge: returned msg from server is 200
2019-05-30T08:25:33.995061> CloudEdge: measurement exists
2019-05-30T08:25:33.995606> CloudEdge: will issue requests with
2019-05-30T08:25:33.996154> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:25:33.997226> data: {"value":96.74,"timestamp":"2019-05-30T08:25:29.803"}
2019-05-30T08:25:33.997974> CloudEdge: returned msg from server is 200
2019-05-30T08:25:33.998641> CloudEdge: upload success
2019-05-30T08:25:34.163379> --> cloud end
2019-05-30T08:25:34.163800> 
2019-05-30T08:26:31.873549> --- rxlora. dst=1 type=0x12 src=8 seq=34 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:26:31.874002> 2019-05-30T08:26:31.873146
2019-05-30T08:26:31.874328> rcv ctrl pkt info (^p): 1,18,8,34,14,6,-39
2019-05-30T08:26:31.874637> splitted in: [1, 18, 8, 34, 14, 6, -39]
2019-05-30T08:26:31.874923> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=34 len=14 SNR=6 RSSI=-39)
2019-05-30T08:26:31.875202> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:26:31.875487> splitted in: [125, 5, 12]
2019-05-30T08:26:31.875844> (BW=125 CR=5 SF=12)
2019-05-30T08:26:31.876159> rcv timestamp (^t): 2019-05-30T08:26:31.869
2019-05-30T08:26:31.876455> 
2019-05-30T08:26:31.877043> Got first framing byte
2019-05-30T08:26:31.877385> --> got LoRa data prefix
2019-05-30T08:26:31.877691> --> DATA with_appkey: read app key sequence
2019-05-30T08:26:31.878055> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:26:31.878399> app key disabled
2019-05-30T08:26:31.878760> valid app key: accept data
2019-05-30T08:26:31.879145> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:26:31.879567> python /app/data_acq/edgeCall.py "TC/96.81" "1,18,8,34,10,6,-39" "125,5,12" "2019-05-30T08:26:31.869" "B827EB4E30A8"
2019-05-30T08:26:36.023039> CloudEdge: uploading
2019-05-30T08:26:36.023752> CloudEdge: run under guest identity, all data is public
2019-05-30T08:26:36.024333> CloudEdge: check if entity exits
2019-05-30T08:26:36.025000> CloudEdge: will issue requests with
2019-05-30T08:26:36.025640> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:26:36.026250> CloudEdge: returned msg from server is 200
2019-05-30T08:26:36.027078> CloudEdge: entity exists
2019-05-30T08:26:36.027782> CloudEdge: check if measurement exits
2019-05-30T08:26:36.028411> CloudEdge: will issue requests with
2019-05-30T08:26:36.029003> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:26:36.029592> CloudEdge: returned msg from server is 200
2019-05-30T08:26:36.030168> CloudEdge: measurement exists
2019-05-30T08:26:36.030750> CloudEdge: will issue requests with
2019-05-30T08:26:36.031369> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:26:36.032066> data: {"value":96.81,"timestamp":"2019-05-30T08:26:31.869"}
2019-05-30T08:26:36.032700> CloudEdge: returned msg from server is 200
2019-05-30T08:26:36.033340> CloudEdge: upload success
2019-05-30T08:26:36.229227> --> cloud end
2019-05-30T08:26:36.229694> 
2019-05-30T08:27:33.942327> --- rxlora. dst=1 type=0x12 src=8 seq=35 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:27:33.942817> 2019-05-30T08:27:33.939343
2019-05-30T08:27:33.943160> rcv ctrl pkt info (^p): 1,18,8,35,14,5,-39
2019-05-30T08:27:33.943464> splitted in: [1, 18, 8, 35, 14, 5, -39]
2019-05-30T08:27:33.943753> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=35 len=14 SNR=5 RSSI=-39)
2019-05-30T08:27:33.944101> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:27:33.944454> splitted in: [125, 5, 12]
2019-05-30T08:27:33.944800> (BW=125 CR=5 SF=12)
2019-05-30T08:27:33.945135> rcv timestamp (^t): 2019-05-30T08:27:33.935
2019-05-30T08:27:33.945561> 
2019-05-30T08:27:33.945942> Got first framing byte
2019-05-30T08:27:33.946310> --> got LoRa data prefix
2019-05-30T08:27:33.946755> --> DATA with_appkey: read app key sequence
2019-05-30T08:27:33.947166> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:27:33.947506> app key disabled
2019-05-30T08:27:33.948066> valid app key: accept data
2019-05-30T08:27:33.948419> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:27:33.948783> python /app/data_acq/edgeCall.py "TC/96.55" "1,18,8,35,10,5,-39" "125,5,12" "2019-05-30T08:27:33.935" "B827EB4E30A8"
2019-05-30T08:27:38.385223> CloudEdge: uploading
2019-05-30T08:27:38.386015> CloudEdge: run under guest identity, all data is public
2019-05-30T08:27:38.386890> CloudEdge: check if entity exits
2019-05-30T08:27:38.387896> CloudEdge: will issue requests with
2019-05-30T08:27:38.388678> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:27:38.389384> CloudEdge: returned msg from server is 200
2019-05-30T08:27:38.390132> CloudEdge: entity exists
2019-05-30T08:27:38.390780> CloudEdge: check if measurement exits
2019-05-30T08:27:38.391400> CloudEdge: will issue requests with
2019-05-30T08:27:38.392012> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:27:38.392604> CloudEdge: returned msg from server is 200
2019-05-30T08:27:38.393188> CloudEdge: measurement exists
2019-05-30T08:27:38.393790> CloudEdge: will issue requests with
2019-05-30T08:27:38.394417> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:27:38.395009> data: {"value":96.55,"timestamp":"2019-05-30T08:27:33.935"}
2019-05-30T08:27:38.395591> CloudEdge: returned msg from server is 200
2019-05-30T08:27:38.396269> CloudEdge: upload success
2019-05-30T08:27:38.586129> --> cloud end
2019-05-30T08:27:38.586599> 
2019-05-30T08:28:36.007104> --- rxlora. dst=1 type=0x12 src=8 seq=36 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:28:36.007609> 2019-05-30T08:28:36.006346
2019-05-30T08:28:36.007978> rcv ctrl pkt info (^p): 1,18,8,36,14,6,-39
2019-05-30T08:28:36.008288> splitted in: [1, 18, 8, 36, 14, 6, -39]
2019-05-30T08:28:36.008574> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=36 len=14 SNR=6 RSSI=-39)
2019-05-30T08:28:36.008894> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:28:36.009245> splitted in: [125, 5, 12]
2019-05-30T08:28:36.009606> (BW=125 CR=5 SF=12)
2019-05-30T08:28:36.009900> rcv timestamp (^t): 2019-05-30T08:28:36.003
2019-05-30T08:28:36.010212> 
2019-05-30T08:28:36.010498> Got first framing byte
2019-05-30T08:28:36.010796> --> got LoRa data prefix
2019-05-30T08:28:36.011141> --> DATA with_appkey: read app key sequence
2019-05-30T08:28:36.011505> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:28:36.011853> app key disabled
2019-05-30T08:28:36.012204> valid app key: accept data
2019-05-30T08:28:36.012597> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:28:36.013035> python /app/data_acq/edgeCall.py "TC/96.62" "1,18,8,36,10,6,-39" "125,5,12" "2019-05-30T08:28:36.003" "B827EB4E30A8"
2019-05-30T08:28:40.140854> CloudEdge: uploading
2019-05-30T08:28:40.141719> CloudEdge: run under guest identity, all data is public
2019-05-30T08:28:40.142489> CloudEdge: check if entity exits
2019-05-30T08:28:40.143185> CloudEdge: will issue requests with
2019-05-30T08:28:40.144215> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:28:40.144956> CloudEdge: returned msg from server is 200
2019-05-30T08:28:40.145597> CloudEdge: entity exists
2019-05-30T08:28:40.146187> CloudEdge: check if measurement exits
2019-05-30T08:28:40.146999> CloudEdge: will issue requests with
2019-05-30T08:28:40.147659> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:28:40.148267> CloudEdge: returned msg from server is 200
2019-05-30T08:28:40.148859> CloudEdge: measurement exists
2019-05-30T08:28:40.149450> CloudEdge: will issue requests with
2019-05-30T08:28:40.150031> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:28:40.150607> data: {"value":96.62,"timestamp":"2019-05-30T08:28:36.003"}
2019-05-30T08:28:40.151175> CloudEdge: returned msg from server is 200
2019-05-30T08:28:40.152016> CloudEdge: upload success
2019-05-30T08:28:40.329293> --> cloud end
2019-05-30T08:28:40.329733> 
2019-05-30T08:29:00.816865> 2019-05-30 08:29:00.815621
2019-05-30T08:29:00.817625> post status: gw ON
2019-05-30T08:29:00.818228> post status: executing periodic tasks
2019-05-30T08:29:01.907166> no timezone support, time will be expressed only in local time
2019-05-30T08:29:01.907622> post status: start running
2019-05-30T08:29:02.915788> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:29:02.916270> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:29:02.924944> get_gps.py: invalid serial port
2019-05-30T08:29:03.054354> post status: dynamic GPS is requested
2019-05-30T08:29:03.055052> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:29:03.055663> post status get GPS: no GPS coordinates
2019-05-30T08:29:03.056256> post status: show current GPS position
2019-05-30T08:29:03.057057> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:29:03.057678> post status: exiting
2019-05-30T08:29:38.075895> --- rxlora. dst=1 type=0x12 src=8 seq=37 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:29:38.076799> 2019-05-30T08:29:38.075421
2019-05-30T08:29:38.077539> rcv ctrl pkt info (^p): 1,18,8,37,14,6,-38
2019-05-30T08:29:38.078098> splitted in: [1, 18, 8, 37, 14, 6, -38]
2019-05-30T08:29:38.078783> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=37 len=14 SNR=6 RSSI=-38)
2019-05-30T08:29:38.079302> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:29:38.079759> splitted in: [125, 5, 12]
2019-05-30T08:29:38.080107> (BW=125 CR=5 SF=12)
2019-05-30T08:29:38.080407> rcv timestamp (^t): 2019-05-30T08:29:38.071
2019-05-30T08:29:38.080736> 
2019-05-30T08:29:38.081163> Got first framing byte
2019-05-30T08:29:38.081528> --> got LoRa data prefix
2019-05-30T08:29:38.081866> --> DATA with_appkey: read app key sequence
2019-05-30T08:29:38.082254> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:29:38.082630> app key disabled
2019-05-30T08:29:38.083026> valid app key: accept data
2019-05-30T08:29:38.083381> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:29:38.083791> python /app/data_acq/edgeCall.py "TC/96.55" "1,18,8,37,10,6,-38" "125,5,12" "2019-05-30T08:29:38.071" "B827EB4E30A8"
2019-05-30T08:29:42.490853> CloudEdge: uploading
2019-05-30T08:29:42.491421> CloudEdge: run under guest identity, all data is public
2019-05-30T08:29:42.491811> CloudEdge: check if entity exits
2019-05-30T08:29:42.492128> CloudEdge: will issue requests with
2019-05-30T08:29:42.492427> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:29:42.492726> CloudEdge: returned msg from server is 200
2019-05-30T08:29:42.493021> CloudEdge: entity exists
2019-05-30T08:29:42.493318> CloudEdge: check if measurement exits
2019-05-30T08:29:42.493608> CloudEdge: will issue requests with
2019-05-30T08:29:42.493895> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:29:42.494176> CloudEdge: returned msg from server is 200
2019-05-30T08:29:42.494454> CloudEdge: measurement exists
2019-05-30T08:29:42.494729> CloudEdge: will issue requests with
2019-05-30T08:29:42.495017> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:29:42.495297> data: {"value":96.55,"timestamp":"2019-05-30T08:29:38.071"}
2019-05-30T08:29:42.495575> CloudEdge: returned msg from server is 200
2019-05-30T08:29:42.495854> CloudEdge: upload success
2019-05-30T08:29:42.664159> --> cloud end
2019-05-30T08:29:42.664608> 
2019-05-30T08:29:58.599665> Low-level gw status ON
2019-05-30T08:30:40.144386> --- rxlora. dst=1 type=0x12 src=8 seq=38 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:30:40.144827> 2019-05-30T08:30:40.143977
2019-05-30T08:30:40.145203> rcv ctrl pkt info (^p): 1,18,8,38,14,6,-39
2019-05-30T08:30:40.145518> splitted in: [1, 18, 8, 38, 14, 6, -39]
2019-05-30T08:30:40.145804> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=38 len=14 SNR=6 RSSI=-39)
2019-05-30T08:30:40.146085> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:30:40.146393> splitted in: [125, 5, 12]
2019-05-30T08:30:40.146969> (BW=125 CR=5 SF=12)
2019-05-30T08:30:40.147462> rcv timestamp (^t): 2019-05-30T08:30:40.140
2019-05-30T08:30:40.147983> 
2019-05-30T08:30:40.149325> Got first framing byte
2019-05-30T08:30:40.150265> --> got LoRa data prefix
2019-05-30T08:30:40.150935> --> DATA with_appkey: read app key sequence
2019-05-30T08:30:40.151534> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:30:40.152261> app key disabled
2019-05-30T08:30:40.152850> valid app key: accept data
2019-05-30T08:30:40.153433> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:30:40.153884> python /app/data_acq/edgeCall.py "TC/96.55" "1,18,8,38,10,6,-39" "125,5,12" "2019-05-30T08:30:40.140" "B827EB4E30A8"
2019-05-30T08:30:44.547905> CloudEdge: uploading
2019-05-30T08:30:44.548670> CloudEdge: run under guest identity, all data is public
2019-05-30T08:30:44.549412> CloudEdge: check if entity exits
2019-05-30T08:30:44.550163> CloudEdge: will issue requests with
2019-05-30T08:30:44.550876> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:30:44.551553> CloudEdge: returned msg from server is 200
2019-05-30T08:30:44.552212> CloudEdge: entity exists
2019-05-30T08:30:44.552879> CloudEdge: check if measurement exits
2019-05-30T08:30:44.553549> CloudEdge: will issue requests with
2019-05-30T08:30:44.554212> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:30:44.554851> CloudEdge: returned msg from server is 200
2019-05-30T08:30:44.555470> CloudEdge: measurement exists
2019-05-30T08:30:44.556060> CloudEdge: will issue requests with
2019-05-30T08:30:44.556719> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:30:44.557354> data: {"value":96.55,"timestamp":"2019-05-30T08:30:40.140"}
2019-05-30T08:30:44.557949> CloudEdge: returned msg from server is 200
2019-05-30T08:30:44.558622> CloudEdge: upload success
2019-05-30T08:30:44.750277> --> cloud end
2019-05-30T08:30:44.750642> 
2019-05-30T08:31:42.217377> --- rxlora. dst=1 type=0x12 src=8 seq=39 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:31:42.217935> 2019-05-30T08:31:42.214217
2019-05-30T08:31:42.279175> rcv ctrl pkt info (^p): 1,18,8,39,14,6,-39
2019-05-30T08:31:42.279518> splitted in: [1, 18, 8, 39, 14, 6, -39]
2019-05-30T08:31:42.279788> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=39 len=14 SNR=6 RSSI=-39)
2019-05-30T08:31:42.280059> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:31:42.280327> splitted in: [125, 5, 12]
2019-05-30T08:31:42.280593> (BW=125 CR=5 SF=12)
2019-05-30T08:31:42.280857> rcv timestamp (^t): 2019-05-30T08:31:42.210
2019-05-30T08:31:42.281122> 
2019-05-30T08:31:42.281401> Got first framing byte
2019-05-30T08:31:42.281694> --> got LoRa data prefix
2019-05-30T08:31:42.281978> --> DATA with_appkey: read app key sequence
2019-05-30T08:31:42.282299> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:31:42.282626> app key disabled
2019-05-30T08:31:42.282911> valid app key: accept data
2019-05-30T08:31:42.283200> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:31:42.283487> python /app/data_acq/edgeCall.py "TC/96.55" "1,18,8,39,10,6,-39" "125,5,12" "2019-05-30T08:31:42.210" "B827EB4E30A8"
2019-05-30T08:31:46.606212> CloudEdge: uploading
2019-05-30T08:31:46.607687> CloudEdge: run under guest identity, all data is public
2019-05-30T08:31:46.608814> CloudEdge: check if entity exits
2019-05-30T08:31:46.609918> CloudEdge: will issue requests with
2019-05-30T08:31:46.611173> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:31:46.612174> CloudEdge: returned msg from server is 200
2019-05-30T08:31:46.613130> CloudEdge: entity exists
2019-05-30T08:31:46.614085> CloudEdge: check if measurement exits
2019-05-30T08:31:46.615004> CloudEdge: will issue requests with
2019-05-30T08:31:46.615945> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:31:46.616974> CloudEdge: returned msg from server is 200
2019-05-30T08:31:46.617944> CloudEdge: measurement exists
2019-05-30T08:31:46.618994> CloudEdge: will issue requests with
2019-05-30T08:31:46.619954> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:31:46.620902> data: {"value":96.55,"timestamp":"2019-05-30T08:31:42.210"}
2019-05-30T08:31:46.621837> CloudEdge: returned msg from server is 200
2019-05-30T08:31:46.622835> CloudEdge: upload success
2019-05-30T08:31:46.807778> --> cloud end
2019-05-30T08:31:46.808185> 
2019-05-30T08:32:44.287217> --- rxlora. dst=1 type=0x12 src=8 seq=40 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:32:44.287693> 2019-05-30T08:32:44.285430
2019-05-30T08:32:44.288008> rcv ctrl pkt info (^p): 1,18,8,40,14,6,-38
2019-05-30T08:32:44.288360> splitted in: [1, 18, 8, 40, 14, 6, -38]
2019-05-30T08:32:44.288704> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=40 len=14 SNR=6 RSSI=-38)
2019-05-30T08:32:44.289018> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:32:44.289322> splitted in: [125, 5, 12]
2019-05-30T08:32:44.289616> (BW=125 CR=5 SF=12)
2019-05-30T08:32:44.289906> rcv timestamp (^t): 2019-05-30T08:32:44.282
2019-05-30T08:32:44.290207> 
2019-05-30T08:32:44.290542> Got first framing byte
2019-05-30T08:32:44.290875> --> got LoRa data prefix
2019-05-30T08:32:44.291211> --> DATA with_appkey: read app key sequence
2019-05-30T08:32:44.291566> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:32:44.291953> app key disabled
2019-05-30T08:32:44.292311> valid app key: accept data
2019-05-30T08:32:44.292872> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:32:44.293304> python /app/data_acq/edgeCall.py "TC/96.49" "1,18,8,40,10,6,-38" "125,5,12" "2019-05-30T08:32:44.282" "B827EB4E30A8"
2019-05-30T08:32:48.449784> CloudEdge: uploading
2019-05-30T08:32:48.450490> CloudEdge: run under guest identity, all data is public
2019-05-30T08:32:48.451237> CloudEdge: check if entity exits
2019-05-30T08:32:48.451843> CloudEdge: will issue requests with
2019-05-30T08:32:48.452394> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:32:48.452920> CloudEdge: returned msg from server is 200
2019-05-30T08:32:48.453403> CloudEdge: entity exists
2019-05-30T08:32:48.453856> CloudEdge: check if measurement exits
2019-05-30T08:32:48.454328> CloudEdge: will issue requests with
2019-05-30T08:32:48.455006> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:32:48.455549> CloudEdge: returned msg from server is 200
2019-05-30T08:32:48.456033> CloudEdge: measurement exists
2019-05-30T08:32:48.458088> CloudEdge: will issue requests with
2019-05-30T08:32:48.458901> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:32:48.459492> data: {"value":96.49,"timestamp":"2019-05-30T08:32:44.282"}
2019-05-30T08:32:48.460039> CloudEdge: returned msg from server is 200
2019-05-30T08:32:48.460543> CloudEdge: upload success
2019-05-30T08:32:48.616241> --> cloud end
2019-05-30T08:32:48.616712> 
2019-05-30T08:33:46.359271> --- rxlora. dst=1 type=0x12 src=8 seq=41 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:33:46.359742> 2019-05-30T08:33:46.358637
2019-05-30T08:33:46.360123> rcv ctrl pkt info (^p): 1,18,8,41,14,6,-39
2019-05-30T08:33:46.360421> splitted in: [1, 18, 8, 41, 14, 6, -39]
2019-05-30T08:33:46.360704> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=41 len=14 SNR=6 RSSI=-39)
2019-05-30T08:33:46.360989> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:33:46.361374> splitted in: [125, 5, 12]
2019-05-30T08:33:46.361763> (BW=125 CR=5 SF=12)
2019-05-30T08:33:46.362068> rcv timestamp (^t): 2019-05-30T08:33:46.355
2019-05-30T08:33:46.362378> 
2019-05-30T08:33:46.362671> Got first framing byte
2019-05-30T08:33:46.362958> --> got LoRa data prefix
2019-05-30T08:33:46.363286> --> DATA with_appkey: read app key sequence
2019-05-30T08:33:46.363644> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:33:46.363997> app key disabled
2019-05-30T08:33:46.364409> valid app key: accept data
2019-05-30T08:33:46.364812> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:33:46.365181> python /app/data_acq/edgeCall.py "TC/96.42" "1,18,8,41,10,6,-39" "125,5,12" "2019-05-30T08:33:46.355" "B827EB4E30A8"
2019-05-30T08:33:50.709505> CloudEdge: uploading
2019-05-30T08:33:50.710099> CloudEdge: run under guest identity, all data is public
2019-05-30T08:33:50.710497> CloudEdge: check if entity exits
2019-05-30T08:33:50.710823> CloudEdge: will issue requests with
2019-05-30T08:33:50.711132> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:33:50.711431> CloudEdge: returned msg from server is 200
2019-05-30T08:33:50.711733> CloudEdge: entity exists
2019-05-30T08:33:50.712030> CloudEdge: check if measurement exits
2019-05-30T08:33:50.712326> CloudEdge: will issue requests with
2019-05-30T08:33:50.712615> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:33:50.712902> CloudEdge: returned msg from server is 200
2019-05-30T08:33:50.713187> CloudEdge: measurement exists
2019-05-30T08:33:50.713465> CloudEdge: will issue requests with
2019-05-30T08:33:50.713818> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:33:50.714126> data: {"value":96.42,"timestamp":"2019-05-30T08:33:46.355"}
2019-05-30T08:33:50.714420> CloudEdge: returned msg from server is 200
2019-05-30T08:33:50.714703> CloudEdge: upload success
2019-05-30T08:33:50.872443> --> cloud end
2019-05-30T08:33:50.872807> 
2019-05-30T08:34:48.434655> --- rxlora. dst=1 type=0x12 src=8 seq=42 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:34:48.435118> 2019-05-30T08:34:48.431752
2019-05-30T08:34:48.435434> rcv ctrl pkt info (^p): 1,18,8,42,14,6,-38
2019-05-30T08:34:48.435773> splitted in: [1, 18, 8, 42, 14, 6, -38]
2019-05-30T08:34:48.436061> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=42 len=14 SNR=6 RSSI=-38)
2019-05-30T08:34:48.436377> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:34:48.436905> splitted in: [125, 5, 12]
2019-05-30T08:34:48.437320> (BW=125 CR=5 SF=12)
2019-05-30T08:34:48.437645> rcv timestamp (^t): 2019-05-30T08:34:48.428
2019-05-30T08:34:48.438038> 
2019-05-30T08:34:48.438403> Got first framing byte
2019-05-30T08:34:48.438750> --> got LoRa data prefix
2019-05-30T08:34:48.439080> --> DATA with_appkey: read app key sequence
2019-05-30T08:34:48.439421> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:34:48.439744> app key disabled
2019-05-30T08:34:48.440183> valid app key: accept data
2019-05-30T08:34:48.440582> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:34:48.440878> python /app/data_acq/edgeCall.py "TC/96.42" "1,18,8,42,10,6,-38" "125,5,12" "2019-05-30T08:34:48.428" "B827EB4E30A8"
2019-05-30T08:34:52.767585> CloudEdge: uploading
2019-05-30T08:34:52.768399> CloudEdge: run under guest identity, all data is public
2019-05-30T08:34:52.769102> CloudEdge: check if entity exits
2019-05-30T08:34:52.769726> CloudEdge: will issue requests with
2019-05-30T08:34:52.770357> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:34:52.771094> CloudEdge: returned msg from server is 200
2019-05-30T08:34:52.771798> CloudEdge: entity exists
2019-05-30T08:34:52.772906> CloudEdge: check if measurement exits
2019-05-30T08:34:52.773777> CloudEdge: will issue requests with
2019-05-30T08:34:52.774426> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:34:52.775035> CloudEdge: returned msg from server is 200
2019-05-30T08:34:52.775637> CloudEdge: measurement exists
2019-05-30T08:34:52.776228> CloudEdge: will issue requests with
2019-05-30T08:34:52.777172> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:34:52.777874> data: {"value":96.42,"timestamp":"2019-05-30T08:34:48.428"}
2019-05-30T08:34:52.778493> CloudEdge: returned msg from server is 200
2019-05-30T08:34:52.779084> CloudEdge: upload success
2019-05-30T08:34:52.996662> --> cloud end
2019-05-30T08:34:52.997114> 
2019-05-30T08:35:50.507115> --- rxlora. dst=1 type=0x12 src=8 seq=43 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:35:50.507592> 2019-05-30T08:35:50.506405
2019-05-30T08:35:50.507931> rcv ctrl pkt info (^p): 1,18,8,43,14,6,-38
2019-05-30T08:35:50.508221> splitted in: [1, 18, 8, 43, 14, 6, -38]
2019-05-30T08:35:50.508503> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=43 len=14 SNR=6 RSSI=-38)
2019-05-30T08:35:50.508787> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:35:50.509090> splitted in: [125, 5, 12]
2019-05-30T08:35:50.509371> (BW=125 CR=5 SF=12)
2019-05-30T08:35:50.509640> rcv timestamp (^t): 2019-05-30T08:35:50.503
2019-05-30T08:35:50.509907> 
2019-05-30T08:35:50.510175> Got first framing byte
2019-05-30T08:35:50.510440> --> got LoRa data prefix
2019-05-30T08:35:50.510705> --> DATA with_appkey: read app key sequence
2019-05-30T08:35:50.510971> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:35:50.511242> app key disabled
2019-05-30T08:35:50.511566> valid app key: accept data
2019-05-30T08:35:50.511830> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:35:50.512097> python /app/data_acq/edgeCall.py "TC/96.36" "1,18,8,43,10,6,-38" "125,5,12" "2019-05-30T08:35:50.503" "B827EB4E30A8"
2019-05-30T08:35:54.613963> CloudEdge: uploading
2019-05-30T08:35:54.614893> CloudEdge: run under guest identity, all data is public
2019-05-30T08:35:54.615644> CloudEdge: check if entity exits
2019-05-30T08:35:54.616302> CloudEdge: will issue requests with
2019-05-30T08:35:54.617622> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:35:54.618404> CloudEdge: returned msg from server is 200
2019-05-30T08:35:54.619107> CloudEdge: entity exists
2019-05-30T08:35:54.619701> CloudEdge: check if measurement exits
2019-05-30T08:35:54.620278> CloudEdge: will issue requests with
2019-05-30T08:35:54.620851> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:35:54.621424> CloudEdge: returned msg from server is 200
2019-05-30T08:35:54.621997> CloudEdge: measurement exists
2019-05-30T08:35:54.622563> CloudEdge: will issue requests with
2019-05-30T08:35:54.623135> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:35:54.623708> data: {"value":96.36,"timestamp":"2019-05-30T08:35:50.503"}
2019-05-30T08:35:54.624280> CloudEdge: returned msg from server is 200
2019-05-30T08:35:54.624852> CloudEdge: upload success
2019-05-30T08:35:54.807061> --> cloud end
2019-05-30T08:35:54.807456> 
2019-05-30T08:36:52.585186> --- rxlora. dst=1 type=0x12 src=8 seq=44 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:36:52.585643> 2019-05-30T08:36:52.582290
2019-05-30T08:36:52.585956> rcv ctrl pkt info (^p): 1,18,8,44,14,6,-39
2019-05-30T08:36:52.586242> splitted in: [1, 18, 8, 44, 14, 6, -39]
2019-05-30T08:36:52.586524> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=44 len=14 SNR=6 RSSI=-39)
2019-05-30T08:36:52.587096> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:36:52.587451> splitted in: [125, 5, 12]
2019-05-30T08:36:52.587806> (BW=125 CR=5 SF=12)
2019-05-30T08:36:52.588157> rcv timestamp (^t): 2019-05-30T08:36:52.579
2019-05-30T08:36:52.588543> 
2019-05-30T08:36:52.588903> Got first framing byte
2019-05-30T08:36:52.589276> --> got LoRa data prefix
2019-05-30T08:36:52.589617> --> DATA with_appkey: read app key sequence
2019-05-30T08:36:52.589954> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:36:52.590311> app key disabled
2019-05-30T08:36:52.590787> valid app key: accept data
2019-05-30T08:36:52.591118> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:36:52.591453> python /app/data_acq/edgeCall.py "TC/96.36" "1,18,8,44,10,6,-39" "125,5,12" "2019-05-30T08:36:52.579" "B827EB4E30A8"
2019-05-30T08:36:56.876649> CloudEdge: uploading
2019-05-30T08:36:56.877722> CloudEdge: run under guest identity, all data is public
2019-05-30T08:36:56.878652> CloudEdge: check if entity exits
2019-05-30T08:36:56.879506> CloudEdge: will issue requests with
2019-05-30T08:36:56.880372> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:36:56.881154> CloudEdge: returned msg from server is 200
2019-05-30T08:36:56.881883> CloudEdge: entity exists
2019-05-30T08:36:56.882610> CloudEdge: check if measurement exits
2019-05-30T08:36:56.883333> CloudEdge: will issue requests with
2019-05-30T08:36:56.884040> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:36:56.884756> CloudEdge: returned msg from server is 200
2019-05-30T08:36:56.885467> CloudEdge: measurement exists
2019-05-30T08:36:56.886156> CloudEdge: will issue requests with
2019-05-30T08:36:56.886932> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:36:56.887674> data: {"value":96.36,"timestamp":"2019-05-30T08:36:52.579"}
2019-05-30T08:36:56.888375> CloudEdge: returned msg from server is 200
2019-05-30T08:36:56.889074> CloudEdge: upload success
2019-05-30T08:36:57.071795> --> cloud end
2019-05-30T08:36:57.072169> 
2019-05-30T08:37:54.662278> --- rxlora. dst=1 type=0x12 src=8 seq=45 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:37:54.662756> 2019-05-30T08:37:54.659334
2019-05-30T08:37:54.663079> rcv ctrl pkt info (^p): 1,18,8,45,14,6,-39
2019-05-30T08:37:54.663386> splitted in: [1, 18, 8, 45, 14, 6, -39]
2019-05-30T08:37:54.663677> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=45 len=14 SNR=6 RSSI=-39)
2019-05-30T08:37:54.664009> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:37:54.664348> splitted in: [125, 5, 12]
2019-05-30T08:37:54.664707> (BW=125 CR=5 SF=12)
2019-05-30T08:37:54.665087> rcv timestamp (^t): 2019-05-30T08:37:54.655
2019-05-30T08:37:54.665484> 
2019-05-30T08:37:54.665863> Got first framing byte
2019-05-30T08:37:54.666224> --> got LoRa data prefix
2019-05-30T08:37:54.666700> --> DATA with_appkey: read app key sequence
2019-05-30T08:37:54.667145> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:37:54.667553> app key disabled
2019-05-30T08:37:54.668028> valid app key: accept data
2019-05-30T08:37:54.668378> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:37:54.668695> python /app/data_acq/edgeCall.py "TC/96.29" "1,18,8,45,10,6,-39" "125,5,12" "2019-05-30T08:37:54.655" "B827EB4E30A8"
2019-05-30T08:37:59.340488> CloudEdge: uploading
2019-05-30T08:37:59.341348> CloudEdge: run under guest identity, all data is public
2019-05-30T08:37:59.342078> CloudEdge: check if entity exits
2019-05-30T08:37:59.342720> CloudEdge: will issue requests with
2019-05-30T08:37:59.343357> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:37:59.344085> CloudEdge: returned msg from server is 200
2019-05-30T08:37:59.344848> CloudEdge: entity exists
2019-05-30T08:37:59.345509> CloudEdge: check if measurement exits
2019-05-30T08:37:59.346141> CloudEdge: will issue requests with
2019-05-30T08:37:59.346858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:37:59.347529> CloudEdge: returned msg from server is 200
2019-05-30T08:37:59.348158> CloudEdge: measurement exists
2019-05-30T08:37:59.348767> CloudEdge: will issue requests with
2019-05-30T08:37:59.349383> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:37:59.349991> data: {"value":96.29,"timestamp":"2019-05-30T08:37:54.655"}
2019-05-30T08:37:59.350603> CloudEdge: returned msg from server is 200
2019-05-30T08:37:59.351215> CloudEdge: upload success
2019-05-30T08:37:59.542120> --> cloud end
2019-05-30T08:37:59.542677> 
2019-05-30T08:38:56.737710> --- rxlora. dst=1 type=0x12 src=8 seq=46 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:38:56.738283> 2019-05-30T08:38:56.736829
2019-05-30T08:38:56.738647> rcv ctrl pkt info (^p): 1,18,8,46,14,6,-40
2019-05-30T08:38:56.738947> splitted in: [1, 18, 8, 46, 14, 6, -40]
2019-05-30T08:38:56.739240> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=46 len=14 SNR=6 RSSI=-40)
2019-05-30T08:38:56.739546> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:38:56.739824> splitted in: [125, 5, 12]
2019-05-30T08:38:56.740091> (BW=125 CR=5 SF=12)
2019-05-30T08:38:56.740359> rcv timestamp (^t): 2019-05-30T08:38:56.733
2019-05-30T08:38:56.740628> 
2019-05-30T08:38:56.740896> Got first framing byte
2019-05-30T08:38:56.741162> --> got LoRa data prefix
2019-05-30T08:38:56.741426> --> DATA with_appkey: read app key sequence
2019-05-30T08:38:56.741694> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:38:56.744598> app key disabled
2019-05-30T08:38:56.746090> valid app key: accept data
2019-05-30T08:38:56.746850> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:38:56.747421> python /app/data_acq/edgeCall.py "TC/96.29" "1,18,8,46,10,6,-40" "125,5,12" "2019-05-30T08:38:56.733" "B827EB4E30A8"
2019-05-30T08:39:01.085146> CloudEdge: uploading
2019-05-30T08:39:01.085817> CloudEdge: run under guest identity, all data is public
2019-05-30T08:39:01.086381> CloudEdge: check if entity exits
2019-05-30T08:39:01.087143> CloudEdge: will issue requests with
2019-05-30T08:39:01.087870> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:39:01.088509> CloudEdge: returned msg from server is 200
2019-05-30T08:39:01.089112> CloudEdge: entity exists
2019-05-30T08:39:01.089711> CloudEdge: check if measurement exits
2019-05-30T08:39:01.090319> CloudEdge: will issue requests with
2019-05-30T08:39:01.090890> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:39:01.091443> CloudEdge: returned msg from server is 200
2019-05-30T08:39:01.092083> CloudEdge: measurement exists
2019-05-30T08:39:01.092637> CloudEdge: will issue requests with
2019-05-30T08:39:01.093196> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:39:01.093756> data: {"value":96.29,"timestamp":"2019-05-30T08:38:56.733"}
2019-05-30T08:39:01.094319> CloudEdge: returned msg from server is 200
2019-05-30T08:39:01.094872> CloudEdge: upload success
2019-05-30T08:39:01.297167> --> cloud end
2019-05-30T08:39:01.297565> 
2019-05-30T08:39:03.227044> 2019-05-30 08:39:03.225840
2019-05-30T08:39:03.227811> post status: gw ON
2019-05-30T08:39:03.228441> post status: executing periodic tasks
2019-05-30T08:39:04.281158> no timezone support, time will be expressed only in local time
2019-05-30T08:39:04.281574> post status: start running
2019-05-30T08:39:05.432827> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:39:05.433382> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:39:05.433816> get_gps.py: invalid serial port
2019-05-30T08:39:05.573798> post status: dynamic GPS is requested
2019-05-30T08:39:05.574257> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:39:05.574758> post status get GPS: no GPS coordinates
2019-05-30T08:39:05.575119> post status: show current GPS position
2019-05-30T08:39:05.575485> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:39:05.575819> post status: exiting
2019-05-30T08:39:58.817051> --- rxlora. dst=1 type=0x12 src=8 seq=47 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:39:58.817629> 2019-05-30T08:39:58.816642
2019-05-30T08:39:58.817963> rcv ctrl pkt info (^p): 1,18,8,47,14,6,-40
2019-05-30T08:39:58.818276> splitted in: [1, 18, 8, 47, 14, 6, -40]
2019-05-30T08:39:58.818591> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=47 len=14 SNR=6 RSSI=-40)
2019-05-30T08:39:58.818934> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:39:58.819210> splitted in: [125, 5, 12]
2019-05-30T08:39:58.819518> (BW=125 CR=5 SF=12)
2019-05-30T08:39:58.819874> rcv timestamp (^t): 2019-05-30T08:39:58.810
2019-05-30T08:39:58.820182> 
2019-05-30T08:39:58.820462> Got first framing byte
2019-05-30T08:39:58.820749> --> got LoRa data prefix
2019-05-30T08:39:58.821027> --> DATA with_appkey: read app key sequence
2019-05-30T08:39:58.821304> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:39:58.821634> app key disabled
2019-05-30T08:39:58.821975> valid app key: accept data
2019-05-30T08:39:58.822321> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:39:58.822650> python /app/data_acq/edgeCall.py "TC/96.29" "1,18,8,47,10,6,-40" "125,5,12" "2019-05-30T08:39:58.810" "B827EB4E30A8"
2019-05-30T08:40:03.349746> CloudEdge: uploading
2019-05-30T08:40:03.350473> CloudEdge: run under guest identity, all data is public
2019-05-30T08:40:03.351752> CloudEdge: check if entity exits
2019-05-30T08:40:03.353982> CloudEdge: will issue requests with
2019-05-30T08:40:03.355760> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:40:03.357266> CloudEdge: returned msg from server is 200
2019-05-30T08:40:03.358162> CloudEdge: entity exists
2019-05-30T08:40:03.358888> CloudEdge: check if measurement exits
2019-05-30T08:40:03.359649> CloudEdge: will issue requests with
2019-05-30T08:40:03.360308> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:40:03.362996> CloudEdge: returned msg from server is 200
2019-05-30T08:40:03.363710> CloudEdge: measurement exists
2019-05-30T08:40:03.364362> CloudEdge: will issue requests with
2019-05-30T08:40:03.364986> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:40:03.365588> data: {"value":96.29,"timestamp":"2019-05-30T08:39:58.810"}
2019-05-30T08:40:03.366225> CloudEdge: returned msg from server is 200
2019-05-30T08:40:03.367006> CloudEdge: upload success
2019-05-30T08:40:03.575104> --> cloud end
2019-05-30T08:40:03.575506> 
2019-05-30T08:40:19.334444> Low-level gw status ON
2019-05-30T08:41:00.891968> --- rxlora. dst=1 type=0x12 src=8 seq=48 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:41:00.892437> 2019-05-30T08:41:00.891529
2019-05-30T08:41:00.892773> rcv ctrl pkt info (^p): 1,18,8,48,14,5,-40
2019-05-30T08:41:00.893084> splitted in: [1, 18, 8, 48, 14, 5, -40]
2019-05-30T08:41:00.893379> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=48 len=14 SNR=5 RSSI=-40)
2019-05-30T08:41:00.893670> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:41:00.893954> splitted in: [125, 5, 12]
2019-05-30T08:41:00.894311> (BW=125 CR=5 SF=12)
2019-05-30T08:41:00.894637> rcv timestamp (^t): 2019-05-30T08:41:00.888
2019-05-30T08:41:00.894937> 
2019-05-30T08:41:00.895290> Got first framing byte
2019-05-30T08:41:00.895588> --> got LoRa data prefix
2019-05-30T08:41:00.895885> --> DATA with_appkey: read app key sequence
2019-05-30T08:41:00.896224> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:41:00.897184> app key disabled
2019-05-30T08:41:00.898193> valid app key: accept data
2019-05-30T08:41:00.899183> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:41:00.900162> python /app/data_acq/edgeCall.py "TC/96.10" "1,18,8,48,10,5,-40" "125,5,12" "2019-05-30T08:41:00.888" "B827EB4E30A8"
2019-05-30T08:41:05.402511> CloudEdge: uploading
2019-05-30T08:41:05.403535> CloudEdge: run under guest identity, all data is public
2019-05-30T08:41:05.404423> CloudEdge: check if entity exits
2019-05-30T08:41:05.405244> CloudEdge: will issue requests with
2019-05-30T08:41:05.406090> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:41:05.407036> CloudEdge: returned msg from server is 200
2019-05-30T08:41:05.407821> CloudEdge: entity exists
2019-05-30T08:41:05.408583> CloudEdge: check if measurement exits
2019-05-30T08:41:05.409313> CloudEdge: will issue requests with
2019-05-30T08:41:05.410043> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:41:05.410765> CloudEdge: returned msg from server is 200
2019-05-30T08:41:05.411476> CloudEdge: measurement exists
2019-05-30T08:41:05.412181> CloudEdge: will issue requests with
2019-05-30T08:41:05.412908> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:41:05.413627> data: {"value":96.10,"timestamp":"2019-05-30T08:41:00.888"}
2019-05-30T08:41:05.414335> CloudEdge: returned msg from server is 200
2019-05-30T08:41:05.415052> CloudEdge: upload success
2019-05-30T08:41:05.589793> --> cloud end
2019-05-30T08:41:05.590197> 
2019-05-30T08:42:02.972355> --- rxlora. dst=1 type=0x12 src=8 seq=49 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:42:02.972806> 2019-05-30T08:42:02.971954
2019-05-30T08:42:02.973164> rcv ctrl pkt info (^p): 1,18,8,49,14,6,-38
2019-05-30T08:42:02.973528> splitted in: [1, 18, 8, 49, 14, 6, -38]
2019-05-30T08:42:02.973824> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=49 len=14 SNR=6 RSSI=-38)
2019-05-30T08:42:02.974106> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:42:02.974396> splitted in: [125, 5, 12]
2019-05-30T08:42:02.974735> (BW=125 CR=5 SF=12)
2019-05-30T08:42:02.975037> rcv timestamp (^t): 2019-05-30T08:42:02.967
2019-05-30T08:42:02.975321> 
2019-05-30T08:42:02.975713> Got first framing byte
2019-05-30T08:42:02.976018> --> got LoRa data prefix
2019-05-30T08:42:02.976298> --> DATA with_appkey: read app key sequence
2019-05-30T08:42:02.976768> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:42:02.977196> app key disabled
2019-05-30T08:42:02.977562> valid app key: accept data
2019-05-30T08:42:02.977890> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:42:02.978282> python /app/data_acq/edgeCall.py "TC/96.16" "1,18,8,49,10,6,-38" "125,5,12" "2019-05-30T08:42:02.967" "B827EB4E30A8"
2019-05-30T08:42:07.159597> CloudEdge: uploading
2019-05-30T08:42:07.160033> CloudEdge: run under guest identity, all data is public
2019-05-30T08:42:07.160396> CloudEdge: check if entity exits
2019-05-30T08:42:07.160696> CloudEdge: will issue requests with
2019-05-30T08:42:07.160983> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:42:07.161259> CloudEdge: returned msg from server is 200
2019-05-30T08:42:07.161555> CloudEdge: entity exists
2019-05-30T08:42:07.161827> CloudEdge: check if measurement exits
2019-05-30T08:42:07.162125> CloudEdge: will issue requests with
2019-05-30T08:42:07.162403> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:42:07.162688> CloudEdge: returned msg from server is 200
2019-05-30T08:42:07.162982> CloudEdge: measurement exists
2019-05-30T08:42:07.163248> CloudEdge: will issue requests with
2019-05-30T08:42:07.163543> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:42:07.163823> data: {"value":96.16,"timestamp":"2019-05-30T08:42:02.967"}
2019-05-30T08:42:07.164107> CloudEdge: returned msg from server is 200
2019-05-30T08:42:07.164400> CloudEdge: upload success
2019-05-30T08:42:07.336984> --> cloud end
2019-05-30T08:42:07.337406> 
2019-05-30T08:43:05.049088> --- rxlora. dst=1 type=0x12 src=8 seq=50 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:43:05.049634> 2019-05-30T08:43:05.048654
2019-05-30T08:43:05.050058> rcv ctrl pkt info (^p): 1,18,8,50,14,6,-38
2019-05-30T08:43:05.050474> splitted in: [1, 18, 8, 50, 14, 6, -38]
2019-05-30T08:43:05.050848> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=50 len=14 SNR=6 RSSI=-38)
2019-05-30T08:43:05.051211> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:43:05.051648> splitted in: [125, 5, 12]
2019-05-30T08:43:05.052028> (BW=125 CR=5 SF=12)
2019-05-30T08:43:05.052393> rcv timestamp (^t): 2019-05-30T08:43:05.045
2019-05-30T08:43:05.052730> 
2019-05-30T08:43:05.053177> Got first framing byte
2019-05-30T08:43:05.053559> --> got LoRa data prefix
2019-05-30T08:43:05.054042> --> DATA with_appkey: read app key sequence
2019-05-30T08:43:05.054729> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:43:05.056060> app key disabled
2019-05-30T08:43:05.056874> valid app key: accept data
2019-05-30T08:43:05.057438> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:43:05.057921> python /app/data_acq/edgeCall.py "TC/96.16" "1,18,8,50,10,6,-38" "125,5,12" "2019-05-30T08:43:05.045" "B827EB4E30A8"
2019-05-30T08:43:09.102110> CloudEdge: uploading
2019-05-30T08:43:09.102976> CloudEdge: run under guest identity, all data is public
2019-05-30T08:43:09.103733> CloudEdge: check if entity exits
2019-05-30T08:43:09.104401> CloudEdge: will issue requests with
2019-05-30T08:43:09.105047> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:43:09.105677> CloudEdge: returned msg from server is 200
2019-05-30T08:43:09.106264> CloudEdge: entity exists
2019-05-30T08:43:09.107048> CloudEdge: check if measurement exits
2019-05-30T08:43:09.107710> CloudEdge: will issue requests with
2019-05-30T08:43:09.108321> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:43:09.108904> CloudEdge: returned msg from server is 200
2019-05-30T08:43:09.109479> CloudEdge: measurement exists
2019-05-30T08:43:09.110051> CloudEdge: will issue requests with
2019-05-30T08:43:09.110633> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:43:09.111205> data: {"value":96.16,"timestamp":"2019-05-30T08:43:05.045"}
2019-05-30T08:43:09.111792> CloudEdge: returned msg from server is 200
2019-05-30T08:43:09.112377> CloudEdge: upload success
2019-05-30T08:43:09.315510> --> cloud end
2019-05-30T08:43:09.315918> 
2019-05-30T08:44:07.127954> --- rxlora. dst=1 type=0x12 src=8 seq=51 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:44:07.128442> 2019-05-30T08:44:07.127510
2019-05-30T08:44:07.128773> rcv ctrl pkt info (^p): 1,18,8,51,14,6,-39
2019-05-30T08:44:07.129171> splitted in: [1, 18, 8, 51, 14, 6, -39]
2019-05-30T08:44:07.129467> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=51 len=14 SNR=6 RSSI=-39)
2019-05-30T08:44:07.129747> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:44:07.130064> splitted in: [125, 5, 12]
2019-05-30T08:44:07.130416> (BW=125 CR=5 SF=12)
2019-05-30T08:44:07.130722> rcv timestamp (^t): 2019-05-30T08:44:07.123
2019-05-30T08:44:07.131012> 
2019-05-30T08:44:07.131397> Got first framing byte
2019-05-30T08:44:07.131691> --> got LoRa data prefix
2019-05-30T08:44:07.131971> --> DATA with_appkey: read app key sequence
2019-05-30T08:44:07.132313> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:44:07.132663> app key disabled
2019-05-30T08:44:07.133011> valid app key: accept data
2019-05-30T08:44:07.133341> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:44:07.133759> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,51,10,6,-39" "125,5,12" "2019-05-30T08:44:07.123" "B827EB4E30A8"
2019-05-30T08:44:11.389308> CloudEdge: uploading
2019-05-30T08:44:11.390144> CloudEdge: run under guest identity, all data is public
2019-05-30T08:44:11.390886> CloudEdge: check if entity exits
2019-05-30T08:44:11.391531> CloudEdge: will issue requests with
2019-05-30T08:44:11.392170> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:44:11.392795> CloudEdge: returned msg from server is 200
2019-05-30T08:44:11.393394> CloudEdge: entity exists
2019-05-30T08:44:11.393962> CloudEdge: check if measurement exits
2019-05-30T08:44:11.394539> CloudEdge: will issue requests with
2019-05-30T08:44:11.395111> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:44:11.395685> CloudEdge: returned msg from server is 200
2019-05-30T08:44:11.396263> CloudEdge: measurement exists
2019-05-30T08:44:11.397065> CloudEdge: will issue requests with
2019-05-30T08:44:11.397755> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:44:11.398361> data: {"value":95.97,"timestamp":"2019-05-30T08:44:07.123"}
2019-05-30T08:44:11.398941> CloudEdge: returned msg from server is 200
2019-05-30T08:44:11.399518> CloudEdge: upload success
2019-05-30T08:44:11.572911> --> cloud end
2019-05-30T08:44:11.573309> 
2019-05-30T08:45:09.210011> --- rxlora. dst=1 type=0x12 src=8 seq=52 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:45:09.210468> 2019-05-30T08:45:09.209508
2019-05-30T08:45:09.210841> rcv ctrl pkt info (^p): 1,18,8,52,14,6,-40
2019-05-30T08:45:09.211147> splitted in: [1, 18, 8, 52, 14, 6, -40]
2019-05-30T08:45:09.211432> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=52 len=14 SNR=6 RSSI=-40)
2019-05-30T08:45:09.211711> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:45:09.212036> splitted in: [125, 5, 12]
2019-05-30T08:45:09.212398> (BW=125 CR=5 SF=12)
2019-05-30T08:45:09.212709> rcv timestamp (^t): 2019-05-30T08:45:09.206
2019-05-30T08:45:09.212995> 
2019-05-30T08:45:09.213367> Got first framing byte
2019-05-30T08:45:09.213667> --> got LoRa data prefix
2019-05-30T08:45:09.213967> --> DATA with_appkey: read app key sequence
2019-05-30T08:45:09.214317> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:45:09.214665> app key disabled
2019-05-30T08:45:09.215017> valid app key: accept data
2019-05-30T08:45:09.215954> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:45:09.216480> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,52,10,6,-40" "125,5,12" "2019-05-30T08:45:09.206" "B827EB4E30A8"
2019-05-30T08:45:13.417362> CloudEdge: uploading
2019-05-30T08:45:13.425019> CloudEdge: run under guest identity, all data is public
2019-05-30T08:45:13.425767> CloudEdge: check if entity exits
2019-05-30T08:45:13.426394> CloudEdge: will issue requests with
2019-05-30T08:45:13.427160> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:45:13.428076> CloudEdge: returned msg from server is 200
2019-05-30T08:45:13.428695> CloudEdge: entity exists
2019-05-30T08:45:13.429369> CloudEdge: check if measurement exits
2019-05-30T08:45:13.429960> CloudEdge: will issue requests with
2019-05-30T08:45:13.432612> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:45:13.433933> CloudEdge: returned msg from server is 200
2019-05-30T08:45:13.435524> CloudEdge: measurement exists
2019-05-30T08:45:13.436881> CloudEdge: will issue requests with
2019-05-30T08:45:13.438164> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:45:13.439409> data: {"value":96.04,"timestamp":"2019-05-30T08:45:09.206"}
2019-05-30T08:45:13.440629> CloudEdge: returned msg from server is 200
2019-05-30T08:45:13.442029> CloudEdge: upload success
2019-05-30T08:45:13.625138> --> cloud end
2019-05-30T08:45:13.625503> 
2019-05-30T08:46:11.289750> --- rxlora. dst=1 type=0x12 src=8 seq=53 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:46:11.290274> 2019-05-30T08:46:11.289187
2019-05-30T08:46:11.290758> rcv ctrl pkt info (^p): 1,18,8,53,14,6,-40
2019-05-30T08:46:11.291146> splitted in: [1, 18, 8, 53, 14, 6, -40]
2019-05-30T08:46:11.291513> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=53 len=14 SNR=6 RSSI=-40)
2019-05-30T08:46:11.291905> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:46:11.292304> splitted in: [125, 5, 12]
2019-05-30T08:46:11.292653> (BW=125 CR=5 SF=12)
2019-05-30T08:46:11.292987> rcv timestamp (^t): 2019-05-30T08:46:11.285
2019-05-30T08:46:11.298299> 
2019-05-30T08:46:11.298962> Got first framing byte
2019-05-30T08:46:11.299437> --> got LoRa data prefix
2019-05-30T08:46:11.299765> --> DATA with_appkey: read app key sequence
2019-05-30T08:46:11.300129> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:46:11.300449> app key disabled
2019-05-30T08:46:11.300735> valid app key: accept data
2019-05-30T08:46:11.301035> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:46:11.301387> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,53,10,6,-40" "125,5,12" "2019-05-30T08:46:11.285" "B827EB4E30A8"
2019-05-30T08:46:15.573720> CloudEdge: uploading
2019-05-30T08:46:15.574589> CloudEdge: run under guest identity, all data is public
2019-05-30T08:46:15.575478> CloudEdge: check if entity exits
2019-05-30T08:46:15.576192> CloudEdge: will issue requests with
2019-05-30T08:46:15.577036> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:46:15.577757> CloudEdge: returned msg from server is 200
2019-05-30T08:46:15.578381> CloudEdge: entity exists
2019-05-30T08:46:15.578964> CloudEdge: check if measurement exits
2019-05-30T08:46:15.579574> CloudEdge: will issue requests with
2019-05-30T08:46:15.580177> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:46:15.580772> CloudEdge: returned msg from server is 200
2019-05-30T08:46:15.581357> CloudEdge: measurement exists
2019-05-30T08:46:15.581937> CloudEdge: will issue requests with
2019-05-30T08:46:15.582503> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:46:15.583091> data: {"value":96.04,"timestamp":"2019-05-30T08:46:11.285"}
2019-05-30T08:46:15.583647> CloudEdge: returned msg from server is 200
2019-05-30T08:46:15.584231> CloudEdge: upload success
2019-05-30T08:46:15.777444> --> cloud end
2019-05-30T08:46:15.777822> 
2019-05-30T08:47:13.375589> --- rxlora. dst=1 type=0x12 src=8 seq=54 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:47:13.376057> 2019-05-30T08:47:13.372627
2019-05-30T08:47:13.376367> rcv ctrl pkt info (^p): 1,18,8,54,14,6,-39
2019-05-30T08:47:13.376847> splitted in: [1, 18, 8, 54, 14, 6, -39]
2019-05-30T08:47:13.377287> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=54 len=14 SNR=6 RSSI=-39)
2019-05-30T08:47:13.377683> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:47:13.378031> splitted in: [125, 5, 12]
2019-05-30T08:47:13.378389> (BW=125 CR=5 SF=12)
2019-05-30T08:47:13.378697> rcv timestamp (^t): 2019-05-30T08:47:13.369
2019-05-30T08:47:13.379183> 
2019-05-30T08:47:13.379579> Got first framing byte
2019-05-30T08:47:13.379997> --> got LoRa data prefix
2019-05-30T08:47:13.380390> --> DATA with_appkey: read app key sequence
2019-05-30T08:47:13.380850> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:47:13.381241> app key disabled
2019-05-30T08:47:13.381607> valid app key: accept data
2019-05-30T08:47:13.381948> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:47:13.382299> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,54,10,6,-39" "125,5,12" "2019-05-30T08:47:13.369" "B827EB4E30A8"
2019-05-30T08:47:17.633608> CloudEdge: uploading
2019-05-30T08:47:17.634585> CloudEdge: run under guest identity, all data is public
2019-05-30T08:47:17.642319> CloudEdge: check if entity exits
2019-05-30T08:47:17.643077> CloudEdge: will issue requests with
2019-05-30T08:47:17.643793> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:47:17.644465> CloudEdge: returned msg from server is 200
2019-05-30T08:47:17.645083> CloudEdge: entity exists
2019-05-30T08:47:17.645670> CloudEdge: check if measurement exits
2019-05-30T08:47:17.646244> CloudEdge: will issue requests with
2019-05-30T08:47:17.646991> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:47:17.647620> CloudEdge: returned msg from server is 200
2019-05-30T08:47:17.648202> CloudEdge: measurement exists
2019-05-30T08:47:17.648766> CloudEdge: will issue requests with
2019-05-30T08:47:17.649332> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:47:17.649890> data: {"value":95.97,"timestamp":"2019-05-30T08:47:13.369"}
2019-05-30T08:47:17.650451> CloudEdge: returned msg from server is 200
2019-05-30T08:47:17.651028> CloudEdge: upload success
2019-05-30T08:47:17.845153> --> cloud end
2019-05-30T08:47:17.845516> 
2019-05-30T08:48:15.458045> --- rxlora. dst=1 type=0x12 src=8 seq=55 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:48:15.458491> 2019-05-30T08:48:15.457641
2019-05-30T08:48:15.458813> rcv ctrl pkt info (^p): 1,18,8,55,14,6,-39
2019-05-30T08:48:15.459135> splitted in: [1, 18, 8, 55, 14, 6, -39]
2019-05-30T08:48:15.459421> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=55 len=14 SNR=6 RSSI=-39)
2019-05-30T08:48:15.459702> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:48:15.459984> splitted in: [125, 5, 12]
2019-05-30T08:48:15.460342> (BW=125 CR=5 SF=12)
2019-05-30T08:48:15.460674> rcv timestamp (^t): 2019-05-30T08:48:15.454
2019-05-30T08:48:15.460979> 
2019-05-30T08:48:15.461345> Got first framing byte
2019-05-30T08:48:15.461638> --> got LoRa data prefix
2019-05-30T08:48:15.461912> --> DATA with_appkey: read app key sequence
2019-05-30T08:48:15.462233> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:48:15.462583> app key disabled
2019-05-30T08:48:15.462906> valid app key: accept data
2019-05-30T08:48:15.463257> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:48:15.463616> python /app/data_acq/edgeCall.py "TC/95.91" "1,18,8,55,10,6,-39" "125,5,12" "2019-05-30T08:48:15.454" "B827EB4E30A8"
2019-05-30T08:48:19.684709> CloudEdge: uploading
2019-05-30T08:48:19.685576> CloudEdge: run under guest identity, all data is public
2019-05-30T08:48:19.686322> CloudEdge: check if entity exits
2019-05-30T08:48:19.687320> CloudEdge: will issue requests with
2019-05-30T08:48:19.688155> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:48:19.688864> CloudEdge: returned msg from server is 200
2019-05-30T08:48:19.689468> CloudEdge: entity exists
2019-05-30T08:48:19.690038> CloudEdge: check if measurement exits
2019-05-30T08:48:19.690619> CloudEdge: will issue requests with
2019-05-30T08:48:19.691189> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:48:19.691758> CloudEdge: returned msg from server is 200
2019-05-30T08:48:19.692404> CloudEdge: measurement exists
2019-05-30T08:48:19.692980> CloudEdge: will issue requests with
2019-05-30T08:48:19.693550> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:48:19.694109> data: {"value":95.91,"timestamp":"2019-05-30T08:48:15.454"}
2019-05-30T08:48:19.694670> CloudEdge: returned msg from server is 200
2019-05-30T08:48:19.695243> CloudEdge: upload success
2019-05-30T08:48:19.893954> --> cloud end
2019-05-30T08:48:19.894357> 
2019-05-30T08:49:05.747940> 2019-05-30 08:49:05.746807
2019-05-30T08:49:05.748743> post status: gw ON
2019-05-30T08:49:05.749532> post status: executing periodic tasks
2019-05-30T08:49:06.829224> no timezone support, time will be expressed only in local time
2019-05-30T08:49:06.829804> post status: start running
2019-05-30T08:49:07.878161> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:49:07.878695> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:49:07.879102> get_gps.py: invalid serial port
2019-05-30T08:49:08.014140> post status: dynamic GPS is requested
2019-05-30T08:49:08.014576> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:49:08.014951> post status get GPS: no GPS coordinates
2019-05-30T08:49:08.015259> post status: show current GPS position
2019-05-30T08:49:08.015547> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:49:08.015826> post status: exiting
2019-05-30T08:49:17.543568> --- rxlora. dst=1 type=0x12 src=8 seq=56 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:49:17.544000> 2019-05-30T08:49:17.543160
2019-05-30T08:49:17.544317> rcv ctrl pkt info (^p): 1,18,8,56,14,6,-38
2019-05-30T08:49:17.544628> splitted in: [1, 18, 8, 56, 14, 6, -38]
2019-05-30T08:49:17.544910> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=56 len=14 SNR=6 RSSI=-38)
2019-05-30T08:49:17.545186> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:49:17.545463> splitted in: [125, 5, 12]
2019-05-30T08:49:17.545831> (BW=125 CR=5 SF=12)
2019-05-30T08:49:17.546161> rcv timestamp (^t): 2019-05-30T08:49:17.539
2019-05-30T08:49:17.546447> 
2019-05-30T08:49:17.546941> Got first framing byte
2019-05-30T08:49:17.547266> --> got LoRa data prefix
2019-05-30T08:49:17.547551> --> DATA with_appkey: read app key sequence
2019-05-30T08:49:17.547878> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:49:17.548247> app key disabled
2019-05-30T08:49:17.548589> valid app key: accept data
2019-05-30T08:49:17.548914> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:49:17.549318> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,56,10,6,-38" "125,5,12" "2019-05-30T08:49:17.539" "B827EB4E30A8"
2019-05-30T08:49:21.943542> CloudEdge: uploading
2019-05-30T08:49:21.944417> CloudEdge: run under guest identity, all data is public
2019-05-30T08:49:21.945135> CloudEdge: check if entity exits
2019-05-30T08:49:21.945766> CloudEdge: will issue requests with
2019-05-30T08:49:21.946378> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:49:21.947331> CloudEdge: returned msg from server is 200
2019-05-30T08:49:21.947984> CloudEdge: entity exists
2019-05-30T08:49:21.948552> CloudEdge: check if measurement exits
2019-05-30T08:49:21.949115> CloudEdge: will issue requests with
2019-05-30T08:49:21.949674> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:49:21.950234> CloudEdge: returned msg from server is 200
2019-05-30T08:49:21.950794> CloudEdge: measurement exists
2019-05-30T08:49:21.951348> CloudEdge: will issue requests with
2019-05-30T08:49:21.951904> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:49:21.952460> data: {"value":95.97,"timestamp":"2019-05-30T08:49:17.539"}
2019-05-30T08:49:21.953017> CloudEdge: returned msg from server is 200
2019-05-30T08:49:21.953579> CloudEdge: upload success
2019-05-30T08:49:22.128322> --> cloud end
2019-05-30T08:49:22.128751> 
2019-05-30T08:50:19.629273> --- rxlora. dst=1 type=0x12 src=8 seq=57 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T08:50:19.629755> 2019-05-30T08:50:19.628588
2019-05-30T08:50:19.630161> rcv ctrl pkt info (^p): 1,18,8,57,14,6,-38
2019-05-30T08:50:19.630469> splitted in: [1, 18, 8, 57, 14, 6, -38]
2019-05-30T08:50:19.630755> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=57 len=14 SNR=6 RSSI=-38)
2019-05-30T08:50:19.631088> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:50:19.631456> splitted in: [125, 5, 12]
2019-05-30T08:50:19.631769> (BW=125 CR=5 SF=12)
2019-05-30T08:50:19.632060> rcv timestamp (^t): 2019-05-30T08:50:19.625
2019-05-30T08:50:19.632362> 
2019-05-30T08:50:19.632657> Got first framing byte
2019-05-30T08:50:19.632946> --> got LoRa data prefix
2019-05-30T08:50:19.633293> --> DATA with_appkey: read app key sequence
2019-05-30T08:50:19.633656> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:50:19.634021> app key disabled
2019-05-30T08:50:19.634456> valid app key: accept data
2019-05-30T08:50:19.634866> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:50:19.635255> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,57,10,6,-38" "125,5,12" "2019-05-30T08:50:19.625" "B827EB4E30A8"
2019-05-30T08:50:23.892673> CloudEdge: uploading
2019-05-30T08:50:23.893330> CloudEdge: run under guest identity, all data is public
2019-05-30T08:50:23.893841> CloudEdge: check if entity exits
2019-05-30T08:50:23.894531> CloudEdge: will issue requests with
2019-05-30T08:50:23.895058> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:50:23.895498> CloudEdge: returned msg from server is 200
2019-05-30T08:50:23.895927> CloudEdge: entity exists
2019-05-30T08:50:23.896293> CloudEdge: check if measurement exits
2019-05-30T08:50:23.896791> CloudEdge: will issue requests with
2019-05-30T08:50:23.897226> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:50:23.897629> CloudEdge: returned msg from server is 200
2019-05-30T08:50:23.897986> CloudEdge: measurement exists
2019-05-30T08:50:23.898327> CloudEdge: will issue requests with
2019-05-30T08:50:23.898724> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:50:23.899061> data: {"value":95.97,"timestamp":"2019-05-30T08:50:19.625"}
2019-05-30T08:50:23.899450> CloudEdge: returned msg from server is 200
2019-05-30T08:50:23.899796> CloudEdge: upload success
2019-05-30T08:50:24.084578> --> cloud end
2019-05-30T08:50:24.084994> 
2019-05-30T08:50:40.151523> Low-level gw status ON
2019-05-30T08:51:21.717574> --- rxlora. dst=1 type=0x12 src=8 seq=58 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:51:21.718121> 2019-05-30T08:51:21.714873
2019-05-30T08:51:21.718450> rcv ctrl pkt info (^p): 1,18,8,58,14,6,-40
2019-05-30T08:51:21.718757> splitted in: [1, 18, 8, 58, 14, 6, -40]
2019-05-30T08:51:21.719095> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=58 len=14 SNR=6 RSSI=-40)
2019-05-30T08:51:21.719461> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:51:21.719811> splitted in: [125, 5, 12]
2019-05-30T08:51:21.720129> (BW=125 CR=5 SF=12)
2019-05-30T08:51:21.720511> rcv timestamp (^t): 2019-05-30T08:51:21.711
2019-05-30T08:51:21.720876> 
2019-05-30T08:51:21.721235> Got first framing byte
2019-05-30T08:51:21.721602> --> got LoRa data prefix
2019-05-30T08:51:21.721958> --> DATA with_appkey: read app key sequence
2019-05-30T08:51:21.722297> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:51:21.722668> app key disabled
2019-05-30T08:51:21.723012> valid app key: accept data
2019-05-30T08:51:21.723483> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:51:21.723826> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,58,10,6,-40" "125,5,12" "2019-05-30T08:51:21.711" "B827EB4E30A8"
2019-05-30T08:51:25.690491> CloudEdge: uploading
2019-05-30T08:51:25.691450> CloudEdge: run under guest identity, all data is public
2019-05-30T08:51:25.692296> CloudEdge: check if entity exits
2019-05-30T08:51:25.693161> CloudEdge: will issue requests with
2019-05-30T08:51:25.694020> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:51:25.694712> CloudEdge: returned msg from server is 200
2019-05-30T08:51:25.695304> CloudEdge: entity exists
2019-05-30T08:51:25.695868> CloudEdge: check if measurement exits
2019-05-30T08:51:25.696433> CloudEdge: will issue requests with
2019-05-30T08:51:25.697409> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:51:25.698067> CloudEdge: returned msg from server is 200
2019-05-30T08:51:25.698649> CloudEdge: measurement exists
2019-05-30T08:51:25.699218> CloudEdge: will issue requests with
2019-05-30T08:51:25.699774> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:51:25.700329> data: {"value":95.97,"timestamp":"2019-05-30T08:51:21.711"}
2019-05-30T08:51:25.700893> CloudEdge: returned msg from server is 200
2019-05-30T08:51:25.701457> CloudEdge: upload success
2019-05-30T08:51:25.881965> --> cloud end
2019-05-30T08:51:25.882345> 
2019-05-30T08:52:23.807049> --- rxlora. dst=1 type=0x12 src=8 seq=59 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:52:23.807524> 2019-05-30T08:52:23.803983
2019-05-30T08:52:23.807857> rcv ctrl pkt info (^p): 1,18,8,59,14,6,-39
2019-05-30T08:52:23.808156> splitted in: [1, 18, 8, 59, 14, 6, -39]
2019-05-30T08:52:23.808454> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=59 len=14 SNR=6 RSSI=-39)
2019-05-30T08:52:23.808809> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:52:23.809153> splitted in: [125, 5, 12]
2019-05-30T08:52:23.809514> (BW=125 CR=5 SF=12)
2019-05-30T08:52:23.809857> rcv timestamp (^t): 2019-05-30T08:52:23.800
2019-05-30T08:52:23.810273> 
2019-05-30T08:52:23.810653> Got first framing byte
2019-05-30T08:52:23.811003> --> got LoRa data prefix
2019-05-30T08:52:23.811365> --> DATA with_appkey: read app key sequence
2019-05-30T08:52:23.811700> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:52:23.812106> app key disabled
2019-05-30T08:52:23.812592> valid app key: accept data
2019-05-30T08:52:23.812922> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:52:23.813298> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,59,10,6,-39" "125,5,12" "2019-05-30T08:52:23.800" "B827EB4E30A8"
2019-05-30T08:52:27.804736> CloudEdge: uploading
2019-05-30T08:52:27.805601> CloudEdge: run under guest identity, all data is public
2019-05-30T08:52:27.806434> CloudEdge: check if entity exits
2019-05-30T08:52:27.807641> CloudEdge: will issue requests with
2019-05-30T08:52:27.808565> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:52:27.809503> CloudEdge: returned msg from server is 200
2019-05-30T08:52:27.810380> CloudEdge: entity exists
2019-05-30T08:52:27.811139> CloudEdge: check if measurement exits
2019-05-30T08:52:27.811882> CloudEdge: will issue requests with
2019-05-30T08:52:27.812648> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:52:27.813413> CloudEdge: returned msg from server is 200
2019-05-30T08:52:27.814266> CloudEdge: measurement exists
2019-05-30T08:52:27.815017> CloudEdge: will issue requests with
2019-05-30T08:52:27.815735> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:52:27.816474> data: {"value":95.78,"timestamp":"2019-05-30T08:52:23.800"}
2019-05-30T08:52:27.827680> CloudEdge: returned msg from server is 200
2019-05-30T08:52:27.828511> CloudEdge: upload success
2019-05-30T08:52:27.990948> --> cloud end
2019-05-30T08:52:27.991327> 
2019-05-30T08:53:25.891823> --- rxlora. dst=1 type=0x12 src=8 seq=60 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:53:25.892312> 2019-05-30T08:53:25.888900
2019-05-30T08:53:25.892649> rcv ctrl pkt info (^p): 1,18,8,60,14,6,-39
2019-05-30T08:53:25.892942> splitted in: [1, 18, 8, 60, 14, 6, -39]
2019-05-30T08:53:25.893396> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=60 len=14 SNR=6 RSSI=-39)
2019-05-30T08:53:25.893778> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:53:25.894126> splitted in: [125, 5, 12]
2019-05-30T08:53:25.894467> (BW=125 CR=5 SF=12)
2019-05-30T08:53:25.894840> rcv timestamp (^t): 2019-05-30T08:53:25.885
2019-05-30T08:53:25.895196> 
2019-05-30T08:53:25.895559> Got first framing byte
2019-05-30T08:53:25.895911> --> got LoRa data prefix
2019-05-30T08:53:25.896264> --> DATA with_appkey: read app key sequence
2019-05-30T08:53:25.896732> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:53:25.897217> app key disabled
2019-05-30T08:53:25.897710> valid app key: accept data
2019-05-30T08:53:25.898041> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:53:25.898423> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,60,10,6,-39" "125,5,12" "2019-05-30T08:53:25.885" "B827EB4E30A8"
2019-05-30T08:53:30.208760> CloudEdge: uploading
2019-05-30T08:53:30.209316> CloudEdge: run under guest identity, all data is public
2019-05-30T08:53:30.209705> CloudEdge: check if entity exits
2019-05-30T08:53:30.210032> CloudEdge: will issue requests with
2019-05-30T08:53:30.210327> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:53:30.210636> CloudEdge: returned msg from server is 200
2019-05-30T08:53:30.210935> CloudEdge: entity exists
2019-05-30T08:53:30.211232> CloudEdge: check if measurement exits
2019-05-30T08:53:30.211527> CloudEdge: will issue requests with
2019-05-30T08:53:30.212044> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:53:30.212377> CloudEdge: returned msg from server is 200
2019-05-30T08:53:30.212668> CloudEdge: measurement exists
2019-05-30T08:53:30.212955> CloudEdge: will issue requests with
2019-05-30T08:53:30.213300> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:53:30.213624> data: {"value":95.97,"timestamp":"2019-05-30T08:53:25.885"}
2019-05-30T08:53:30.213919> CloudEdge: returned msg from server is 200
2019-05-30T08:53:30.214213> CloudEdge: upload success
2019-05-30T08:53:30.369040> --> cloud end
2019-05-30T08:53:30.369416> 
2019-05-30T08:54:27.977157> --- rxlora. dst=1 type=0x12 src=8 seq=61 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T08:54:27.977642> 2019-05-30T08:54:27.976383
2019-05-30T08:54:27.978032> rcv ctrl pkt info (^p): 1,18,8,61,14,6,-39
2019-05-30T08:54:27.978332> splitted in: [1, 18, 8, 61, 14, 6, -39]
2019-05-30T08:54:27.978616> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=61 len=14 SNR=6 RSSI=-39)
2019-05-30T08:54:27.978935> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:54:27.979287> splitted in: [125, 5, 12]
2019-05-30T08:54:27.979593> (BW=125 CR=5 SF=12)
2019-05-30T08:54:27.979883> rcv timestamp (^t): 2019-05-30T08:54:27.973
2019-05-30T08:54:27.980186> 
2019-05-30T08:54:27.980480> Got first framing byte
2019-05-30T08:54:27.980759> --> got LoRa data prefix
2019-05-30T08:54:27.981130> --> DATA with_appkey: read app key sequence
2019-05-30T08:54:27.981542> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:54:27.981906> app key disabled
2019-05-30T08:54:27.982547> valid app key: accept data
2019-05-30T08:54:27.983022> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:54:27.983487> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,61,10,6,-39" "125,5,12" "2019-05-30T08:54:27.973" "B827EB4E30A8"
2019-05-30T08:54:32.113958> CloudEdge: uploading
2019-05-30T08:54:32.115302> CloudEdge: run under guest identity, all data is public
2019-05-30T08:54:32.118602> CloudEdge: check if entity exits
2019-05-30T08:54:32.119373> CloudEdge: will issue requests with
2019-05-30T08:54:32.120191> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:54:32.120861> CloudEdge: returned msg from server is 200
2019-05-30T08:54:32.121480> CloudEdge: entity exists
2019-05-30T08:54:32.122074> CloudEdge: check if measurement exits
2019-05-30T08:54:32.122748> CloudEdge: will issue requests with
2019-05-30T08:54:32.123334> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:54:32.123914> CloudEdge: returned msg from server is 200
2019-05-30T08:54:32.124492> CloudEdge: measurement exists
2019-05-30T08:54:32.125104> CloudEdge: will issue requests with
2019-05-30T08:54:32.125726> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:54:32.126313> data: {"value":95.71,"timestamp":"2019-05-30T08:54:27.973"}
2019-05-30T08:54:32.127045> CloudEdge: returned msg from server is 200
2019-05-30T08:54:32.127676> CloudEdge: upload success
2019-05-30T08:54:32.296086> --> cloud end
2019-05-30T08:54:32.296455> 
2019-05-30T08:55:30.064975> --- rxlora. dst=1 type=0x12 src=8 seq=62 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T08:55:30.065414> 2019-05-30T08:55:30.064588
2019-05-30T08:55:30.065724> rcv ctrl pkt info (^p): 1,18,8,62,14,6,-42
2019-05-30T08:55:30.066029> splitted in: [1, 18, 8, 62, 14, 6, -42]
2019-05-30T08:55:30.066310> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=62 len=14 SNR=6 RSSI=-42)
2019-05-30T08:55:30.066720> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:55:30.067092> splitted in: [125, 5, 12]
2019-05-30T08:55:30.067460> (BW=125 CR=5 SF=12)
2019-05-30T08:55:30.067867> rcv timestamp (^t): 2019-05-30T08:55:30.061
2019-05-30T08:55:30.068227> 
2019-05-30T08:55:30.068605> Got first framing byte
2019-05-30T08:55:30.068892> --> got LoRa data prefix
2019-05-30T08:55:30.069178> --> DATA with_appkey: read app key sequence
2019-05-30T08:55:30.069498> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:55:30.069831> app key disabled
2019-05-30T08:55:30.070173> valid app key: accept data
2019-05-30T08:55:30.070505> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:55:30.070862> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,62,10,6,-42" "125,5,12" "2019-05-30T08:55:30.061" "B827EB4E30A8"
2019-05-30T08:55:34.579075> CloudEdge: uploading
2019-05-30T08:55:34.579887> CloudEdge: run under guest identity, all data is public
2019-05-30T08:55:34.580600> CloudEdge: check if entity exits
2019-05-30T08:55:34.581226> CloudEdge: will issue requests with
2019-05-30T08:55:34.581841> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:55:34.582434> CloudEdge: returned msg from server is 200
2019-05-30T08:55:34.583032> CloudEdge: entity exists
2019-05-30T08:55:34.583608> CloudEdge: check if measurement exits
2019-05-30T08:55:34.584159> CloudEdge: will issue requests with
2019-05-30T08:55:34.584722> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:55:34.585694> CloudEdge: returned msg from server is 200
2019-05-30T08:55:34.586874> CloudEdge: measurement exists
2019-05-30T08:55:34.587882> CloudEdge: will issue requests with
2019-05-30T08:55:34.588814> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:55:34.589740> data: {"value":95.78,"timestamp":"2019-05-30T08:55:30.061"}
2019-05-30T08:55:34.590631> CloudEdge: returned msg from server is 200
2019-05-30T08:55:34.591514> CloudEdge: upload success
2019-05-30T08:55:34.800859> --> cloud end
2019-05-30T08:55:34.801270> 
2019-05-30T08:56:32.155031> --- rxlora. dst=1 type=0x12 src=8 seq=63 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T08:56:32.155536> 2019-05-30T08:56:32.152097
2019-05-30T08:56:32.155871> rcv ctrl pkt info (^p): 1,18,8,63,14,7,-42
2019-05-30T08:56:32.156167> splitted in: [1, 18, 8, 63, 14, 7, -42]
2019-05-30T08:56:32.156487> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=63 len=14 SNR=7 RSSI=-42)
2019-05-30T08:56:32.157080> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:56:32.157502> splitted in: [125, 5, 12]
2019-05-30T08:56:32.157873> (BW=125 CR=5 SF=12)
2019-05-30T08:56:32.158288> rcv timestamp (^t): 2019-05-30T08:56:32.148
2019-05-30T08:56:32.158728> 
2019-05-30T08:56:32.159094> Got first framing byte
2019-05-30T08:56:32.159434> --> got LoRa data prefix
2019-05-30T08:56:32.159781> --> DATA with_appkey: read app key sequence
2019-05-30T08:56:32.160097> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:56:32.160494> app key disabled
2019-05-30T08:56:32.160929> valid app key: accept data
2019-05-30T08:56:32.161233> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:56:32.161591> python /app/data_acq/edgeCall.py "TC/95.91" "1,18,8,63,10,7,-42" "125,5,12" "2019-05-30T08:56:32.148" "B827EB4E30A8"
2019-05-30T08:56:36.326338> CloudEdge: uploading
2019-05-30T08:56:36.327243> CloudEdge: run under guest identity, all data is public
2019-05-30T08:56:36.327928> CloudEdge: check if entity exits
2019-05-30T08:56:36.328623> CloudEdge: will issue requests with
2019-05-30T08:56:36.329261> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:56:36.329881> CloudEdge: returned msg from server is 200
2019-05-30T08:56:36.330491> CloudEdge: entity exists
2019-05-30T08:56:36.331089> CloudEdge: check if measurement exits
2019-05-30T08:56:36.331655> CloudEdge: will issue requests with
2019-05-30T08:56:36.332222> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:56:36.332792> CloudEdge: returned msg from server is 200
2019-05-30T08:56:36.333365> CloudEdge: measurement exists
2019-05-30T08:56:36.333928> CloudEdge: will issue requests with
2019-05-30T08:56:36.334498> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:56:36.335069> data: {"value":95.91,"timestamp":"2019-05-30T08:56:32.148"}
2019-05-30T08:56:36.335632> CloudEdge: returned msg from server is 200
2019-05-30T08:56:36.336197> CloudEdge: upload success
2019-05-30T08:56:36.514133> --> cloud end
2019-05-30T08:56:36.514498> 
2019-05-30T08:57:34.238950> --- rxlora. dst=1 type=0x12 src=8 seq=64 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T08:57:34.239431> 2019-05-30T08:57:34.238540
2019-05-30T08:57:34.239755> rcv ctrl pkt info (^p): 1,18,8,64,14,6,-41
2019-05-30T08:57:34.240059> splitted in: [1, 18, 8, 64, 14, 6, -41]
2019-05-30T08:57:34.240342> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=64 len=14 SNR=6 RSSI=-41)
2019-05-30T08:57:34.240625> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:57:34.240908> splitted in: [125, 5, 12]
2019-05-30T08:57:34.241256> (BW=125 CR=5 SF=12)
2019-05-30T08:57:34.241564> rcv timestamp (^t): 2019-05-30T08:57:34.234
2019-05-30T08:57:34.241852> 
2019-05-30T08:57:34.242206> Got first framing byte
2019-05-30T08:57:34.242498> --> got LoRa data prefix
2019-05-30T08:57:34.242779> --> DATA with_appkey: read app key sequence
2019-05-30T08:57:34.243125> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:57:34.243472> app key disabled
2019-05-30T08:57:34.243819> valid app key: accept data
2019-05-30T08:57:34.244146> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:57:34.244632> python /app/data_acq/edgeCall.py "TC/95.91" "1,18,8,64,10,6,-41" "125,5,12" "2019-05-30T08:57:34.234" "B827EB4E30A8"
2019-05-30T08:57:38.441659> CloudEdge: uploading
2019-05-30T08:57:38.442325> CloudEdge: run under guest identity, all data is public
2019-05-30T08:57:38.442863> CloudEdge: check if entity exits
2019-05-30T08:57:38.443391> CloudEdge: will issue requests with
2019-05-30T08:57:38.443922> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:57:38.444456> CloudEdge: returned msg from server is 200
2019-05-30T08:57:38.444989> CloudEdge: entity exists
2019-05-30T08:57:38.445519> CloudEdge: check if measurement exits
2019-05-30T08:57:38.446049> CloudEdge: will issue requests with
2019-05-30T08:57:38.446748> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:57:38.447402> CloudEdge: returned msg from server is 200
2019-05-30T08:57:38.448009> CloudEdge: measurement exists
2019-05-30T08:57:38.448768> CloudEdge: will issue requests with
2019-05-30T08:57:38.449400> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:57:38.450007> data: {"value":95.91,"timestamp":"2019-05-30T08:57:34.234"}
2019-05-30T08:57:38.450614> CloudEdge: returned msg from server is 200
2019-05-30T08:57:38.451202> CloudEdge: upload success
2019-05-30T08:57:38.655375> --> cloud end
2019-05-30T08:57:38.655784> 
2019-05-30T08:58:36.326959> --- rxlora. dst=1 type=0x12 src=8 seq=65 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T08:58:36.327546> 2019-05-30T08:58:36.323918
2019-05-30T08:58:36.327910> rcv ctrl pkt info (^p): 1,18,8,65,14,7,-41
2019-05-30T08:58:36.328224> splitted in: [1, 18, 8, 65, 14, 7, -41]
2019-05-30T08:58:36.328526> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=65 len=14 SNR=7 RSSI=-41)
2019-05-30T08:58:36.328811> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:58:36.329153> splitted in: [125, 5, 12]
2019-05-30T08:58:36.329514> (BW=125 CR=5 SF=12)
2019-05-30T08:58:36.329877> rcv timestamp (^t): 2019-05-30T08:58:36.320
2019-05-30T08:58:36.330213> 
2019-05-30T08:58:36.330615> Got first framing byte
2019-05-30T08:58:36.331012> --> got LoRa data prefix
2019-05-30T08:58:36.331412> --> DATA with_appkey: read app key sequence
2019-05-30T08:58:36.331818> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:58:36.332289> app key disabled
2019-05-30T08:58:36.332793> valid app key: accept data
2019-05-30T08:58:36.333259> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:58:36.333653> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,65,10,7,-41" "125,5,12" "2019-05-30T08:58:36.320" "B827EB4E30A8"
2019-05-30T08:58:40.641269> CloudEdge: uploading
2019-05-30T08:58:40.641926> CloudEdge: run under guest identity, all data is public
2019-05-30T08:58:40.642460> CloudEdge: check if entity exits
2019-05-30T08:58:40.642988> CloudEdge: will issue requests with
2019-05-30T08:58:40.643515> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:58:40.644041> CloudEdge: returned msg from server is 200
2019-05-30T08:58:40.644568> CloudEdge: entity exists
2019-05-30T08:58:40.645094> CloudEdge: check if measurement exits
2019-05-30T08:58:40.645620> CloudEdge: will issue requests with
2019-05-30T08:58:40.646144> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:58:40.646898> CloudEdge: returned msg from server is 200
2019-05-30T08:58:40.647788> CloudEdge: measurement exists
2019-05-30T08:58:40.648950> CloudEdge: will issue requests with
2019-05-30T08:58:40.652426> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:58:40.653474> data: {"value":96.04,"timestamp":"2019-05-30T08:58:36.320"}
2019-05-30T08:58:40.654310> CloudEdge: returned msg from server is 200
2019-05-30T08:58:40.655069> CloudEdge: upload success
2019-05-30T08:58:40.830219> --> cloud end
2019-05-30T08:58:40.830607> 
2019-05-30T08:59:08.178487> 2019-05-30 08:59:08.177367
2019-05-30T08:59:08.179211> post status: gw ON
2019-05-30T08:59:08.179790> post status: executing periodic tasks
2019-05-30T08:59:09.284006> no timezone support, time will be expressed only in local time
2019-05-30T08:59:09.284526> post status: start running
2019-05-30T08:59:10.352519> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T08:59:10.353094> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T08:59:10.353503> get_gps.py: invalid serial port
2019-05-30T08:59:10.489527> post status: dynamic GPS is requested
2019-05-30T08:59:10.490020> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T08:59:10.490493> post status get GPS: no GPS coordinates
2019-05-30T08:59:10.490917> post status: show current GPS position
2019-05-30T08:59:10.491266> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T08:59:10.491642> post status: exiting
2019-05-30T08:59:38.412238> --- rxlora. dst=1 type=0x12 src=8 seq=66 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T08:59:38.412618> 2019-05-30T08:59:38.409963
2019-05-30T08:59:38.412888> rcv ctrl pkt info (^p): 1,18,8,66,14,6,-40
2019-05-30T08:59:38.413179> splitted in: [1, 18, 8, 66, 14, 6, -40]
2019-05-30T08:59:38.413465> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=66 len=14 SNR=6 RSSI=-40)
2019-05-30T08:59:38.413743> rcv ctrl radio info (^r): 125,5,12
2019-05-30T08:59:38.414119> splitted in: [125, 5, 12]
2019-05-30T08:59:38.414439> (BW=125 CR=5 SF=12)
2019-05-30T08:59:38.414723> rcv timestamp (^t): 2019-05-30T08:59:38.406
2019-05-30T08:59:38.415013> 
2019-05-30T08:59:38.415312> Got first framing byte
2019-05-30T08:59:38.415588> --> got LoRa data prefix
2019-05-30T08:59:38.415896> --> DATA with_appkey: read app key sequence
2019-05-30T08:59:38.416240> app key is 0x05 0x06 0x07 0x08
2019-05-30T08:59:38.416643> app key disabled
2019-05-30T08:59:38.417052> valid app key: accept data
2019-05-30T08:59:38.417435> uploading with python /app/data_acq/edgeCall.py
2019-05-30T08:59:38.417814> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,66,10,6,-40" "125,5,12" "2019-05-30T08:59:38.406" "B827EB4E30A8"
2019-05-30T08:59:42.920702> CloudEdge: uploading
2019-05-30T08:59:42.921314> CloudEdge: run under guest identity, all data is public
2019-05-30T08:59:42.921711> CloudEdge: check if entity exits
2019-05-30T08:59:42.922037> CloudEdge: will issue requests with
2019-05-30T08:59:42.922337> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T08:59:42.922633> CloudEdge: returned msg from server is 200
2019-05-30T08:59:42.922923> CloudEdge: entity exists
2019-05-30T08:59:42.923210> CloudEdge: check if measurement exits
2019-05-30T08:59:42.923497> CloudEdge: will issue requests with
2019-05-30T08:59:42.923783> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T08:59:42.924063> CloudEdge: returned msg from server is 200
2019-05-30T08:59:42.924343> CloudEdge: measurement exists
2019-05-30T08:59:42.924622> CloudEdge: will issue requests with
2019-05-30T08:59:42.924912> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T08:59:42.925198> data: {"value":95.78,"timestamp":"2019-05-30T08:59:38.406"}
2019-05-30T08:59:42.925480> CloudEdge: returned msg from server is 200
2019-05-30T08:59:42.925761> CloudEdge: upload success
2019-05-30T08:59:43.095753> --> cloud end
2019-05-30T08:59:43.096158> 
2019-05-30T09:00:40.496334> --- rxlora. dst=1 type=0x12 src=8 seq=67 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:00:40.497341> 2019-05-30T09:00:40.495728
2019-05-30T09:00:40.498195> rcv ctrl pkt info (^p): 1,18,8,67,14,6,-42
2019-05-30T09:00:40.499423> splitted in: [1, 18, 8, 67, 14, 6, -42]
2019-05-30T09:00:40.500316> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=67 len=14 SNR=6 RSSI=-42)
2019-05-30T09:00:40.501258> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:00:40.502225> splitted in: [125, 5, 12]
2019-05-30T09:00:40.502928> (BW=125 CR=5 SF=12)
2019-05-30T09:00:40.503468> rcv timestamp (^t): 2019-05-30T09:00:40.492
2019-05-30T09:00:40.503820> 
2019-05-30T09:00:40.504407> Got first framing byte
2019-05-30T09:00:40.504894> --> got LoRa data prefix
2019-05-30T09:00:40.505239> --> DATA with_appkey: read app key sequence
2019-05-30T09:00:40.505735> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:00:40.506052> app key disabled
2019-05-30T09:00:40.506613> valid app key: accept data
2019-05-30T09:00:40.507468> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:00:40.508465> python /app/data_acq/edgeCall.py "TC/95.84" "1,18,8,67,10,6,-42" "125,5,12" "2019-05-30T09:00:40.492" "B827EB4E30A8"
2019-05-30T09:00:44.644368> CloudEdge: uploading
2019-05-30T09:00:44.644921> CloudEdge: run under guest identity, all data is public
2019-05-30T09:00:44.645311> CloudEdge: check if entity exits
2019-05-30T09:00:44.645629> CloudEdge: will issue requests with
2019-05-30T09:00:44.646064> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:00:44.647249> CloudEdge: returned msg from server is 200
2019-05-30T09:00:44.647684> CloudEdge: entity exists
2019-05-30T09:00:44.647968> CloudEdge: check if measurement exits
2019-05-30T09:00:44.648239> CloudEdge: will issue requests with
2019-05-30T09:00:44.648513> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:00:44.648784> CloudEdge: returned msg from server is 200
2019-05-30T09:00:44.649055> CloudEdge: measurement exists
2019-05-30T09:00:44.649323> CloudEdge: will issue requests with
2019-05-30T09:00:44.649600> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:00:44.649871> data: {"value":95.84,"timestamp":"2019-05-30T09:00:40.492"}
2019-05-30T09:00:44.650141> CloudEdge: returned msg from server is 200
2019-05-30T09:00:44.650415> CloudEdge: upload success
2019-05-30T09:00:44.861638> --> cloud end
2019-05-30T09:00:44.862061> 
2019-05-30T09:01:01.018098> Low-level gw status ON
2019-05-30T09:01:42.584404> --- rxlora. dst=1 type=0x12 src=8 seq=68 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T09:01:42.584961> 2019-05-30T09:01:42.582380
2019-05-30T09:01:42.585349> rcv ctrl pkt info (^p): 1,18,8,68,14,6,-39
2019-05-30T09:01:42.585660> splitted in: [1, 18, 8, 68, 14, 6, -39]
2019-05-30T09:01:42.585955> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=68 len=14 SNR=6 RSSI=-39)
2019-05-30T09:01:42.586266> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:01:42.586669> splitted in: [125, 5, 12]
2019-05-30T09:01:42.587071> (BW=125 CR=5 SF=12)
2019-05-30T09:01:42.587430> rcv timestamp (^t): 2019-05-30T09:01:42.579
2019-05-30T09:01:42.587781> 
2019-05-30T09:01:42.588108> Got first framing byte
2019-05-30T09:01:42.588514> --> got LoRa data prefix
2019-05-30T09:01:42.588893> --> DATA with_appkey: read app key sequence
2019-05-30T09:01:42.589251> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:01:42.589618> app key disabled
2019-05-30T09:01:42.589974> valid app key: accept data
2019-05-30T09:01:42.590302> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:01:42.590800> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,68,10,6,-39" "125,5,12" "2019-05-30T09:01:42.579" "B827EB4E30A8"
2019-05-30T09:01:46.721321> CloudEdge: uploading
2019-05-30T09:01:46.722132> CloudEdge: run under guest identity, all data is public
2019-05-30T09:01:46.722840> CloudEdge: check if entity exits
2019-05-30T09:01:46.723459> CloudEdge: will issue requests with
2019-05-30T09:01:46.724097> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:01:46.724718> CloudEdge: returned msg from server is 200
2019-05-30T09:01:46.725302> CloudEdge: entity exists
2019-05-30T09:01:46.725861> CloudEdge: check if measurement exits
2019-05-30T09:01:46.726420> CloudEdge: will issue requests with
2019-05-30T09:01:46.727176> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:01:46.727776> CloudEdge: returned msg from server is 200
2019-05-30T09:01:46.728344> CloudEdge: measurement exists
2019-05-30T09:01:46.728904> CloudEdge: will issue requests with
2019-05-30T09:01:46.729461> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:01:46.730016> data: {"value":96.04,"timestamp":"2019-05-30T09:01:42.579"}
2019-05-30T09:01:46.730577> CloudEdge: returned msg from server is 200
2019-05-30T09:01:46.731186> CloudEdge: upload success
2019-05-30T09:01:46.920452> --> cloud end
2019-05-30T09:01:46.920856> 
2019-05-30T09:02:44.673202> --- rxlora. dst=1 type=0x12 src=8 seq=69 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:02:44.673675> 2019-05-30T09:02:44.670251
2019-05-30T09:02:44.674023> rcv ctrl pkt info (^p): 1,18,8,69,14,7,-40
2019-05-30T09:02:44.674328> splitted in: [1, 18, 8, 69, 14, 7, -40]
2019-05-30T09:02:44.674723> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=69 len=14 SNR=7 RSSI=-40)
2019-05-30T09:02:44.675078> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:02:44.675505> splitted in: [125, 5, 12]
2019-05-30T09:02:44.675848> (BW=125 CR=5 SF=12)
2019-05-30T09:02:44.676260> rcv timestamp (^t): 2019-05-30T09:02:44.666
2019-05-30T09:02:44.676703> 
2019-05-30T09:02:44.677112> Got first framing byte
2019-05-30T09:02:44.677456> --> got LoRa data prefix
2019-05-30T09:02:44.677816> --> DATA with_appkey: read app key sequence
2019-05-30T09:02:44.678139> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:02:44.678564> app key disabled
2019-05-30T09:02:44.678983> valid app key: accept data
2019-05-30T09:02:44.679287> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:02:44.679660> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,69,10,7,-40" "125,5,12" "2019-05-30T09:02:44.666" "B827EB4E30A8"
2019-05-30T09:02:48.768523> CloudEdge: uploading
2019-05-30T09:02:48.769219> CloudEdge: run under guest identity, all data is public
2019-05-30T09:02:48.769801> CloudEdge: check if entity exits
2019-05-30T09:02:48.770447> CloudEdge: will issue requests with
2019-05-30T09:02:48.771105> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:02:48.771830> CloudEdge: returned msg from server is 200
2019-05-30T09:02:48.772706> CloudEdge: entity exists
2019-05-30T09:02:48.773421> CloudEdge: check if measurement exits
2019-05-30T09:02:48.774050> CloudEdge: will issue requests with
2019-05-30T09:02:48.774637> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:02:48.775218> CloudEdge: returned msg from server is 200
2019-05-30T09:02:48.775835> CloudEdge: measurement exists
2019-05-30T09:02:48.776427> CloudEdge: will issue requests with
2019-05-30T09:02:48.777824> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:02:48.779606> data: {"value":96.04,"timestamp":"2019-05-30T09:02:44.666"}
2019-05-30T09:02:48.781326> CloudEdge: returned msg from server is 200
2019-05-30T09:02:48.782795> CloudEdge: upload success
2019-05-30T09:02:48.967007> --> cloud end
2019-05-30T09:02:48.967374> 
2019-05-30T09:03:46.760384> --- rxlora. dst=1 type=0x12 src=8 seq=70 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:03:46.760861> 2019-05-30T09:03:46.757504
2019-05-30T09:03:46.761244> rcv ctrl pkt info (^p): 1,18,8,70,14,6,-42
2019-05-30T09:03:46.761588> splitted in: [1, 18, 8, 70, 14, 6, -42]
2019-05-30T09:03:46.761891> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=70 len=14 SNR=6 RSSI=-42)
2019-05-30T09:03:46.762248> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:03:46.762613> splitted in: [125, 5, 12]
2019-05-30T09:03:46.762979> (BW=125 CR=5 SF=12)
2019-05-30T09:03:46.763338> rcv timestamp (^t): 2019-05-30T09:03:46.754
2019-05-30T09:03:46.763756> 
2019-05-30T09:03:46.764084> Got first framing byte
2019-05-30T09:03:46.764363> --> got LoRa data prefix
2019-05-30T09:03:46.764639> --> DATA with_appkey: read app key sequence
2019-05-30T09:03:46.764914> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:03:46.765183> app key disabled
2019-05-30T09:03:46.765451> valid app key: accept data
2019-05-30T09:03:46.765728> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:03:46.766005> python /app/data_acq/edgeCall.py "TC/95.91" "1,18,8,70,10,6,-42" "125,5,12" "2019-05-30T09:03:46.754" "B827EB4E30A8"
2019-05-30T09:03:50.702573> CloudEdge: uploading
2019-05-30T09:03:50.703274> CloudEdge: run under guest identity, all data is public
2019-05-30T09:03:50.703846> CloudEdge: check if entity exits
2019-05-30T09:03:50.704427> CloudEdge: will issue requests with
2019-05-30T09:03:50.705056> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:03:50.705672> CloudEdge: returned msg from server is 200
2019-05-30T09:03:50.706321> CloudEdge: entity exists
2019-05-30T09:03:50.707137> CloudEdge: check if measurement exits
2019-05-30T09:03:50.707922> CloudEdge: will issue requests with
2019-05-30T09:03:50.708529> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:03:50.709093> CloudEdge: returned msg from server is 200
2019-05-30T09:03:50.709661> CloudEdge: measurement exists
2019-05-30T09:03:50.710215> CloudEdge: will issue requests with
2019-05-30T09:03:50.710787> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:03:50.711349> data: {"value":95.91,"timestamp":"2019-05-30T09:03:46.754"}
2019-05-30T09:03:50.711927> CloudEdge: returned msg from server is 200
2019-05-30T09:03:50.712497> CloudEdge: upload success
2019-05-30T09:03:50.900176> --> cloud end
2019-05-30T09:03:50.900542> 
2019-05-30T09:04:48.846054> --- rxlora. dst=1 type=0x12 src=8 seq=71 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:04:48.846467> 2019-05-30T09:04:48.843220
2019-05-30T09:04:48.846859> rcv ctrl pkt info (^p): 1,18,8,71,14,7,-42
2019-05-30T09:04:48.847222> splitted in: [1, 18, 8, 71, 14, 7, -42]
2019-05-30T09:04:48.847545> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=71 len=14 SNR=7 RSSI=-42)
2019-05-30T09:04:48.847838> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:04:48.848132> splitted in: [125, 5, 12]
2019-05-30T09:04:48.848647> (BW=125 CR=5 SF=12)
2019-05-30T09:04:48.848960> rcv timestamp (^t): 2019-05-30T09:04:48.839
2019-05-30T09:04:48.849332> 
2019-05-30T09:04:48.849679> Got first framing byte
2019-05-30T09:04:48.850040> --> got LoRa data prefix
2019-05-30T09:04:48.850364> --> DATA with_appkey: read app key sequence
2019-05-30T09:04:48.850748> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:04:48.851112> app key disabled
2019-05-30T09:04:48.851472> valid app key: accept data
2019-05-30T09:04:48.851817> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:04:48.852169> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,71,10,7,-42" "125,5,12" "2019-05-30T09:04:48.839" "B827EB4E30A8"
2019-05-30T09:04:53.173741> CloudEdge: uploading
2019-05-30T09:04:53.174607> CloudEdge: run under guest identity, all data is public
2019-05-30T09:04:53.175334> CloudEdge: check if entity exits
2019-05-30T09:04:53.175965> CloudEdge: will issue requests with
2019-05-30T09:04:53.176728> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:04:53.177474> CloudEdge: returned msg from server is 200
2019-05-30T09:04:53.178084> CloudEdge: entity exists
2019-05-30T09:04:53.178655> CloudEdge: check if measurement exits
2019-05-30T09:04:53.179234> CloudEdge: will issue requests with
2019-05-30T09:04:53.179808> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:04:53.180380> CloudEdge: returned msg from server is 200
2019-05-30T09:04:53.180941> CloudEdge: measurement exists
2019-05-30T09:04:53.181502> CloudEdge: will issue requests with
2019-05-30T09:04:53.182072> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:04:53.182636> data: {"value":96.04,"timestamp":"2019-05-30T09:04:48.839"}
2019-05-30T09:04:53.183198> CloudEdge: returned msg from server is 200
2019-05-30T09:04:53.183762> CloudEdge: upload success
2019-05-30T09:04:53.367140> --> cloud end
2019-05-30T09:04:53.367596> 
2019-05-30T09:05:50.928120> --- rxlora. dst=1 type=0x12 src=8 seq=72 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T09:05:50.928566> 2019-05-30T09:05:50.927724
2019-05-30T09:05:50.928885> rcv ctrl pkt info (^p): 1,18,8,72,14,7,-43
2019-05-30T09:05:50.929189> splitted in: [1, 18, 8, 72, 14, 7, -43]
2019-05-30T09:05:50.929471> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=72 len=14 SNR=7 RSSI=-43)
2019-05-30T09:05:50.929749> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:05:50.930022> splitted in: [125, 5, 12]
2019-05-30T09:05:50.930359> (BW=125 CR=5 SF=12)
2019-05-30T09:05:50.930671> rcv timestamp (^t): 2019-05-30T09:05:50.924
2019-05-30T09:05:50.931019> 
2019-05-30T09:05:50.931365> Got first framing byte
2019-05-30T09:05:50.931658> --> got LoRa data prefix
2019-05-30T09:05:50.931936> --> DATA with_appkey: read app key sequence
2019-05-30T09:05:50.932220> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:05:50.932544> app key disabled
2019-05-30T09:05:50.932875> valid app key: accept data
2019-05-30T09:05:50.933223> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:05:50.933538> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,72,10,7,-43" "125,5,12" "2019-05-30T09:05:50.924" "B827EB4E30A8"
2019-05-30T09:05:55.228936> CloudEdge: uploading
2019-05-30T09:05:55.229796> CloudEdge: run under guest identity, all data is public
2019-05-30T09:05:55.230510> CloudEdge: check if entity exits
2019-05-30T09:05:55.231126> CloudEdge: will issue requests with
2019-05-30T09:05:55.231740> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:05:55.232342> CloudEdge: returned msg from server is 200
2019-05-30T09:05:55.232911> CloudEdge: entity exists
2019-05-30T09:05:55.233454> CloudEdge: check if measurement exits
2019-05-30T09:05:55.234001> CloudEdge: will issue requests with
2019-05-30T09:05:55.234553> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:05:55.235115> CloudEdge: returned msg from server is 200
2019-05-30T09:05:55.236303> CloudEdge: measurement exists
2019-05-30T09:05:55.237426> CloudEdge: will issue requests with
2019-05-30T09:05:55.238151> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:05:55.238941> data: {"value":96.04,"timestamp":"2019-05-30T09:05:50.924"}
2019-05-30T09:05:55.239751> CloudEdge: returned msg from server is 200
2019-05-30T09:05:55.240520> CloudEdge: upload success
2019-05-30T09:05:55.420740> --> cloud end
2019-05-30T09:05:55.421172> 
2019-05-30T09:06:53.013165> --- rxlora. dst=1 type=0x12 src=8 seq=73 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T09:06:53.013609> 2019-05-30T09:06:53.012779
2019-05-30T09:06:53.013928> rcv ctrl pkt info (^p): 1,18,8,73,14,7,-43
2019-05-30T09:06:53.014240> splitted in: [1, 18, 8, 73, 14, 7, -43]
2019-05-30T09:06:53.014533> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=73 len=14 SNR=7 RSSI=-43)
2019-05-30T09:06:53.014821> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:06:53.015106> splitted in: [125, 5, 12]
2019-05-30T09:06:53.015448> (BW=125 CR=5 SF=12)
2019-05-30T09:06:53.015817> rcv timestamp (^t): 2019-05-30T09:06:53.009
2019-05-30T09:06:53.016160> 
2019-05-30T09:06:53.016639> Got first framing byte
2019-05-30T09:06:53.017020> --> got LoRa data prefix
2019-05-30T09:06:53.017318> --> DATA with_appkey: read app key sequence
2019-05-30T09:06:53.017669> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:06:53.018029> app key disabled
2019-05-30T09:06:53.018383> valid app key: accept data
2019-05-30T09:06:53.018747> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:06:53.019160> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,73,10,7,-43" "125,5,12" "2019-05-30T09:06:53.009" "B827EB4E30A8"
2019-05-30T09:06:57.188868> CloudEdge: uploading
2019-05-30T09:06:57.189251> CloudEdge: run under guest identity, all data is public
2019-05-30T09:06:57.189540> CloudEdge: check if entity exits
2019-05-30T09:06:57.189818> CloudEdge: will issue requests with
2019-05-30T09:06:57.190088> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:06:57.190360> CloudEdge: returned msg from server is 200
2019-05-30T09:06:57.190629> CloudEdge: entity exists
2019-05-30T09:06:57.190895> CloudEdge: check if measurement exits
2019-05-30T09:06:57.191160> CloudEdge: will issue requests with
2019-05-30T09:06:57.191426> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:06:57.191713> CloudEdge: returned msg from server is 200
2019-05-30T09:06:57.191980> CloudEdge: measurement exists
2019-05-30T09:06:57.192292> CloudEdge: will issue requests with
2019-05-30T09:06:57.192563> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:06:57.192832> data: {"value":96.04,"timestamp":"2019-05-30T09:06:53.009"}
2019-05-30T09:06:57.193097> CloudEdge: returned msg from server is 200
2019-05-30T09:06:57.193362> CloudEdge: upload success
2019-05-30T09:06:57.391048> --> cloud end
2019-05-30T09:06:57.391424> 
2019-05-30T09:07:55.098202> --- rxlora. dst=1 type=0x12 src=8 seq=74 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:07:55.098666> 2019-05-30T09:07:55.097598
2019-05-30T09:07:55.099051> rcv ctrl pkt info (^p): 1,18,8,74,14,7,-41
2019-05-30T09:07:55.099353> splitted in: [1, 18, 8, 74, 14, 7, -41]
2019-05-30T09:07:55.099632> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=74 len=14 SNR=7 RSSI=-41)
2019-05-30T09:07:55.099908> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:07:55.100253> splitted in: [125, 5, 12]
2019-05-30T09:07:55.100590> (BW=125 CR=5 SF=12)
2019-05-30T09:07:55.100887> rcv timestamp (^t): 2019-05-30T09:07:55.094
2019-05-30T09:07:55.101172> 
2019-05-30T09:07:55.101539> Got first framing byte
2019-05-30T09:07:55.101825> --> got LoRa data prefix
2019-05-30T09:07:55.102116> --> DATA with_appkey: read app key sequence
2019-05-30T09:07:55.102460> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:07:55.102804> app key disabled
2019-05-30T09:07:55.103162> valid app key: accept data
2019-05-30T09:07:55.103505> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:07:55.103900> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,74,10,7,-41" "125,5,12" "2019-05-30T09:07:55.094" "B827EB4E30A8"
2019-05-30T09:07:59.877684> CloudEdge: uploading
2019-05-30T09:07:59.878399> CloudEdge: run under guest identity, all data is public
2019-05-30T09:07:59.883727> CloudEdge: check if entity exits
2019-05-30T09:07:59.884172> CloudEdge: will issue requests with
2019-05-30T09:07:59.884491> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:07:59.884789> CloudEdge: returned msg from server is 200
2019-05-30T09:07:59.885076> CloudEdge: entity exists
2019-05-30T09:07:59.885358> CloudEdge: check if measurement exits
2019-05-30T09:07:59.885700> CloudEdge: will issue requests with
2019-05-30T09:07:59.886017> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:07:59.886312> CloudEdge: returned msg from server is 200
2019-05-30T09:07:59.886730> CloudEdge: measurement exists
2019-05-30T09:07:59.887071> CloudEdge: will issue requests with
2019-05-30T09:07:59.887365> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:07:59.887913> data: {"value":96.04,"timestamp":"2019-05-30T09:07:55.094"}
2019-05-30T09:07:59.888217> CloudEdge: returned msg from server is 200
2019-05-30T09:07:59.888504> CloudEdge: upload success
2019-05-30T09:08:00.038708> --> cloud end
2019-05-30T09:08:00.039085> 
2019-05-30T09:08:57.187930> --- rxlora. dst=1 type=0x12 src=8 seq=75 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:08:57.188377> 2019-05-30T09:08:57.184820
2019-05-30T09:08:57.188693> rcv ctrl pkt info (^p): 1,18,8,75,14,6,-42
2019-05-30T09:08:57.188981> splitted in: [1, 18, 8, 75, 14, 6, -42]
2019-05-30T09:08:57.189267> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=75 len=14 SNR=6 RSSI=-42)
2019-05-30T09:08:57.189594> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:08:57.189930> splitted in: [125, 5, 12]
2019-05-30T09:08:57.190273> (BW=125 CR=5 SF=12)
2019-05-30T09:08:57.190597> rcv timestamp (^t): 2019-05-30T09:08:57.181
2019-05-30T09:08:57.191037> 
2019-05-30T09:08:57.191430> Got first framing byte
2019-05-30T09:08:57.191789> --> got LoRa data prefix
2019-05-30T09:08:57.192192> --> DATA with_appkey: read app key sequence
2019-05-30T09:08:57.192731> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:08:57.193451> app key disabled
2019-05-30T09:08:57.194094> valid app key: accept data
2019-05-30T09:08:57.194795> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:08:57.195437> python /app/data_acq/edgeCall.py "TC/96.04" "1,18,8,75,10,6,-42" "125,5,12" "2019-05-30T09:08:57.181" "B827EB4E30A8"
2019-05-30T09:09:01.612206> CloudEdge: uploading
2019-05-30T09:09:01.613138> CloudEdge: run under guest identity, all data is public
2019-05-30T09:09:01.614031> CloudEdge: check if entity exits
2019-05-30T09:09:01.614872> CloudEdge: will issue requests with
2019-05-30T09:09:01.615704> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:09:01.616506> CloudEdge: returned msg from server is 200
2019-05-30T09:09:01.617452> CloudEdge: entity exists
2019-05-30T09:09:01.618202> CloudEdge: check if measurement exits
2019-05-30T09:09:01.618921> CloudEdge: will issue requests with
2019-05-30T09:09:01.619635> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:09:01.620342> CloudEdge: returned msg from server is 200
2019-05-30T09:09:01.621046> CloudEdge: measurement exists
2019-05-30T09:09:01.621981> CloudEdge: will issue requests with
2019-05-30T09:09:01.622811> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:09:01.623543> data: {"value":96.04,"timestamp":"2019-05-30T09:08:57.181"}
2019-05-30T09:09:01.624237> CloudEdge: returned msg from server is 200
2019-05-30T09:09:01.624932> CloudEdge: upload success
2019-05-30T09:09:01.796934> --> cloud end
2019-05-30T09:09:01.797307> 
2019-05-30T09:09:10.643579> 2019-05-30 09:09:10.642474
2019-05-30T09:09:10.644283> post status: gw ON
2019-05-30T09:09:10.644845> post status: executing periodic tasks
2019-05-30T09:09:11.736428> no timezone support, time will be expressed only in local time
2019-05-30T09:09:11.743239> post status: start running
2019-05-30T09:09:12.726933> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:09:12.727331> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:09:12.727636> get_gps.py: invalid serial port
2019-05-30T09:09:12.875816> post status: dynamic GPS is requested
2019-05-30T09:09:12.876430> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:09:12.877315> post status get GPS: no GPS coordinates
2019-05-30T09:09:12.877923> post status: show current GPS position
2019-05-30T09:09:12.878479> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:09:12.879024> post status: exiting
2019-05-30T09:09:59.275131> --- rxlora. dst=1 type=0x12 src=8 seq=76 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T09:09:59.275537> 2019-05-30T09:09:59.272294
2019-05-30T09:09:59.275807> rcv ctrl pkt info (^p): 1,18,8,76,14,6,-43
2019-05-30T09:09:59.276072> splitted in: [1, 18, 8, 76, 14, 6, -43]
2019-05-30T09:09:59.276336> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=76 len=14 SNR=6 RSSI=-43)
2019-05-30T09:09:59.276690> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:09:59.277032> splitted in: [125, 5, 12]
2019-05-30T09:09:59.277464> (BW=125 CR=5 SF=12)
2019-05-30T09:09:59.277850> rcv timestamp (^t): 2019-05-30T09:09:59.268
2019-05-30T09:09:59.278160> 
2019-05-30T09:09:59.278452> Got first framing byte
2019-05-30T09:09:59.278805> --> got LoRa data prefix
2019-05-30T09:09:59.279204> --> DATA with_appkey: read app key sequence
2019-05-30T09:09:59.279653> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:09:59.280039> app key disabled
2019-05-30T09:09:59.280566> valid app key: accept data
2019-05-30T09:09:59.281328> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:09:59.282081> python /app/data_acq/edgeCall.py "TC/95.91" "1,18,8,76,10,6,-43" "125,5,12" "2019-05-30T09:09:59.268" "B827EB4E30A8"
2019-05-30T09:10:03.534635> CloudEdge: uploading
2019-05-30T09:10:03.535252> CloudEdge: run under guest identity, all data is public
2019-05-30T09:10:03.535806> CloudEdge: check if entity exits
2019-05-30T09:10:03.536721> CloudEdge: will issue requests with
2019-05-30T09:10:03.537611> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:10:03.538495> CloudEdge: returned msg from server is 200
2019-05-30T09:10:03.539471> CloudEdge: entity exists
2019-05-30T09:10:03.540440> CloudEdge: check if measurement exits
2019-05-30T09:10:03.541404> CloudEdge: will issue requests with
2019-05-30T09:10:03.542123> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:10:03.542779> CloudEdge: returned msg from server is 200
2019-05-30T09:10:03.543481> CloudEdge: measurement exists
2019-05-30T09:10:03.544057> CloudEdge: will issue requests with
2019-05-30T09:10:03.544880> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:10:03.546574> data: {"value":95.91,"timestamp":"2019-05-30T09:09:59.268"}
2019-05-30T09:10:03.547749> CloudEdge: returned msg from server is 200
2019-05-30T09:10:03.548615> CloudEdge: upload success
2019-05-30T09:10:03.704011> --> cloud end
2019-05-30T09:10:03.704409> 
2019-05-30T09:11:01.363074> --- rxlora. dst=1 type=0x12 src=8 seq=77 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:11:01.363547> 2019-05-30T09:11:01.360177
2019-05-30T09:11:01.363870> rcv ctrl pkt info (^p): 1,18,8,77,14,6,-42
2019-05-30T09:11:01.364164> splitted in: [1, 18, 8, 77, 14, 6, -42]
2019-05-30T09:11:01.364461> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=77 len=14 SNR=6 RSSI=-42)
2019-05-30T09:11:01.364801> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:11:01.365149> splitted in: [125, 5, 12]
2019-05-30T09:11:01.365519> (BW=125 CR=5 SF=12)
2019-05-30T09:11:01.365848> rcv timestamp (^t): 2019-05-30T09:11:01.356
2019-05-30T09:11:01.366265> 
2019-05-30T09:11:01.366711> Got first framing byte
2019-05-30T09:11:01.367127> --> got LoRa data prefix
2019-05-30T09:11:01.367500> --> DATA with_appkey: read app key sequence
2019-05-30T09:11:01.367851> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:11:01.368231> app key disabled
2019-05-30T09:11:01.368732> valid app key: accept data
2019-05-30T09:11:01.369063> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:11:01.369432> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,77,10,6,-42" "125,5,12" "2019-05-30T09:11:01.356" "B827EB4E30A8"
2019-05-30T09:11:05.405552> CloudEdge: uploading
2019-05-30T09:11:05.406377> CloudEdge: run under guest identity, all data is public
2019-05-30T09:11:05.410916> CloudEdge: check if entity exits
2019-05-30T09:11:05.411696> CloudEdge: will issue requests with
2019-05-30T09:11:05.412316> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:11:05.412912> CloudEdge: returned msg from server is 200
2019-05-30T09:11:05.414544> CloudEdge: entity exists
2019-05-30T09:11:05.415377> CloudEdge: check if measurement exits
2019-05-30T09:11:05.416096> CloudEdge: will issue requests with
2019-05-30T09:11:05.416971> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:11:05.417751> CloudEdge: returned msg from server is 200
2019-05-30T09:11:05.418457> CloudEdge: measurement exists
2019-05-30T09:11:05.419144> CloudEdge: will issue requests with
2019-05-30T09:11:05.419844> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:11:05.420536> data: {"value":95.97,"timestamp":"2019-05-30T09:11:01.356"}
2019-05-30T09:11:05.421204> CloudEdge: returned msg from server is 200
2019-05-30T09:11:05.421890> CloudEdge: upload success
2019-05-30T09:11:05.634539> --> cloud end
2019-05-30T09:11:05.634973> 
2019-05-30T09:11:21.889981> Low-level gw status ON
2019-05-30T09:12:03.447326> --- rxlora. dst=1 type=0x12 src=8 seq=78 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:12:03.447812> 2019-05-30T09:12:03.444458
2019-05-30T09:12:03.448129> rcv ctrl pkt info (^p): 1,18,8,78,14,6,-42
2019-05-30T09:12:03.448432> splitted in: [1, 18, 8, 78, 14, 6, -42]
2019-05-30T09:12:03.448712> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=78 len=14 SNR=6 RSSI=-42)
2019-05-30T09:12:03.449081> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:12:03.449442> splitted in: [125, 5, 12]
2019-05-30T09:12:03.449793> (BW=125 CR=5 SF=12)
2019-05-30T09:12:03.450137> rcv timestamp (^t): 2019-05-30T09:12:03.441
2019-05-30T09:12:03.450517> 
2019-05-30T09:12:03.450889> Got first framing byte
2019-05-30T09:12:03.451250> --> got LoRa data prefix
2019-05-30T09:12:03.451589> --> DATA with_appkey: read app key sequence
2019-05-30T09:12:03.451927> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:12:03.452240> app key disabled
2019-05-30T09:12:03.452611> valid app key: accept data
2019-05-30T09:12:03.453059> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:12:03.453365> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,78,10,6,-42" "125,5,12" "2019-05-30T09:12:03.441" "B827EB4E30A8"
2019-05-30T09:12:07.661891> CloudEdge: uploading
2019-05-30T09:12:07.662747> CloudEdge: run under guest identity, all data is public
2019-05-30T09:12:07.663487> CloudEdge: check if entity exits
2019-05-30T09:12:07.664151> CloudEdge: will issue requests with
2019-05-30T09:12:07.664801> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:12:07.665441> CloudEdge: returned msg from server is 200
2019-05-30T09:12:07.666050> CloudEdge: entity exists
2019-05-30T09:12:07.666797> CloudEdge: check if measurement exits
2019-05-30T09:12:07.667454> CloudEdge: will issue requests with
2019-05-30T09:12:07.668061> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:12:07.668655> CloudEdge: returned msg from server is 200
2019-05-30T09:12:07.669237> CloudEdge: measurement exists
2019-05-30T09:12:07.669814> CloudEdge: will issue requests with
2019-05-30T09:12:07.670394> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:12:07.670966> data: {"value":95.78,"timestamp":"2019-05-30T09:12:03.441"}
2019-05-30T09:12:07.671542> CloudEdge: returned msg from server is 200
2019-05-30T09:12:07.672118> CloudEdge: upload success
2019-05-30T09:12:07.861191> --> cloud end
2019-05-30T09:12:07.861590> 
2019-05-30T09:13:05.534128> --- rxlora. dst=1 type=0x12 src=8 seq=79 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:13:05.534626> 2019-05-30T09:13:05.531114
2019-05-30T09:13:05.534965> rcv ctrl pkt info (^p): 1,18,8,79,14,7,-41
2019-05-30T09:13:05.535260> splitted in: [1, 18, 8, 79, 14, 7, -41]
2019-05-30T09:13:05.535578> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=79 len=14 SNR=7 RSSI=-41)
2019-05-30T09:13:05.535931> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:13:05.536270> splitted in: [125, 5, 12]
2019-05-30T09:13:05.536747> (BW=125 CR=5 SF=12)
2019-05-30T09:13:05.537288> rcv timestamp (^t): 2019-05-30T09:13:05.527
2019-05-30T09:13:05.537716> 
2019-05-30T09:13:05.538090> Got first framing byte
2019-05-30T09:13:05.538439> --> got LoRa data prefix
2019-05-30T09:13:05.538795> --> DATA with_appkey: read app key sequence
2019-05-30T09:13:05.539128> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:13:05.539597> app key disabled
2019-05-30T09:13:05.539994> valid app key: accept data
2019-05-30T09:13:05.540355> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:13:05.540729> python /app/data_acq/edgeCall.py "TC/95.97" "1,18,8,79,10,7,-41" "125,5,12" "2019-05-30T09:13:05.527" "B827EB4E30A8"
2019-05-30T09:13:09.705861> CloudEdge: uploading
2019-05-30T09:13:09.706274> CloudEdge: run under guest identity, all data is public
2019-05-30T09:13:09.706682> CloudEdge: check if entity exits
2019-05-30T09:13:09.707127> CloudEdge: will issue requests with
2019-05-30T09:13:09.707483> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:13:09.707799> CloudEdge: returned msg from server is 200
2019-05-30T09:13:09.708101> CloudEdge: entity exists
2019-05-30T09:13:09.708400> CloudEdge: check if measurement exits
2019-05-30T09:13:09.708770> CloudEdge: will issue requests with
2019-05-30T09:13:09.709078> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:13:09.709377> CloudEdge: returned msg from server is 200
2019-05-30T09:13:09.709663> CloudEdge: measurement exists
2019-05-30T09:13:09.709948> CloudEdge: will issue requests with
2019-05-30T09:13:09.710229> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:13:09.710513> data: {"value":95.97,"timestamp":"2019-05-30T09:13:05.527"}
2019-05-30T09:13:09.710796> CloudEdge: returned msg from server is 200
2019-05-30T09:13:09.711083> CloudEdge: upload success
2019-05-30T09:13:09.870573> --> cloud end
2019-05-30T09:13:09.870936> 
2019-05-30T09:14:07.622997> --- rxlora. dst=1 type=0x12 src=8 seq=80 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:14:07.623472> 2019-05-30T09:14:07.622602
2019-05-30T09:14:07.623785> rcv ctrl pkt info (^p): 1,18,8,80,14,7,-40
2019-05-30T09:14:07.624093> splitted in: [1, 18, 8, 80, 14, 7, -40]
2019-05-30T09:14:07.624376> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=80 len=14 SNR=7 RSSI=-40)
2019-05-30T09:14:07.624661> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:14:07.624934> splitted in: [125, 5, 12]
2019-05-30T09:14:07.625272> (BW=125 CR=5 SF=12)
2019-05-30T09:14:07.625599> rcv timestamp (^t): 2019-05-30T09:14:07.615
2019-05-30T09:14:07.625891> 
2019-05-30T09:14:07.626236> Got first framing byte
2019-05-30T09:14:07.626627> --> got LoRa data prefix
2019-05-30T09:14:07.626974> --> DATA with_appkey: read app key sequence
2019-05-30T09:14:07.627276> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:14:07.627611> app key disabled
2019-05-30T09:14:07.627934> valid app key: accept data
2019-05-30T09:14:07.628290> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:14:07.628602> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,80,10,7,-40" "125,5,12" "2019-05-30T09:14:07.615" "B827EB4E30A8"
2019-05-30T09:14:11.742141> CloudEdge: uploading
2019-05-30T09:14:11.742843> CloudEdge: run under guest identity, all data is public
2019-05-30T09:14:11.743415> CloudEdge: check if entity exits
2019-05-30T09:14:11.744063> CloudEdge: will issue requests with
2019-05-30T09:14:11.744694> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:14:11.745297> CloudEdge: returned msg from server is 200
2019-05-30T09:14:11.745878> CloudEdge: entity exists
2019-05-30T09:14:11.746473> CloudEdge: check if measurement exits
2019-05-30T09:14:11.747200> CloudEdge: will issue requests with
2019-05-30T09:14:11.747792> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:14:11.748356> CloudEdge: returned msg from server is 200
2019-05-30T09:14:11.748919> CloudEdge: measurement exists
2019-05-30T09:14:11.749482> CloudEdge: will issue requests with
2019-05-30T09:14:11.750063> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:14:11.750644> data: {"value":95.78,"timestamp":"2019-05-30T09:14:07.615"}
2019-05-30T09:14:11.751209> CloudEdge: returned msg from server is 200
2019-05-30T09:14:11.751777> CloudEdge: upload success
2019-05-30T09:14:11.931536> --> cloud end
2019-05-30T09:14:11.931969> 
2019-05-30T09:15:09.707681> --- rxlora. dst=1 type=0x12 src=8 seq=81 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:15:09.708203> 2019-05-30T09:15:09.707247
2019-05-30T09:15:09.708629> rcv ctrl pkt info (^p): 1,18,8,81,14,7,-41
2019-05-30T09:15:09.708993> splitted in: [1, 18, 8, 81, 14, 7, -41]
2019-05-30T09:15:09.709344> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=81 len=14 SNR=7 RSSI=-41)
2019-05-30T09:15:09.709674> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:15:09.710065> splitted in: [125, 5, 12]
2019-05-30T09:15:09.710493> (BW=125 CR=5 SF=12)
2019-05-30T09:15:09.710823> rcv timestamp (^t): 2019-05-30T09:15:09.703
2019-05-30T09:15:09.711200> 
2019-05-30T09:15:09.711674> Got first framing byte
2019-05-30T09:15:09.712086> --> got LoRa data prefix
2019-05-30T09:15:09.712460> --> DATA with_appkey: read app key sequence
2019-05-30T09:15:09.712934> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:15:09.713353> app key disabled
2019-05-30T09:15:09.713899> valid app key: accept data
2019-05-30T09:15:09.714345> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:15:09.714801> python /app/data_acq/edgeCall.py "TC/95.84" "1,18,8,81,10,7,-41" "125,5,12" "2019-05-30T09:15:09.703" "B827EB4E30A8"
2019-05-30T09:15:13.925853> CloudEdge: uploading
2019-05-30T09:15:13.926952> CloudEdge: run under guest identity, all data is public
2019-05-30T09:15:13.927896> CloudEdge: check if entity exits
2019-05-30T09:15:13.928749> CloudEdge: will issue requests with
2019-05-30T09:15:13.929627> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:15:13.930468> CloudEdge: returned msg from server is 200
2019-05-30T09:15:13.931272> CloudEdge: entity exists
2019-05-30T09:15:13.932022> CloudEdge: check if measurement exits
2019-05-30T09:15:13.932755> CloudEdge: will issue requests with
2019-05-30T09:15:13.933485> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:15:13.934205> CloudEdge: returned msg from server is 200
2019-05-30T09:15:13.934935> CloudEdge: measurement exists
2019-05-30T09:15:13.935650> CloudEdge: will issue requests with
2019-05-30T09:15:13.936365> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:15:13.937364> data: {"value":95.84,"timestamp":"2019-05-30T09:15:09.703"}
2019-05-30T09:15:13.938124> CloudEdge: returned msg from server is 200
2019-05-30T09:15:13.938831> CloudEdge: upload success
2019-05-30T09:15:14.121356> --> cloud end
2019-05-30T09:15:14.121758> 
2019-05-30T09:16:11.796747> --- rxlora. dst=1 type=0x12 src=8 seq=82 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:16:11.797342> 2019-05-30T09:16:11.796231
2019-05-30T09:16:11.797758> rcv ctrl pkt info (^p): 1,18,8,82,14,7,-40
2019-05-30T09:16:11.798195> splitted in: [1, 18, 8, 82, 14, 7, -40]
2019-05-30T09:16:11.798557> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=82 len=14 SNR=7 RSSI=-40)
2019-05-30T09:16:11.798944> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:16:11.799371> splitted in: [125, 5, 12]
2019-05-30T09:16:11.799799> (BW=125 CR=5 SF=12)
2019-05-30T09:16:11.800141> rcv timestamp (^t): 2019-05-30T09:16:11.792
2019-05-30T09:16:11.800538> 
2019-05-30T09:16:11.800988> Got first framing byte
2019-05-30T09:16:11.801436> --> got LoRa data prefix
2019-05-30T09:16:11.801882> --> DATA with_appkey: read app key sequence
2019-05-30T09:16:11.802356> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:16:11.802833> app key disabled
2019-05-30T09:16:11.803310> valid app key: accept data
2019-05-30T09:16:11.803711> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:16:11.804166> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,82,10,7,-40" "125,5,12" "2019-05-30T09:16:11.792" "B827EB4E30A8"
2019-05-30T09:16:16.182874> CloudEdge: uploading
2019-05-30T09:16:16.183464> CloudEdge: run under guest identity, all data is public
2019-05-30T09:16:16.183866> CloudEdge: check if entity exits
2019-05-30T09:16:16.184194> CloudEdge: will issue requests with
2019-05-30T09:16:16.184510> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:16:16.184811> CloudEdge: returned msg from server is 200
2019-05-30T09:16:16.185111> CloudEdge: entity exists
2019-05-30T09:16:16.185425> CloudEdge: check if measurement exits
2019-05-30T09:16:16.185725> CloudEdge: will issue requests with
2019-05-30T09:16:16.186007> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:16:16.186286> CloudEdge: returned msg from server is 200
2019-05-30T09:16:16.186684> CloudEdge: measurement exists
2019-05-30T09:16:16.187042> CloudEdge: will issue requests with
2019-05-30T09:16:16.187619> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:16:16.187972> data: {"value":95.71,"timestamp":"2019-05-30T09:16:11.792"}
2019-05-30T09:16:16.188278> CloudEdge: returned msg from server is 200
2019-05-30T09:16:16.188571> CloudEdge: upload success
2019-05-30T09:16:16.404424> --> cloud end
2019-05-30T09:16:16.405150> 
2019-05-30T09:17:13.885144> --- rxlora. dst=1 type=0x12 src=8 seq=83 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:17:13.887121> 2019-05-30T09:17:13.885381
2019-05-30T09:17:13.887557> rcv ctrl pkt info (^p): 1,18,8,83,14,7,-41
2019-05-30T09:17:13.887914> splitted in: [1, 18, 8, 83, 14, 7, -41]
2019-05-30T09:17:13.888277> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=83 len=14 SNR=7 RSSI=-41)
2019-05-30T09:17:13.888592> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:17:13.888877> splitted in: [125, 5, 12]
2019-05-30T09:17:13.889180> (BW=125 CR=5 SF=12)
2019-05-30T09:17:13.889476> rcv timestamp (^t): 2019-05-30T09:17:13.881
2019-05-30T09:17:13.889756> 
2019-05-30T09:17:13.890070> Got first framing byte
2019-05-30T09:17:13.890425> --> got LoRa data prefix
2019-05-30T09:17:13.890768> --> DATA with_appkey: read app key sequence
2019-05-30T09:17:13.891095> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:17:13.891463> app key disabled
2019-05-30T09:17:13.891828> valid app key: accept data
2019-05-30T09:17:13.892188> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:17:13.892533> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,83,10,7,-41" "125,5,12" "2019-05-30T09:17:13.881" "B827EB4E30A8"
2019-05-30T09:17:17.935672> CloudEdge: uploading
2019-05-30T09:17:17.936489> CloudEdge: run under guest identity, all data is public
2019-05-30T09:17:17.937490> CloudEdge: check if entity exits
2019-05-30T09:17:17.938167> CloudEdge: will issue requests with
2019-05-30T09:17:17.938795> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:17:17.939408> CloudEdge: returned msg from server is 200
2019-05-30T09:17:17.939980> CloudEdge: entity exists
2019-05-30T09:17:17.940539> CloudEdge: check if measurement exits
2019-05-30T09:17:17.941089> CloudEdge: will issue requests with
2019-05-30T09:17:17.941651> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:17:17.942258> CloudEdge: returned msg from server is 200
2019-05-30T09:17:17.942829> CloudEdge: measurement exists
2019-05-30T09:17:17.943393> CloudEdge: will issue requests with
2019-05-30T09:17:17.943957> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:17:17.944528> data: {"value":95.71,"timestamp":"2019-05-30T09:17:13.881"}
2019-05-30T09:17:17.945118> CloudEdge: returned msg from server is 200
2019-05-30T09:17:17.945683> CloudEdge: upload success
2019-05-30T09:17:18.103495> --> cloud end
2019-05-30T09:17:18.103890> 
2019-05-30T09:18:15.976432> --- rxlora. dst=1 type=0x12 src=8 seq=84 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:18:15.977078> 2019-05-30T09:18:15.975255
2019-05-30T09:18:15.983975> rcv ctrl pkt info (^p): 1,18,8,84,14,7,-41
2019-05-30T09:18:15.984550> splitted in: [1, 18, 8, 84, 14, 7, -41]
2019-05-30T09:18:15.984970> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=84 len=14 SNR=7 RSSI=-41)
2019-05-30T09:18:15.985300> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:18:15.985722> splitted in: [125, 5, 12]
2019-05-30T09:18:15.986039> (BW=125 CR=5 SF=12)
2019-05-30T09:18:15.986356> rcv timestamp (^t): 2019-05-30T09:18:15.971
2019-05-30T09:18:15.987004> 
2019-05-30T09:18:15.987519> Got first framing byte
2019-05-30T09:18:15.987821> --> got LoRa data prefix
2019-05-30T09:18:15.988108> --> DATA with_appkey: read app key sequence
2019-05-30T09:18:15.988386> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:18:15.988659> app key disabled
2019-05-30T09:18:15.988947> valid app key: accept data
2019-05-30T09:18:15.989230> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:18:15.989564> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,84,10,7,-41" "125,5,12" "2019-05-30T09:18:15.971" "B827EB4E30A8"
2019-05-30T09:18:20.400907> CloudEdge: uploading
2019-05-30T09:18:20.402304> CloudEdge: run under guest identity, all data is public
2019-05-30T09:18:20.403096> CloudEdge: check if entity exits
2019-05-30T09:18:20.403666> CloudEdge: will issue requests with
2019-05-30T09:18:20.404220> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:18:20.404766> CloudEdge: returned msg from server is 200
2019-05-30T09:18:20.405316> CloudEdge: entity exists
2019-05-30T09:18:20.405859> CloudEdge: check if measurement exits
2019-05-30T09:18:20.406404> CloudEdge: will issue requests with
2019-05-30T09:18:20.417685> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:18:20.418754> CloudEdge: returned msg from server is 200
2019-05-30T09:18:20.419679> CloudEdge: measurement exists
2019-05-30T09:18:20.420542> CloudEdge: will issue requests with
2019-05-30T09:18:20.421350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:18:20.422105> data: {"value":95.71,"timestamp":"2019-05-30T09:18:15.971"}
2019-05-30T09:18:20.422850> CloudEdge: returned msg from server is 200
2019-05-30T09:18:20.423670> CloudEdge: upload success
2019-05-30T09:18:20.614665> --> cloud end
2019-05-30T09:18:20.615043> 
2019-05-30T09:19:13.080405> 2019-05-30 09:19:13.076697
2019-05-30T09:19:13.081268> post status: gw ON
2019-05-30T09:19:13.081972> post status: executing periodic tasks
2019-05-30T09:19:14.178140> no timezone support, time will be expressed only in local time
2019-05-30T09:19:14.178514> post status: start running
2019-05-30T09:19:15.244039> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:19:15.244453> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:19:15.244741> get_gps.py: invalid serial port
2019-05-30T09:19:15.386932> post status: dynamic GPS is requested
2019-05-30T09:19:15.387473> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:19:15.387864> post status get GPS: no GPS coordinates
2019-05-30T09:19:15.388171> post status: show current GPS position
2019-05-30T09:19:15.388459> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:19:15.388751> post status: exiting
2019-05-30T09:19:18.069758> --- rxlora. dst=1 type=0x12 src=8 seq=85 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:19:18.070187> 2019-05-30T09:19:18.066822
2019-05-30T09:19:18.070512> rcv ctrl pkt info (^p): 1,18,8,85,14,7,-41
2019-05-30T09:19:18.070809> splitted in: [1, 18, 8, 85, 14, 7, -41]
2019-05-30T09:19:18.071096> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=85 len=14 SNR=7 RSSI=-41)
2019-05-30T09:19:18.071429> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:19:18.071790> splitted in: [125, 5, 12]
2019-05-30T09:19:18.072143> (BW=125 CR=5 SF=12)
2019-05-30T09:19:18.072480> rcv timestamp (^t): 2019-05-30T09:19:18.063
2019-05-30T09:19:18.072814> 
2019-05-30T09:19:18.073087> Got first framing byte
2019-05-30T09:19:18.073351> --> got LoRa data prefix
2019-05-30T09:19:18.073615> --> DATA with_appkey: read app key sequence
2019-05-30T09:19:18.073882> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:19:18.074143> app key disabled
2019-05-30T09:19:18.074404> valid app key: accept data
2019-05-30T09:19:18.074665> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:19:18.074931> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,85,10,7,-41" "125,5,12" "2019-05-30T09:19:18.063" "B827EB4E30A8"
2019-05-30T09:19:22.252917> CloudEdge: uploading
2019-05-30T09:19:22.253932> CloudEdge: run under guest identity, all data is public
2019-05-30T09:19:22.254827> CloudEdge: check if entity exits
2019-05-30T09:19:22.255655> CloudEdge: will issue requests with
2019-05-30T09:19:22.256487> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:19:22.257702> CloudEdge: returned msg from server is 200
2019-05-30T09:19:22.258456> CloudEdge: entity exists
2019-05-30T09:19:22.259179> CloudEdge: check if measurement exits
2019-05-30T09:19:22.259871> CloudEdge: will issue requests with
2019-05-30T09:19:22.260567> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:19:22.261324> CloudEdge: returned msg from server is 200
2019-05-30T09:19:22.262055> CloudEdge: measurement exists
2019-05-30T09:19:22.262782> CloudEdge: will issue requests with
2019-05-30T09:19:22.263496> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:19:22.264207> data: {"value":95.71,"timestamp":"2019-05-30T09:19:18.063"}
2019-05-30T09:19:22.264958> CloudEdge: returned msg from server is 200
2019-05-30T09:19:22.265690> CloudEdge: upload success
2019-05-30T09:19:22.439393> --> cloud end
2019-05-30T09:19:22.439753> 
2019-05-30T09:20:20.160063> --- rxlora. dst=1 type=0x12 src=8 seq=86 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:20:20.160523> 2019-05-30T09:20:20.159594
2019-05-30T09:20:20.160858> rcv ctrl pkt info (^p): 1,18,8,86,14,7,-40
2019-05-30T09:20:20.161176> splitted in: [1, 18, 8, 86, 14, 7, -40]
2019-05-30T09:20:20.161458> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=86 len=14 SNR=7 RSSI=-40)
2019-05-30T09:20:20.161732> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:20:20.162009> splitted in: [125, 5, 12]
2019-05-30T09:20:20.162349> (BW=125 CR=5 SF=12)
2019-05-30T09:20:20.162650> rcv timestamp (^t): 2019-05-30T09:20:20.156
2019-05-30T09:20:20.162931> 
2019-05-30T09:20:20.163294> Got first framing byte
2019-05-30T09:20:20.163584> --> got LoRa data prefix
2019-05-30T09:20:20.163858> --> DATA with_appkey: read app key sequence
2019-05-30T09:20:20.164258> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:20:20.164641> app key disabled
2019-05-30T09:20:20.164968> valid app key: accept data
2019-05-30T09:20:20.165312> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:20:20.165691> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,86,10,7,-40" "125,5,12" "2019-05-30T09:20:20.156" "B827EB4E30A8"
2019-05-30T09:20:24.508719> CloudEdge: uploading
2019-05-30T09:20:24.509722> CloudEdge: run under guest identity, all data is public
2019-05-30T09:20:24.510646> CloudEdge: check if entity exits
2019-05-30T09:20:24.511492> CloudEdge: will issue requests with
2019-05-30T09:20:24.512353> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:20:24.513166> CloudEdge: returned msg from server is 200
2019-05-30T09:20:24.513904> CloudEdge: entity exists
2019-05-30T09:20:24.514627> CloudEdge: check if measurement exits
2019-05-30T09:20:24.515337> CloudEdge: will issue requests with
2019-05-30T09:20:24.516053> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:20:24.516957> CloudEdge: returned msg from server is 200
2019-05-30T09:20:24.517752> CloudEdge: measurement exists
2019-05-30T09:20:24.518457> CloudEdge: will issue requests with
2019-05-30T09:20:24.519181> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:20:24.519896> data: {"value":95.71,"timestamp":"2019-05-30T09:20:20.156"}
2019-05-30T09:20:24.520593> CloudEdge: returned msg from server is 200
2019-05-30T09:20:24.521276> CloudEdge: upload success
2019-05-30T09:20:24.699079> --> cloud end
2019-05-30T09:20:24.699536> 
2019-05-30T09:21:22.256239> --- rxlora. dst=1 type=0x12 src=8 seq=87 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:21:22.256947> 2019-05-30T09:21:22.253138
2019-05-30T09:21:22.257429> rcv ctrl pkt info (^p): 1,18,8,87,14,7,-40
2019-05-30T09:21:22.257839> splitted in: [1, 18, 8, 87, 14, 7, -40]
2019-05-30T09:21:22.258296> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=87 len=14 SNR=7 RSSI=-40)
2019-05-30T09:21:22.258793> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:21:22.259287> splitted in: [125, 5, 12]
2019-05-30T09:21:22.259745> (BW=125 CR=5 SF=12)
2019-05-30T09:21:22.260213> rcv timestamp (^t): 2019-05-30T09:21:22.249
2019-05-30T09:21:22.260608> 
2019-05-30T09:21:22.260967> Got first framing byte
2019-05-30T09:21:22.261319> --> got LoRa data prefix
2019-05-30T09:21:22.261646> --> DATA with_appkey: read app key sequence
2019-05-30T09:21:22.262093> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:21:22.262481> app key disabled
2019-05-30T09:21:22.262786> valid app key: accept data
2019-05-30T09:21:22.263153> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:21:22.263474> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,87,10,7,-40" "125,5,12" "2019-05-30T09:21:22.249" "B827EB4E30A8"
2019-05-30T09:21:26.358576> CloudEdge: uploading
2019-05-30T09:21:26.359135> CloudEdge: run under guest identity, all data is public
2019-05-30T09:21:26.359580> CloudEdge: check if entity exits
2019-05-30T09:21:26.359988> CloudEdge: will issue requests with
2019-05-30T09:21:26.360350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:21:26.360678> CloudEdge: returned msg from server is 200
2019-05-30T09:21:26.360991> CloudEdge: entity exists
2019-05-30T09:21:26.361291> CloudEdge: check if measurement exits
2019-05-30T09:21:26.361872> CloudEdge: will issue requests with
2019-05-30T09:21:26.362395> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:21:26.362858> CloudEdge: returned msg from server is 200
2019-05-30T09:21:26.363220> CloudEdge: measurement exists
2019-05-30T09:21:26.363555> CloudEdge: will issue requests with
2019-05-30T09:21:26.363882> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:21:26.364206> data: {"value":95.71,"timestamp":"2019-05-30T09:21:22.249"}
2019-05-30T09:21:26.364522> CloudEdge: returned msg from server is 200
2019-05-30T09:21:26.364838> CloudEdge: upload success
2019-05-30T09:21:26.553366> --> cloud end
2019-05-30T09:21:26.553792> 
2019-05-30T09:21:42.774342> Low-level gw status ON
2019-05-30T09:22:24.348689> --- rxlora. dst=1 type=0x12 src=8 seq=88 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:22:24.349150> 2019-05-30T09:22:24.347592
2019-05-30T09:22:24.349499> rcv ctrl pkt info (^p): 1,18,8,88,14,6,-40
2019-05-30T09:22:24.349787> splitted in: [1, 18, 8, 88, 14, 6, -40]
2019-05-30T09:22:24.350139> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=88 len=14 SNR=6 RSSI=-40)
2019-05-30T09:22:24.350486> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:22:24.350784> splitted in: [125, 5, 12]
2019-05-30T09:22:24.351067> (BW=125 CR=5 SF=12)
2019-05-30T09:22:24.351361> rcv timestamp (^t): 2019-05-30T09:22:24.344
2019-05-30T09:22:24.351652> 
2019-05-30T09:22:24.352021> Got first framing byte
2019-05-30T09:22:24.352380> --> got LoRa data prefix
2019-05-30T09:22:24.352731> --> DATA with_appkey: read app key sequence
2019-05-30T09:22:24.353283> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:22:24.353752> app key disabled
2019-05-30T09:22:24.354147> valid app key: accept data
2019-05-30T09:22:24.354517> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:22:24.354870> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,88,10,6,-40" "125,5,12" "2019-05-30T09:22:24.344" "B827EB4E30A8"
2019-05-30T09:22:28.414117> CloudEdge: uploading
2019-05-30T09:22:28.414838> CloudEdge: run under guest identity, all data is public
2019-05-30T09:22:28.415493> CloudEdge: check if entity exits
2019-05-30T09:22:28.416134> CloudEdge: will issue requests with
2019-05-30T09:22:28.417047> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:22:28.417766> CloudEdge: returned msg from server is 200
2019-05-30T09:22:28.418413> CloudEdge: entity exists
2019-05-30T09:22:28.419014> CloudEdge: check if measurement exits
2019-05-30T09:22:28.419621> CloudEdge: will issue requests with
2019-05-30T09:22:28.420272> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:22:28.420835> CloudEdge: returned msg from server is 200
2019-05-30T09:22:28.421394> CloudEdge: measurement exists
2019-05-30T09:22:28.421954> CloudEdge: will issue requests with
2019-05-30T09:22:28.422509> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:22:28.423063> data: {"value":95.65,"timestamp":"2019-05-30T09:22:24.344"}
2019-05-30T09:22:28.423614> CloudEdge: returned msg from server is 200
2019-05-30T09:22:28.424161> CloudEdge: upload success
2019-05-30T09:22:28.619512> --> cloud end
2019-05-30T09:22:28.619910> 
2019-05-30T09:23:26.445145> --- rxlora. dst=1 type=0x12 src=8 seq=89 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:23:26.445645> 2019-05-30T09:23:26.442220
2019-05-30T09:23:26.445983> rcv ctrl pkt info (^p): 1,18,8,89,14,7,-40
2019-05-30T09:23:26.446273> splitted in: [1, 18, 8, 89, 14, 7, -40]
2019-05-30T09:23:26.446701> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=89 len=14 SNR=7 RSSI=-40)
2019-05-30T09:23:26.447139> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:23:26.447500> splitted in: [125, 5, 12]
2019-05-30T09:23:26.447957> (BW=125 CR=5 SF=12)
2019-05-30T09:23:26.448379> rcv timestamp (^t): 2019-05-30T09:23:26.438
2019-05-30T09:23:26.448770> 
2019-05-30T09:23:26.449140> Got first framing byte
2019-05-30T09:23:26.449480> --> got LoRa data prefix
2019-05-30T09:23:26.449822> --> DATA with_appkey: read app key sequence
2019-05-30T09:23:26.450152> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:23:26.450518> app key disabled
2019-05-30T09:23:26.450980> valid app key: accept data
2019-05-30T09:23:26.451288> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:23:26.451626> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,89,10,7,-40" "125,5,12" "2019-05-30T09:23:26.438" "B827EB4E30A8"
2019-05-30T09:23:30.478743> CloudEdge: uploading
2019-05-30T09:23:30.479624> CloudEdge: run under guest identity, all data is public
2019-05-30T09:23:30.480477> CloudEdge: check if entity exits
2019-05-30T09:23:30.481150> CloudEdge: will issue requests with
2019-05-30T09:23:30.481815> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:23:30.482442> CloudEdge: returned msg from server is 200
2019-05-30T09:23:30.483026> CloudEdge: entity exists
2019-05-30T09:23:30.483593> CloudEdge: check if measurement exits
2019-05-30T09:23:30.484165> CloudEdge: will issue requests with
2019-05-30T09:23:30.484735> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:23:30.485305> CloudEdge: returned msg from server is 200
2019-05-30T09:23:30.485883> CloudEdge: measurement exists
2019-05-30T09:23:30.486452> CloudEdge: will issue requests with
2019-05-30T09:23:30.487663> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:23:30.488415> data: {"value":95.65,"timestamp":"2019-05-30T09:23:26.438"}
2019-05-30T09:23:30.489026> CloudEdge: returned msg from server is 200
2019-05-30T09:23:30.489610> CloudEdge: upload success
2019-05-30T09:23:30.664636> --> cloud end
2019-05-30T09:23:30.665047> 
2019-05-30T09:24:28.538877> --- rxlora. dst=1 type=0x12 src=8 seq=90 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T09:24:28.539327> 2019-05-30T09:24:28.538326
2019-05-30T09:24:28.539707> rcv ctrl pkt info (^p): 1,18,8,90,14,6,-38
2019-05-30T09:24:28.540014> splitted in: [1, 18, 8, 90, 14, 6, -38]
2019-05-30T09:24:28.540297> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=90 len=14 SNR=6 RSSI=-38)
2019-05-30T09:24:28.540573> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:24:28.540893> splitted in: [125, 5, 12]
2019-05-30T09:24:28.541189> (BW=125 CR=5 SF=12)
2019-05-30T09:24:28.541476> rcv timestamp (^t): 2019-05-30T09:24:28.534
2019-05-30T09:24:28.541758> 
2019-05-30T09:24:28.542109> Got first framing byte
2019-05-30T09:24:28.542448> --> got LoRa data prefix
2019-05-30T09:24:28.542734> --> DATA with_appkey: read app key sequence
2019-05-30T09:24:28.543072> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:24:28.543403> app key disabled
2019-05-30T09:24:28.543750> valid app key: accept data
2019-05-30T09:24:28.544086> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:24:28.544500> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,90,10,6,-38" "125,5,12" "2019-05-30T09:24:28.534" "B827EB4E30A8"
2019-05-30T09:24:32.739514> CloudEdge: uploading
2019-05-30T09:24:32.740284> CloudEdge: run under guest identity, all data is public
2019-05-30T09:24:32.741161> CloudEdge: check if entity exits
2019-05-30T09:24:32.742024> CloudEdge: will issue requests with
2019-05-30T09:24:32.742844> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:24:32.743666> CloudEdge: returned msg from server is 200
2019-05-30T09:24:32.744473> CloudEdge: entity exists
2019-05-30T09:24:32.745184> CloudEdge: check if measurement exits
2019-05-30T09:24:32.745896> CloudEdge: will issue requests with
2019-05-30T09:24:32.746700> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:24:32.747496> CloudEdge: returned msg from server is 200
2019-05-30T09:24:32.748215> CloudEdge: measurement exists
2019-05-30T09:24:32.748903> CloudEdge: will issue requests with
2019-05-30T09:24:32.749598> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:24:32.750289> data: {"value":95.58,"timestamp":"2019-05-30T09:24:28.534"}
2019-05-30T09:24:32.750979> CloudEdge: returned msg from server is 200
2019-05-30T09:24:32.751659> CloudEdge: upload success
2019-05-30T09:24:32.934265> --> cloud end
2019-05-30T09:24:32.934633> 
2019-05-30T09:25:30.639042> --- rxlora. dst=1 type=0x12 src=8 seq=91 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T09:25:30.639588> 2019-05-30T09:25:30.635863
2019-05-30T09:25:30.640051> rcv ctrl pkt info (^p): 1,18,8,91,14,6,-38
2019-05-30T09:25:30.640410> splitted in: [1, 18, 8, 91, 14, 6, -38]
2019-05-30T09:25:30.640876> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=91 len=14 SNR=6 RSSI=-38)
2019-05-30T09:25:30.641293> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:25:30.641751> splitted in: [125, 5, 12]
2019-05-30T09:25:30.642224> (BW=125 CR=5 SF=12)
2019-05-30T09:25:30.642725> rcv timestamp (^t): 2019-05-30T09:25:30.632
2019-05-30T09:25:30.643169> 
2019-05-30T09:25:30.643627> Got first framing byte
2019-05-30T09:25:30.644023> --> got LoRa data prefix
2019-05-30T09:25:30.644561> --> DATA with_appkey: read app key sequence
2019-05-30T09:25:30.645169> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:25:30.645617> app key disabled
2019-05-30T09:25:30.646067> valid app key: accept data
2019-05-30T09:25:30.646398> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:25:30.646830> python /app/data_acq/edgeCall.py "TC/95.58" "1,18,8,91,10,6,-38" "125,5,12" "2019-05-30T09:25:30.632" "B827EB4E30A8"
2019-05-30T09:25:34.885689> CloudEdge: uploading
2019-05-30T09:25:34.886814> CloudEdge: run under guest identity, all data is public
2019-05-30T09:25:34.887862> CloudEdge: check if entity exits
2019-05-30T09:25:34.888848> CloudEdge: will issue requests with
2019-05-30T09:25:34.889733> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:25:34.890558> CloudEdge: returned msg from server is 200
2019-05-30T09:25:34.891219> CloudEdge: entity exists
2019-05-30T09:25:34.891854> CloudEdge: check if measurement exits
2019-05-30T09:25:34.892514> CloudEdge: will issue requests with
2019-05-30T09:25:34.893137> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:25:34.893748> CloudEdge: returned msg from server is 200
2019-05-30T09:25:34.894354> CloudEdge: measurement exists
2019-05-30T09:25:34.894947> CloudEdge: will issue requests with
2019-05-30T09:25:34.895611> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:25:34.896189> data: {"value":95.58,"timestamp":"2019-05-30T09:25:30.632"}
2019-05-30T09:25:34.896849> CloudEdge: returned msg from server is 200
2019-05-30T09:25:34.897464> CloudEdge: upload success
2019-05-30T09:25:35.089110> --> cloud end
2019-05-30T09:25:35.089490> 
2019-05-30T09:26:32.733496> --- rxlora. dst=1 type=0x12 src=8 seq=92 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:26:32.733916> 2019-05-30T09:26:32.730641
2019-05-30T09:26:32.734189> rcv ctrl pkt info (^p): 1,18,8,92,14,6,-40
2019-05-30T09:26:32.734458> splitted in: [1, 18, 8, 92, 14, 6, -40]
2019-05-30T09:26:32.734724> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=92 len=14 SNR=6 RSSI=-40)
2019-05-30T09:26:32.735105> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:26:32.735392> splitted in: [125, 5, 12]
2019-05-30T09:26:32.735677> (BW=125 CR=5 SF=12)
2019-05-30T09:26:32.735944> rcv timestamp (^t): 2019-05-30T09:26:32.727
2019-05-30T09:26:32.736210> 
2019-05-30T09:26:32.736477> Got first framing byte
2019-05-30T09:26:32.737090> --> got LoRa data prefix
2019-05-30T09:26:32.737488> --> DATA with_appkey: read app key sequence
2019-05-30T09:26:32.737795> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:26:32.738093> app key disabled
2019-05-30T09:26:32.738378> valid app key: accept data
2019-05-30T09:26:32.738658> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:26:32.738991> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,92,10,6,-40" "125,5,12" "2019-05-30T09:26:32.727" "B827EB4E30A8"
2019-05-30T09:26:37.039024> CloudEdge: uploading
2019-05-30T09:26:37.039462> CloudEdge: run under guest identity, all data is public
2019-05-30T09:26:37.039781> CloudEdge: check if entity exits
2019-05-30T09:26:37.040074> CloudEdge: will issue requests with
2019-05-30T09:26:37.040415> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:26:37.040728> CloudEdge: returned msg from server is 200
2019-05-30T09:26:37.041031> CloudEdge: entity exists
2019-05-30T09:26:37.041324> CloudEdge: check if measurement exits
2019-05-30T09:26:37.041615> CloudEdge: will issue requests with
2019-05-30T09:26:37.041904> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:26:37.042200> CloudEdge: returned msg from server is 200
2019-05-30T09:26:37.042497> CloudEdge: measurement exists
2019-05-30T09:26:37.042792> CloudEdge: will issue requests with
2019-05-30T09:26:37.043078> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:26:37.043554> data: {"value":95.65,"timestamp":"2019-05-30T09:26:32.727"}
2019-05-30T09:26:37.044082> CloudEdge: returned msg from server is 200
2019-05-30T09:26:37.044532> CloudEdge: upload success
2019-05-30T09:26:37.233842> --> cloud end
2019-05-30T09:26:37.234213> 
2019-05-30T09:27:34.827245> --- rxlora. dst=1 type=0x12 src=8 seq=93 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:27:34.827701> 2019-05-30T09:27:34.825718
2019-05-30T09:27:34.828044> rcv ctrl pkt info (^p): 1,18,8,93,14,7,-41
2019-05-30T09:27:34.828358> splitted in: [1, 18, 8, 93, 14, 7, -41]
2019-05-30T09:27:34.828717> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=93 len=14 SNR=7 RSSI=-41)
2019-05-30T09:27:34.829030> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:27:34.829308> splitted in: [125, 5, 12]
2019-05-30T09:27:34.829596> (BW=125 CR=5 SF=12)
2019-05-30T09:27:34.829886> rcv timestamp (^t): 2019-05-30T09:27:34.822
2019-05-30T09:27:34.830160> 
2019-05-30T09:27:34.830469> Got first framing byte
2019-05-30T09:27:34.830795> --> got LoRa data prefix
2019-05-30T09:27:34.831126> --> DATA with_appkey: read app key sequence
2019-05-30T09:27:34.831486> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:27:34.831833> app key disabled
2019-05-30T09:27:34.832219> valid app key: accept data
2019-05-30T09:27:34.832576> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:27:34.833060> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,93,10,7,-41" "125,5,12" "2019-05-30T09:27:34.822" "B827EB4E30A8"
2019-05-30T09:27:39.199101> CloudEdge: uploading
2019-05-30T09:27:39.199928> CloudEdge: run under guest identity, all data is public
2019-05-30T09:27:39.200639> CloudEdge: check if entity exits
2019-05-30T09:27:39.201269> CloudEdge: will issue requests with
2019-05-30T09:27:39.201877> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:27:39.202482> CloudEdge: returned msg from server is 200
2019-05-30T09:27:39.203068> CloudEdge: entity exists
2019-05-30T09:27:39.203626> CloudEdge: check if measurement exits
2019-05-30T09:27:39.204181> CloudEdge: will issue requests with
2019-05-30T09:27:39.204737> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:27:39.205288> CloudEdge: returned msg from server is 200
2019-05-30T09:27:39.205837> CloudEdge: measurement exists
2019-05-30T09:27:39.206386> CloudEdge: will issue requests with
2019-05-30T09:27:39.207955> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:27:39.209779> data: {"value":95.39,"timestamp":"2019-05-30T09:27:34.822"}
2019-05-30T09:27:39.211720> CloudEdge: returned msg from server is 200
2019-05-30T09:27:39.213422> CloudEdge: upload success
2019-05-30T09:27:39.379313> --> cloud end
2019-05-30T09:27:39.379706> 
2019-05-30T09:28:36.923088> --- rxlora. dst=1 type=0x12 src=8 seq=94 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:28:36.923754> 2019-05-30T09:28:36.922343
2019-05-30T09:28:36.926810> rcv ctrl pkt info (^p): 1,18,8,94,14,7,-40
2019-05-30T09:28:36.927328> splitted in: [1, 18, 8, 94, 14, 7, -40]
2019-05-30T09:28:36.927725> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=94 len=14 SNR=7 RSSI=-40)
2019-05-30T09:28:36.928115> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:28:36.928455> splitted in: [125, 5, 12]
2019-05-30T09:28:36.928855> (BW=125 CR=5 SF=12)
2019-05-30T09:28:36.929232> rcv timestamp (^t): 2019-05-30T09:28:36.919
2019-05-30T09:28:36.929585> 
2019-05-30T09:28:36.929918> Got first framing byte
2019-05-30T09:28:36.930280> --> got LoRa data prefix
2019-05-30T09:28:36.930608> --> DATA with_appkey: read app key sequence
2019-05-30T09:28:36.931027> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:28:36.931473> app key disabled
2019-05-30T09:28:36.931780> valid app key: accept data
2019-05-30T09:28:36.932147> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:28:36.932498> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,94,10,7,-40" "125,5,12" "2019-05-30T09:28:36.919" "B827EB4E30A8"
2019-05-30T09:28:41.049354> CloudEdge: uploading
2019-05-30T09:28:41.050169> CloudEdge: run under guest identity, all data is public
2019-05-30T09:28:41.050867> CloudEdge: check if entity exits
2019-05-30T09:28:41.051482> CloudEdge: will issue requests with
2019-05-30T09:28:41.052095> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:28:41.052705> CloudEdge: returned msg from server is 200
2019-05-30T09:28:41.053281> CloudEdge: entity exists
2019-05-30T09:28:41.054152> CloudEdge: check if measurement exits
2019-05-30T09:28:41.054782> CloudEdge: will issue requests with
2019-05-30T09:28:41.055368> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:28:41.055932> CloudEdge: returned msg from server is 200
2019-05-30T09:28:41.056490> CloudEdge: measurement exists
2019-05-30T09:28:41.057381> CloudEdge: will issue requests with
2019-05-30T09:28:41.057984> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:28:41.058559> data: {"value":95.39,"timestamp":"2019-05-30T09:28:36.919"}
2019-05-30T09:28:41.059128> CloudEdge: returned msg from server is 200
2019-05-30T09:28:41.059692> CloudEdge: upload success
2019-05-30T09:28:41.239333> --> cloud end
2019-05-30T09:28:41.239708> 
2019-05-30T09:29:15.562093> 2019-05-30 09:29:15.560648
2019-05-30T09:29:15.562674> post status: gw ON
2019-05-30T09:29:15.563067> post status: executing periodic tasks
2019-05-30T09:29:16.640965> no timezone support, time will be expressed only in local time
2019-05-30T09:29:16.641395> post status: start running
2019-05-30T09:29:17.672173> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:29:17.672562> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:29:17.672868> get_gps.py: invalid serial port
2019-05-30T09:29:17.808565> post status: dynamic GPS is requested
2019-05-30T09:29:17.808961> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:29:17.809365> post status get GPS: no GPS coordinates
2019-05-30T09:29:17.809668> post status: show current GPS position
2019-05-30T09:29:17.809959> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:29:17.810243> post status: exiting
2019-05-30T09:29:39.023795> --- rxlora. dst=1 type=0x12 src=8 seq=95 len=14 SNR=8 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:29:39.024339> 2019-05-30T09:29:39.020739
2019-05-30T09:29:39.024733> rcv ctrl pkt info (^p): 1,18,8,95,14,8,-41
2019-05-30T09:29:39.025114> splitted in: [1, 18, 8, 95, 14, 8, -41]
2019-05-30T09:29:39.025504> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=95 len=14 SNR=8 RSSI=-41)
2019-05-30T09:29:39.025956> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:29:39.026383> splitted in: [125, 5, 12]
2019-05-30T09:29:39.027016> (BW=125 CR=5 SF=12)
2019-05-30T09:29:39.027546> rcv timestamp (^t): 2019-05-30T09:29:39.017
2019-05-30T09:29:39.028021> 
2019-05-30T09:29:39.028475> Got first framing byte
2019-05-30T09:29:39.028889> --> got LoRa data prefix
2019-05-30T09:29:39.029455> --> DATA with_appkey: read app key sequence
2019-05-30T09:29:39.029951> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:29:39.030387> app key disabled
2019-05-30T09:29:39.030789> valid app key: accept data
2019-05-30T09:29:39.031231> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:29:39.031580> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,95,10,8,-41" "125,5,12" "2019-05-30T09:29:39.017" "B827EB4E30A8"
2019-05-30T09:29:43.143558> CloudEdge: uploading
2019-05-30T09:29:43.144478> CloudEdge: run under guest identity, all data is public
2019-05-30T09:29:43.145249> CloudEdge: check if entity exits
2019-05-30T09:29:43.145945> CloudEdge: will issue requests with
2019-05-30T09:29:43.146935> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:29:43.147956> CloudEdge: returned msg from server is 200
2019-05-30T09:29:43.148734> CloudEdge: entity exists
2019-05-30T09:29:43.149469> CloudEdge: check if measurement exits
2019-05-30T09:29:43.150110> CloudEdge: will issue requests with
2019-05-30T09:29:43.150736> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:29:43.151504> CloudEdge: returned msg from server is 200
2019-05-30T09:29:43.152208> CloudEdge: measurement exists
2019-05-30T09:29:43.152857> CloudEdge: will issue requests with
2019-05-30T09:29:43.153493> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:29:43.154126> data: {"value":95.46,"timestamp":"2019-05-30T09:29:39.017"}
2019-05-30T09:29:43.154741> CloudEdge: returned msg from server is 200
2019-05-30T09:29:43.155386> CloudEdge: upload success
2019-05-30T09:29:43.329043> --> cloud end
2019-05-30T09:29:43.329418> 
2019-05-30T09:30:41.119518> --- rxlora. dst=1 type=0x12 src=8 seq=96 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:30:41.119966> 2019-05-30T09:30:41.119126
2019-05-30T09:30:41.120288> rcv ctrl pkt info (^p): 1,18,8,96,14,6,-40
2019-05-30T09:30:41.120595> splitted in: [1, 18, 8, 96, 14, 6, -40]
2019-05-30T09:30:41.120879> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=96 len=14 SNR=6 RSSI=-40)
2019-05-30T09:30:41.121157> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:30:41.121518> splitted in: [125, 5, 12]
2019-05-30T09:30:41.121877> (BW=125 CR=5 SF=12)
2019-05-30T09:30:41.122299> rcv timestamp (^t): 2019-05-30T09:30:41.115
2019-05-30T09:30:41.122632> 
2019-05-30T09:30:41.123004> Got first framing byte
2019-05-30T09:30:41.123288> --> got LoRa data prefix
2019-05-30T09:30:41.123574> --> DATA with_appkey: read app key sequence
2019-05-30T09:30:41.123919> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:30:41.124248> app key disabled
2019-05-30T09:30:41.124596> valid app key: accept data
2019-05-30T09:30:41.124928> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:30:41.125315> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,96,10,6,-40" "125,5,12" "2019-05-30T09:30:41.115" "B827EB4E30A8"
2019-05-30T09:30:45.263437> CloudEdge: uploading
2019-05-30T09:30:45.264023> CloudEdge: run under guest identity, all data is public
2019-05-30T09:30:45.264585> CloudEdge: check if entity exits
2019-05-30T09:30:45.265055> CloudEdge: will issue requests with
2019-05-30T09:30:45.265509> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:30:45.265943> CloudEdge: returned msg from server is 200
2019-05-30T09:30:45.266380> CloudEdge: entity exists
2019-05-30T09:30:45.267001> CloudEdge: check if measurement exits
2019-05-30T09:30:45.267485> CloudEdge: will issue requests with
2019-05-30T09:30:45.267929> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:30:45.268365> CloudEdge: returned msg from server is 200
2019-05-30T09:30:45.268902> CloudEdge: measurement exists
2019-05-30T09:30:45.269397> CloudEdge: will issue requests with
2019-05-30T09:30:45.269868> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:30:45.270315> data: {"value":95.39,"timestamp":"2019-05-30T09:30:41.115"}
2019-05-30T09:30:45.270783> CloudEdge: returned msg from server is 200
2019-05-30T09:30:45.271232> CloudEdge: upload success
2019-05-30T09:30:45.425097> --> cloud end
2019-05-30T09:30:45.425497> 
2019-05-30T09:31:43.222008> --- rxlora. dst=1 type=0x12 src=8 seq=97 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:31:43.222484> 2019-05-30T09:31:43.221599
2019-05-30T09:31:43.222791> rcv ctrl pkt info (^p): 1,18,8,97,14,7,-40
2019-05-30T09:31:43.223111> splitted in: [1, 18, 8, 97, 14, 7, -40]
2019-05-30T09:31:43.223405> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=97 len=14 SNR=7 RSSI=-40)
2019-05-30T09:31:43.223736> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:31:43.224016> splitted in: [125, 5, 12]
2019-05-30T09:31:43.224326> (BW=125 CR=5 SF=12)
2019-05-30T09:31:43.224661> rcv timestamp (^t): 2019-05-30T09:31:43.215
2019-05-30T09:31:43.224985> 
2019-05-30T09:31:43.225267> Got first framing byte
2019-05-30T09:31:43.225548> --> got LoRa data prefix
2019-05-30T09:31:43.225845> --> DATA with_appkey: read app key sequence
2019-05-30T09:31:43.226150> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:31:43.226450> app key disabled
2019-05-30T09:31:43.226934> valid app key: accept data
2019-05-30T09:31:43.227334> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:31:43.227674> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,97,10,7,-40" "125,5,12" "2019-05-30T09:31:43.215" "B827EB4E30A8"
2019-05-30T09:31:47.418514> CloudEdge: uploading
2019-05-30T09:31:47.419367> CloudEdge: run under guest identity, all data is public
2019-05-30T09:31:47.420092> CloudEdge: check if entity exits
2019-05-30T09:31:47.420737> CloudEdge: will issue requests with
2019-05-30T09:31:47.421362> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:31:47.421986> CloudEdge: returned msg from server is 200
2019-05-30T09:31:47.422574> CloudEdge: entity exists
2019-05-30T09:31:47.423167> CloudEdge: check if measurement exits
2019-05-30T09:31:47.423748> CloudEdge: will issue requests with
2019-05-30T09:31:47.424337> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:31:47.425571> CloudEdge: returned msg from server is 200
2019-05-30T09:31:47.426411> CloudEdge: measurement exists
2019-05-30T09:31:47.427386> CloudEdge: will issue requests with
2019-05-30T09:31:47.428074> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:31:47.428714> data: {"value":95.46,"timestamp":"2019-05-30T09:31:43.215"}
2019-05-30T09:31:47.429335> CloudEdge: returned msg from server is 200
2019-05-30T09:31:47.429951> CloudEdge: upload success
2019-05-30T09:31:47.619469> --> cloud end
2019-05-30T09:31:47.619858> 
2019-05-30T09:32:03.741435> Low-level gw status ON
2019-05-30T09:32:45.316271> --- rxlora. dst=1 type=0x12 src=8 seq=98 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:32:45.316937> 2019-05-30T09:32:45.315847
2019-05-30T09:32:45.324377> rcv ctrl pkt info (^p): 1,18,8,98,14,6,-41
2019-05-30T09:32:45.324717> splitted in: [1, 18, 8, 98, 14, 6, -41]
2019-05-30T09:32:45.324986> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=98 len=14 SNR=6 RSSI=-41)
2019-05-30T09:32:45.325251> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:32:45.325516> splitted in: [125, 5, 12]
2019-05-30T09:32:45.325780> (BW=125 CR=5 SF=12)
2019-05-30T09:32:45.326105> rcv timestamp (^t): 2019-05-30T09:32:45.312
2019-05-30T09:32:45.326368> 
2019-05-30T09:32:45.326753> Got first framing byte
2019-05-30T09:32:45.327128> --> got LoRa data prefix
2019-05-30T09:32:45.327519> --> DATA with_appkey: read app key sequence
2019-05-30T09:32:45.327812> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:32:45.328168> app key disabled
2019-05-30T09:32:45.328501> valid app key: accept data
2019-05-30T09:32:45.328796> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:32:45.329079> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,98,10,6,-41" "125,5,12" "2019-05-30T09:32:45.312" "B827EB4E30A8"
2019-05-30T09:32:49.678717> CloudEdge: uploading
2019-05-30T09:32:49.679586> CloudEdge: run under guest identity, all data is public
2019-05-30T09:32:49.680285> CloudEdge: check if entity exits
2019-05-30T09:32:49.680909> CloudEdge: will issue requests with
2019-05-30T09:32:49.681520> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:32:49.682123> CloudEdge: returned msg from server is 200
2019-05-30T09:32:49.682700> CloudEdge: entity exists
2019-05-30T09:32:49.683255> CloudEdge: check if measurement exits
2019-05-30T09:32:49.683823> CloudEdge: will issue requests with
2019-05-30T09:32:49.684384> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:32:49.684944> CloudEdge: returned msg from server is 200
2019-05-30T09:32:49.685498> CloudEdge: measurement exists
2019-05-30T09:32:49.686048> CloudEdge: will issue requests with
2019-05-30T09:32:49.686867> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:32:49.687689> data: {"value":95.39,"timestamp":"2019-05-30T09:32:45.312"}
2019-05-30T09:32:49.688423> CloudEdge: returned msg from server is 200
2019-05-30T09:32:49.689051> CloudEdge: upload success
2019-05-30T09:32:49.858361> --> cloud end
2019-05-30T09:32:49.858817> 
2019-05-30T09:33:47.414648> --- rxlora. dst=1 type=0x12 src=8 seq=99 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:33:47.415185> 2019-05-30T09:33:47.414242
2019-05-30T09:33:47.415555> rcv ctrl pkt info (^p): 1,18,8,99,14,5,-40
2019-05-30T09:33:47.415875> splitted in: [1, 18, 8, 99, 14, 5, -40]
2019-05-30T09:33:47.416224> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=99 len=14 SNR=5 RSSI=-40)
2019-05-30T09:33:47.416763> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:33:47.417215> splitted in: [125, 5, 12]
2019-05-30T09:33:47.417550> (BW=125 CR=5 SF=12)
2019-05-30T09:33:47.417917> rcv timestamp (^t): 2019-05-30T09:33:47.409
2019-05-30T09:33:47.418274> 
2019-05-30T09:33:47.418687> Got first framing byte
2019-05-30T09:33:47.419066> --> got LoRa data prefix
2019-05-30T09:33:47.419482> --> DATA with_appkey: read app key sequence
2019-05-30T09:33:47.419847> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:33:47.420157> app key disabled
2019-05-30T09:33:47.420548> valid app key: accept data
2019-05-30T09:33:47.420917> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:33:47.421339> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,99,10,5,-40" "125,5,12" "2019-05-30T09:33:47.409" "B827EB4E30A8"
2019-05-30T09:33:51.536030> CloudEdge: uploading
2019-05-30T09:33:51.537051> CloudEdge: run under guest identity, all data is public
2019-05-30T09:33:51.537844> CloudEdge: check if entity exits
2019-05-30T09:33:51.538489> CloudEdge: will issue requests with
2019-05-30T09:33:51.539108> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:33:51.539712> CloudEdge: returned msg from server is 200
2019-05-30T09:33:51.540281> CloudEdge: entity exists
2019-05-30T09:33:51.540849> CloudEdge: check if measurement exits
2019-05-30T09:33:51.541497> CloudEdge: will issue requests with
2019-05-30T09:33:51.542104> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:33:51.542728> CloudEdge: returned msg from server is 200
2019-05-30T09:33:51.543319> CloudEdge: measurement exists
2019-05-30T09:33:51.543878> CloudEdge: will issue requests with
2019-05-30T09:33:51.544435> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:33:51.545024> data: {"value":95.39,"timestamp":"2019-05-30T09:33:47.409"}
2019-05-30T09:33:51.545587> CloudEdge: returned msg from server is 200
2019-05-30T09:33:51.546153> CloudEdge: upload success
2019-05-30T09:33:51.724258> --> cloud end
2019-05-30T09:33:51.724696> 
2019-05-30T09:34:49.512625> --- rxlora. dst=1 type=0x12 src=8 seq=100 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T09:34:49.513119> 2019-05-30T09:34:49.512199
2019-05-30T09:34:49.513550> rcv ctrl pkt info (^p): 1,18,8,100,14,6,-40
2019-05-30T09:34:49.513909> splitted in: [1, 18, 8, 100, 14, 6, -40]
2019-05-30T09:34:49.514274> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=100 len=14 SNR=6 RSSI=-40)
2019-05-30T09:34:49.514602> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:34:49.515019> splitted in: [125, 5, 12]
2019-05-30T09:34:49.515406> (BW=125 CR=5 SF=12)
2019-05-30T09:34:49.515746> rcv timestamp (^t): 2019-05-30T09:34:49.508
2019-05-30T09:34:49.516117> 
2019-05-30T09:34:49.516498> Got first framing byte
2019-05-30T09:34:49.517177> --> got LoRa data prefix
2019-05-30T09:34:49.517601> --> DATA with_appkey: read app key sequence
2019-05-30T09:34:49.518061> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:34:49.518783> app key disabled
2019-05-30T09:34:49.519286> valid app key: accept data
2019-05-30T09:34:49.519752> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:34:49.520159> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,100,10,6,-40" "125,5,12" "2019-05-30T09:34:49.508" "B827EB4E30A8"
2019-05-30T09:34:53.584469> CloudEdge: uploading
2019-05-30T09:34:53.585318> CloudEdge: run under guest identity, all data is public
2019-05-30T09:34:53.586009> CloudEdge: check if entity exits
2019-05-30T09:34:53.586862> CloudEdge: will issue requests with
2019-05-30T09:34:53.587623> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:34:53.588293> CloudEdge: returned msg from server is 200
2019-05-30T09:34:53.588883> CloudEdge: entity exists
2019-05-30T09:34:53.589447> CloudEdge: check if measurement exits
2019-05-30T09:34:53.590022> CloudEdge: will issue requests with
2019-05-30T09:34:53.590607> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:34:53.591182> CloudEdge: returned msg from server is 200
2019-05-30T09:34:53.591752> CloudEdge: measurement exists
2019-05-30T09:34:53.592313> CloudEdge: will issue requests with
2019-05-30T09:34:53.592877> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:34:53.593524> data: {"value":95.46,"timestamp":"2019-05-30T09:34:49.508"}
2019-05-30T09:34:53.594082> CloudEdge: returned msg from server is 200
2019-05-30T09:34:53.594634> CloudEdge: upload success
2019-05-30T09:34:53.775444> --> cloud end
2019-05-30T09:34:53.775844> 
2019-05-30T09:35:51.611765> --- rxlora. dst=1 type=0x12 src=8 seq=101 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T09:35:51.612219> 2019-05-30T09:35:51.611372
2019-05-30T09:35:51.612581> rcv ctrl pkt info (^p): 1,18,8,101,14,6,-39
2019-05-30T09:35:51.613143> splitted in: [1, 18, 8, 101, 14, 6, -39]
2019-05-30T09:35:51.613498> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=101 len=14 SNR=6 RSSI=-39)
2019-05-30T09:35:51.613796> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:35:51.614171> splitted in: [125, 5, 12]
2019-05-30T09:35:51.614507> (BW=125 CR=5 SF=12)
2019-05-30T09:35:51.614791> rcv timestamp (^t): 2019-05-30T09:35:51.607
2019-05-30T09:35:51.615075> 
2019-05-30T09:35:51.615422> Got first framing byte
2019-05-30T09:35:51.615706> --> got LoRa data prefix
2019-05-30T09:35:51.616032> --> DATA with_appkey: read app key sequence
2019-05-30T09:35:51.616375> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:35:51.616870> app key disabled
2019-05-30T09:35:51.617244> valid app key: accept data
2019-05-30T09:35:51.617576> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:35:51.617853> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,101,10,6,-39" "125,5,12" "2019-05-30T09:35:51.607" "B827EB4E30A8"
2019-05-30T09:35:55.874680> CloudEdge: uploading
2019-05-30T09:35:55.875231> CloudEdge: run under guest identity, all data is public
2019-05-30T09:35:55.875603> CloudEdge: check if entity exits
2019-05-30T09:35:55.875906> CloudEdge: will issue requests with
2019-05-30T09:35:55.876195> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:35:55.876486> CloudEdge: returned msg from server is 200
2019-05-30T09:35:55.876976> CloudEdge: entity exists
2019-05-30T09:35:55.877310> CloudEdge: check if measurement exits
2019-05-30T09:35:55.877607> CloudEdge: will issue requests with
2019-05-30T09:35:55.877889> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:35:55.878171> CloudEdge: returned msg from server is 200
2019-05-30T09:35:55.878450> CloudEdge: measurement exists
2019-05-30T09:35:55.878728> CloudEdge: will issue requests with
2019-05-30T09:35:55.879015> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:35:55.879298> data: {"value":95.46,"timestamp":"2019-05-30T09:35:51.607"}
2019-05-30T09:35:55.879886> CloudEdge: returned msg from server is 200
2019-05-30T09:35:55.880237> CloudEdge: upload success
2019-05-30T09:35:56.042157> --> cloud end
2019-05-30T09:35:56.042582> 
2019-05-30T09:36:53.713313> --- rxlora. dst=1 type=0x12 src=8 seq=102 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:36:53.713870> 2019-05-30T09:36:53.710279
2019-05-30T09:36:53.714271> rcv ctrl pkt info (^p): 1,18,8,102,14,7,-41
2019-05-30T09:36:53.714667> splitted in: [1, 18, 8, 102, 14, 7, -41]
2019-05-30T09:36:53.715043> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=102 len=14 SNR=7 RSSI=-41)
2019-05-30T09:36:53.715502> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:36:53.715929> splitted in: [125, 5, 12]
2019-05-30T09:36:53.716359> (BW=125 CR=5 SF=12)
2019-05-30T09:36:53.716939> rcv timestamp (^t): 2019-05-30T09:36:53.706
2019-05-30T09:36:53.717470> 
2019-05-30T09:36:53.717913> Got first framing byte
2019-05-30T09:36:53.718380> --> got LoRa data prefix
2019-05-30T09:36:53.718870> --> DATA with_appkey: read app key sequence
2019-05-30T09:36:53.719455> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:36:53.719858> app key disabled
2019-05-30T09:36:53.720307> valid app key: accept data
2019-05-30T09:36:53.720669> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:36:53.721079> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,102,10,7,-41" "125,5,12" "2019-05-30T09:36:53.706" "B827EB4E30A8"
2019-05-30T09:36:58.101785> CloudEdge: uploading
2019-05-30T09:36:58.102624> CloudEdge: run under guest identity, all data is public
2019-05-30T09:36:58.103365> CloudEdge: check if entity exits
2019-05-30T09:36:58.104022> CloudEdge: will issue requests with
2019-05-30T09:36:58.104666> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:36:58.105312> CloudEdge: returned msg from server is 200
2019-05-30T09:36:58.105923> CloudEdge: entity exists
2019-05-30T09:36:58.106512> CloudEdge: check if measurement exits
2019-05-30T09:36:58.107365> CloudEdge: will issue requests with
2019-05-30T09:36:58.107967> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:36:58.108558> CloudEdge: returned msg from server is 200
2019-05-30T09:36:58.109133> CloudEdge: measurement exists
2019-05-30T09:36:58.109711> CloudEdge: will issue requests with
2019-05-30T09:36:58.110288> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:36:58.110860> data: {"value":95.39,"timestamp":"2019-05-30T09:36:53.706"}
2019-05-30T09:36:58.112413> CloudEdge: returned msg from server is 200
2019-05-30T09:36:58.113195> CloudEdge: upload success
2019-05-30T09:36:58.303760> --> cloud end
2019-05-30T09:36:58.304124> 
2019-05-30T09:37:55.808878> --- rxlora. dst=1 type=0x12 src=8 seq=103 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:37:55.809330> 2019-05-30T09:37:55.808336
2019-05-30T09:37:55.809716> rcv ctrl pkt info (^p): 1,18,8,103,14,7,-42
2019-05-30T09:37:55.810024> splitted in: [1, 18, 8, 103, 14, 7, -42]
2019-05-30T09:37:55.810309> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=103 len=14 SNR=7 RSSI=-42)
2019-05-30T09:37:55.810591> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:37:55.810938> splitted in: [125, 5, 12]
2019-05-30T09:37:55.811294> (BW=125 CR=5 SF=12)
2019-05-30T09:37:55.811602> rcv timestamp (^t): 2019-05-30T09:37:55.804
2019-05-30T09:37:55.811895> 
2019-05-30T09:37:55.812278> Got first framing byte
2019-05-30T09:37:55.812571> --> got LoRa data prefix
2019-05-30T09:37:55.812890> --> DATA with_appkey: read app key sequence
2019-05-30T09:37:55.813241> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:37:55.813621> app key disabled
2019-05-30T09:37:55.813972> valid app key: accept data
2019-05-30T09:37:55.814358> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:37:55.814751> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,103,10,7,-42" "125,5,12" "2019-05-30T09:37:55.804" "B827EB4E30A8"
2019-05-30T09:38:00.873225> CloudEdge: uploading
2019-05-30T09:38:00.874093> CloudEdge: run under guest identity, all data is public
2019-05-30T09:38:00.874841> CloudEdge: check if entity exits
2019-05-30T09:38:00.875489> CloudEdge: will issue requests with
2019-05-30T09:38:00.876162> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:38:00.877007> CloudEdge: returned msg from server is 200
2019-05-30T09:38:00.877677> CloudEdge: entity exists
2019-05-30T09:38:00.878269> CloudEdge: check if measurement exits
2019-05-30T09:38:00.878854> CloudEdge: will issue requests with
2019-05-30T09:38:00.879438> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:38:00.880014> CloudEdge: returned msg from server is 200
2019-05-30T09:38:00.880591> CloudEdge: measurement exists
2019-05-30T09:38:00.881165> CloudEdge: will issue requests with
2019-05-30T09:38:00.881746> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:38:00.882322> data: {"value":95.39,"timestamp":"2019-05-30T09:37:55.804"}
2019-05-30T09:38:00.882885> CloudEdge: returned msg from server is 200
2019-05-30T09:38:00.883462> CloudEdge: upload success
2019-05-30T09:38:01.075303> --> cloud end
2019-05-30T09:38:01.075677> 
2019-05-30T09:38:57.906334> --- rxlora. dst=1 type=0x12 src=8 seq=104 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:38:57.907153> 2019-05-30T09:38:57.905883
2019-05-30T09:38:57.907559> rcv ctrl pkt info (^p): 1,18,8,104,14,7,-42
2019-05-30T09:38:57.907869> splitted in: [1, 18, 8, 104, 14, 7, -42]
2019-05-30T09:38:57.908168> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=104 len=14 SNR=7 RSSI=-42)
2019-05-30T09:38:57.908486> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:38:57.908834> splitted in: [125, 5, 12]
2019-05-30T09:38:57.909194> (BW=125 CR=5 SF=12)
2019-05-30T09:38:57.909518> rcv timestamp (^t): 2019-05-30T09:38:57.902
2019-05-30T09:38:57.909819> 
2019-05-30T09:38:57.910183> Got first framing byte
2019-05-30T09:38:57.910502> --> got LoRa data prefix
2019-05-30T09:38:57.911500> --> DATA with_appkey: read app key sequence
2019-05-30T09:38:57.912544> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:38:57.917052> app key disabled
2019-05-30T09:38:57.917892> valid app key: accept data
2019-05-30T09:38:57.918595> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:38:57.919182> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,104,10,7,-42" "125,5,12" "2019-05-30T09:38:57.902" "B827EB4E30A8"
2019-05-30T09:39:02.007215> CloudEdge: uploading
2019-05-30T09:39:02.008173> CloudEdge: run under guest identity, all data is public
2019-05-30T09:39:02.009067> CloudEdge: check if entity exits
2019-05-30T09:39:02.009893> CloudEdge: will issue requests with
2019-05-30T09:39:02.010730> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:39:02.011518> CloudEdge: returned msg from server is 200
2019-05-30T09:39:02.012232> CloudEdge: entity exists
2019-05-30T09:39:02.012933> CloudEdge: check if measurement exits
2019-05-30T09:39:02.013636> CloudEdge: will issue requests with
2019-05-30T09:39:02.014338> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:39:02.015036> CloudEdge: returned msg from server is 200
2019-05-30T09:39:02.015740> CloudEdge: measurement exists
2019-05-30T09:39:02.016424> CloudEdge: will issue requests with
2019-05-30T09:39:02.017205> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:39:02.017940> data: {"value":95.46,"timestamp":"2019-05-30T09:38:57.902"}
2019-05-30T09:39:02.018633> CloudEdge: returned msg from server is 200
2019-05-30T09:39:02.019421> CloudEdge: upload success
2019-05-30T09:39:02.217199> --> cloud end
2019-05-30T09:39:02.217601> 
2019-05-30T09:39:17.960246> 2019-05-30 09:39:17.956708
2019-05-30T09:39:17.960924> post status: gw ON
2019-05-30T09:39:17.961461> post status: executing periodic tasks
2019-05-30T09:39:19.038977> no timezone support, time will be expressed only in local time
2019-05-30T09:39:19.039421> post status: start running
2019-05-30T09:39:20.070987> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:39:20.071538> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:39:20.071960> get_gps.py: invalid serial port
2019-05-30T09:39:20.204483> post status: dynamic GPS is requested
2019-05-30T09:39:20.204882> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:39:20.205256> post status get GPS: no GPS coordinates
2019-05-30T09:39:20.205572> post status: show current GPS position
2019-05-30T09:39:20.205865> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:39:20.206154> post status: exiting
2019-05-30T09:40:00.005928> --- rxlora. dst=1 type=0x12 src=8 seq=105 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:40:00.006476> 2019-05-30T09:40:00.003384
2019-05-30T09:40:00.007325> rcv ctrl pkt info (^p): 1,18,8,105,14,6,-42
2019-05-30T09:40:00.007929> splitted in: [1, 18, 8, 105, 14, 6, -42]
2019-05-30T09:40:00.008532> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=105 len=14 SNR=6 RSSI=-42)
2019-05-30T09:40:00.009188> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:40:00.010008> splitted in: [125, 5, 12]
2019-05-30T09:40:00.010633> (BW=125 CR=5 SF=12)
2019-05-30T09:40:00.011243> rcv timestamp (^t): 2019-05-30T09:40:00.000
2019-05-30T09:40:00.011884> 
2019-05-30T09:40:00.012338> Got first framing byte
2019-05-30T09:40:00.012700> --> got LoRa data prefix
2019-05-30T09:40:00.013156> --> DATA with_appkey: read app key sequence
2019-05-30T09:40:00.013540> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:40:00.013829> app key disabled
2019-05-30T09:40:00.014189> valid app key: accept data
2019-05-30T09:40:00.014505> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:40:00.014788> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,105,10,6,-42" "125,5,12" "2019-05-30T09:40:00.000" "B827EB4E30A8"
2019-05-30T09:40:04.168363> CloudEdge: uploading
2019-05-30T09:40:04.169161> CloudEdge: run under guest identity, all data is public
2019-05-30T09:40:04.169952> CloudEdge: check if entity exits
2019-05-30T09:40:04.170819> CloudEdge: will issue requests with
2019-05-30T09:40:04.171637> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:40:04.172448> CloudEdge: returned msg from server is 200
2019-05-30T09:40:04.173408> CloudEdge: entity exists
2019-05-30T09:40:04.174266> CloudEdge: check if measurement exits
2019-05-30T09:40:04.175050> CloudEdge: will issue requests with
2019-05-30T09:40:04.175802> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:40:04.176516> CloudEdge: returned msg from server is 200
2019-05-30T09:40:04.177419> CloudEdge: measurement exists
2019-05-30T09:40:04.178165> CloudEdge: will issue requests with
2019-05-30T09:40:04.178869> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:40:04.179564> data: {"value":95.39,"timestamp":"2019-05-30T09:40:00.000"}
2019-05-30T09:40:04.180258> CloudEdge: returned msg from server is 200
2019-05-30T09:40:04.180948> CloudEdge: upload success
2019-05-30T09:40:04.368972> --> cloud end
2019-05-30T09:40:04.369345> 
2019-05-30T09:41:02.103618> --- rxlora. dst=1 type=0x12 src=8 seq=106 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:41:02.104077> 2019-05-30T09:41:02.100730
2019-05-30T09:41:02.104399> rcv ctrl pkt info (^p): 1,18,8,106,14,6,-41
2019-05-30T09:41:02.104698> splitted in: [1, 18, 8, 106, 14, 6, -41]
2019-05-30T09:41:02.104979> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=106 len=14 SNR=6 RSSI=-41)
2019-05-30T09:41:02.105304> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:41:02.105654> splitted in: [125, 5, 12]
2019-05-30T09:41:02.105997> (BW=125 CR=5 SF=12)
2019-05-30T09:41:02.106356> rcv timestamp (^t): 2019-05-30T09:41:02.097
2019-05-30T09:41:02.106982> 
2019-05-30T09:41:02.107435> Got first framing byte
2019-05-30T09:41:02.107810> --> got LoRa data prefix
2019-05-30T09:41:02.108160> --> DATA with_appkey: read app key sequence
2019-05-30T09:41:02.108479> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:41:02.108866> app key disabled
2019-05-30T09:41:02.109351> valid app key: accept data
2019-05-30T09:41:02.109656> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:41:02.110009> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,106,10,6,-41" "125,5,12" "2019-05-30T09:41:02.097" "B827EB4E30A8"
2019-05-30T09:41:06.404184> CloudEdge: uploading
2019-05-30T09:41:06.404837> CloudEdge: run under guest identity, all data is public
2019-05-30T09:41:06.405381> CloudEdge: check if entity exits
2019-05-30T09:41:06.406814> CloudEdge: will issue requests with
2019-05-30T09:41:06.407866> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-05-30T09:41:06.408746> CloudEdge: returned msg from server is 200
2019-05-30T09:41:06.409591> CloudEdge: entity exists
2019-05-30T09:41:06.410402> CloudEdge: check if measurement exits
2019-05-30T09:41:06.411242> CloudEdge: will issue requests with
2019-05-30T09:41:06.412022> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-05-30T09:41:06.412885> CloudEdge: returned msg from server is 200
2019-05-30T09:41:06.413767> CloudEdge: measurement exists
2019-05-30T09:41:06.414600> CloudEdge: will issue requests with
2019-05-30T09:41:06.415410> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-05-30T09:41:06.416216> data: {"value":95.39,"timestamp":"2019-05-30T09:41:02.097"}
2019-05-30T09:41:06.417052> CloudEdge: returned msg from server is 200
2019-05-30T09:41:06.417822> CloudEdge: upload success
2019-05-30T09:41:06.604325> --> cloud end
2019-05-30T09:41:06.604701> 
2019-05-30T09:42:04.199280> --- rxlora. dst=1 type=0x12 src=8 seq=107 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:42:04.200531> 2019-05-30T09:42:04.199023
2019-05-30T09:42:04.201331> rcv ctrl pkt info (^p): 1,18,8,107,14,6,-41
2019-05-30T09:42:04.203978> splitted in: [1, 18, 8, 107, 14, 6, -41]
2019-05-30T09:42:04.205248> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=107 len=14 SNR=6 RSSI=-41)
2019-05-30T09:42:04.205802> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:42:04.206226> splitted in: [125, 5, 12]
2019-05-30T09:42:04.206692> (BW=125 CR=5 SF=12)
2019-05-30T09:42:04.207136> rcv timestamp (^t): 2019-05-30T09:42:04.194
2019-05-30T09:42:04.207751> 
2019-05-30T09:42:04.208121> Got first framing byte
2019-05-30T09:42:04.208488> --> got LoRa data prefix
2019-05-30T09:42:04.208811> --> DATA with_appkey: read app key sequence
2019-05-30T09:42:04.209131> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:42:04.211310> app key disabled
2019-05-30T09:42:04.211733> valid app key: accept data
2019-05-30T09:42:04.212094> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:42:04.212465> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,107,10,6,-41" "125,5,12" "2019-05-30T09:42:04.194" "B827EB4E30A8"
2019-05-30T09:42:07.382962> --> cloud end
2019-05-30T09:42:07.383401> 
2019-05-30T09:47:29.347203> no timezone support, time will be expressed only in local time
2019-05-30T09:47:29.347665> post_processing_gw.py found an alert_conf section
2019-05-30T09:47:29.347966> Starting thread to perform periodic gw status/tasks
2019-05-30T09:47:29.349575> 2019-05-30 09:47:29.348910
2019-05-30T09:47:29.349987> post status: gw ON
2019-05-30T09:47:29.350285> post status: executing periodic tasks
2019-05-30T09:47:30.353278> 
2019-05-30T09:47:30.353666> Current working directory: /
2019-05-30T09:47:30.354013> SX1276 detected, starting.
2019-05-30T09:47:30.354325> SX1276 LF/HF calibration
2019-05-30T09:47:30.354638> ...
2019-05-30T09:47:30.354910> **********Power ON: state 0
2019-05-30T09:47:30.355190> Default sync word: 0x12
2019-05-30T09:47:30.355484> LoRa mode 1
2019-05-30T09:47:30.355818> Setting mode: state 0
2019-05-30T09:47:30.356094> Frequency 865.200000: state 0
2019-05-30T09:47:30.356370> Use PA_BOOST amplifier line
2019-05-30T09:47:30.356789> Set LoRa power dBm to 14
2019-05-30T09:47:30.357115> Power: state 0
2019-05-30T09:47:30.357405> Get Preamble Length: state 0
2019-05-30T09:47:30.357681> Preamble Length: 8
2019-05-30T09:47:30.357960> LoRa addr 1: state 0
2019-05-30T09:47:30.358250> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-30T09:47:30.358536> Low-level gw status ON
2019-05-30T09:47:30.414107> no timezone support, time will be expressed only in local time
2019-05-30T09:47:30.414715> post status: start running
2019-05-30T09:47:31.462504> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:47:31.463072> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:47:31.463466> get_gps.py: invalid serial port
2019-05-30T09:47:31.595903> post status: dynamic GPS is requested
2019-05-30T09:47:31.596326> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:47:31.596933> post status get GPS: no GPS coordinates
2019-05-30T09:47:31.597370> post status: show current GPS position
2019-05-30T09:47:31.597702> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:47:31.598067> post status: exiting
2019-05-30T09:48:16.775825> --- rxlora. dst=1 type=0x12 src=8 seq=113 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:48:16.776281> 2019-05-30T09:48:16.775408
2019-05-30T09:48:16.776901> rcv ctrl pkt info (^p): 1,18,8,113,14,7,-42
2019-05-30T09:48:16.777503> splitted in: [1, 18, 8, 113, 14, 7, -42]
2019-05-30T09:48:16.777842> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=113 len=14 SNR=7 RSSI=-42)
2019-05-30T09:48:16.778227> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:48:16.778576> splitted in: [125, 5, 12]
2019-05-30T09:48:16.778881> (BW=125 CR=5 SF=12)
2019-05-30T09:48:16.779173> rcv timestamp (^t): 2019-05-30T09:48:16.771
2019-05-30T09:48:16.779494> 
2019-05-30T09:48:16.779876> Got first framing byte
2019-05-30T09:48:16.780196> --> got LoRa data prefix
2019-05-30T09:48:16.780549> --> DATA with_appkey: read app key sequence
2019-05-30T09:48:16.780902> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:48:16.781237> app key disabled
2019-05-30T09:48:16.781609> valid app key: accept data
2019-05-30T09:48:16.781981> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:48:16.782353> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,113,10,7,-42" "125,5,12" "2019-05-30T09:48:16.771" "B827EB1B65FD"
2019-05-30T09:48:21.830914> CloudEdge: uploading
2019-05-30T09:48:21.831776> CloudEdge: run under guest identity, all data is public
2019-05-30T09:48:21.832500> CloudEdge: check if entity exits
2019-05-30T09:48:21.833152> CloudEdge: will issue requests with
2019-05-30T09:48:21.833790> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:48:21.834432> CloudEdge: returned msg from server is 404
2019-05-30T09:48:21.835027> CloudEdge: entity does not exist
2019-05-30T09:48:21.835598> CloudEdge: create new entity
2019-05-30T09:48:21.836173> CloudEdge: will issue requests with
2019-05-30T09:48:21.836949> url: http://api.waziup.io/api/v1/sensors
2019-05-30T09:48:21.837601> data: {"id":"my_domain_Sensor8_ed882419416c810c215f185ec221f9ec","gateway_id":"ed882419416c810c215f185ec221f9ec","domain":"my_domain","visibility":"private"}
2019-05-30T09:48:21.838207> CloudEdge: returned msg from server is 200
2019-05-30T09:48:21.838793> CloudEdge: entity creation success
2019-05-30T09:48:21.839367> CloudEdge: create measurements for new entity
2019-05-30T09:48:21.839947> CloudEdge: create new measurement
2019-05-30T09:48:21.840524> CloudEdge: will issue requests with
2019-05-30T09:48:21.841108> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements
2019-05-30T09:48:21.841682> data: {"id":"TC"}
2019-05-30T09:48:21.842256> CloudEdge: returned msg from server is 200
2019-05-30T09:48:21.842910> CloudEdge: measurement creation success
2019-05-30T09:48:21.843629> CloudEdge: check if measurement exits
2019-05-30T09:48:21.844261> CloudEdge: will issue requests with
2019-05-30T09:48:21.844855> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:48:21.845438> CloudEdge: returned msg from server is 200
2019-05-30T09:48:21.846013> CloudEdge: measurement exists
2019-05-30T09:48:21.846774> CloudEdge: will issue requests with
2019-05-30T09:48:21.847452> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:48:21.848220> data: {"value":95.39,"timestamp":"2019-05-30T09:48:16.771"}
2019-05-30T09:48:21.848839> CloudEdge: returned msg from server is 200
2019-05-30T09:48:21.849610> CloudEdge: upload success
2019-05-30T09:48:22.008239> --> cloud end
2019-05-30T09:48:22.008641> 
2019-05-30T09:49:18.873647> --- rxlora. dst=1 type=0x12 src=8 seq=114 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:49:18.874173> 2019-05-30T09:49:18.873190
2019-05-30T09:49:18.874645> rcv ctrl pkt info (^p): 1,18,8,114,14,6,-41
2019-05-30T09:49:18.875045> splitted in: [1, 18, 8, 114, 14, 6, -41]
2019-05-30T09:49:18.875420> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=114 len=14 SNR=6 RSSI=-41)
2019-05-30T09:49:18.875885> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:49:18.876342> splitted in: [125, 5, 12]
2019-05-30T09:49:18.877147> (BW=125 CR=5 SF=12)
2019-05-30T09:49:18.877862> rcv timestamp (^t): 2019-05-30T09:49:18.869
2019-05-30T09:49:18.878450> 
2019-05-30T09:49:18.879131> Got first framing byte
2019-05-30T09:49:18.879712> --> got LoRa data prefix
2019-05-30T09:49:18.880141> --> DATA with_appkey: read app key sequence
2019-05-30T09:49:18.880565> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:49:18.880934> app key disabled
2019-05-30T09:49:18.881285> valid app key: accept data
2019-05-30T09:49:18.881624> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:49:18.881966> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,114,10,6,-41" "125,5,12" "2019-05-30T09:49:18.869" "B827EB1B65FD"
2019-05-30T09:49:23.168889> CloudEdge: uploading
2019-05-30T09:49:23.170191> CloudEdge: run under guest identity, all data is public
2019-05-30T09:49:23.171103> CloudEdge: check if entity exits
2019-05-30T09:49:23.171959> CloudEdge: will issue requests with
2019-05-30T09:49:23.172817> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:49:23.173594> CloudEdge: returned msg from server is 200
2019-05-30T09:49:23.174309> CloudEdge: entity exists
2019-05-30T09:49:23.175017> CloudEdge: check if measurement exits
2019-05-30T09:49:23.175728> CloudEdge: will issue requests with
2019-05-30T09:49:23.176430> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:49:23.177346> CloudEdge: returned msg from server is 200
2019-05-30T09:49:23.178079> CloudEdge: measurement exists
2019-05-30T09:49:23.178789> CloudEdge: will issue requests with
2019-05-30T09:49:23.179511> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:49:23.180223> data: {"value":95.39,"timestamp":"2019-05-30T09:49:18.869"}
2019-05-30T09:49:23.180924> CloudEdge: returned msg from server is 200
2019-05-30T09:49:23.181620> CloudEdge: upload success
2019-05-30T09:49:23.355119> --> cloud end
2019-05-30T09:49:23.355564> 
2019-05-30T09:50:20.971723> --- rxlora. dst=1 type=0x12 src=8 seq=115 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:50:20.972351> 2019-05-30T09:50:20.970483
2019-05-30T09:50:20.972901> rcv ctrl pkt info (^p): 1,18,8,115,14,6,-42
2019-05-30T09:50:20.973430> splitted in: [1, 18, 8, 115, 14, 6, -42]
2019-05-30T09:50:20.973937> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=115 len=14 SNR=6 RSSI=-42)
2019-05-30T09:50:20.974426> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:50:20.974919> splitted in: [125, 5, 12]
2019-05-30T09:50:20.975379> (BW=125 CR=5 SF=12)
2019-05-30T09:50:20.975878> rcv timestamp (^t): 2019-05-30T09:50:20.967
2019-05-30T09:50:20.976383> 
2019-05-30T09:50:20.977199> Got first framing byte
2019-05-30T09:50:20.977782> --> got LoRa data prefix
2019-05-30T09:50:20.978216> --> DATA with_appkey: read app key sequence
2019-05-30T09:50:20.978621> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:50:20.978915> app key disabled
2019-05-30T09:50:20.979238> valid app key: accept data
2019-05-30T09:50:20.979523> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:50:20.979836> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,115,10,6,-42" "125,5,12" "2019-05-30T09:50:20.967" "B827EB1B65FD"
2019-05-30T09:50:25.204335> CloudEdge: uploading
2019-05-30T09:50:25.205027> CloudEdge: run under guest identity, all data is public
2019-05-30T09:50:25.205645> CloudEdge: check if entity exits
2019-05-30T09:50:25.206264> CloudEdge: will issue requests with
2019-05-30T09:50:25.207140> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:50:25.207873> CloudEdge: returned msg from server is 200
2019-05-30T09:50:25.208517> CloudEdge: entity exists
2019-05-30T09:50:25.209152> CloudEdge: check if measurement exits
2019-05-30T09:50:25.209778> CloudEdge: will issue requests with
2019-05-30T09:50:25.210468> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:50:25.211052> CloudEdge: returned msg from server is 200
2019-05-30T09:50:25.211658> CloudEdge: measurement exists
2019-05-30T09:50:25.212242> CloudEdge: will issue requests with
2019-05-30T09:50:25.212822> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:50:25.213400> data: {"value":95.39,"timestamp":"2019-05-30T09:50:20.967"}
2019-05-30T09:50:25.213975> CloudEdge: returned msg from server is 200
2019-05-30T09:50:25.214541> CloudEdge: upload success
2019-05-30T09:50:25.387815> --> cloud end
2019-05-30T09:50:25.388186> 
2019-05-30T09:51:23.068359> --- rxlora. dst=1 type=0x12 src=8 seq=116 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:51:23.068793> 2019-05-30T09:51:23.067840
2019-05-30T09:51:23.069160> rcv ctrl pkt info (^p): 1,18,8,116,14,6,-42
2019-05-30T09:51:23.069461> splitted in: [1, 18, 8, 116, 14, 6, -42]
2019-05-30T09:51:23.069739> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=116 len=14 SNR=6 RSSI=-42)
2019-05-30T09:51:23.070012> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:51:23.070316> splitted in: [125, 5, 12]
2019-05-30T09:51:23.070665> (BW=125 CR=5 SF=12)
2019-05-30T09:51:23.070973> rcv timestamp (^t): 2019-05-30T09:51:23.064
2019-05-30T09:51:23.071257> 
2019-05-30T09:51:23.071635> Got first framing byte
2019-05-30T09:51:23.071941> --> got LoRa data prefix
2019-05-30T09:51:23.072220> --> DATA with_appkey: read app key sequence
2019-05-30T09:51:23.072547> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:51:23.072895> app key disabled
2019-05-30T09:51:23.073246> valid app key: accept data
2019-05-30T09:51:23.073557> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:51:23.073942> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,116,10,6,-42" "125,5,12" "2019-05-30T09:51:23.064" "B827EB1B65FD"
2019-05-30T09:51:27.276526> CloudEdge: uploading
2019-05-30T09:51:27.277403> CloudEdge: run under guest identity, all data is public
2019-05-30T09:51:27.277923> CloudEdge: check if entity exits
2019-05-30T09:51:27.278388> CloudEdge: will issue requests with
2019-05-30T09:51:27.278781> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:51:27.279211> CloudEdge: returned msg from server is 200
2019-05-30T09:51:27.279614> CloudEdge: entity exists
2019-05-30T09:51:27.279992> CloudEdge: check if measurement exits
2019-05-30T09:51:27.280338> CloudEdge: will issue requests with
2019-05-30T09:51:27.280653> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:51:27.281025> CloudEdge: returned msg from server is 200
2019-05-30T09:51:27.281348> CloudEdge: measurement exists
2019-05-30T09:51:27.281687> CloudEdge: will issue requests with
2019-05-30T09:51:27.282075> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:51:27.282408> data: {"value":95.33,"timestamp":"2019-05-30T09:51:23.064"}
2019-05-30T09:51:27.282786> CloudEdge: returned msg from server is 200
2019-05-30T09:51:27.283131> CloudEdge: upload success
2019-05-30T09:51:27.441363> --> cloud end
2019-05-30T09:51:27.441743> 
2019-05-30T09:52:25.167235> --- rxlora. dst=1 type=0x12 src=8 seq=117 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T09:52:25.167773> 2019-05-30T09:52:25.164850
2019-05-30T09:52:25.168140> rcv ctrl pkt info (^p): 1,18,8,117,14,6,-43
2019-05-30T09:52:25.168446> splitted in: [1, 18, 8, 117, 14, 6, -43]
2019-05-30T09:52:25.168740> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=117 len=14 SNR=6 RSSI=-43)
2019-05-30T09:52:25.169028> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:52:25.169315> splitted in: [125, 5, 12]
2019-05-30T09:52:25.169631> (BW=125 CR=5 SF=12)
2019-05-30T09:52:25.169959> rcv timestamp (^t): 2019-05-30T09:52:25.161
2019-05-30T09:52:25.170310> 
2019-05-30T09:52:25.170630> Got first framing byte
2019-05-30T09:52:25.171077> --> got LoRa data prefix
2019-05-30T09:52:25.171445> --> DATA with_appkey: read app key sequence
2019-05-30T09:52:25.171794> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:52:25.172131> app key disabled
2019-05-30T09:52:25.172476> valid app key: accept data
2019-05-30T09:52:25.172795> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:52:25.173239> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,117,10,6,-43" "125,5,12" "2019-05-30T09:52:25.161" "B827EB1B65FD"
2019-05-30T09:52:29.446252> CloudEdge: uploading
2019-05-30T09:52:29.449511> CloudEdge: run under guest identity, all data is public
2019-05-30T09:52:29.450297> CloudEdge: check if entity exits
2019-05-30T09:52:29.450962> CloudEdge: will issue requests with
2019-05-30T09:52:29.451685> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:52:29.452384> CloudEdge: returned msg from server is 200
2019-05-30T09:52:29.453078> CloudEdge: entity exists
2019-05-30T09:52:29.453772> CloudEdge: check if measurement exits
2019-05-30T09:52:29.454473> CloudEdge: will issue requests with
2019-05-30T09:52:29.455159> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:52:29.455848> CloudEdge: returned msg from server is 200
2019-05-30T09:52:29.456582> CloudEdge: measurement exists
2019-05-30T09:52:29.457343> CloudEdge: will issue requests with
2019-05-30T09:52:29.457936> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:52:29.458357> data: {"value":95.46,"timestamp":"2019-05-30T09:52:25.161"}
2019-05-30T09:52:29.458740> CloudEdge: returned msg from server is 200
2019-05-30T09:52:29.459104> CloudEdge: upload success
2019-05-30T09:52:29.624895> --> cloud end
2019-05-30T09:52:29.625276> 
2019-05-30T09:53:27.265888> --- rxlora. dst=1 type=0x12 src=8 seq=118 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:53:27.266373> 2019-05-30T09:53:27.262967
2019-05-30T09:53:27.266976> rcv ctrl pkt info (^p): 1,18,8,118,14,6,-42
2019-05-30T09:53:27.267380> splitted in: [1, 18, 8, 118, 14, 6, -42]
2019-05-30T09:53:27.267739> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=118 len=14 SNR=6 RSSI=-42)
2019-05-30T09:53:27.268109> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:53:27.268468> splitted in: [125, 5, 12]
2019-05-30T09:53:27.268799> (BW=125 CR=5 SF=12)
2019-05-30T09:53:27.269212> rcv timestamp (^t): 2019-05-30T09:53:27.259
2019-05-30T09:53:27.269591> 
2019-05-30T09:53:27.269960> Got first framing byte
2019-05-30T09:53:27.270322> --> got LoRa data prefix
2019-05-30T09:53:27.270677> --> DATA with_appkey: read app key sequence
2019-05-30T09:53:27.271029> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:53:27.271532> app key disabled
2019-05-30T09:53:27.271889> valid app key: accept data
2019-05-30T09:53:27.272232> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:53:27.272599> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,118,10,6,-42" "125,5,12" "2019-05-30T09:53:27.259" "B827EB1B65FD"
2019-05-30T09:53:31.726896> CloudEdge: uploading
2019-05-30T09:53:31.727765> CloudEdge: run under guest identity, all data is public
2019-05-30T09:53:31.728523> CloudEdge: check if entity exits
2019-05-30T09:53:31.729199> CloudEdge: will issue requests with
2019-05-30T09:53:31.729858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:53:31.730507> CloudEdge: returned msg from server is 200
2019-05-30T09:53:31.731240> CloudEdge: entity exists
2019-05-30T09:53:31.731838> CloudEdge: check if measurement exits
2019-05-30T09:53:31.732422> CloudEdge: will issue requests with
2019-05-30T09:53:31.733015> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:53:31.733600> CloudEdge: returned msg from server is 200
2019-05-30T09:53:31.734209> CloudEdge: measurement exists
2019-05-30T09:53:31.734840> CloudEdge: will issue requests with
2019-05-30T09:53:31.735565> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:53:31.736222> data: {"value":95.39,"timestamp":"2019-05-30T09:53:27.259"}
2019-05-30T09:53:31.736948> CloudEdge: returned msg from server is 200
2019-05-30T09:53:31.737642> CloudEdge: upload success
2019-05-30T09:53:31.947571> --> cloud end
2019-05-30T09:53:31.948121> 
2019-05-30T09:54:29.361207> --- rxlora. dst=1 type=0x12 src=8 seq=119 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:54:29.361658> 2019-05-30T09:54:29.360814
2019-05-30T09:54:29.361985> rcv ctrl pkt info (^p): 1,18,8,119,14,6,-42
2019-05-30T09:54:29.362297> splitted in: [1, 18, 8, 119, 14, 6, -42]
2019-05-30T09:54:29.362652> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=119 len=14 SNR=6 RSSI=-42)
2019-05-30T09:54:29.362951> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:54:29.363236> splitted in: [125, 5, 12]
2019-05-30T09:54:29.363577> (BW=125 CR=5 SF=12)
2019-05-30T09:54:29.363889> rcv timestamp (^t): 2019-05-30T09:54:29.357
2019-05-30T09:54:29.364197> 
2019-05-30T09:54:29.364559> Got first framing byte
2019-05-30T09:54:29.364859> --> got LoRa data prefix
2019-05-30T09:54:29.365151> --> DATA with_appkey: read app key sequence
2019-05-30T09:54:29.365496> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:54:29.365846> app key disabled
2019-05-30T09:54:29.366221> valid app key: accept data
2019-05-30T09:54:29.366645> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:54:29.367177> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,119,10,6,-42" "125,5,12" "2019-05-30T09:54:29.357" "B827EB1B65FD"
2019-05-30T09:54:33.545067> CloudEdge: uploading
2019-05-30T09:54:33.545983> CloudEdge: run under guest identity, all data is public
2019-05-30T09:54:33.547053> CloudEdge: check if entity exits
2019-05-30T09:54:33.547865> CloudEdge: will issue requests with
2019-05-30T09:54:33.548612> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:54:33.549269> CloudEdge: returned msg from server is 200
2019-05-30T09:54:33.549877> CloudEdge: entity exists
2019-05-30T09:54:33.550498> CloudEdge: check if measurement exits
2019-05-30T09:54:33.551095> CloudEdge: will issue requests with
2019-05-30T09:54:33.551692> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:54:33.552275> CloudEdge: returned msg from server is 200
2019-05-30T09:54:33.552871> CloudEdge: measurement exists
2019-05-30T09:54:33.553448> CloudEdge: will issue requests with
2019-05-30T09:54:33.554031> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:54:33.554697> data: {"value":95.39,"timestamp":"2019-05-30T09:54:29.357"}
2019-05-30T09:54:33.555313> CloudEdge: returned msg from server is 200
2019-05-30T09:54:33.555898> CloudEdge: upload success
2019-05-30T09:54:33.729417> --> cloud end
2019-05-30T09:54:33.729783> 
2019-05-30T09:55:31.462958> --- rxlora. dst=1 type=0x12 src=8 seq=120 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:55:31.463448> 2019-05-30T09:55:31.459885
2019-05-30T09:55:31.463798> rcv ctrl pkt info (^p): 1,18,8,120,14,6,-42
2019-05-30T09:55:31.464098> splitted in: [1, 18, 8, 120, 14, 6, -42]
2019-05-30T09:55:31.464395> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=120 len=14 SNR=6 RSSI=-42)
2019-05-30T09:55:31.464759> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:55:31.465128> splitted in: [125, 5, 12]
2019-05-30T09:55:31.465499> (BW=125 CR=5 SF=12)
2019-05-30T09:55:31.466267> rcv timestamp (^t): 2019-05-30T09:55:31.456
2019-05-30T09:55:31.467177> 
2019-05-30T09:55:31.468087> Got first framing byte
2019-05-30T09:55:31.468878> --> got LoRa data prefix
2019-05-30T09:55:31.469776> --> DATA with_appkey: read app key sequence
2019-05-30T09:55:31.470425> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:55:31.470928> app key disabled
2019-05-30T09:55:31.471419> valid app key: accept data
2019-05-30T09:55:31.471864> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:55:31.472435> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,120,10,6,-42" "125,5,12" "2019-05-30T09:55:31.456" "B827EB1B65FD"
2019-05-30T09:55:35.702823> CloudEdge: uploading
2019-05-30T09:55:35.703518> CloudEdge: run under guest identity, all data is public
2019-05-30T09:55:35.704105> CloudEdge: check if entity exits
2019-05-30T09:55:35.704735> CloudEdge: will issue requests with
2019-05-30T09:55:35.705385> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:55:35.706012> CloudEdge: returned msg from server is 200
2019-05-30T09:55:35.707157> CloudEdge: entity exists
2019-05-30T09:55:35.708030> CloudEdge: check if measurement exits
2019-05-30T09:55:35.708680> CloudEdge: will issue requests with
2019-05-30T09:55:35.709268> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:55:35.709854> CloudEdge: returned msg from server is 200
2019-05-30T09:55:35.710436> CloudEdge: measurement exists
2019-05-30T09:55:35.711010> CloudEdge: will issue requests with
2019-05-30T09:55:35.711589> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:55:35.712168> data: {"value":95.33,"timestamp":"2019-05-30T09:55:31.456"}
2019-05-30T09:55:35.712740> CloudEdge: returned msg from server is 200
2019-05-30T09:55:35.713344> CloudEdge: upload success
2019-05-30T09:55:35.910419> --> cloud end
2019-05-30T09:55:35.910803> 
2019-05-30T09:56:33.561841> --- rxlora. dst=1 type=0x12 src=8 seq=121 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:56:33.562394> 2019-05-30T09:56:33.561408
2019-05-30T09:56:33.562772> rcv ctrl pkt info (^p): 1,18,8,121,14,7,-41
2019-05-30T09:56:33.563129> splitted in: [1, 18, 8, 121, 14, 7, -41]
2019-05-30T09:56:33.563485> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=121 len=14 SNR=7 RSSI=-41)
2019-05-30T09:56:33.563899> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:56:33.564205> splitted in: [125, 5, 12]
2019-05-30T09:56:33.564531> (BW=125 CR=5 SF=12)
2019-05-30T09:56:33.564858> rcv timestamp (^t): 2019-05-30T09:56:33.556
2019-05-30T09:56:33.565179> 
2019-05-30T09:56:33.565501> Got first framing byte
2019-05-30T09:56:33.565914> --> got LoRa data prefix
2019-05-30T09:56:33.566348> --> DATA with_appkey: read app key sequence
2019-05-30T09:56:33.566841> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:56:33.567333> app key disabled
2019-05-30T09:56:33.567718> valid app key: accept data
2019-05-30T09:56:33.568151> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:56:33.568599> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,121,10,7,-41" "125,5,12" "2019-05-30T09:56:33.556" "B827EB1B65FD"
2019-05-30T09:56:37.654515> CloudEdge: uploading
2019-05-30T09:56:37.655444> CloudEdge: run under guest identity, all data is public
2019-05-30T09:56:37.656189> CloudEdge: check if entity exits
2019-05-30T09:56:37.657070> CloudEdge: will issue requests with
2019-05-30T09:56:37.657881> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:56:37.658578> CloudEdge: returned msg from server is 200
2019-05-30T09:56:37.659184> CloudEdge: entity exists
2019-05-30T09:56:37.659763> CloudEdge: check if measurement exits
2019-05-30T09:56:37.660348> CloudEdge: will issue requests with
2019-05-30T09:56:37.660923> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:56:37.661504> CloudEdge: returned msg from server is 200
2019-05-30T09:56:37.662077> CloudEdge: measurement exists
2019-05-30T09:56:37.662647> CloudEdge: will issue requests with
2019-05-30T09:56:37.663215> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:56:37.663787> data: {"value":95.39,"timestamp":"2019-05-30T09:56:33.556"}
2019-05-30T09:56:37.664362> CloudEdge: returned msg from server is 200
2019-05-30T09:56:37.664943> CloudEdge: upload success
2019-05-30T09:56:37.841733> --> cloud end
2019-05-30T09:56:37.842140> 
2019-05-30T09:57:31.739676> 2019-05-30 09:57:31.735572
2019-05-30T09:57:31.740626> post status: gw ON
2019-05-30T09:57:31.741428> post status: executing periodic tasks
2019-05-30T09:57:32.830017> no timezone support, time will be expressed only in local time
2019-05-30T09:57:32.830465> post status: start running
2019-05-30T09:57:33.864176> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T09:57:33.864764> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T09:57:33.865166> get_gps.py: invalid serial port
2019-05-30T09:57:34.013934> post status: dynamic GPS is requested
2019-05-30T09:57:34.014381> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T09:57:34.014763> post status get GPS: no GPS coordinates
2019-05-30T09:57:34.015071> post status: show current GPS position
2019-05-30T09:57:34.015359> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T09:57:34.015646> post status: exiting
2019-05-30T09:57:35.659670> --- rxlora. dst=1 type=0x12 src=8 seq=122 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:57:35.660130> 2019-05-30T09:57:35.659259
2019-05-30T09:57:35.660442> rcv ctrl pkt info (^p): 1,18,8,122,14,6,-41
2019-05-30T09:57:35.660748> splitted in: [1, 18, 8, 122, 14, 6, -41]
2019-05-30T09:57:35.661023> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=122 len=14 SNR=6 RSSI=-41)
2019-05-30T09:57:35.661298> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:57:35.661587> splitted in: [125, 5, 12]
2019-05-30T09:57:35.661946> (BW=125 CR=5 SF=12)
2019-05-30T09:57:35.662251> rcv timestamp (^t): 2019-05-30T09:57:35.655
2019-05-30T09:57:35.662539> 
2019-05-30T09:57:35.662890> Got first framing byte
2019-05-30T09:57:35.663196> --> got LoRa data prefix
2019-05-30T09:57:35.663476> --> DATA with_appkey: read app key sequence
2019-05-30T09:57:35.663756> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:57:35.664092> app key disabled
2019-05-30T09:57:35.664440> valid app key: accept data
2019-05-30T09:57:35.664788> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:57:35.665138> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,122,10,6,-41" "125,5,12" "2019-05-30T09:57:35.655" "B827EB1B65FD"
2019-05-30T09:57:39.819428> CloudEdge: uploading
2019-05-30T09:57:39.820228> CloudEdge: run under guest identity, all data is public
2019-05-30T09:57:39.820952> CloudEdge: check if entity exits
2019-05-30T09:57:39.821577> CloudEdge: will issue requests with
2019-05-30T09:57:39.822189> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:57:39.822802> CloudEdge: returned msg from server is 200
2019-05-30T09:57:39.823395> CloudEdge: entity exists
2019-05-30T09:57:39.823959> CloudEdge: check if measurement exits
2019-05-30T09:57:39.824514> CloudEdge: will issue requests with
2019-05-30T09:57:39.825078> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:57:39.825641> CloudEdge: returned msg from server is 200
2019-05-30T09:57:39.826198> CloudEdge: measurement exists
2019-05-30T09:57:39.827172> CloudEdge: will issue requests with
2019-05-30T09:57:39.828489> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:57:39.829762> data: {"value":95.33,"timestamp":"2019-05-30T09:57:35.655"}
2019-05-30T09:57:39.830994> CloudEdge: returned msg from server is 200
2019-05-30T09:57:39.832298> CloudEdge: upload success
2019-05-30T09:57:40.015141> --> cloud end
2019-05-30T09:57:40.015607> 
2019-05-30T09:57:45.919091> Low-level gw status ON
2019-05-30T09:58:37.758779> --- rxlora. dst=1 type=0x12 src=8 seq=123 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T09:58:37.760310> 2019-05-30T09:58:37.759059
2019-05-30T09:58:37.760788> rcv ctrl pkt info (^p): 1,18,8,123,14,7,-41
2019-05-30T09:58:37.761231> splitted in: [1, 18, 8, 123, 14, 7, -41]
2019-05-30T09:58:37.761606> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=123 len=14 SNR=7 RSSI=-41)
2019-05-30T09:58:37.762154> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:58:37.762548> splitted in: [125, 5, 12]
2019-05-30T09:58:37.762939> (BW=125 CR=5 SF=12)
2019-05-30T09:58:37.763277> rcv timestamp (^t): 2019-05-30T09:58:37.754
2019-05-30T09:58:37.763609> 
2019-05-30T09:58:37.764085> Got first framing byte
2019-05-30T09:58:37.764504> --> got LoRa data prefix
2019-05-30T09:58:37.764925> --> DATA with_appkey: read app key sequence
2019-05-30T09:58:37.765327> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:58:37.765795> app key disabled
2019-05-30T09:58:37.766224> valid app key: accept data
2019-05-30T09:58:37.766742> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:58:37.767236> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,123,10,7,-41" "125,5,12" "2019-05-30T09:58:37.754" "B827EB1B65FD"
2019-05-30T09:58:41.978617> CloudEdge: uploading
2019-05-30T09:58:41.979283> CloudEdge: run under guest identity, all data is public
2019-05-30T09:58:41.979828> CloudEdge: check if entity exits
2019-05-30T09:58:41.980361> CloudEdge: will issue requests with
2019-05-30T09:58:41.980893> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:58:41.981426> CloudEdge: returned msg from server is 200
2019-05-30T09:58:41.981956> CloudEdge: entity exists
2019-05-30T09:58:41.982484> CloudEdge: check if measurement exits
2019-05-30T09:58:41.983012> CloudEdge: will issue requests with
2019-05-30T09:58:41.983540> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:58:41.984326> CloudEdge: returned msg from server is 200
2019-05-30T09:58:41.984866> CloudEdge: measurement exists
2019-05-30T09:58:41.985397> CloudEdge: will issue requests with
2019-05-30T09:58:41.985929> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:58:41.986465> data: {"value":95.39,"timestamp":"2019-05-30T09:58:37.754"}
2019-05-30T09:58:41.990423> CloudEdge: returned msg from server is 200
2019-05-30T09:58:41.991307> CloudEdge: upload success
2019-05-30T09:58:42.173144> --> cloud end
2019-05-30T09:58:42.173551> 
2019-05-30T09:59:39.857976> --- rxlora. dst=1 type=0x12 src=8 seq=124 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T09:59:39.858799> 2019-05-30T09:59:39.858107
2019-05-30T09:59:39.859146> rcv ctrl pkt info (^p): 1,18,8,124,14,7,-42
2019-05-30T09:59:39.859488> splitted in: [1, 18, 8, 124, 14, 7, -42]
2019-05-30T09:59:39.859787> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=124 len=14 SNR=7 RSSI=-42)
2019-05-30T09:59:39.860127> rcv ctrl radio info (^r): 125,5,12
2019-05-30T09:59:39.860696> splitted in: [125, 5, 12]
2019-05-30T09:59:39.861100> (BW=125 CR=5 SF=12)
2019-05-30T09:59:39.861427> rcv timestamp (^t): 2019-05-30T09:59:39.853
2019-05-30T09:59:39.861727> 
2019-05-30T09:59:39.862042> Got first framing byte
2019-05-30T09:59:39.862331> --> got LoRa data prefix
2019-05-30T09:59:39.862621> --> DATA with_appkey: read app key sequence
2019-05-30T09:59:39.862962> app key is 0x05 0x06 0x07 0x08
2019-05-30T09:59:39.863321> app key disabled
2019-05-30T09:59:39.863678> valid app key: accept data
2019-05-30T09:59:39.863998> uploading with python /app/data_acq/edgeCall.py
2019-05-30T09:59:39.864400> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,124,10,7,-42" "125,5,12" "2019-05-30T09:59:39.853" "B827EB1B65FD"
2019-05-30T09:59:44.023697> CloudEdge: uploading
2019-05-30T09:59:44.024181> CloudEdge: run under guest identity, all data is public
2019-05-30T09:59:44.024498> CloudEdge: check if entity exits
2019-05-30T09:59:44.024771> CloudEdge: will issue requests with
2019-05-30T09:59:44.025042> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T09:59:44.025312> CloudEdge: returned msg from server is 200
2019-05-30T09:59:44.025589> CloudEdge: entity exists
2019-05-30T09:59:44.025983> CloudEdge: check if measurement exits
2019-05-30T09:59:44.026328> CloudEdge: will issue requests with
2019-05-30T09:59:44.026858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T09:59:44.027236> CloudEdge: returned msg from server is 200
2019-05-30T09:59:44.027590> CloudEdge: measurement exists
2019-05-30T09:59:44.028277> CloudEdge: will issue requests with
2019-05-30T09:59:44.028829> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T09:59:44.029373> data: {"value":95.26,"timestamp":"2019-05-30T09:59:39.853"}
2019-05-30T09:59:44.030457> CloudEdge: returned msg from server is 200
2019-05-30T09:59:44.031525> CloudEdge: upload success
2019-05-30T09:59:44.205523> --> cloud end
2019-05-30T09:59:44.205981> 
2019-05-30T10:00:41.956189> --- rxlora. dst=1 type=0x12 src=8 seq=125 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:00:41.956778> 2019-05-30T10:00:41.955790
2019-05-30T10:00:41.957172> rcv ctrl pkt info (^p): 1,18,8,125,14,6,-42
2019-05-30T10:00:41.957498> splitted in: [1, 18, 8, 125, 14, 6, -42]
2019-05-30T10:00:41.957787> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=125 len=14 SNR=6 RSSI=-42)
2019-05-30T10:00:41.958067> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:00:41.958359> splitted in: [125, 5, 12]
2019-05-30T10:00:41.958738> (BW=125 CR=5 SF=12)
2019-05-30T10:00:41.959060> rcv timestamp (^t): 2019-05-30T10:00:41.952
2019-05-30T10:00:41.959364> 
2019-05-30T10:00:41.959739> Got first framing byte
2019-05-30T10:00:41.960048> --> got LoRa data prefix
2019-05-30T10:00:41.960334> --> DATA with_appkey: read app key sequence
2019-05-30T10:00:41.960671> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:00:41.961031> app key disabled
2019-05-30T10:00:41.961391> valid app key: accept data
2019-05-30T10:00:41.961816> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:00:41.962231> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,125,10,6,-42" "125,5,12" "2019-05-30T10:00:41.952" "B827EB1B65FD"
2019-05-30T10:00:46.103204> CloudEdge: uploading
2019-05-30T10:00:46.103875> CloudEdge: run under guest identity, all data is public
2019-05-30T10:00:46.104447> CloudEdge: check if entity exits
2019-05-30T10:00:46.105018> CloudEdge: will issue requests with
2019-05-30T10:00:46.105788> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:00:46.106465> CloudEdge: returned msg from server is 200
2019-05-30T10:00:46.107231> CloudEdge: entity exists
2019-05-30T10:00:46.107885> CloudEdge: check if measurement exits
2019-05-30T10:00:46.108510> CloudEdge: will issue requests with
2019-05-30T10:00:46.109122> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:00:46.109708> CloudEdge: returned msg from server is 200
2019-05-30T10:00:46.110285> CloudEdge: measurement exists
2019-05-30T10:00:46.110868> CloudEdge: will issue requests with
2019-05-30T10:00:46.111451> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:00:46.112032> data: {"value":95.39,"timestamp":"2019-05-30T10:00:41.952"}
2019-05-30T10:00:46.112610> CloudEdge: returned msg from server is 200
2019-05-30T10:00:46.113190> CloudEdge: upload success
2019-05-30T10:00:46.318429> --> cloud end
2019-05-30T10:00:46.318792> 
2019-05-30T10:01:44.057274> --- rxlora. dst=1 type=0x12 src=8 seq=126 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:01:44.058016> 2019-05-30T10:01:44.054718
2019-05-30T10:01:44.058386> rcv ctrl pkt info (^p): 1,18,8,126,14,6,-42
2019-05-30T10:01:44.058720> splitted in: [1, 18, 8, 126, 14, 6, -42]
2019-05-30T10:01:44.059017> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=126 len=14 SNR=6 RSSI=-42)
2019-05-30T10:01:44.059346> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:01:44.059721> splitted in: [125, 5, 12]
2019-05-30T10:01:44.060076> (BW=125 CR=5 SF=12)
2019-05-30T10:01:44.060401> rcv timestamp (^t): 2019-05-30T10:01:44.051
2019-05-30T10:01:44.060825> 
2019-05-30T10:01:44.061201> Got first framing byte
2019-05-30T10:01:44.061614> --> got LoRa data prefix
2019-05-30T10:01:44.061957> --> DATA with_appkey: read app key sequence
2019-05-30T10:01:44.062307> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:01:44.062645> app key disabled
2019-05-30T10:01:44.063120> valid app key: accept data
2019-05-30T10:01:44.063472> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:01:44.063797> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,126,10,6,-42" "125,5,12" "2019-05-30T10:01:44.051" "B827EB1B65FD"
2019-05-30T10:01:48.339495> CloudEdge: uploading
2019-05-30T10:01:48.340402> CloudEdge: run under guest identity, all data is public
2019-05-30T10:01:48.341171> CloudEdge: check if entity exits
2019-05-30T10:01:48.341871> CloudEdge: will issue requests with
2019-05-30T10:01:48.342565> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:01:48.343232> CloudEdge: returned msg from server is 200
2019-05-30T10:01:48.343853> CloudEdge: entity exists
2019-05-30T10:01:48.344445> CloudEdge: check if measurement exits
2019-05-30T10:01:48.345046> CloudEdge: will issue requests with
2019-05-30T10:01:48.345723> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:01:48.346339> CloudEdge: returned msg from server is 200
2019-05-30T10:01:48.347390> CloudEdge: measurement exists
2019-05-30T10:01:48.348113> CloudEdge: will issue requests with
2019-05-30T10:01:48.348743> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:01:48.349369> data: {"value":95.26,"timestamp":"2019-05-30T10:01:44.051"}
2019-05-30T10:01:48.349973> CloudEdge: returned msg from server is 200
2019-05-30T10:01:48.350576> CloudEdge: upload success
2019-05-30T10:01:48.521462> --> cloud end
2019-05-30T10:01:48.521834> 
2019-05-30T10:02:46.155846> --- rxlora. dst=1 type=0x12 src=8 seq=127 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T10:02:46.156259> 2019-05-30T10:02:46.153003
2019-05-30T10:02:46.156624> rcv ctrl pkt info (^p): 1,18,8,127,14,6,-46
2019-05-30T10:02:46.156981> splitted in: [1, 18, 8, 127, 14, 6, -46]
2019-05-30T10:02:46.157300> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=127 len=14 SNR=6 RSSI=-46)
2019-05-30T10:02:46.157613> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:02:46.157929> splitted in: [125, 5, 12]
2019-05-30T10:02:46.158268> (BW=125 CR=5 SF=12)
2019-05-30T10:02:46.158716> rcv timestamp (^t): 2019-05-30T10:02:46.149
2019-05-30T10:02:46.159230> 
2019-05-30T10:02:46.159714> Got first framing byte
2019-05-30T10:02:46.160251> --> got LoRa data prefix
2019-05-30T10:02:46.160831> --> DATA with_appkey: read app key sequence
2019-05-30T10:02:46.161383> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:02:46.162002> app key disabled
2019-05-30T10:02:46.162496> valid app key: accept data
2019-05-30T10:02:46.162862> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:02:46.163210> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,127,10,6,-46" "125,5,12" "2019-05-30T10:02:46.149" "B827EB1B65FD"
2019-05-30T10:02:50.291080> CloudEdge: uploading
2019-05-30T10:02:50.291743> CloudEdge: run under guest identity, all data is public
2019-05-30T10:02:50.292299> CloudEdge: check if entity exits
2019-05-30T10:02:50.292850> CloudEdge: will issue requests with
2019-05-30T10:02:50.293494> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:02:50.294133> CloudEdge: returned msg from server is 200
2019-05-30T10:02:50.294797> CloudEdge: entity exists
2019-05-30T10:02:50.295437> CloudEdge: check if measurement exits
2019-05-30T10:02:50.296071> CloudEdge: will issue requests with
2019-05-30T10:02:50.296773> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:02:50.297389> CloudEdge: returned msg from server is 200
2019-05-30T10:02:50.297981> CloudEdge: measurement exists
2019-05-30T10:02:50.298564> CloudEdge: will issue requests with
2019-05-30T10:02:50.299221> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:02:50.299800> data: {"value":95.39,"timestamp":"2019-05-30T10:02:46.149"}
2019-05-30T10:02:50.300368> CloudEdge: returned msg from server is 200
2019-05-30T10:02:50.300945> CloudEdge: upload success
2019-05-30T10:02:50.469463> --> cloud end
2019-05-30T10:02:50.469826> 
2019-05-30T10:03:48.254229> --- rxlora. dst=1 type=0x12 src=8 seq=128 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:03:48.255096> 2019-05-30T10:03:48.253196
2019-05-30T10:03:48.255455> rcv ctrl pkt info (^p): 1,18,8,128,14,6,-43
2019-05-30T10:03:48.255782> splitted in: [1, 18, 8, 128, 14, 6, -43]
2019-05-30T10:03:48.256054> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=128 len=14 SNR=6 RSSI=-43)
2019-05-30T10:03:48.257565> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:03:48.258114> splitted in: [125, 5, 12]
2019-05-30T10:03:48.258518> (BW=125 CR=5 SF=12)
2019-05-30T10:03:48.258982> rcv timestamp (^t): 2019-05-30T10:03:48.249
2019-05-30T10:03:48.259408> 
2019-05-30T10:03:48.259784> Got first framing byte
2019-05-30T10:03:48.260177> --> got LoRa data prefix
2019-05-30T10:03:48.260512> --> DATA with_appkey: read app key sequence
2019-05-30T10:03:48.260910> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:03:48.261288> app key disabled
2019-05-30T10:03:48.262020> valid app key: accept data
2019-05-30T10:03:48.262635> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:03:48.263149> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,128,10,6,-43" "125,5,12" "2019-05-30T10:03:48.249" "B827EB1B65FD"
2019-05-30T10:03:52.355271> CloudEdge: uploading
2019-05-30T10:03:52.356157> CloudEdge: run under guest identity, all data is public
2019-05-30T10:03:52.357081> CloudEdge: check if entity exits
2019-05-30T10:03:52.357840> CloudEdge: will issue requests with
2019-05-30T10:03:52.358538> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:03:52.359198> CloudEdge: returned msg from server is 200
2019-05-30T10:03:52.359806> CloudEdge: entity exists
2019-05-30T10:03:52.360391> CloudEdge: check if measurement exits
2019-05-30T10:03:52.361024> CloudEdge: will issue requests with
2019-05-30T10:03:52.361660> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:03:52.362256> CloudEdge: returned msg from server is 200
2019-05-30T10:03:52.362836> CloudEdge: measurement exists
2019-05-30T10:03:52.363772> CloudEdge: will issue requests with
2019-05-30T10:03:52.364491> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:03:52.365131> data: {"value":95.39,"timestamp":"2019-05-30T10:03:48.249"}
2019-05-30T10:03:52.366103> CloudEdge: returned msg from server is 200
2019-05-30T10:03:52.366878> CloudEdge: upload success
2019-05-30T10:03:52.560840> --> cloud end
2019-05-30T10:03:52.561270> 
2019-05-30T10:04:50.353675> --- rxlora. dst=1 type=0x12 src=8 seq=129 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:04:50.354087> 2019-05-30T10:04:50.350731
2019-05-30T10:04:50.354362> rcv ctrl pkt info (^p): 1,18,8,129,14,6,-43
2019-05-30T10:04:50.354632> splitted in: [1, 18, 8, 129, 14, 6, -43]
2019-05-30T10:04:50.354901> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=129 len=14 SNR=6 RSSI=-43)
2019-05-30T10:04:50.355170> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:04:50.355439> splitted in: [125, 5, 12]
2019-05-30T10:04:50.355708> (BW=125 CR=5 SF=12)
2019-05-30T10:04:50.355976> rcv timestamp (^t): 2019-05-30T10:04:50.347
2019-05-30T10:04:50.356243> 
2019-05-30T10:04:50.356510> Got first framing byte
2019-05-30T10:04:50.356983> --> got LoRa data prefix
2019-05-30T10:04:50.357306> --> DATA with_appkey: read app key sequence
2019-05-30T10:04:50.357605> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:04:50.357894> app key disabled
2019-05-30T10:04:50.358186> valid app key: accept data
2019-05-30T10:04:50.358469> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:04:50.358828> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,129,10,6,-43" "125,5,12" "2019-05-30T10:04:50.347" "B827EB1B65FD"
2019-05-30T10:04:54.816816> CloudEdge: uploading
2019-05-30T10:04:54.818836> CloudEdge: run under guest identity, all data is public
2019-05-30T10:04:54.820849> CloudEdge: check if entity exits
2019-05-30T10:04:54.822980> CloudEdge: will issue requests with
2019-05-30T10:04:54.823903> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:04:54.824602> CloudEdge: returned msg from server is 200
2019-05-30T10:04:54.825287> CloudEdge: entity exists
2019-05-30T10:04:54.825891> CloudEdge: check if measurement exits
2019-05-30T10:04:54.826479> CloudEdge: will issue requests with
2019-05-30T10:04:54.827323> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:04:54.830798> CloudEdge: returned msg from server is 200
2019-05-30T10:04:54.831552> CloudEdge: measurement exists
2019-05-30T10:04:54.832326> CloudEdge: will issue requests with
2019-05-30T10:04:54.833435> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:04:54.834219> data: {"value":95.39,"timestamp":"2019-05-30T10:04:50.347"}
2019-05-30T10:04:54.834860> CloudEdge: returned msg from server is 200
2019-05-30T10:04:54.835460> CloudEdge: upload success
2019-05-30T10:04:55.017714> --> cloud end
2019-05-30T10:04:55.018119> 
2019-05-30T10:05:52.453652> --- rxlora. dst=1 type=0x12 src=8 seq=130 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:05:52.454110> 2019-05-30T10:05:52.450644
2019-05-30T10:05:52.454429> rcv ctrl pkt info (^p): 1,18,8,130,14,6,-42
2019-05-30T10:05:52.454710> splitted in: [1, 18, 8, 130, 14, 6, -42]
2019-05-30T10:05:52.455010> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=130 len=14 SNR=6 RSSI=-42)
2019-05-30T10:05:52.455284> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:05:52.455579> splitted in: [125, 5, 12]
2019-05-30T10:05:52.455861> (BW=125 CR=5 SF=12)
2019-05-30T10:05:52.456136> rcv timestamp (^t): 2019-05-30T10:05:52.447
2019-05-30T10:05:52.456438> 
2019-05-30T10:05:52.456946> Got first framing byte
2019-05-30T10:05:52.457447> --> got LoRa data prefix
2019-05-30T10:05:52.457844> --> DATA with_appkey: read app key sequence
2019-05-30T10:05:52.458258> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:05:52.458598> app key disabled
2019-05-30T10:05:52.458963> valid app key: accept data
2019-05-30T10:05:52.459336> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:05:52.459798> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,130,10,6,-42" "125,5,12" "2019-05-30T10:05:52.447" "B827EB1B65FD"
2019-05-30T10:05:56.663681> CloudEdge: uploading
2019-05-30T10:05:56.664561> CloudEdge: run under guest identity, all data is public
2019-05-30T10:05:56.665294> CloudEdge: check if entity exits
2019-05-30T10:05:56.665936> CloudEdge: will issue requests with
2019-05-30T10:05:56.666724> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:05:56.667479> CloudEdge: returned msg from server is 200
2019-05-30T10:05:56.668105> CloudEdge: entity exists
2019-05-30T10:05:56.668673> CloudEdge: check if measurement exits
2019-05-30T10:05:56.669256> CloudEdge: will issue requests with
2019-05-30T10:05:56.669838> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:05:56.670407> CloudEdge: returned msg from server is 200
2019-05-30T10:05:56.670972> CloudEdge: measurement exists
2019-05-30T10:05:56.671547> CloudEdge: will issue requests with
2019-05-30T10:05:56.672117> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:05:56.672690> data: {"value":95.39,"timestamp":"2019-05-30T10:05:52.447"}
2019-05-30T10:05:56.673276> CloudEdge: returned msg from server is 200
2019-05-30T10:05:56.673972> CloudEdge: upload success
2019-05-30T10:05:56.847295> --> cloud end
2019-05-30T10:05:56.847687> 
2019-05-30T10:06:54.553982> --- rxlora. dst=1 type=0x12 src=8 seq=131 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:06:54.554479> 2019-05-30T10:06:54.551033
2019-05-30T10:06:54.554809> rcv ctrl pkt info (^p): 1,18,8,131,14,6,-42
2019-05-30T10:06:54.555109> splitted in: [1, 18, 8, 131, 14, 6, -42]
2019-05-30T10:06:54.555398> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=131 len=14 SNR=6 RSSI=-42)
2019-05-30T10:06:54.555740> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:06:54.556082> splitted in: [125, 5, 12]
2019-05-30T10:06:54.556423> (BW=125 CR=5 SF=12)
2019-05-30T10:06:54.557003> rcv timestamp (^t): 2019-05-30T10:06:54.547
2019-05-30T10:06:54.557546> 
2019-05-30T10:06:54.557963> Got first framing byte
2019-05-30T10:06:54.558333> --> got LoRa data prefix
2019-05-30T10:06:54.558702> --> DATA with_appkey: read app key sequence
2019-05-30T10:06:54.559055> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:06:54.559385> app key disabled
2019-05-30T10:06:54.559843> valid app key: accept data
2019-05-30T10:06:54.560206> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:06:54.560514> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,131,10,6,-42" "125,5,12" "2019-05-30T10:06:54.547" "B827EB1B65FD"
2019-05-30T10:06:59.070227> CloudEdge: uploading
2019-05-30T10:06:59.070808> CloudEdge: run under guest identity, all data is public
2019-05-30T10:06:59.071187> CloudEdge: check if entity exits
2019-05-30T10:06:59.071503> CloudEdge: will issue requests with
2019-05-30T10:06:59.071801> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:06:59.072098> CloudEdge: returned msg from server is 200
2019-05-30T10:06:59.072395> CloudEdge: entity exists
2019-05-30T10:06:59.072695> CloudEdge: check if measurement exits
2019-05-30T10:06:59.073014> CloudEdge: will issue requests with
2019-05-30T10:06:59.073363> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:06:59.073689> CloudEdge: returned msg from server is 200
2019-05-30T10:06:59.073976> CloudEdge: measurement exists
2019-05-30T10:06:59.074259> CloudEdge: will issue requests with
2019-05-30T10:06:59.074581> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:06:59.074889> data: {"value":95.39,"timestamp":"2019-05-30T10:06:54.547"}
2019-05-30T10:06:59.075180> CloudEdge: returned msg from server is 200
2019-05-30T10:06:59.075462> CloudEdge: upload success
2019-05-30T10:06:59.233821> --> cloud end
2019-05-30T10:06:59.234195> 
2019-05-30T10:07:34.188852> 2019-05-30 10:07:34.188070
2019-05-30T10:07:34.189402> post status: gw ON
2019-05-30T10:07:34.189782> post status: executing periodic tasks
2019-05-30T10:07:35.276784> no timezone support, time will be expressed only in local time
2019-05-30T10:07:35.277174> post status: start running
2019-05-30T10:07:36.352266> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:07:36.352828> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:07:36.353470> get_gps.py: invalid serial port
2019-05-30T10:07:36.509824> post status: dynamic GPS is requested
2019-05-30T10:07:36.510188> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:07:36.510464> post status get GPS: no GPS coordinates
2019-05-30T10:07:36.510732> post status: show current GPS position
2019-05-30T10:07:36.510997> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:07:36.511263> post status: exiting
2019-05-30T10:08:06.377177> Low-level gw status ON
2019-05-30T10:08:59.487419> --- rxlora. dst=1 type=0x12 src=8 seq=133 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:08:59.487894> 2019-05-30T10:08:59.486963
2019-05-30T10:08:59.488320> rcv ctrl pkt info (^p): 1,18,8,133,14,6,-42
2019-05-30T10:08:59.488782> splitted in: [1, 18, 8, 133, 14, 6, -42]
2019-05-30T10:08:59.489132> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=133 len=14 SNR=6 RSSI=-42)
2019-05-30T10:08:59.489651> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:08:59.490079> splitted in: [125, 5, 12]
2019-05-30T10:08:59.490489> (BW=125 CR=5 SF=12)
2019-05-30T10:08:59.490846> rcv timestamp (^t): 2019-05-30T10:08:59.483
2019-05-30T10:08:59.491224> 
2019-05-30T10:08:59.491637> Got first framing byte
2019-05-30T10:08:59.492065> --> got LoRa data prefix
2019-05-30T10:08:59.492530> --> DATA with_appkey: read app key sequence
2019-05-30T10:08:59.492969> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:08:59.493440> app key disabled
2019-05-30T10:08:59.493936> valid app key: accept data
2019-05-30T10:08:59.494355> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:08:59.494841> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,133,10,6,-42" "125,5,12" "2019-05-30T10:08:59.483" "B827EB1B65FD"
2019-05-30T10:09:03.743562> CloudEdge: uploading
2019-05-30T10:09:03.744165> CloudEdge: run under guest identity, all data is public
2019-05-30T10:09:03.744628> CloudEdge: check if entity exits
2019-05-30T10:09:03.744961> CloudEdge: will issue requests with
2019-05-30T10:09:03.745275> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:09:03.745584> CloudEdge: returned msg from server is 200
2019-05-30T10:09:03.745876> CloudEdge: entity exists
2019-05-30T10:09:03.746172> CloudEdge: check if measurement exits
2019-05-30T10:09:03.746474> CloudEdge: will issue requests with
2019-05-30T10:09:03.746864> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:09:03.747191> CloudEdge: returned msg from server is 200
2019-05-30T10:09:03.747486> CloudEdge: measurement exists
2019-05-30T10:09:03.747772> CloudEdge: will issue requests with
2019-05-30T10:09:03.748065> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:09:03.748370> data: {"value":95.33,"timestamp":"2019-05-30T10:08:59.483"}
2019-05-30T10:09:03.748668> CloudEdge: returned msg from server is 200
2019-05-30T10:09:03.748960> CloudEdge: upload success
2019-05-30T10:09:03.955639> --> cloud end
2019-05-30T10:09:03.956228> 
2019-05-30T10:10:01.587620> --- rxlora. dst=1 type=0x12 src=8 seq=134 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:10:01.589046> 2019-05-30T10:10:01.585945
2019-05-30T10:10:01.590056> rcv ctrl pkt info (^p): 1,18,8,134,14,6,-43
2019-05-30T10:10:01.591292> splitted in: [1, 18, 8, 134, 14, 6, -43]
2019-05-30T10:10:01.592143> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=134 len=14 SNR=6 RSSI=-43)
2019-05-30T10:10:01.592622> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:10:01.593035> splitted in: [125, 5, 12]
2019-05-30T10:10:01.593415> (BW=125 CR=5 SF=12)
2019-05-30T10:10:01.593768> rcv timestamp (^t): 2019-05-30T10:10:01.582
2019-05-30T10:10:01.594121> 
2019-05-30T10:10:01.594447> Got first framing byte
2019-05-30T10:10:01.594875> --> got LoRa data prefix
2019-05-30T10:10:01.595313> --> DATA with_appkey: read app key sequence
2019-05-30T10:10:01.595619> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:10:01.596233> app key disabled
2019-05-30T10:10:01.596668> valid app key: accept data
2019-05-30T10:10:01.597020> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:10:01.597340> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,134,10,6,-43" "125,5,12" "2019-05-30T10:10:01.582" "B827EB1B65FD"
2019-05-30T10:10:05.925078> CloudEdge: uploading
2019-05-30T10:10:05.925939> CloudEdge: run under guest identity, all data is public
2019-05-30T10:10:05.926836> CloudEdge: check if entity exits
2019-05-30T10:10:05.927589> CloudEdge: will issue requests with
2019-05-30T10:10:05.928383> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:10:05.929055> CloudEdge: returned msg from server is 200
2019-05-30T10:10:05.929656> CloudEdge: entity exists
2019-05-30T10:10:05.930230> CloudEdge: check if measurement exits
2019-05-30T10:10:05.930810> CloudEdge: will issue requests with
2019-05-30T10:10:05.931470> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:10:05.932068> CloudEdge: returned msg from server is 200
2019-05-30T10:10:05.932650> CloudEdge: measurement exists
2019-05-30T10:10:05.933232> CloudEdge: will issue requests with
2019-05-30T10:10:05.933807> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:10:05.934378> data: {"value":95.33,"timestamp":"2019-05-30T10:10:01.582"}
2019-05-30T10:10:05.934953> CloudEdge: returned msg from server is 200
2019-05-30T10:10:05.935526> CloudEdge: upload success
2019-05-30T10:10:06.113615> --> cloud end
2019-05-30T10:10:06.114020> 
2019-05-30T10:11:03.687690> --- rxlora. dst=1 type=0x12 src=8 seq=135 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:11:03.693542> 2019-05-30T10:11:03.687256
2019-05-30T10:11:03.694126> rcv ctrl pkt info (^p): 1,18,8,135,14,6,-42
2019-05-30T10:11:03.694843> splitted in: [1, 18, 8, 135, 14, 6, -42]
2019-05-30T10:11:03.695444> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=135 len=14 SNR=6 RSSI=-42)
2019-05-30T10:11:03.696181> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:11:03.696872> splitted in: [125, 5, 12]
2019-05-30T10:11:03.697444> (BW=125 CR=5 SF=12)
2019-05-30T10:11:03.697798> rcv timestamp (^t): 2019-05-30T10:11:03.683
2019-05-30T10:11:03.698177> 
2019-05-30T10:11:03.698519> Got first framing byte
2019-05-30T10:11:03.698946> --> got LoRa data prefix
2019-05-30T10:11:03.699332> --> DATA with_appkey: read app key sequence
2019-05-30T10:11:03.699695> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:11:03.699999> app key disabled
2019-05-30T10:11:03.700319> valid app key: accept data
2019-05-30T10:11:03.700633> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:11:03.700932> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,135,10,6,-42" "125,5,12" "2019-05-30T10:11:03.683" "B827EB1B65FD"
2019-05-30T10:11:07.856432> CloudEdge: uploading
2019-05-30T10:11:07.857327> CloudEdge: run under guest identity, all data is public
2019-05-30T10:11:07.858014> CloudEdge: check if entity exits
2019-05-30T10:11:07.858720> CloudEdge: will issue requests with
2019-05-30T10:11:07.859382> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:11:07.860012> CloudEdge: returned msg from server is 200
2019-05-30T10:11:07.860630> CloudEdge: entity exists
2019-05-30T10:11:07.861240> CloudEdge: check if measurement exits
2019-05-30T10:11:07.861821> CloudEdge: will issue requests with
2019-05-30T10:11:07.862389> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:11:07.862965> CloudEdge: returned msg from server is 200
2019-05-30T10:11:07.863538> CloudEdge: measurement exists
2019-05-30T10:11:07.864322> CloudEdge: will issue requests with
2019-05-30T10:11:07.865021> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:11:07.865674> data: {"value":95.33,"timestamp":"2019-05-30T10:11:03.683"}
2019-05-30T10:11:07.866294> CloudEdge: returned msg from server is 200
2019-05-30T10:11:07.866968> CloudEdge: upload success
2019-05-30T10:11:08.047635> --> cloud end
2019-05-30T10:11:08.048032> 
2019-05-30T10:12:05.791792> --- rxlora. dst=1 type=0x12 src=8 seq=136 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:12:05.792237> 2019-05-30T10:12:05.788844
2019-05-30T10:12:05.792522> rcv ctrl pkt info (^p): 1,18,8,136,14,7,-43
2019-05-30T10:12:05.792791> splitted in: [1, 18, 8, 136, 14, 7, -43]
2019-05-30T10:12:05.793067> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=136 len=14 SNR=7 RSSI=-43)
2019-05-30T10:12:05.793333> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:12:05.793601> splitted in: [125, 5, 12]
2019-05-30T10:12:05.793866> (BW=125 CR=5 SF=12)
2019-05-30T10:12:05.794132> rcv timestamp (^t): 2019-05-30T10:12:05.785
2019-05-30T10:12:05.794395> 
2019-05-30T10:12:05.794703> Got first framing byte
2019-05-30T10:12:05.794971> --> got LoRa data prefix
2019-05-30T10:12:05.795240> --> DATA with_appkey: read app key sequence
2019-05-30T10:12:05.795501> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:12:05.795763> app key disabled
2019-05-30T10:12:05.796025> valid app key: accept data
2019-05-30T10:12:05.796285> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:12:05.796644> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,136,10,7,-43" "125,5,12" "2019-05-30T10:12:05.785" "B827EB1B65FD"
2019-05-30T10:12:10.013340> CloudEdge: uploading
2019-05-30T10:12:10.014064> CloudEdge: run under guest identity, all data is public
2019-05-30T10:12:10.014668> CloudEdge: check if entity exits
2019-05-30T10:12:10.015311> CloudEdge: will issue requests with
2019-05-30T10:12:10.015952> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:12:10.016643> CloudEdge: returned msg from server is 200
2019-05-30T10:12:10.017308> CloudEdge: entity exists
2019-05-30T10:12:10.017938> CloudEdge: check if measurement exits
2019-05-30T10:12:10.018522> CloudEdge: will issue requests with
2019-05-30T10:12:10.019086> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:12:10.019639> CloudEdge: returned msg from server is 200
2019-05-30T10:12:10.020199> CloudEdge: measurement exists
2019-05-30T10:12:10.020772> CloudEdge: will issue requests with
2019-05-30T10:12:10.021339> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:12:10.021902> data: {"value":95.26,"timestamp":"2019-05-30T10:12:05.785"}
2019-05-30T10:12:10.022458> CloudEdge: returned msg from server is 200
2019-05-30T10:12:10.023008> CloudEdge: upload success
2019-05-30T10:12:10.217193> --> cloud end
2019-05-30T10:12:10.217560> 
2019-05-30T10:13:07.893593> --- rxlora. dst=1 type=0x12 src=8 seq=137 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:13:07.894143> 2019-05-30T10:13:07.891495
2019-05-30T10:13:07.894521> rcv ctrl pkt info (^p): 1,18,8,137,14,6,-42
2019-05-30T10:13:07.894836> splitted in: [1, 18, 8, 137, 14, 6, -42]
2019-05-30T10:13:07.895139> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=137 len=14 SNR=6 RSSI=-42)
2019-05-30T10:13:07.895456> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:13:07.895744> splitted in: [125, 5, 12]
2019-05-30T10:13:07.896023> (BW=125 CR=5 SF=12)
2019-05-30T10:13:07.896372> rcv timestamp (^t): 2019-05-30T10:13:07.888
2019-05-30T10:13:07.896875> 
2019-05-30T10:13:07.897264> Got first framing byte
2019-05-30T10:13:07.897609> --> got LoRa data prefix
2019-05-30T10:13:07.898024> --> DATA with_appkey: read app key sequence
2019-05-30T10:13:07.898392> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:13:07.898747> app key disabled
2019-05-30T10:13:07.899091> valid app key: accept data
2019-05-30T10:13:07.899444> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:13:07.899777> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,137,10,6,-42" "125,5,12" "2019-05-30T10:13:07.888" "B827EB1B65FD"
2019-05-30T10:13:12.293571> CloudEdge: uploading
2019-05-30T10:13:12.294380> CloudEdge: run under guest identity, all data is public
2019-05-30T10:13:12.295092> CloudEdge: check if entity exits
2019-05-30T10:13:12.295712> CloudEdge: will issue requests with
2019-05-30T10:13:12.296872> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:13:12.297815> CloudEdge: returned msg from server is 200
2019-05-30T10:13:12.298673> CloudEdge: entity exists
2019-05-30T10:13:12.299471> CloudEdge: check if measurement exits
2019-05-30T10:13:12.300110> CloudEdge: will issue requests with
2019-05-30T10:13:12.300883> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:13:12.301643> CloudEdge: returned msg from server is 200
2019-05-30T10:13:12.302276> CloudEdge: measurement exists
2019-05-30T10:13:12.303025> CloudEdge: will issue requests with
2019-05-30T10:13:12.303884> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:13:12.304614> data: {"value":95.20,"timestamp":"2019-05-30T10:13:07.888"}
2019-05-30T10:13:12.305642> CloudEdge: returned msg from server is 200
2019-05-30T10:13:12.306867> CloudEdge: upload success
2019-05-30T10:13:12.516293> --> cloud end
2019-05-30T10:13:12.517077> 
2019-05-30T10:14:09.994399> --- rxlora. dst=1 type=0x12 src=8 seq=138 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:14:09.994946> 2019-05-30T10:14:09.993971
2019-05-30T10:14:09.995368> rcv ctrl pkt info (^p): 1,18,8,138,14,6,-43
2019-05-30T10:14:09.995774> splitted in: [1, 18, 8, 138, 14, 6, -43]
2019-05-30T10:14:09.996158> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=138 len=14 SNR=6 RSSI=-43)
2019-05-30T10:14:09.996480> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:14:09.997146> splitted in: [125, 5, 12]
2019-05-30T10:14:09.997561> (BW=125 CR=5 SF=12)
2019-05-30T10:14:09.997938> rcv timestamp (^t): 2019-05-30T10:14:09.990
2019-05-30T10:14:09.998306> 
2019-05-30T10:14:09.998765> Got first framing byte
2019-05-30T10:14:09.999172> --> got LoRa data prefix
2019-05-30T10:14:09.999633> --> DATA with_appkey: read app key sequence
2019-05-30T10:14:10.000071> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:14:10.000478> app key disabled
2019-05-30T10:14:10.000924> valid app key: accept data
2019-05-30T10:14:10.001377> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:14:10.001806> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,138,10,6,-43" "125,5,12" "2019-05-30T10:14:09.990" "B827EB1B65FD"
2019-05-30T10:14:16.242359> --> cloud end
2019-05-30T10:14:16.242749> 
2019-05-30T10:15:12.097104> --- rxlora. dst=1 type=0x12 src=8 seq=139 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T10:15:12.097656> 2019-05-30T10:15:12.096120
2019-05-30T10:15:12.098119> rcv ctrl pkt info (^p): 1,18,8,139,14,6,-41
2019-05-30T10:15:12.098481> splitted in: [1, 18, 8, 139, 14, 6, -41]
2019-05-30T10:15:12.098928> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=139 len=14 SNR=6 RSSI=-41)
2019-05-30T10:15:12.099420> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:15:12.099819> splitted in: [125, 5, 12]
2019-05-30T10:15:12.100167> (BW=125 CR=5 SF=12)
2019-05-30T10:15:12.100556> rcv timestamp (^t): 2019-05-30T10:15:12.092
2019-05-30T10:15:12.100898> 
2019-05-30T10:15:12.101334> Got first framing byte
2019-05-30T10:15:12.101764> --> got LoRa data prefix
2019-05-30T10:15:12.102234> --> DATA with_appkey: read app key sequence
2019-05-30T10:15:12.102726> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:15:12.103298> app key disabled
2019-05-30T10:15:12.103753> valid app key: accept data
2019-05-30T10:15:12.104212> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:15:12.104677> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,139,10,6,-41" "125,5,12" "2019-05-30T10:15:12.092" "B827EB1B65FD"
2019-05-30T10:15:16.315619> CloudEdge: uploading
2019-05-30T10:15:16.316767> CloudEdge: run under guest identity, all data is public
2019-05-30T10:15:16.317700> CloudEdge: check if entity exits
2019-05-30T10:15:16.318516> CloudEdge: will issue requests with
2019-05-30T10:15:16.319384> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:15:16.320073> CloudEdge: returned msg from server is 200
2019-05-30T10:15:16.322628> CloudEdge: entity exists
2019-05-30T10:15:16.324384> CloudEdge: check if measurement exits
2019-05-30T10:15:16.326149> CloudEdge: will issue requests with
2019-05-30T10:15:16.328312> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:15:16.330388> CloudEdge: returned msg from server is 200
2019-05-30T10:15:16.332196> CloudEdge: measurement exists
2019-05-30T10:15:16.333911> CloudEdge: will issue requests with
2019-05-30T10:15:16.336802> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:15:16.338656> data: {"value":95.33,"timestamp":"2019-05-30T10:15:12.092"}
2019-05-30T10:15:16.340373> CloudEdge: returned msg from server is 200
2019-05-30T10:15:16.342075> CloudEdge: upload success
2019-05-30T10:15:16.502344> --> cloud end
2019-05-30T10:15:16.502714> 
2019-05-30T10:16:14.199480> --- rxlora. dst=1 type=0x12 src=8 seq=140 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:16:14.199922> 2019-05-30T10:16:14.199085
2019-05-30T10:16:14.200251> rcv ctrl pkt info (^p): 1,18,8,140,14,6,-43
2019-05-30T10:16:14.200561> splitted in: [1, 18, 8, 140, 14, 6, -43]
2019-05-30T10:16:14.200838> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=140 len=14 SNR=6 RSSI=-43)
2019-05-30T10:16:14.201112> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:16:14.201388> splitted in: [125, 5, 12]
2019-05-30T10:16:14.201724> (BW=125 CR=5 SF=12)
2019-05-30T10:16:14.202045> rcv timestamp (^t): 2019-05-30T10:16:14.195
2019-05-30T10:16:14.202386> 
2019-05-30T10:16:14.202752> Got first framing byte
2019-05-30T10:16:14.203050> --> got LoRa data prefix
2019-05-30T10:16:14.203327> --> DATA with_appkey: read app key sequence
2019-05-30T10:16:14.203616> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:16:14.203950> app key disabled
2019-05-30T10:16:14.204279> valid app key: accept data
2019-05-30T10:16:14.204641> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:16:14.204963> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,140,10,6,-43" "125,5,12" "2019-05-30T10:16:14.195" "B827EB1B65FD"
2019-05-30T10:16:18.450669> CloudEdge: uploading
2019-05-30T10:16:18.451499> CloudEdge: run under guest identity, all data is public
2019-05-30T10:16:18.452203> CloudEdge: check if entity exits
2019-05-30T10:16:18.452830> CloudEdge: will issue requests with
2019-05-30T10:16:18.453441> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:16:18.454045> CloudEdge: returned msg from server is 200
2019-05-30T10:16:18.454625> CloudEdge: entity exists
2019-05-30T10:16:18.455185> CloudEdge: check if measurement exits
2019-05-30T10:16:18.455747> CloudEdge: will issue requests with
2019-05-30T10:16:18.456306> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:16:18.457117> CloudEdge: returned msg from server is 200
2019-05-30T10:16:18.457740> CloudEdge: measurement exists
2019-05-30T10:16:18.458309> CloudEdge: will issue requests with
2019-05-30T10:16:18.458879> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:16:18.459439> data: {"value":95.33,"timestamp":"2019-05-30T10:16:14.195"}
2019-05-30T10:16:18.459990> CloudEdge: returned msg from server is 200
2019-05-30T10:16:18.460546> CloudEdge: upload success
2019-05-30T10:16:18.643739> --> cloud end
2019-05-30T10:16:18.644222> 
2019-05-30T10:17:16.301902> --- rxlora. dst=1 type=0x12 src=8 seq=141 len=14 SNR=7 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:17:16.302341> 2019-05-30T10:17:16.301522
2019-05-30T10:17:16.302659> rcv ctrl pkt info (^p): 1,18,8,141,14,7,-45
2019-05-30T10:17:16.302969> splitted in: [1, 18, 8, 141, 14, 7, -45]
2019-05-30T10:17:16.303249> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=141 len=14 SNR=7 RSSI=-45)
2019-05-30T10:17:16.303529> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:17:16.303800> splitted in: [125, 5, 12]
2019-05-30T10:17:16.304123> (BW=125 CR=5 SF=12)
2019-05-30T10:17:16.304427> rcv timestamp (^t): 2019-05-30T10:17:16.298
2019-05-30T10:17:16.304746> 
2019-05-30T10:17:16.305099> Got first framing byte
2019-05-30T10:17:16.305388> --> got LoRa data prefix
2019-05-30T10:17:16.305678> --> DATA with_appkey: read app key sequence
2019-05-30T10:17:16.305961> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:17:16.306280> app key disabled
2019-05-30T10:17:16.306736> valid app key: accept data
2019-05-30T10:17:16.307156> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:17:16.307491> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,141,10,7,-45" "125,5,12" "2019-05-30T10:17:16.298" "B827EB1B65FD"
2019-05-30T10:17:20.491311> CloudEdge: uploading
2019-05-30T10:17:20.492001> CloudEdge: run under guest identity, all data is public
2019-05-30T10:17:20.492574> CloudEdge: check if entity exits
2019-05-30T10:17:20.493201> CloudEdge: will issue requests with
2019-05-30T10:17:20.493816> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:17:20.494413> CloudEdge: returned msg from server is 200
2019-05-30T10:17:20.495009> CloudEdge: entity exists
2019-05-30T10:17:20.495619> CloudEdge: check if measurement exits
2019-05-30T10:17:20.496202> CloudEdge: will issue requests with
2019-05-30T10:17:20.497059> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:17:20.497763> CloudEdge: returned msg from server is 200
2019-05-30T10:17:20.498397> CloudEdge: measurement exists
2019-05-30T10:17:20.499050> CloudEdge: will issue requests with
2019-05-30T10:17:20.499722> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:17:20.500366> data: {"value":95.33,"timestamp":"2019-05-30T10:17:16.298"}
2019-05-30T10:17:20.500997> CloudEdge: returned msg from server is 200
2019-05-30T10:17:20.501592> CloudEdge: upload success
2019-05-30T10:17:20.680960> --> cloud end
2019-05-30T10:17:20.681337> 
2019-05-30T10:17:36.661486> 2019-05-30 10:17:36.660389
2019-05-30T10:17:36.662193> post status: gw ON
2019-05-30T10:17:36.662793> post status: executing periodic tasks
2019-05-30T10:17:37.755602> no timezone support, time will be expressed only in local time
2019-05-30T10:17:37.756126> post status: start running
2019-05-30T10:17:38.809379> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:17:38.809922> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:17:38.810333> get_gps.py: invalid serial port
2019-05-30T10:17:38.950164> post status: dynamic GPS is requested
2019-05-30T10:17:38.950578> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:17:38.950939> post status get GPS: no GPS coordinates
2019-05-30T10:17:38.951240> post status: show current GPS position
2019-05-30T10:17:38.951527> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:17:38.951807> post status: exiting
2019-05-30T10:18:18.407687> --- rxlora. dst=1 type=0x12 src=8 seq=142 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:18:18.408212> 2019-05-30T10:18:18.404641
2019-05-30T10:18:18.408590> rcv ctrl pkt info (^p): 1,18,8,142,14,6,-43
2019-05-30T10:18:18.408946> splitted in: [1, 18, 8, 142, 14, 6, -43]
2019-05-30T10:18:18.409241> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=142 len=14 SNR=6 RSSI=-43)
2019-05-30T10:18:18.409573> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:18:18.409918> splitted in: [125, 5, 12]
2019-05-30T10:18:18.410268> (BW=125 CR=5 SF=12)
2019-05-30T10:18:18.410585> rcv timestamp (^t): 2019-05-30T10:18:18.401
2019-05-30T10:18:18.410963> 
2019-05-30T10:18:18.411326> Got first framing byte
2019-05-30T10:18:18.411684> --> got LoRa data prefix
2019-05-30T10:18:18.412028> --> DATA with_appkey: read app key sequence
2019-05-30T10:18:18.412383> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:18:18.412710> app key disabled
2019-05-30T10:18:18.413131> valid app key: accept data
2019-05-30T10:18:18.413567> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:18:18.413880> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,142,10,6,-43" "125,5,12" "2019-05-30T10:18:18.401" "B827EB1B65FD"
2019-05-30T10:18:22.546651> CloudEdge: uploading
2019-05-30T10:18:22.547566> CloudEdge: run under guest identity, all data is public
2019-05-30T10:18:22.548324> CloudEdge: check if entity exits
2019-05-30T10:18:22.548965> CloudEdge: will issue requests with
2019-05-30T10:18:22.549593> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:18:22.550215> CloudEdge: returned msg from server is 200
2019-05-30T10:18:22.550898> CloudEdge: entity exists
2019-05-30T10:18:22.551459> CloudEdge: check if measurement exits
2019-05-30T10:18:22.552021> CloudEdge: will issue requests with
2019-05-30T10:18:22.552570> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:18:22.553118> CloudEdge: returned msg from server is 200
2019-05-30T10:18:22.553672> CloudEdge: measurement exists
2019-05-30T10:18:22.554224> CloudEdge: will issue requests with
2019-05-30T10:18:22.554787> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:18:22.555344> data: {"value":95.33,"timestamp":"2019-05-30T10:18:18.401"}
2019-05-30T10:18:22.555904> CloudEdge: returned msg from server is 200
2019-05-30T10:18:22.556472> CloudEdge: upload success
2019-05-30T10:18:22.742786> --> cloud end
2019-05-30T10:18:22.743196> 
2019-05-30T10:18:22.743497> Low-level gw status ON
2019-05-30T10:19:20.509581> --- rxlora. dst=1 type=0x12 src=8 seq=143 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:19:20.510066> 2019-05-30T10:19:20.509146
2019-05-30T10:19:20.510509> rcv ctrl pkt info (^p): 1,18,8,143,14,6,-43
2019-05-30T10:19:20.510863> splitted in: [1, 18, 8, 143, 14, 6, -43]
2019-05-30T10:19:20.511226> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=143 len=14 SNR=6 RSSI=-43)
2019-05-30T10:19:20.511598> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:19:20.511920> splitted in: [125, 5, 12]
2019-05-30T10:19:20.512225> (BW=125 CR=5 SF=12)
2019-05-30T10:19:20.512519> rcv timestamp (^t): 2019-05-30T10:19:20.504
2019-05-30T10:19:20.512837> 
2019-05-30T10:19:20.513180> Got first framing byte
2019-05-30T10:19:20.513528> --> got LoRa data prefix
2019-05-30T10:19:20.513875> --> DATA with_appkey: read app key sequence
2019-05-30T10:19:20.515090> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:19:20.516215> app key disabled
2019-05-30T10:19:20.517381> valid app key: accept data
2019-05-30T10:19:20.519049> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:19:20.520256> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,143,10,6,-43" "125,5,12" "2019-05-30T10:19:20.504" "B827EB1B65FD"
2019-05-30T10:19:24.704131> CloudEdge: uploading
2019-05-30T10:19:24.704857> CloudEdge: run under guest identity, all data is public
2019-05-30T10:19:24.705391> CloudEdge: check if entity exits
2019-05-30T10:19:24.705869> CloudEdge: will issue requests with
2019-05-30T10:19:24.706339> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:19:24.706978> CloudEdge: returned msg from server is 200
2019-05-30T10:19:24.707490> CloudEdge: entity exists
2019-05-30T10:19:24.707919> CloudEdge: check if measurement exits
2019-05-30T10:19:24.708295> CloudEdge: will issue requests with
2019-05-30T10:19:24.708670> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:19:24.709029> CloudEdge: returned msg from server is 200
2019-05-30T10:19:24.709395> CloudEdge: measurement exists
2019-05-30T10:19:24.709818> CloudEdge: will issue requests with
2019-05-30T10:19:24.710266> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:19:24.710686> data: {"value":95.33,"timestamp":"2019-05-30T10:19:20.504"}
2019-05-30T10:19:24.711081> CloudEdge: returned msg from server is 200
2019-05-30T10:19:24.711456> CloudEdge: upload success
2019-05-30T10:19:24.871413> --> cloud end
2019-05-30T10:19:24.871825> 
2019-05-30T10:20:22.612840> --- rxlora. dst=1 type=0x12 src=8 seq=144 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:20:22.613295> 2019-05-30T10:20:22.612451
2019-05-30T10:20:22.613627> rcv ctrl pkt info (^p): 1,18,8,144,14,6,-43
2019-05-30T10:20:22.613938> splitted in: [1, 18, 8, 144, 14, 6, -43]
2019-05-30T10:20:22.614301> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=144 len=14 SNR=6 RSSI=-43)
2019-05-30T10:20:22.614598> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:20:22.614892> splitted in: [125, 5, 12]
2019-05-30T10:20:22.615523> (BW=125 CR=5 SF=12)
2019-05-30T10:20:22.615943> rcv timestamp (^t): 2019-05-30T10:20:22.608
2019-05-30T10:20:22.616418> 
2019-05-30T10:20:22.617077> Got first framing byte
2019-05-30T10:20:22.617583> --> got LoRa data prefix
2019-05-30T10:20:22.618038> --> DATA with_appkey: read app key sequence
2019-05-30T10:20:22.618377> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:20:22.618729> app key disabled
2019-05-30T10:20:22.619089> valid app key: accept data
2019-05-30T10:20:22.619441> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:20:22.619842> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,144,10,6,-43" "125,5,12" "2019-05-30T10:20:22.608" "B827EB1B65FD"
2019-05-30T10:20:26.963743> CloudEdge: uploading
2019-05-30T10:20:26.964655> CloudEdge: run under guest identity, all data is public
2019-05-30T10:20:26.965416> CloudEdge: check if entity exits
2019-05-30T10:20:26.966181> CloudEdge: will issue requests with
2019-05-30T10:20:26.967136> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:20:26.967896> CloudEdge: returned msg from server is 200
2019-05-30T10:20:26.968520> CloudEdge: entity exists
2019-05-30T10:20:26.969112> CloudEdge: check if measurement exits
2019-05-30T10:20:26.969707> CloudEdge: will issue requests with
2019-05-30T10:20:26.970292> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:20:26.970880> CloudEdge: returned msg from server is 200
2019-05-30T10:20:26.971455> CloudEdge: measurement exists
2019-05-30T10:20:26.972036> CloudEdge: will issue requests with
2019-05-30T10:20:26.972613> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:20:26.973217> data: {"value":95.33,"timestamp":"2019-05-30T10:20:22.608"}
2019-05-30T10:20:26.973811> CloudEdge: returned msg from server is 200
2019-05-30T10:20:26.974491> CloudEdge: upload success
2019-05-30T10:20:27.167366> --> cloud end
2019-05-30T10:20:27.168083> 
2019-05-30T10:21:24.713549> --- rxlora. dst=1 type=0x12 src=8 seq=145 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T10:21:24.714006> 2019-05-30T10:21:24.713158
2019-05-30T10:21:24.714336> rcv ctrl pkt info (^p): 1,18,8,145,14,7,-41
2019-05-30T10:21:24.714646> splitted in: [1, 18, 8, 145, 14, 7, -41]
2019-05-30T10:21:24.714927> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=145 len=14 SNR=7 RSSI=-41)
2019-05-30T10:21:24.715218> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:21:24.715497> splitted in: [125, 5, 12]
2019-05-30T10:21:24.715849> (BW=125 CR=5 SF=12)
2019-05-30T10:21:24.716168> rcv timestamp (^t): 2019-05-30T10:21:24.709
2019-05-30T10:21:24.716496> 
2019-05-30T10:21:24.717023> Got first framing byte
2019-05-30T10:21:24.717342> --> got LoRa data prefix
2019-05-30T10:21:24.717643> --> DATA with_appkey: read app key sequence
2019-05-30T10:21:24.718053> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:21:24.718413> app key disabled
2019-05-30T10:21:24.718786> valid app key: accept data
2019-05-30T10:21:24.719106> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:21:24.719492> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,145,10,7,-41" "125,5,12" "2019-05-30T10:21:24.709" "B827EB1B65FD"
2019-05-30T10:21:29.224988> CloudEdge: uploading
2019-05-30T10:21:29.225676> CloudEdge: run under guest identity, all data is public
2019-05-30T10:21:29.226238> CloudEdge: check if entity exits
2019-05-30T10:21:29.226876> CloudEdge: will issue requests with
2019-05-30T10:21:29.227443> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:21:29.227986> CloudEdge: returned msg from server is 200
2019-05-30T10:21:29.228530> CloudEdge: entity exists
2019-05-30T10:21:29.229112> CloudEdge: check if measurement exits
2019-05-30T10:21:29.229716> CloudEdge: will issue requests with
2019-05-30T10:21:29.230743> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:21:29.231536> CloudEdge: returned msg from server is 200
2019-05-30T10:21:29.232190> CloudEdge: measurement exists
2019-05-30T10:21:29.232820> CloudEdge: will issue requests with
2019-05-30T10:21:29.233417> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:21:29.234003> data: {"value":95.39,"timestamp":"2019-05-30T10:21:24.709"}
2019-05-30T10:21:29.234585> CloudEdge: returned msg from server is 200
2019-05-30T10:21:29.235151> CloudEdge: upload success
2019-05-30T10:21:29.431292> --> cloud end
2019-05-30T10:21:29.431657> 
2019-05-30T10:22:26.816431> --- rxlora. dst=1 type=0x12 src=8 seq=146 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:22:26.817131> 2019-05-30T10:22:26.816036
2019-05-30T10:22:26.817666> rcv ctrl pkt info (^p): 1,18,8,146,14,6,-42
2019-05-30T10:22:26.818092> splitted in: [1, 18, 8, 146, 14, 6, -42]
2019-05-30T10:22:26.818452> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=146 len=14 SNR=6 RSSI=-42)
2019-05-30T10:22:26.818823> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:22:26.819188> splitted in: [125, 5, 12]
2019-05-30T10:22:26.819506> (BW=125 CR=5 SF=12)
2019-05-30T10:22:26.819792> rcv timestamp (^t): 2019-05-30T10:22:26.812
2019-05-30T10:22:26.820082> 
2019-05-30T10:22:26.820505> Got first framing byte
2019-05-30T10:22:26.820852> --> got LoRa data prefix
2019-05-30T10:22:26.821243> --> DATA with_appkey: read app key sequence
2019-05-30T10:22:26.821731> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:22:26.822163> app key disabled
2019-05-30T10:22:26.822605> valid app key: accept data
2019-05-30T10:22:26.823081> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:22:26.823543> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,146,10,6,-42" "125,5,12" "2019-05-30T10:22:26.812" "B827EB1B65FD"
2019-05-30T10:22:31.281547> CloudEdge: uploading
2019-05-30T10:22:31.282254> CloudEdge: run under guest identity, all data is public
2019-05-30T10:22:31.282858> CloudEdge: check if entity exits
2019-05-30T10:22:31.283451> CloudEdge: will issue requests with
2019-05-30T10:22:31.284031> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:22:31.284659> CloudEdge: returned msg from server is 200
2019-05-30T10:22:31.285307> CloudEdge: entity exists
2019-05-30T10:22:31.285941> CloudEdge: check if measurement exits
2019-05-30T10:22:31.286642> CloudEdge: will issue requests with
2019-05-30T10:22:31.287334> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:22:31.287888> CloudEdge: returned msg from server is 200
2019-05-30T10:22:31.288424> CloudEdge: measurement exists
2019-05-30T10:22:31.288951> CloudEdge: will issue requests with
2019-05-30T10:22:31.289477> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:22:31.290004> data: {"value":95.39,"timestamp":"2019-05-30T10:22:26.812"}
2019-05-30T10:22:31.290529> CloudEdge: returned msg from server is 200
2019-05-30T10:22:31.291053> CloudEdge: upload success
2019-05-30T10:22:31.470109> --> cloud end
2019-05-30T10:22:31.470532> 
2019-05-30T10:23:28.921535> --- rxlora. dst=1 type=0x12 src=8 seq=147 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:23:28.922025> 2019-05-30T10:23:28.918597
2019-05-30T10:23:28.922363> rcv ctrl pkt info (^p): 1,18,8,147,14,6,-42
2019-05-30T10:23:28.922664> splitted in: [1, 18, 8, 147, 14, 6, -42]
2019-05-30T10:23:28.922946> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=147 len=14 SNR=6 RSSI=-42)
2019-05-30T10:23:28.923278> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:23:28.923637> splitted in: [125, 5, 12]
2019-05-30T10:23:28.923989> (BW=125 CR=5 SF=12)
2019-05-30T10:23:28.924311> rcv timestamp (^t): 2019-05-30T10:23:28.915
2019-05-30T10:23:28.924705> 
2019-05-30T10:23:28.925062> Got first framing byte
2019-05-30T10:23:28.925414> --> got LoRa data prefix
2019-05-30T10:23:28.925773> --> DATA with_appkey: read app key sequence
2019-05-30T10:23:28.926177> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:23:28.926520> app key disabled
2019-05-30T10:23:28.927137> valid app key: accept data
2019-05-30T10:23:28.927517> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:23:28.927844> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,147,10,6,-42" "125,5,12" "2019-05-30T10:23:28.915" "B827EB1B65FD"
2019-05-30T10:23:33.537876> CloudEdge: uploading
2019-05-30T10:23:33.538695> CloudEdge: run under guest identity, all data is public
2019-05-30T10:23:33.539437> CloudEdge: check if entity exits
2019-05-30T10:23:33.540108> CloudEdge: will issue requests with
2019-05-30T10:23:33.540736> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:23:33.541354> CloudEdge: returned msg from server is 200
2019-05-30T10:23:33.541941> CloudEdge: entity exists
2019-05-30T10:23:33.542505> CloudEdge: check if measurement exits
2019-05-30T10:23:33.543059> CloudEdge: will issue requests with
2019-05-30T10:23:33.543619> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:23:33.544169> CloudEdge: returned msg from server is 200
2019-05-30T10:23:33.544727> CloudEdge: measurement exists
2019-05-30T10:23:33.545280> CloudEdge: will issue requests with
2019-05-30T10:23:33.545837> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:23:33.546389> data: {"value":95.39,"timestamp":"2019-05-30T10:23:28.915"}
2019-05-30T10:23:33.547808> CloudEdge: returned msg from server is 200
2019-05-30T10:23:33.549079> CloudEdge: upload success
2019-05-30T10:23:33.729666> --> cloud end
2019-05-30T10:23:33.730044> 
2019-05-30T10:24:31.024758> --- rxlora. dst=1 type=0x12 src=8 seq=148 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:24:31.025210> 2019-05-30T10:24:31.021738
2019-05-30T10:24:31.025526> rcv ctrl pkt info (^p): 1,18,8,148,14,6,-43
2019-05-30T10:24:31.025820> splitted in: [1, 18, 8, 148, 14, 6, -43]
2019-05-30T10:24:31.026104> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=148 len=14 SNR=6 RSSI=-43)
2019-05-30T10:24:31.026398> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:24:31.026818> splitted in: [125, 5, 12]
2019-05-30T10:24:31.027265> (BW=125 CR=5 SF=12)
2019-05-30T10:24:31.027660> rcv timestamp (^t): 2019-05-30T10:24:31.018
2019-05-30T10:24:31.028072> 
2019-05-30T10:24:31.028418> Got first framing byte
2019-05-30T10:24:31.028805> --> got LoRa data prefix
2019-05-30T10:24:31.029125> --> DATA with_appkey: read app key sequence
2019-05-30T10:24:31.029658> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:24:31.030078> app key disabled
2019-05-30T10:24:31.030761> valid app key: accept data
2019-05-30T10:24:31.031205> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:24:31.031526> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,148,10,6,-43" "125,5,12" "2019-05-30T10:24:31.018" "B827EB1B65FD"
2019-05-30T10:24:35.589616> CloudEdge: uploading
2019-05-30T10:24:35.590288> CloudEdge: run under guest identity, all data is public
2019-05-30T10:24:35.590932> CloudEdge: check if entity exits
2019-05-30T10:24:35.591514> CloudEdge: will issue requests with
2019-05-30T10:24:35.592030> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:24:35.592450> CloudEdge: returned msg from server is 200
2019-05-30T10:24:35.592825> CloudEdge: entity exists
2019-05-30T10:24:35.593147> CloudEdge: check if measurement exits
2019-05-30T10:24:35.593462> CloudEdge: will issue requests with
2019-05-30T10:24:35.593782> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:24:35.594104> CloudEdge: returned msg from server is 200
2019-05-30T10:24:35.594414> CloudEdge: measurement exists
2019-05-30T10:24:35.594784> CloudEdge: will issue requests with
2019-05-30T10:24:35.595259> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:24:35.595849> data: {"value":95.20,"timestamp":"2019-05-30T10:24:31.018"}
2019-05-30T10:24:35.596372> CloudEdge: returned msg from server is 200
2019-05-30T10:24:35.597102> CloudEdge: upload success
2019-05-30T10:24:35.759311> --> cloud end
2019-05-30T10:24:35.759680> 
2019-05-30T10:25:33.127394> --- rxlora. dst=1 type=0x12 src=8 seq=149 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:25:33.128042> 2019-05-30T10:25:33.124745
2019-05-30T10:25:33.128490> rcv ctrl pkt info (^p): 1,18,8,149,14,6,-43
2019-05-30T10:25:33.128861> splitted in: [1, 18, 8, 149, 14, 6, -43]
2019-05-30T10:25:33.129235> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=149 len=14 SNR=6 RSSI=-43)
2019-05-30T10:25:33.129601> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:25:33.130001> splitted in: [125, 5, 12]
2019-05-30T10:25:33.130425> (BW=125 CR=5 SF=12)
2019-05-30T10:25:33.130810> rcv timestamp (^t): 2019-05-30T10:25:33.121
2019-05-30T10:25:33.131311> 
2019-05-30T10:25:33.131779> Got first framing byte
2019-05-30T10:25:33.132204> --> got LoRa data prefix
2019-05-30T10:25:33.132658> --> DATA with_appkey: read app key sequence
2019-05-30T10:25:33.133060> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:25:33.133671> app key disabled
2019-05-30T10:25:33.134141> valid app key: accept data
2019-05-30T10:25:33.134596> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:25:33.135011> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,149,10,6,-43" "125,5,12" "2019-05-30T10:25:33.121" "B827EB1B65FD"
2019-05-30T10:25:37.263829> CloudEdge: uploading
2019-05-30T10:25:37.264731> CloudEdge: run under guest identity, all data is public
2019-05-30T10:25:37.265505> CloudEdge: check if entity exits
2019-05-30T10:25:37.266173> CloudEdge: will issue requests with
2019-05-30T10:25:37.267029> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:25:37.268013> CloudEdge: returned msg from server is 200
2019-05-30T10:25:37.268970> CloudEdge: entity exists
2019-05-30T10:25:37.269943> CloudEdge: check if measurement exits
2019-05-30T10:25:37.270926> CloudEdge: will issue requests with
2019-05-30T10:25:37.271914> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:25:37.272940> CloudEdge: returned msg from server is 200
2019-05-30T10:25:37.273884> CloudEdge: measurement exists
2019-05-30T10:25:37.274677> CloudEdge: will issue requests with
2019-05-30T10:25:37.275442> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:25:37.276170> data: {"value":95.26,"timestamp":"2019-05-30T10:25:33.121"}
2019-05-30T10:25:37.276964> CloudEdge: returned msg from server is 200
2019-05-30T10:25:37.277711> CloudEdge: upload success
2019-05-30T10:25:37.448990> --> cloud end
2019-05-30T10:25:37.449371> 
2019-05-30T10:26:35.227564> --- rxlora. dst=1 type=0x12 src=8 seq=150 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:26:35.228051> 2019-05-30T10:26:35.227083
2019-05-30T10:26:35.228405> rcv ctrl pkt info (^p): 1,18,8,150,14,6,-42
2019-05-30T10:26:35.228834> splitted in: [1, 18, 8, 150, 14, 6, -42]
2019-05-30T10:26:35.229223> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=150 len=14 SNR=6 RSSI=-42)
2019-05-30T10:26:35.229583> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:26:35.230021> splitted in: [125, 5, 12]
2019-05-30T10:26:35.230392> (BW=125 CR=5 SF=12)
2019-05-30T10:26:35.230790> rcv timestamp (^t): 2019-05-30T10:26:35.223
2019-05-30T10:26:35.231155> 
2019-05-30T10:26:35.231626> Got first framing byte
2019-05-30T10:26:35.232028> --> got LoRa data prefix
2019-05-30T10:26:35.232500> --> DATA with_appkey: read app key sequence
2019-05-30T10:26:35.232948> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:26:35.233433> app key disabled
2019-05-30T10:26:35.233918> valid app key: accept data
2019-05-30T10:26:35.234567> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:26:35.235175> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,150,10,6,-42" "125,5,12" "2019-05-30T10:26:35.223" "B827EB1B65FD"
2019-05-30T10:26:39.461093> CloudEdge: uploading
2019-05-30T10:26:39.461990> CloudEdge: run under guest identity, all data is public
2019-05-30T10:26:39.462744> CloudEdge: check if entity exits
2019-05-30T10:26:39.463415> CloudEdge: will issue requests with
2019-05-30T10:26:39.464068> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:26:39.464721> CloudEdge: returned msg from server is 200
2019-05-30T10:26:39.465345> CloudEdge: entity exists
2019-05-30T10:26:39.465935> CloudEdge: check if measurement exits
2019-05-30T10:26:39.466518> CloudEdge: will issue requests with
2019-05-30T10:26:39.467340> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:26:39.467960> CloudEdge: returned msg from server is 200
2019-05-30T10:26:39.468552> CloudEdge: measurement exists
2019-05-30T10:26:39.469153> CloudEdge: will issue requests with
2019-05-30T10:26:39.469742> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:26:39.470330> data: {"value":95.26,"timestamp":"2019-05-30T10:26:35.223"}
2019-05-30T10:26:39.470912> CloudEdge: returned msg from server is 200
2019-05-30T10:26:39.471489> CloudEdge: upload success
2019-05-30T10:26:39.645374> --> cloud end
2019-05-30T10:26:39.645779> 
2019-05-30T10:27:37.331869> --- rxlora. dst=1 type=0x12 src=8 seq=151 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T10:27:37.332363> 2019-05-30T10:27:37.328907
2019-05-30T10:27:37.332720> rcv ctrl pkt info (^p): 1,18,8,151,14,7,-41
2019-05-30T10:27:37.333029> splitted in: [1, 18, 8, 151, 14, 7, -41]
2019-05-30T10:27:37.333321> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=151 len=14 SNR=7 RSSI=-41)
2019-05-30T10:27:37.333672> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:27:37.334013> splitted in: [125, 5, 12]
2019-05-30T10:27:37.334351> (BW=125 CR=5 SF=12)
2019-05-30T10:27:37.334708> rcv timestamp (^t): 2019-05-30T10:27:37.325
2019-05-30T10:27:37.335050> 
2019-05-30T10:27:37.335340> Got first framing byte
2019-05-30T10:27:37.335607> --> got LoRa data prefix
2019-05-30T10:27:37.335874> --> DATA with_appkey: read app key sequence
2019-05-30T10:27:37.336143> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:27:37.336407> app key disabled
2019-05-30T10:27:37.336744> valid app key: accept data
2019-05-30T10:27:37.337027> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:27:37.337294> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,151,10,7,-41" "125,5,12" "2019-05-30T10:27:37.325" "B827EB1B65FD"
2019-05-30T10:27:39.147513> 2019-05-30 10:27:39.146686
2019-05-30T10:27:39.148047> post status: gw ON
2019-05-30T10:27:39.148396> post status: executing periodic tasks
2019-05-30T10:27:40.318437> no timezone support, time will be expressed only in local time
2019-05-30T10:27:40.318813> post status: start running
2019-05-30T10:27:41.434515> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:27:41.435065> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:27:41.435435> get_gps.py: invalid serial port
2019-05-30T10:27:41.548595> CloudEdge: uploading
2019-05-30T10:27:41.549430> CloudEdge: run under guest identity, all data is public
2019-05-30T10:27:41.550191> CloudEdge: check if entity exits
2019-05-30T10:27:41.550818> CloudEdge: will issue requests with
2019-05-30T10:27:41.551368> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:27:41.551883> CloudEdge: returned msg from server is 200
2019-05-30T10:27:41.552403> CloudEdge: entity exists
2019-05-30T10:27:41.552893> CloudEdge: check if measurement exits
2019-05-30T10:27:41.553302> CloudEdge: will issue requests with
2019-05-30T10:27:41.553657> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:27:41.553984> CloudEdge: returned msg from server is 200
2019-05-30T10:27:41.554308> CloudEdge: measurement exists
2019-05-30T10:27:41.554703> CloudEdge: will issue requests with
2019-05-30T10:27:41.555039> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:27:41.555369> data: {"value":95.26,"timestamp":"2019-05-30T10:27:37.325"}
2019-05-30T10:27:41.555691> CloudEdge: returned msg from server is 200
2019-05-30T10:27:41.556011> CloudEdge: upload success
2019-05-30T10:27:41.586392> post status: dynamic GPS is requested
2019-05-30T10:27:41.587299> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:27:41.587990> post status get GPS: no GPS coordinates
2019-05-30T10:27:41.588633> post status: show current GPS position
2019-05-30T10:27:41.589238> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:27:41.589777> post status: exiting
2019-05-30T10:27:41.747888> --> cloud end
2019-05-30T10:27:41.748335> 
2019-05-30T10:28:39.434741> --- rxlora. dst=1 type=0x12 src=8 seq=152 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:28:39.435266> 2019-05-30T10:28:39.431760
2019-05-30T10:28:39.435621> rcv ctrl pkt info (^p): 1,18,8,152,14,6,-43
2019-05-30T10:28:39.435938> splitted in: [1, 18, 8, 152, 14, 6, -43]
2019-05-30T10:28:39.436340> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=152 len=14 SNR=6 RSSI=-43)
2019-05-30T10:28:39.436909> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:28:39.440485> splitted in: [125, 5, 12]
2019-05-30T10:28:39.441035> (BW=125 CR=5 SF=12)
2019-05-30T10:28:39.441432> rcv timestamp (^t): 2019-05-30T10:28:39.428
2019-05-30T10:28:39.441798> 
2019-05-30T10:28:39.442209> Got first framing byte
2019-05-30T10:28:39.442542> --> got LoRa data prefix
2019-05-30T10:28:39.442881> --> DATA with_appkey: read app key sequence
2019-05-30T10:28:39.443205> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:28:39.443561> app key disabled
2019-05-30T10:28:39.443900> valid app key: accept data
2019-05-30T10:28:39.444219> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:28:39.444530> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,152,10,6,-43" "125,5,12" "2019-05-30T10:28:39.428" "B827EB1B65FD"
2019-05-30T10:28:43.709300> CloudEdge: uploading
2019-05-30T10:28:43.710653> CloudEdge: run under guest identity, all data is public
2019-05-30T10:28:43.711496> CloudEdge: check if entity exits
2019-05-30T10:28:43.712188> CloudEdge: will issue requests with
2019-05-30T10:28:43.712847> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:28:43.713500> CloudEdge: returned msg from server is 200
2019-05-30T10:28:43.714104> CloudEdge: entity exists
2019-05-30T10:28:43.714688> CloudEdge: check if measurement exits
2019-05-30T10:28:43.715261> CloudEdge: will issue requests with
2019-05-30T10:28:43.715836> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:28:43.716494> CloudEdge: returned msg from server is 200
2019-05-30T10:28:43.717345> CloudEdge: measurement exists
2019-05-30T10:28:43.717961> CloudEdge: will issue requests with
2019-05-30T10:28:43.718551> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:28:43.719152> data: {"value":95.33,"timestamp":"2019-05-30T10:28:39.428"}
2019-05-30T10:28:43.719736> CloudEdge: returned msg from server is 200
2019-05-30T10:28:43.720317> CloudEdge: upload success
2019-05-30T10:28:43.907115> --> cloud end
2019-05-30T10:28:43.907478> 
2019-05-30T10:28:43.907749> Low-level gw status ON
2019-05-30T10:29:41.537207> --- rxlora. dst=1 type=0x12 src=8 seq=153 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:29:41.537616> 2019-05-30T10:29:41.534568
2019-05-30T10:29:41.537886> rcv ctrl pkt info (^p): 1,18,8,153,14,6,-42
2019-05-30T10:29:41.538155> splitted in: [1, 18, 8, 153, 14, 6, -42]
2019-05-30T10:29:41.538443> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=153 len=14 SNR=6 RSSI=-42)
2019-05-30T10:29:41.538802> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:29:41.539109> splitted in: [125, 5, 12]
2019-05-30T10:29:41.539470> (BW=125 CR=5 SF=12)
2019-05-30T10:29:41.539763> rcv timestamp (^t): 2019-05-30T10:29:41.531
2019-05-30T10:29:41.540054> 
2019-05-30T10:29:41.540331> Got first framing byte
2019-05-30T10:29:41.540641> --> got LoRa data prefix
2019-05-30T10:29:41.540964> --> DATA with_appkey: read app key sequence
2019-05-30T10:29:41.542463> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:29:41.543054> app key disabled
2019-05-30T10:29:41.543475> valid app key: accept data
2019-05-30T10:29:41.543863> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:29:41.544264> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,153,10,6,-42" "125,5,12" "2019-05-30T10:29:41.531" "B827EB1B65FD"
2019-05-30T10:29:45.730657> CloudEdge: uploading
2019-05-30T10:29:45.731317> CloudEdge: run under guest identity, all data is public
2019-05-30T10:29:45.731855> CloudEdge: check if entity exits
2019-05-30T10:29:45.732381> CloudEdge: will issue requests with
2019-05-30T10:29:45.732913> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:29:45.733437> CloudEdge: returned msg from server is 200
2019-05-30T10:29:45.734126> CloudEdge: entity exists
2019-05-30T10:29:45.734677> CloudEdge: check if measurement exits
2019-05-30T10:29:45.735210> CloudEdge: will issue requests with
2019-05-30T10:29:45.735736> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:29:45.736264> CloudEdge: returned msg from server is 200
2019-05-30T10:29:45.736932> CloudEdge: measurement exists
2019-05-30T10:29:45.737483> CloudEdge: will issue requests with
2019-05-30T10:29:45.738009> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:29:45.738538> data: {"value":95.26,"timestamp":"2019-05-30T10:29:41.531"}
2019-05-30T10:29:45.739063> CloudEdge: returned msg from server is 200
2019-05-30T10:29:45.739590> CloudEdge: upload success
2019-05-30T10:29:45.945317> --> cloud end
2019-05-30T10:29:45.945730> 
2019-05-30T10:30:43.637755> --- rxlora. dst=1 type=0x12 src=8 seq=154 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:30:43.638224> 2019-05-30T10:30:43.637197
2019-05-30T10:30:43.638618> rcv ctrl pkt info (^p): 1,18,8,154,14,6,-42
2019-05-30T10:30:43.638922> splitted in: [1, 18, 8, 154, 14, 6, -42]
2019-05-30T10:30:43.639205> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=154 len=14 SNR=6 RSSI=-42)
2019-05-30T10:30:43.639485> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:30:43.639832> splitted in: [125, 5, 12]
2019-05-30T10:30:43.640167> (BW=125 CR=5 SF=12)
2019-05-30T10:30:43.640469> rcv timestamp (^t): 2019-05-30T10:30:43.633
2019-05-30T10:30:43.640762> 
2019-05-30T10:30:43.641151> Got first framing byte
2019-05-30T10:30:43.641452> --> got LoRa data prefix
2019-05-30T10:30:43.641776> --> DATA with_appkey: read app key sequence
2019-05-30T10:30:43.642127> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:30:43.642497> app key disabled
2019-05-30T10:30:43.642821> valid app key: accept data
2019-05-30T10:30:43.643194> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:30:43.643627> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,154,10,6,-42" "125,5,12" "2019-05-30T10:30:43.633" "B827EB1B65FD"
2019-05-30T10:30:47.832241> CloudEdge: uploading
2019-05-30T10:30:47.833132> CloudEdge: run under guest identity, all data is public
2019-05-30T10:30:47.833873> CloudEdge: check if entity exits
2019-05-30T10:30:47.834537> CloudEdge: will issue requests with
2019-05-30T10:30:47.835192> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:30:47.835929> CloudEdge: returned msg from server is 200
2019-05-30T10:30:47.836700> CloudEdge: entity exists
2019-05-30T10:30:47.837543> CloudEdge: check if measurement exits
2019-05-30T10:30:47.838316> CloudEdge: will issue requests with
2019-05-30T10:30:47.839063> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:30:47.839926> CloudEdge: returned msg from server is 200
2019-05-30T10:30:47.840684> CloudEdge: measurement exists
2019-05-30T10:30:47.841416> CloudEdge: will issue requests with
2019-05-30T10:30:47.842164> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:30:47.842915> data: {"value":95.26,"timestamp":"2019-05-30T10:30:43.633"}
2019-05-30T10:30:47.843678> CloudEdge: returned msg from server is 200
2019-05-30T10:30:47.844458> CloudEdge: upload success
2019-05-30T10:30:48.014062> --> cloud end
2019-05-30T10:30:48.014462> 
2019-05-30T10:31:45.742782> --- rxlora. dst=1 type=0x12 src=8 seq=155 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:31:45.743316> 2019-05-30T10:31:45.739686
2019-05-30T10:31:45.743786> rcv ctrl pkt info (^p): 1,18,8,155,14,6,-42
2019-05-30T10:31:45.744145> splitted in: [1, 18, 8, 155, 14, 6, -42]
2019-05-30T10:31:45.744602> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=155 len=14 SNR=6 RSSI=-42)
2019-05-30T10:31:45.745036> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:31:45.745476> splitted in: [125, 5, 12]
2019-05-30T10:31:45.745900> (BW=125 CR=5 SF=12)
2019-05-30T10:31:45.746364> rcv timestamp (^t): 2019-05-30T10:31:45.736
2019-05-30T10:31:45.746891> 
2019-05-30T10:31:45.747427> Got first framing byte
2019-05-30T10:31:45.747924> --> got LoRa data prefix
2019-05-30T10:31:45.748376> --> DATA with_appkey: read app key sequence
2019-05-30T10:31:45.748873> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:31:45.749501> app key disabled
2019-05-30T10:31:45.749984> valid app key: accept data
2019-05-30T10:31:45.750435> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:31:45.750843> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,155,10,6,-42" "125,5,12" "2019-05-30T10:31:45.736" "B827EB1B65FD"
2019-05-30T10:31:49.974433> CloudEdge: uploading
2019-05-30T10:31:49.975295> CloudEdge: run under guest identity, all data is public
2019-05-30T10:31:49.976036> CloudEdge: check if entity exits
2019-05-30T10:31:49.976893> CloudEdge: will issue requests with
2019-05-30T10:31:49.977717> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:31:49.978408> CloudEdge: returned msg from server is 200
2019-05-30T10:31:49.979020> CloudEdge: entity exists
2019-05-30T10:31:49.979678> CloudEdge: check if measurement exits
2019-05-30T10:31:49.980274> CloudEdge: will issue requests with
2019-05-30T10:31:49.980856> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:31:49.981439> CloudEdge: returned msg from server is 200
2019-05-30T10:31:49.982023> CloudEdge: measurement exists
2019-05-30T10:31:49.982619> CloudEdge: will issue requests with
2019-05-30T10:31:49.983202> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:31:49.983782> data: {"value":95.26,"timestamp":"2019-05-30T10:31:45.736"}
2019-05-30T10:31:49.984365> CloudEdge: returned msg from server is 200
2019-05-30T10:31:49.984935> CloudEdge: upload success
2019-05-30T10:31:50.161610> --> cloud end
2019-05-30T10:31:50.161976> 
2019-05-30T10:32:47.842313> --- rxlora. dst=1 type=0x12 src=8 seq=156 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:32:47.843545> 2019-05-30T10:32:47.841351
2019-05-30T10:32:47.844220> rcv ctrl pkt info (^p): 1,18,8,156,14,6,-42
2019-05-30T10:32:47.844828> splitted in: [1, 18, 8, 156, 14, 6, -42]
2019-05-30T10:32:47.845352> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=156 len=14 SNR=6 RSSI=-42)
2019-05-30T10:32:47.847154> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:32:47.847592> splitted in: [125, 5, 12]
2019-05-30T10:32:47.847946> (BW=125 CR=5 SF=12)
2019-05-30T10:32:47.848268> rcv timestamp (^t): 2019-05-30T10:32:47.838
2019-05-30T10:32:47.848583> 
2019-05-30T10:32:47.848868> Got first framing byte
2019-05-30T10:32:47.849177> --> got LoRa data prefix
2019-05-30T10:32:47.849549> --> DATA with_appkey: read app key sequence
2019-05-30T10:32:47.850137> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:32:47.850682> app key disabled
2019-05-30T10:32:47.851444> valid app key: accept data
2019-05-30T10:32:47.852013> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:32:47.852605> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,156,10,6,-42" "125,5,12" "2019-05-30T10:32:47.838" "B827EB1B65FD"
2019-05-30T10:32:51.911987> CloudEdge: uploading
2019-05-30T10:32:51.912768> CloudEdge: run under guest identity, all data is public
2019-05-30T10:32:51.913417> CloudEdge: check if entity exits
2019-05-30T10:32:51.914091> CloudEdge: will issue requests with
2019-05-30T10:32:51.914708> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:32:51.915301> CloudEdge: returned msg from server is 200
2019-05-30T10:32:51.915882> CloudEdge: entity exists
2019-05-30T10:32:51.916471> CloudEdge: check if measurement exits
2019-05-30T10:32:51.917252> CloudEdge: will issue requests with
2019-05-30T10:32:51.917851> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:32:51.918429> CloudEdge: returned msg from server is 200
2019-05-30T10:32:51.919000> CloudEdge: measurement exists
2019-05-30T10:32:51.919567> CloudEdge: will issue requests with
2019-05-30T10:32:51.920133> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:32:51.920701> data: {"value":95.33,"timestamp":"2019-05-30T10:32:47.838"}
2019-05-30T10:32:51.921260> CloudEdge: returned msg from server is 200
2019-05-30T10:32:51.921824> CloudEdge: upload success
2019-05-30T10:32:52.102158> --> cloud end
2019-05-30T10:32:52.102554> 
2019-05-30T10:33:49.940839> --- rxlora. dst=1 type=0x12 src=8 seq=157 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:33:49.941297> 2019-05-30T10:33:49.940434
2019-05-30T10:33:49.941620> rcv ctrl pkt info (^p): 1,18,8,157,14,7,-42
2019-05-30T10:33:49.941923> splitted in: [1, 18, 8, 157, 14, 7, -42]
2019-05-30T10:33:49.942217> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=157 len=14 SNR=7 RSSI=-42)
2019-05-30T10:33:49.942498> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:33:49.942773> splitted in: [125, 5, 12]
2019-05-30T10:33:49.943072> (BW=125 CR=5 SF=12)
2019-05-30T10:33:49.943432> rcv timestamp (^t): 2019-05-30T10:33:49.936
2019-05-30T10:33:49.943759> 
2019-05-30T10:33:49.944153> Got first framing byte
2019-05-30T10:33:49.944483> --> got LoRa data prefix
2019-05-30T10:33:49.944821> --> DATA with_appkey: read app key sequence
2019-05-30T10:33:49.947526> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:33:49.948201> app key disabled
2019-05-30T10:33:49.948767> valid app key: accept data
2019-05-30T10:33:49.950610> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:33:49.950967> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,157,10,7,-42" "125,5,12" "2019-05-30T10:33:49.936" "B827EB1B65FD"
2019-05-30T10:33:54.406157> CloudEdge: uploading
2019-05-30T10:33:54.407134> CloudEdge: run under guest identity, all data is public
2019-05-30T10:33:54.407893> CloudEdge: check if entity exits
2019-05-30T10:33:54.408535> CloudEdge: will issue requests with
2019-05-30T10:33:54.409150> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:33:54.409749> CloudEdge: returned msg from server is 200
2019-05-30T10:33:54.410325> CloudEdge: entity exists
2019-05-30T10:33:54.410879> CloudEdge: check if measurement exits
2019-05-30T10:33:54.411439> CloudEdge: will issue requests with
2019-05-30T10:33:54.411993> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:33:54.412545> CloudEdge: returned msg from server is 200
2019-05-30T10:33:54.413094> CloudEdge: measurement exists
2019-05-30T10:33:54.413650> CloudEdge: will issue requests with
2019-05-30T10:33:54.414214> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:33:54.414853> data: {"value":95.33,"timestamp":"2019-05-30T10:33:49.936"}
2019-05-30T10:33:54.415409> CloudEdge: returned msg from server is 200
2019-05-30T10:33:54.415977> CloudEdge: upload success
2019-05-30T10:33:54.589582> --> cloud end
2019-05-30T10:33:54.589964> 
2019-05-30T10:34:52.044559> --- rxlora. dst=1 type=0x12 src=8 seq=158 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:34:52.044970> 2019-05-30T10:34:52.041671
2019-05-30T10:34:52.045242> rcv ctrl pkt info (^p): 1,18,8,158,14,6,-43
2019-05-30T10:34:52.045509> splitted in: [1, 18, 8, 158, 14, 6, -43]
2019-05-30T10:34:52.045773> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=158 len=14 SNR=6 RSSI=-43)
2019-05-30T10:34:52.046038> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:34:52.046302> splitted in: [125, 5, 12]
2019-05-30T10:34:52.046649> (BW=125 CR=5 SF=12)
2019-05-30T10:34:52.047032> rcv timestamp (^t): 2019-05-30T10:34:52.038
2019-05-30T10:34:52.047365> 
2019-05-30T10:34:52.047667> Got first framing byte
2019-05-30T10:34:52.047963> --> got LoRa data prefix
2019-05-30T10:34:52.048250> --> DATA with_appkey: read app key sequence
2019-05-30T10:34:52.048531> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:34:52.048822> app key disabled
2019-05-30T10:34:52.049171> valid app key: accept data
2019-05-30T10:34:52.049497> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:34:52.049856> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,158,10,6,-43" "125,5,12" "2019-05-30T10:34:52.038" "B827EB1B65FD"
2019-05-30T10:34:56.457105> CloudEdge: uploading
2019-05-30T10:34:56.457826> CloudEdge: run under guest identity, all data is public
2019-05-30T10:34:56.458656> CloudEdge: check if entity exits
2019-05-30T10:34:56.459414> CloudEdge: will issue requests with
2019-05-30T10:34:56.460000> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:34:56.460552> CloudEdge: returned msg from server is 200
2019-05-30T10:34:56.461101> CloudEdge: entity exists
2019-05-30T10:34:56.461655> CloudEdge: check if measurement exits
2019-05-30T10:34:56.462198> CloudEdge: will issue requests with
2019-05-30T10:34:56.462742> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:34:56.463287> CloudEdge: returned msg from server is 200
2019-05-30T10:34:56.463836> CloudEdge: measurement exists
2019-05-30T10:34:56.464374> CloudEdge: will issue requests with
2019-05-30T10:34:56.464916> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:34:56.465459> data: {"value":95.26,"timestamp":"2019-05-30T10:34:52.038"}
2019-05-30T10:34:56.466000> CloudEdge: returned msg from server is 200
2019-05-30T10:34:56.471377> CloudEdge: upload success
2019-05-30T10:34:56.669027> --> cloud end
2019-05-30T10:34:56.669410> 
2019-05-30T10:35:54.144990> --- rxlora. dst=1 type=0x12 src=8 seq=159 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T10:35:54.145516> 2019-05-30T10:35:54.144497
2019-05-30T10:35:54.145944> rcv ctrl pkt info (^p): 1,18,8,159,14,6,-46
2019-05-30T10:35:54.146271> splitted in: [1, 18, 8, 159, 14, 6, -46]
2019-05-30T10:35:54.146693> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=159 len=14 SNR=6 RSSI=-46)
2019-05-30T10:35:54.147152> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:35:54.147615> splitted in: [125, 5, 12]
2019-05-30T10:35:54.148271> (BW=125 CR=5 SF=12)
2019-05-30T10:35:54.148847> rcv timestamp (^t): 2019-05-30T10:35:54.140
2019-05-30T10:35:54.149544> 
2019-05-30T10:35:54.150359> Got first framing byte
2019-05-30T10:35:54.151017> --> got LoRa data prefix
2019-05-30T10:35:54.151751> --> DATA with_appkey: read app key sequence
2019-05-30T10:35:54.152471> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:35:54.153066> app key disabled
2019-05-30T10:35:54.153701> valid app key: accept data
2019-05-30T10:35:54.154417> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:35:54.155117> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,159,10,6,-46" "125,5,12" "2019-05-30T10:35:54.140" "B827EB1B65FD"
2019-05-30T10:35:58.218929> CloudEdge: uploading
2019-05-30T10:35:58.219869> CloudEdge: run under guest identity, all data is public
2019-05-30T10:35:58.220734> CloudEdge: check if entity exits
2019-05-30T10:35:58.221535> CloudEdge: will issue requests with
2019-05-30T10:35:58.222349> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:35:58.223154> CloudEdge: returned msg from server is 200
2019-05-30T10:35:58.223861> CloudEdge: entity exists
2019-05-30T10:35:58.224562> CloudEdge: check if measurement exits
2019-05-30T10:35:58.225266> CloudEdge: will issue requests with
2019-05-30T10:35:58.225987> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:35:58.226889> CloudEdge: returned msg from server is 200
2019-05-30T10:35:58.227692> CloudEdge: measurement exists
2019-05-30T10:35:58.228409> CloudEdge: will issue requests with
2019-05-30T10:35:58.229106> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:35:58.229807> data: {"value":95.33,"timestamp":"2019-05-30T10:35:54.140"}
2019-05-30T10:35:58.230488> CloudEdge: returned msg from server is 200
2019-05-30T10:35:58.231187> CloudEdge: upload success
2019-05-30T10:35:58.403881> --> cloud end
2019-05-30T10:35:58.404902> 
2019-05-30T10:36:56.247205> --- rxlora. dst=1 type=0x12 src=8 seq=160 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:36:56.248369> 2019-05-30T10:36:56.246460
2019-05-30T10:36:56.248827> rcv ctrl pkt info (^p): 1,18,8,160,14,6,-42
2019-05-30T10:36:56.249269> splitted in: [1, 18, 8, 160, 14, 6, -42]
2019-05-30T10:36:56.249721> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=160 len=14 SNR=6 RSSI=-42)
2019-05-30T10:36:56.250412> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:36:56.250950> splitted in: [125, 5, 12]
2019-05-30T10:36:56.251588> (BW=125 CR=5 SF=12)
2019-05-30T10:36:56.252057> rcv timestamp (^t): 2019-05-30T10:36:56.243
2019-05-30T10:36:56.252385> 
2019-05-30T10:36:56.252685> Got first framing byte
2019-05-30T10:36:56.252978> --> got LoRa data prefix
2019-05-30T10:36:56.253256> --> DATA with_appkey: read app key sequence
2019-05-30T10:36:56.253566> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:36:56.253906> app key disabled
2019-05-30T10:36:56.254247> valid app key: accept data
2019-05-30T10:36:56.254577> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:36:56.254917> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,160,10,6,-42" "125,5,12" "2019-05-30T10:36:56.243" "B827EB1B65FD"
2019-05-30T10:37:01.171687> CloudEdge: uploading
2019-05-30T10:37:01.172381> CloudEdge: run under guest identity, all data is public
2019-05-30T10:37:01.172966> CloudEdge: check if entity exits
2019-05-30T10:37:01.173574> CloudEdge: will issue requests with
2019-05-30T10:37:01.174210> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:37:01.174823> CloudEdge: returned msg from server is 200
2019-05-30T10:37:01.175422> CloudEdge: entity exists
2019-05-30T10:37:01.176028> CloudEdge: check if measurement exits
2019-05-30T10:37:01.176723> CloudEdge: will issue requests with
2019-05-30T10:37:01.177316> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:37:01.177853> CloudEdge: returned msg from server is 200
2019-05-30T10:37:01.178407> CloudEdge: measurement exists
2019-05-30T10:37:01.178973> CloudEdge: will issue requests with
2019-05-30T10:37:01.179536> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:37:01.180098> data: {"value":95.39,"timestamp":"2019-05-30T10:36:56.243"}
2019-05-30T10:37:01.180652> CloudEdge: returned msg from server is 200
2019-05-30T10:37:01.181204> CloudEdge: upload success
2019-05-30T10:37:01.389648> --> cloud end
2019-05-30T10:37:01.390106> 
2019-05-30T10:37:41.798212> 2019-05-30 10:37:41.796713
2019-05-30T10:37:41.799042> post status: gw ON
2019-05-30T10:37:41.799706> post status: executing periodic tasks
2019-05-30T10:37:42.891671> no timezone support, time will be expressed only in local time
2019-05-30T10:37:42.892174> post status: start running
2019-05-30T10:37:43.944059> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:37:43.944602> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:37:43.945022> get_gps.py: invalid serial port
2019-05-30T10:37:44.085944> post status: dynamic GPS is requested
2019-05-30T10:37:44.086353> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:37:44.086873> post status get GPS: no GPS coordinates
2019-05-30T10:37:44.087238> post status: show current GPS position
2019-05-30T10:37:44.087549> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:37:44.087836> post status: exiting
2019-05-30T10:37:58.347867> --- rxlora. dst=1 type=0x12 src=8 seq=161 len=14 SNR=5 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T10:37:58.348302> 2019-05-30T10:37:58.347453
2019-05-30T10:37:58.348616> rcv ctrl pkt info (^p): 1,18,8,161,14,5,-46
2019-05-30T10:37:58.348923> splitted in: [1, 18, 8, 161, 14, 5, -46]
2019-05-30T10:37:58.349202> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=161 len=14 SNR=5 RSSI=-46)
2019-05-30T10:37:58.349470> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:37:58.349738> splitted in: [125, 5, 12]
2019-05-30T10:37:58.350063> (BW=125 CR=5 SF=12)
2019-05-30T10:37:58.350405> rcv timestamp (^t): 2019-05-30T10:37:58.343
2019-05-30T10:37:58.350702> 
2019-05-30T10:37:58.351045> Got first framing byte
2019-05-30T10:37:58.351340> --> got LoRa data prefix
2019-05-30T10:37:58.351629> --> DATA with_appkey: read app key sequence
2019-05-30T10:37:58.351905> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:37:58.352222> app key disabled
2019-05-30T10:37:58.352564> valid app key: accept data
2019-05-30T10:37:58.352898> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:37:58.353212> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,161,10,5,-46" "125,5,12" "2019-05-30T10:37:58.343" "B827EB1B65FD"
2019-05-30T10:38:02.585875> CloudEdge: uploading
2019-05-30T10:38:02.586792> CloudEdge: run under guest identity, all data is public
2019-05-30T10:38:02.587721> CloudEdge: check if entity exits
2019-05-30T10:38:02.588603> CloudEdge: will issue requests with
2019-05-30T10:38:02.589472> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:38:02.590316> CloudEdge: returned msg from server is 200
2019-05-30T10:38:02.591112> CloudEdge: entity exists
2019-05-30T10:38:02.591806> CloudEdge: check if measurement exits
2019-05-30T10:38:02.592518> CloudEdge: will issue requests with
2019-05-30T10:38:02.593216> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:38:02.593916> CloudEdge: returned msg from server is 200
2019-05-30T10:38:02.594621> CloudEdge: measurement exists
2019-05-30T10:38:02.595312> CloudEdge: will issue requests with
2019-05-30T10:38:02.596008> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:38:02.596840> data: {"value":95.33,"timestamp":"2019-05-30T10:37:58.343"}
2019-05-30T10:38:02.597648> CloudEdge: returned msg from server is 200
2019-05-30T10:38:02.598360> CloudEdge: upload success
2019-05-30T10:38:02.768228> --> cloud end
2019-05-30T10:38:02.768629> 
2019-05-30T10:39:00.450698> --- rxlora. dst=1 type=0x12 src=8 seq=162 len=14 SNR=5 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:39:00.451297> 2019-05-30T10:39:00.447737
2019-05-30T10:39:00.458646> rcv ctrl pkt info (^p): 1,18,8,162,14,5,-43
2019-05-30T10:39:00.459007> splitted in: [1, 18, 8, 162, 14, 5, -43]
2019-05-30T10:39:00.459279> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=162 len=14 SNR=5 RSSI=-43)
2019-05-30T10:39:00.459548> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:39:00.459817> splitted in: [125, 5, 12]
2019-05-30T10:39:00.460135> (BW=125 CR=5 SF=12)
2019-05-30T10:39:00.460401> rcv timestamp (^t): 2019-05-30T10:39:00.444
2019-05-30T10:39:00.460667> 
2019-05-30T10:39:00.460931> Got first framing byte
2019-05-30T10:39:00.461199> --> got LoRa data prefix
2019-05-30T10:39:00.461464> --> DATA with_appkey: read app key sequence
2019-05-30T10:39:00.461729> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:39:00.461991> app key disabled
2019-05-30T10:39:00.462255> valid app key: accept data
2019-05-30T10:39:00.462517> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:39:00.462783> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,162,10,5,-43" "125,5,12" "2019-05-30T10:39:00.444" "B827EB1B65FD"
2019-05-30T10:39:04.437045> CloudEdge: uploading
2019-05-30T10:39:04.437929> CloudEdge: run under guest identity, all data is public
2019-05-30T10:39:04.438659> CloudEdge: check if entity exits
2019-05-30T10:39:04.439319> CloudEdge: will issue requests with
2019-05-30T10:39:04.439952> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:39:04.440578> CloudEdge: returned msg from server is 200
2019-05-30T10:39:04.441162> CloudEdge: entity exists
2019-05-30T10:39:04.441742> CloudEdge: check if measurement exits
2019-05-30T10:39:04.442325> CloudEdge: will issue requests with
2019-05-30T10:39:04.442897> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:39:04.443471> CloudEdge: returned msg from server is 200
2019-05-30T10:39:04.444042> CloudEdge: measurement exists
2019-05-30T10:39:04.444609> CloudEdge: will issue requests with
2019-05-30T10:39:04.445181> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:39:04.445759> data: {"value":95.26,"timestamp":"2019-05-30T10:39:00.444"}
2019-05-30T10:39:04.446327> CloudEdge: returned msg from server is 200
2019-05-30T10:39:04.447212> CloudEdge: upload success
2019-05-30T10:39:04.655516> --> cloud end
2019-05-30T10:39:04.655950> 
2019-05-30T10:39:04.656278> Low-level gw status ON
2019-05-30T10:40:02.550824> --- rxlora. dst=1 type=0x12 src=8 seq=163 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:40:02.551323> 2019-05-30T10:40:02.547889
2019-05-30T10:40:02.551689> rcv ctrl pkt info (^p): 1,18,8,163,14,6,-45
2019-05-30T10:40:02.552003> splitted in: [1, 18, 8, 163, 14, 6, -45]
2019-05-30T10:40:02.552298> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=163 len=14 SNR=6 RSSI=-45)
2019-05-30T10:40:02.552630> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:40:02.552985> splitted in: [125, 5, 12]
2019-05-30T10:40:02.553342> (BW=125 CR=5 SF=12)
2019-05-30T10:40:02.553661> rcv timestamp (^t): 2019-05-30T10:40:02.544
2019-05-30T10:40:02.554051> 
2019-05-30T10:40:02.554407> Got first framing byte
2019-05-30T10:40:02.554760> --> got LoRa data prefix
2019-05-30T10:40:02.555087> --> DATA with_appkey: read app key sequence
2019-05-30T10:40:02.556095> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:40:02.556792> app key disabled
2019-05-30T10:40:02.557463> valid app key: accept data
2019-05-30T10:40:02.557991> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:40:02.558422> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,163,10,6,-45" "125,5,12" "2019-05-30T10:40:02.544" "B827EB1B65FD"
2019-05-30T10:40:06.719791> CloudEdge: uploading
2019-05-30T10:40:06.720506> CloudEdge: run under guest identity, all data is public
2019-05-30T10:40:06.721094> CloudEdge: check if entity exits
2019-05-30T10:40:06.721738> CloudEdge: will issue requests with
2019-05-30T10:40:06.722370> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:40:06.722981> CloudEdge: returned msg from server is 200
2019-05-30T10:40:06.723576> CloudEdge: entity exists
2019-05-30T10:40:06.724168> CloudEdge: check if measurement exits
2019-05-30T10:40:06.724751> CloudEdge: will issue requests with
2019-05-30T10:40:06.725312> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:40:06.725969> CloudEdge: returned msg from server is 200
2019-05-30T10:40:06.726623> CloudEdge: measurement exists
2019-05-30T10:40:06.727268> CloudEdge: will issue requests with
2019-05-30T10:40:06.727860> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:40:06.728438> data: {"value":95.39,"timestamp":"2019-05-30T10:40:02.544"}
2019-05-30T10:40:06.729002> CloudEdge: returned msg from server is 200
2019-05-30T10:40:06.729572> CloudEdge: upload success
2019-05-30T10:40:06.914139> --> cloud end
2019-05-30T10:40:06.914499> 
2019-05-30T10:41:04.648164> --- rxlora. dst=1 type=0x12 src=8 seq=164 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:41:04.648618> 2019-05-30T10:41:04.647658
2019-05-30T10:41:04.648999> rcv ctrl pkt info (^p): 1,18,8,164,14,6,-45
2019-05-30T10:41:04.649307> splitted in: [1, 18, 8, 164, 14, 6, -45]
2019-05-30T10:41:04.649589> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=164 len=14 SNR=6 RSSI=-45)
2019-05-30T10:41:04.649869> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:41:04.650171> splitted in: [125, 5, 12]
2019-05-30T10:41:04.650502> (BW=125 CR=5 SF=12)
2019-05-30T10:41:04.650800> rcv timestamp (^t): 2019-05-30T10:41:04.644
2019-05-30T10:41:04.651084> 
2019-05-30T10:41:04.651437> Got first framing byte
2019-05-30T10:41:04.651723> --> got LoRa data prefix
2019-05-30T10:41:04.651998> --> DATA with_appkey: read app key sequence
2019-05-30T10:41:04.652311> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:41:04.652643> app key disabled
2019-05-30T10:41:04.652976> valid app key: accept data
2019-05-30T10:41:04.653304> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:41:04.653666> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,164,10,6,-45" "125,5,12" "2019-05-30T10:41:04.644" "B827EB1B65FD"
2019-05-30T10:41:09.287457> CloudEdge: uploading
2019-05-30T10:41:09.288268> CloudEdge: run under guest identity, all data is public
2019-05-30T10:41:09.288932> CloudEdge: check if entity exits
2019-05-30T10:41:09.289614> CloudEdge: will issue requests with
2019-05-30T10:41:09.290324> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:41:09.291025> CloudEdge: returned msg from server is 200
2019-05-30T10:41:09.291711> CloudEdge: entity exists
2019-05-30T10:41:09.292385> CloudEdge: check if measurement exits
2019-05-30T10:41:09.293042> CloudEdge: will issue requests with
2019-05-30T10:41:09.293695> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:41:09.294350> CloudEdge: returned msg from server is 200
2019-05-30T10:41:09.295014> CloudEdge: measurement exists
2019-05-30T10:41:09.295655> CloudEdge: will issue requests with
2019-05-30T10:41:09.296289> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:41:09.296986> data: {"value":95.33,"timestamp":"2019-05-30T10:41:04.644"}
2019-05-30T10:41:09.297648> CloudEdge: returned msg from server is 200
2019-05-30T10:41:09.298290> CloudEdge: upload success
2019-05-30T10:41:09.480437> --> cloud end
2019-05-30T10:41:09.480815> 
2019-05-30T10:42:06.751159> --- rxlora. dst=1 type=0x12 src=8 seq=165 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T10:42:06.751804> 2019-05-30T10:42:06.748082
2019-05-30T10:42:06.752274> rcv ctrl pkt info (^p): 1,18,8,165,14,7,-41
2019-05-30T10:42:06.752737> splitted in: [1, 18, 8, 165, 14, 7, -41]
2019-05-30T10:42:06.753298> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=165 len=14 SNR=7 RSSI=-41)
2019-05-30T10:42:06.753826> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:42:06.754381> splitted in: [125, 5, 12]
2019-05-30T10:42:06.754934> (BW=125 CR=5 SF=12)
2019-05-30T10:42:06.755435> rcv timestamp (^t): 2019-05-30T10:42:06.744
2019-05-30T10:42:06.755878> 
2019-05-30T10:42:06.756328> Got first framing byte
2019-05-30T10:42:06.756931> --> got LoRa data prefix
2019-05-30T10:42:06.757549> --> DATA with_appkey: read app key sequence
2019-05-30T10:42:06.758109> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:42:06.758542> app key disabled
2019-05-30T10:42:06.758924> valid app key: accept data
2019-05-30T10:42:06.759245> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:42:06.759645> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,165,10,7,-41" "125,5,12" "2019-05-30T10:42:06.744" "B827EB1B65FD"
2019-05-30T10:42:11.444476> CloudEdge: uploading
2019-05-30T10:42:11.445511> CloudEdge: run under guest identity, all data is public
2019-05-30T10:42:11.446426> CloudEdge: check if entity exits
2019-05-30T10:42:11.447556> CloudEdge: will issue requests with
2019-05-30T10:42:11.448510> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:42:11.449415> CloudEdge: returned msg from server is 200
2019-05-30T10:42:11.450215> CloudEdge: entity exists
2019-05-30T10:42:11.450987> CloudEdge: check if measurement exits
2019-05-30T10:42:11.451728> CloudEdge: will issue requests with
2019-05-30T10:42:11.452468> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:42:11.453207> CloudEdge: returned msg from server is 200
2019-05-30T10:42:11.453936> CloudEdge: measurement exists
2019-05-30T10:42:11.454652> CloudEdge: will issue requests with
2019-05-30T10:42:11.455367> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:42:11.456091> data: {"value":95.39,"timestamp":"2019-05-30T10:42:06.744"}
2019-05-30T10:42:11.456886> CloudEdge: returned msg from server is 200
2019-05-30T10:42:11.457757> CloudEdge: upload success
2019-05-30T10:42:11.628240> --> cloud end
2019-05-30T10:42:11.628616> 
2019-05-30T10:43:08.849726> --- rxlora. dst=1 type=0x12 src=8 seq=166 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:43:08.850408> 2019-05-30T10:43:08.849161
2019-05-30T10:43:08.850815> rcv ctrl pkt info (^p): 1,18,8,166,14,6,-45
2019-05-30T10:43:08.851120> splitted in: [1, 18, 8, 166, 14, 6, -45]
2019-05-30T10:43:08.851403> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=166 len=14 SNR=6 RSSI=-45)
2019-05-30T10:43:08.851736> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:43:08.852092> splitted in: [125, 5, 12]
2019-05-30T10:43:08.852396> (BW=125 CR=5 SF=12)
2019-05-30T10:43:08.852685> rcv timestamp (^t): 2019-05-30T10:43:08.845
2019-05-30T10:43:08.852991> 
2019-05-30T10:43:08.853360> Got first framing byte
2019-05-30T10:43:08.853646> --> got LoRa data prefix
2019-05-30T10:43:08.853976> --> DATA with_appkey: read app key sequence
2019-05-30T10:43:08.854340> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:43:08.854691> app key disabled
2019-05-30T10:43:08.855015> valid app key: accept data
2019-05-30T10:43:08.855415> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:43:08.855795> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,166,10,6,-45" "125,5,12" "2019-05-30T10:43:08.845" "B827EB1B65FD"
2019-05-30T10:43:13.108081> CloudEdge: uploading
2019-05-30T10:43:13.110617> CloudEdge: run under guest identity, all data is public
2019-05-30T10:43:13.111653> CloudEdge: check if entity exits
2019-05-30T10:43:13.112345> CloudEdge: will issue requests with
2019-05-30T10:43:13.113057> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:43:13.113693> CloudEdge: returned msg from server is 200
2019-05-30T10:43:13.114305> CloudEdge: entity exists
2019-05-30T10:43:13.114895> CloudEdge: check if measurement exits
2019-05-30T10:43:13.115483> CloudEdge: will issue requests with
2019-05-30T10:43:13.116076> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:43:13.116774> CloudEdge: returned msg from server is 200
2019-05-30T10:43:13.117671> CloudEdge: measurement exists
2019-05-30T10:43:13.118308> CloudEdge: will issue requests with
2019-05-30T10:43:13.118918> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:43:13.119588> data: {"value":95.33,"timestamp":"2019-05-30T10:43:08.845"}
2019-05-30T10:43:13.120180> CloudEdge: returned msg from server is 200
2019-05-30T10:43:13.120750> CloudEdge: upload success
2019-05-30T10:43:13.334496> --> cloud end
2019-05-30T10:43:13.334919> 
2019-05-30T10:44:10.953795> --- rxlora. dst=1 type=0x12 src=8 seq=167 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:44:10.954299> 2019-05-30T10:44:10.950591
2019-05-30T10:44:10.954650> rcv ctrl pkt info (^p): 1,18,8,167,14,6,-43
2019-05-30T10:44:10.954947> splitted in: [1, 18, 8, 167, 14, 6, -43]
2019-05-30T10:44:10.955291> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=167 len=14 SNR=6 RSSI=-43)
2019-05-30T10:44:10.955642> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:44:10.955980> splitted in: [125, 5, 12]
2019-05-30T10:44:10.956299> (BW=125 CR=5 SF=12)
2019-05-30T10:44:10.956830> rcv timestamp (^t): 2019-05-30T10:44:10.947
2019-05-30T10:44:10.957250> 
2019-05-30T10:44:10.957614> Got first framing byte
2019-05-30T10:44:10.957973> --> got LoRa data prefix
2019-05-30T10:44:10.958307> --> DATA with_appkey: read app key sequence
2019-05-30T10:44:10.958628> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:44:10.959087> app key disabled
2019-05-30T10:44:10.959468> valid app key: accept data
2019-05-30T10:44:10.959757> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:44:10.960125> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,167,10,6,-43" "125,5,12" "2019-05-30T10:44:10.947" "B827EB1B65FD"
2019-05-30T10:44:17.074230> --> cloud end
2019-05-30T10:44:17.074643> 
2019-05-30T10:45:13.053484> --- rxlora. dst=1 type=0x12 src=8 seq=168 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:45:13.053939> 2019-05-30T10:45:13.053063
2019-05-30T10:45:13.054243> rcv ctrl pkt info (^p): 1,18,8,168,14,6,-42
2019-05-30T10:45:13.054546> splitted in: [1, 18, 8, 168, 14, 6, -42]
2019-05-30T10:45:13.054823> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=168 len=14 SNR=6 RSSI=-42)
2019-05-30T10:45:13.055099> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:45:13.055369> splitted in: [125, 5, 12]
2019-05-30T10:45:13.055705> (BW=125 CR=5 SF=12)
2019-05-30T10:45:13.056023> rcv timestamp (^t): 2019-05-30T10:45:13.049
2019-05-30T10:45:13.056314> 
2019-05-30T10:45:13.057336> Got first framing byte
2019-05-30T10:45:13.058266> --> got LoRa data prefix
2019-05-30T10:45:13.059201> --> DATA with_appkey: read app key sequence
2019-05-30T10:45:13.060528> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:45:13.061496> app key disabled
2019-05-30T10:45:13.062641> valid app key: accept data
2019-05-30T10:45:13.063508> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:45:13.064285> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,168,10,6,-42" "125,5,12" "2019-05-30T10:45:13.049" "B827EB1B65FD"
2019-05-30T10:45:17.300997> CloudEdge: uploading
2019-05-30T10:45:17.301823> CloudEdge: run under guest identity, all data is public
2019-05-30T10:45:17.302522> CloudEdge: check if entity exits
2019-05-30T10:45:17.303148> CloudEdge: will issue requests with
2019-05-30T10:45:17.303761> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:45:17.304380> CloudEdge: returned msg from server is 200
2019-05-30T10:45:17.304972> CloudEdge: entity exists
2019-05-30T10:45:17.305534> CloudEdge: check if measurement exits
2019-05-30T10:45:17.306088> CloudEdge: will issue requests with
2019-05-30T10:45:17.306913> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:45:17.307582> CloudEdge: returned msg from server is 200
2019-05-30T10:45:17.308168> CloudEdge: measurement exists
2019-05-30T10:45:17.308737> CloudEdge: will issue requests with
2019-05-30T10:45:17.309305> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:45:17.309871> data: {"value":95.33,"timestamp":"2019-05-30T10:45:13.049"}
2019-05-30T10:45:17.310429> CloudEdge: returned msg from server is 200
2019-05-30T10:45:17.311068> CloudEdge: upload success
2019-05-30T10:45:17.506153> --> cloud end
2019-05-30T10:45:17.506610> 
2019-05-30T10:46:15.157205> --- rxlora. dst=1 type=0x12 src=8 seq=169 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:46:15.157918> 2019-05-30T10:46:15.155262
2019-05-30T10:46:15.158590> rcv ctrl pkt info (^p): 1,18,8,169,14,6,-42
2019-05-30T10:46:15.159177> splitted in: [1, 18, 8, 169, 14, 6, -42]
2019-05-30T10:46:15.159569> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=169 len=14 SNR=6 RSSI=-42)
2019-05-30T10:46:15.159905> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:46:15.160227> splitted in: [125, 5, 12]
2019-05-30T10:46:15.160596> (BW=125 CR=5 SF=12)
2019-05-30T10:46:15.160964> rcv timestamp (^t): 2019-05-30T10:46:15.151
2019-05-30T10:46:15.161341> 
2019-05-30T10:46:15.161712> Got first framing byte
2019-05-30T10:46:15.162081> --> got LoRa data prefix
2019-05-30T10:46:15.162402> --> DATA with_appkey: read app key sequence
2019-05-30T10:46:15.162701> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:46:15.162987> app key disabled
2019-05-30T10:46:15.163264> valid app key: accept data
2019-05-30T10:46:15.163548> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:46:15.163831> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,169,10,6,-42" "125,5,12" "2019-05-30T10:46:15.151" "B827EB1B65FD"
2019-05-30T10:46:20.277473> CloudEdge: uploading
2019-05-30T10:46:20.278159> CloudEdge: run under guest identity, all data is public
2019-05-30T10:46:20.278742> CloudEdge: check if entity exits
2019-05-30T10:46:20.279319> CloudEdge: will issue requests with
2019-05-30T10:46:20.279959> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:46:20.280578> CloudEdge: returned msg from server is 200
2019-05-30T10:46:20.281173> CloudEdge: entity exists
2019-05-30T10:46:20.281763> CloudEdge: check if measurement exits
2019-05-30T10:46:20.282362> CloudEdge: will issue requests with
2019-05-30T10:46:20.282937> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:46:20.283492> CloudEdge: returned msg from server is 200
2019-05-30T10:46:20.284048> CloudEdge: measurement exists
2019-05-30T10:46:20.284603> CloudEdge: will issue requests with
2019-05-30T10:46:20.285160> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:46:20.285722> data: {"value":95.26,"timestamp":"2019-05-30T10:46:15.151"}
2019-05-30T10:46:20.286280> CloudEdge: returned msg from server is 200
2019-05-30T10:46:20.286936> CloudEdge: upload success
2019-05-30T10:46:20.477078> --> cloud end
2019-05-30T10:46:20.477500> 
2019-05-30T10:47:17.259004> --- rxlora. dst=1 type=0x12 src=8 seq=170 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:47:17.259457> 2019-05-30T10:47:17.258473
2019-05-30T10:47:17.259841> rcv ctrl pkt info (^p): 1,18,8,170,14,6,-42
2019-05-30T10:47:17.260149> splitted in: [1, 18, 8, 170, 14, 6, -42]
2019-05-30T10:47:17.260430> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=170 len=14 SNR=6 RSSI=-42)
2019-05-30T10:47:17.260706> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:47:17.261024> splitted in: [125, 5, 12]
2019-05-30T10:47:17.261366> (BW=125 CR=5 SF=12)
2019-05-30T10:47:17.261674> rcv timestamp (^t): 2019-05-30T10:47:17.255
2019-05-30T10:47:17.261964> 
2019-05-30T10:47:17.262333> Got first framing byte
2019-05-30T10:47:17.262640> --> got LoRa data prefix
2019-05-30T10:47:17.262925> --> DATA with_appkey: read app key sequence
2019-05-30T10:47:17.263259> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:47:17.263622> app key disabled
2019-05-30T10:47:17.263975> valid app key: accept data
2019-05-30T10:47:17.264304> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:47:17.264699> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,170,10,6,-42" "125,5,12" "2019-05-30T10:47:17.255" "B827EB1B65FD"
2019-05-30T10:47:22.026967> CloudEdge: uploading
2019-05-30T10:47:22.027823> CloudEdge: run under guest identity, all data is public
2019-05-30T10:47:22.028660> CloudEdge: check if entity exits
2019-05-30T10:47:22.029336> CloudEdge: will issue requests with
2019-05-30T10:47:22.029987> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:47:22.030643> CloudEdge: returned msg from server is 200
2019-05-30T10:47:22.031246> CloudEdge: entity exists
2019-05-30T10:47:22.031827> CloudEdge: check if measurement exits
2019-05-30T10:47:22.032403> CloudEdge: will issue requests with
2019-05-30T10:47:22.032976> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:47:22.033550> CloudEdge: returned msg from server is 200
2019-05-30T10:47:22.034117> CloudEdge: measurement exists
2019-05-30T10:47:22.034696> CloudEdge: will issue requests with
2019-05-30T10:47:22.035282> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:47:22.035862> data: {"value":95.39,"timestamp":"2019-05-30T10:47:17.255"}
2019-05-30T10:47:22.036444> CloudEdge: returned msg from server is 200
2019-05-30T10:47:22.037289> CloudEdge: upload success
2019-05-30T10:47:22.220532> --> cloud end
2019-05-30T10:47:22.220916> 
2019-05-30T10:47:44.250319> 2019-05-30 10:47:44.246698
2019-05-30T10:47:44.251148> post status: gw ON
2019-05-30T10:47:44.251767> post status: executing periodic tasks
2019-05-30T10:47:45.427507> no timezone support, time will be expressed only in local time
2019-05-30T10:47:45.427959> post status: start running
2019-05-30T10:47:46.487266> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:47:46.487671> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:47:46.487993> get_gps.py: invalid serial port
2019-05-30T10:47:46.620919> post status: dynamic GPS is requested
2019-05-30T10:47:46.621348> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:47:46.621720> post status get GPS: no GPS coordinates
2019-05-30T10:47:46.622033> post status: show current GPS position
2019-05-30T10:47:46.622320> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:47:46.622608> post status: exiting
2019-05-30T10:48:19.365550> --- rxlora. dst=1 type=0x12 src=8 seq=171 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:48:19.366035> 2019-05-30T10:48:19.362589
2019-05-30T10:48:19.366409> rcv ctrl pkt info (^p): 1,18,8,171,14,6,-42
2019-05-30T10:48:19.367050> splitted in: [1, 18, 8, 171, 14, 6, -42]
2019-05-30T10:48:19.367525> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=171 len=14 SNR=6 RSSI=-42)
2019-05-30T10:48:19.368025> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:48:19.368429> splitted in: [125, 5, 12]
2019-05-30T10:48:19.368837> (BW=125 CR=5 SF=12)
2019-05-30T10:48:19.369227> rcv timestamp (^t): 2019-05-30T10:48:19.358
2019-05-30T10:48:19.369620> 
2019-05-30T10:48:19.369974> Got first framing byte
2019-05-30T10:48:19.370332> --> got LoRa data prefix
2019-05-30T10:48:19.370667> --> DATA with_appkey: read app key sequence
2019-05-30T10:48:19.371060> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:48:19.371852> app key disabled
2019-05-30T10:48:19.372287> valid app key: accept data
2019-05-30T10:48:19.372643> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:48:19.372939> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,171,10,6,-42" "125,5,12" "2019-05-30T10:48:19.358" "B827EB1B65FD"
2019-05-30T10:48:24.269331> CloudEdge: uploading
2019-05-30T10:48:24.271795> CloudEdge: run under guest identity, all data is public
2019-05-30T10:48:24.273888> CloudEdge: check if entity exits
2019-05-30T10:48:24.275778> CloudEdge: will issue requests with
2019-05-30T10:48:24.277885> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:48:24.278855> CloudEdge: returned msg from server is 200
2019-05-30T10:48:24.279659> CloudEdge: entity exists
2019-05-30T10:48:24.280329> CloudEdge: check if measurement exits
2019-05-30T10:48:24.280933> CloudEdge: will issue requests with
2019-05-30T10:48:24.281602> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:48:24.282190> CloudEdge: returned msg from server is 200
2019-05-30T10:48:24.282754> CloudEdge: measurement exists
2019-05-30T10:48:24.283318> CloudEdge: will issue requests with
2019-05-30T10:48:24.283887> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:48:24.284459> data: {"value":95.26,"timestamp":"2019-05-30T10:48:19.358"}
2019-05-30T10:48:24.285028> CloudEdge: returned msg from server is 200
2019-05-30T10:48:24.285590> CloudEdge: upload success
2019-05-30T10:48:24.470947> --> cloud end
2019-05-30T10:48:24.471398> 
2019-05-30T10:49:21.466402> --- rxlora. dst=1 type=0x12 src=8 seq=172 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:49:21.468128> 2019-05-30T10:49:21.465809
2019-05-30T10:49:21.472975> rcv ctrl pkt info (^p): 1,18,8,172,14,6,-42
2019-05-30T10:49:21.473380> splitted in: [1, 18, 8, 172, 14, 6, -42]
2019-05-30T10:49:21.474064> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=172 len=14 SNR=6 RSSI=-42)
2019-05-30T10:49:21.474679> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:49:21.475192> splitted in: [125, 5, 12]
2019-05-30T10:49:21.475510> (BW=125 CR=5 SF=12)
2019-05-30T10:49:21.476010> rcv timestamp (^t): 2019-05-30T10:49:21.462
2019-05-30T10:49:21.476303> 
2019-05-30T10:49:21.476962> Got first framing byte
2019-05-30T10:49:21.477519> --> got LoRa data prefix
2019-05-30T10:49:21.478011> --> DATA with_appkey: read app key sequence
2019-05-30T10:49:21.478346> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:49:21.478842> app key disabled
2019-05-30T10:49:21.479158> valid app key: accept data
2019-05-30T10:49:21.479663> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:49:21.479964> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,172,10,6,-42" "125,5,12" "2019-05-30T10:49:21.462" "B827EB1B65FD"
2019-05-30T10:49:26.080440> CloudEdge: uploading
2019-05-30T10:49:26.081000> CloudEdge: run under guest identity, all data is public
2019-05-30T10:49:26.081404> CloudEdge: check if entity exits
2019-05-30T10:49:26.081723> CloudEdge: will issue requests with
2019-05-30T10:49:26.082021> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:49:26.082328> CloudEdge: returned msg from server is 200
2019-05-30T10:49:26.082621> CloudEdge: entity exists
2019-05-30T10:49:26.082922> CloudEdge: check if measurement exits
2019-05-30T10:49:26.083214> CloudEdge: will issue requests with
2019-05-30T10:49:26.083504> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:49:26.083785> CloudEdge: returned msg from server is 200
2019-05-30T10:49:26.084064> CloudEdge: measurement exists
2019-05-30T10:49:26.084348> CloudEdge: will issue requests with
2019-05-30T10:49:26.084653> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:49:26.084938> data: {"value":95.33,"timestamp":"2019-05-30T10:49:21.462"}
2019-05-30T10:49:26.085223> CloudEdge: returned msg from server is 200
2019-05-30T10:49:26.085508> CloudEdge: upload success
2019-05-30T10:49:26.253817> --> cloud end
2019-05-30T10:49:26.254225> 
2019-05-30T10:49:26.254496> Low-level gw status ON
2019-05-30T10:50:23.569473> --- rxlora. dst=1 type=0x12 src=8 seq=173 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T10:50:23.570364> 2019-05-30T10:50:23.568828
2019-05-30T10:50:23.571176> rcv ctrl pkt info (^p): 1,18,8,173,14,6,-41
2019-05-30T10:50:23.572046> splitted in: [1, 18, 8, 173, 14, 6, -41]
2019-05-30T10:50:23.572881> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=173 len=14 SNR=6 RSSI=-41)
2019-05-30T10:50:23.573757> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:50:23.574705> splitted in: [125, 5, 12]
2019-05-30T10:50:23.575731> (BW=125 CR=5 SF=12)
2019-05-30T10:50:23.577219> rcv timestamp (^t): 2019-05-30T10:50:23.565
2019-05-30T10:50:23.578439> 
2019-05-30T10:50:23.579579> Got first framing byte
2019-05-30T10:50:23.580068> --> got LoRa data prefix
2019-05-30T10:50:23.581222> --> DATA with_appkey: read app key sequence
2019-05-30T10:50:23.581689> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:50:23.582361> app key disabled
2019-05-30T10:50:23.583112> valid app key: accept data
2019-05-30T10:50:23.583813> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:50:23.584457> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,173,10,6,-41" "125,5,12" "2019-05-30T10:50:23.565" "B827EB1B65FD"
2019-05-30T10:50:28.189413> CloudEdge: uploading
2019-05-30T10:50:28.190414> CloudEdge: run under guest identity, all data is public
2019-05-30T10:50:28.191354> CloudEdge: check if entity exits
2019-05-30T10:50:28.192258> CloudEdge: will issue requests with
2019-05-30T10:50:28.193170> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:50:28.194000> CloudEdge: returned msg from server is 200
2019-05-30T10:50:28.194744> CloudEdge: entity exists
2019-05-30T10:50:28.195505> CloudEdge: check if measurement exits
2019-05-30T10:50:28.196267> CloudEdge: will issue requests with
2019-05-30T10:50:28.197270> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:50:28.198096> CloudEdge: returned msg from server is 200
2019-05-30T10:50:28.198845> CloudEdge: measurement exists
2019-05-30T10:50:28.199589> CloudEdge: will issue requests with
2019-05-30T10:50:28.200346> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:50:28.201437> data: {"value":95.26,"timestamp":"2019-05-30T10:50:23.565"}
2019-05-30T10:50:28.202450> CloudEdge: returned msg from server is 200
2019-05-30T10:50:28.203424> CloudEdge: upload success
2019-05-30T10:50:28.417435> --> cloud end
2019-05-30T10:50:28.417835> 
2019-05-30T10:51:25.672235> --- rxlora. dst=1 type=0x12 src=8 seq=174 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T10:51:25.672682> 2019-05-30T10:51:25.671824
2019-05-30T10:51:25.672992> rcv ctrl pkt info (^p): 1,18,8,174,14,7,-42
2019-05-30T10:51:25.673316> splitted in: [1, 18, 8, 174, 14, 7, -42]
2019-05-30T10:51:25.673628> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=174 len=14 SNR=7 RSSI=-42)
2019-05-30T10:51:25.673909> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:51:25.674186> splitted in: [125, 5, 12]
2019-05-30T10:51:25.674490> (BW=125 CR=5 SF=12)
2019-05-30T10:51:25.674830> rcv timestamp (^t): 2019-05-30T10:51:25.668
2019-05-30T10:51:25.675120> 
2019-05-30T10:51:25.675460> Got first framing byte
2019-05-30T10:51:25.675755> --> got LoRa data prefix
2019-05-30T10:51:25.676041> --> DATA with_appkey: read app key sequence
2019-05-30T10:51:25.676320> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:51:25.676868> app key disabled
2019-05-30T10:51:25.677305> valid app key: accept data
2019-05-30T10:51:25.677691> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:51:25.678097> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,174,10,7,-42" "125,5,12" "2019-05-30T10:51:25.668" "B827EB1B65FD"
2019-05-30T10:51:30.449369> CloudEdge: uploading
2019-05-30T10:51:30.450203> CloudEdge: run under guest identity, all data is public
2019-05-30T10:51:30.450982> CloudEdge: check if entity exits
2019-05-30T10:51:30.451677> CloudEdge: will issue requests with
2019-05-30T10:51:30.452328> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:51:30.452972> CloudEdge: returned msg from server is 200
2019-05-30T10:51:30.453568> CloudEdge: entity exists
2019-05-30T10:51:30.454131> CloudEdge: check if measurement exits
2019-05-30T10:51:30.454691> CloudEdge: will issue requests with
2019-05-30T10:51:30.455265> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:51:30.455857> CloudEdge: returned msg from server is 200
2019-05-30T10:51:30.456436> CloudEdge: measurement exists
2019-05-30T10:51:30.457418> CloudEdge: will issue requests with
2019-05-30T10:51:30.458061> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:51:30.458656> data: {"value":95.26,"timestamp":"2019-05-30T10:51:25.668"}
2019-05-30T10:51:30.459244> CloudEdge: returned msg from server is 200
2019-05-30T10:51:30.459841> CloudEdge: upload success
2019-05-30T10:51:30.655558> --> cloud end
2019-05-30T10:51:30.656240> 
2019-05-30T10:52:27.774916> --- rxlora. dst=1 type=0x12 src=8 seq=175 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:52:27.775384> 2019-05-30T10:52:27.774508
2019-05-30T10:52:27.775704> rcv ctrl pkt info (^p): 1,18,8,175,14,7,-43
2019-05-30T10:52:27.776011> splitted in: [1, 18, 8, 175, 14, 7, -43]
2019-05-30T10:52:27.776289> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=175 len=14 SNR=7 RSSI=-43)
2019-05-30T10:52:27.776695> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:52:27.777047> splitted in: [125, 5, 12]
2019-05-30T10:52:27.777403> (BW=125 CR=5 SF=12)
2019-05-30T10:52:27.777729> rcv timestamp (^t): 2019-05-30T10:52:27.770
2019-05-30T10:52:27.778080> 
2019-05-30T10:52:27.778452> Got first framing byte
2019-05-30T10:52:27.778742> --> got LoRa data prefix
2019-05-30T10:52:27.779058> --> DATA with_appkey: read app key sequence
2019-05-30T10:52:27.779368> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:52:27.779648> app key disabled
2019-05-30T10:52:27.779973> valid app key: accept data
2019-05-30T10:52:27.780328> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:52:27.780690> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,175,10,7,-43" "125,5,12" "2019-05-30T10:52:27.770" "B827EB1B65FD"
2019-05-30T10:52:32.500809> CloudEdge: uploading
2019-05-30T10:52:32.501403> CloudEdge: run under guest identity, all data is public
2019-05-30T10:52:32.501784> CloudEdge: check if entity exits
2019-05-30T10:52:32.502109> CloudEdge: will issue requests with
2019-05-30T10:52:32.502409> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:52:32.502705> CloudEdge: returned msg from server is 200
2019-05-30T10:52:32.503004> CloudEdge: entity exists
2019-05-30T10:52:32.503306> CloudEdge: check if measurement exits
2019-05-30T10:52:32.503597> CloudEdge: will issue requests with
2019-05-30T10:52:32.503885> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:52:32.504168> CloudEdge: returned msg from server is 200
2019-05-30T10:52:32.504463> CloudEdge: measurement exists
2019-05-30T10:52:32.504756> CloudEdge: will issue requests with
2019-05-30T10:52:32.505066> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:52:32.505362> data: {"value":95.26,"timestamp":"2019-05-30T10:52:27.770"}
2019-05-30T10:52:32.505652> CloudEdge: returned msg from server is 200
2019-05-30T10:52:32.505933> CloudEdge: upload success
2019-05-30T10:52:32.695164> --> cloud end
2019-05-30T10:52:32.695567> 
2019-05-30T10:53:29.877731> --- rxlora. dst=1 type=0x12 src=8 seq=176 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:53:29.878279> 2019-05-30T10:53:29.877299
2019-05-30T10:53:29.878744> rcv ctrl pkt info (^p): 1,18,8,176,14,6,-45
2019-05-30T10:53:29.879182> splitted in: [1, 18, 8, 176, 14, 6, -45]
2019-05-30T10:53:29.879541> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=176 len=14 SNR=6 RSSI=-45)
2019-05-30T10:53:29.879893> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:53:29.880297> splitted in: [125, 5, 12]
2019-05-30T10:53:29.880707> (BW=125 CR=5 SF=12)
2019-05-30T10:53:29.881029> rcv timestamp (^t): 2019-05-30T10:53:29.873
2019-05-30T10:53:29.881411> 
2019-05-30T10:53:29.881830> Got first framing byte
2019-05-30T10:53:29.882229> --> got LoRa data prefix
2019-05-30T10:53:29.882608> --> DATA with_appkey: read app key sequence
2019-05-30T10:53:29.883044> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:53:29.883427> app key disabled
2019-05-30T10:53:29.883904> valid app key: accept data
2019-05-30T10:53:29.884416> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:53:29.884878> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,176,10,6,-45" "125,5,12" "2019-05-30T10:53:29.873" "B827EB1B65FD"
2019-05-30T10:53:34.763883> CloudEdge: uploading
2019-05-30T10:53:34.764838> CloudEdge: run under guest identity, all data is public
2019-05-30T10:53:34.765707> CloudEdge: check if entity exits
2019-05-30T10:53:34.766750> CloudEdge: will issue requests with
2019-05-30T10:53:34.767739> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:53:34.768578> CloudEdge: returned msg from server is 200
2019-05-30T10:53:34.769314> CloudEdge: entity exists
2019-05-30T10:53:34.770029> CloudEdge: check if measurement exits
2019-05-30T10:53:34.770766> CloudEdge: will issue requests with
2019-05-30T10:53:34.771493> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:53:34.772196> CloudEdge: returned msg from server is 200
2019-05-30T10:53:34.772887> CloudEdge: measurement exists
2019-05-30T10:53:34.773554> CloudEdge: will issue requests with
2019-05-30T10:53:34.774240> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:53:34.774940> data: {"value":95.39,"timestamp":"2019-05-30T10:53:29.873"}
2019-05-30T10:53:34.775627> CloudEdge: returned msg from server is 200
2019-05-30T10:53:34.776321> CloudEdge: upload success
2019-05-30T10:53:34.961113> --> cloud end
2019-05-30T10:53:34.961533> 
2019-05-30T10:54:31.983444> --- rxlora. dst=1 type=0x12 src=8 seq=177 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:54:31.983922> 2019-05-30T10:54:31.980423
2019-05-30T10:54:31.984255> rcv ctrl pkt info (^p): 1,18,8,177,14,6,-45
2019-05-30T10:54:31.984555> splitted in: [1, 18, 8, 177, 14, 6, -45]
2019-05-30T10:54:31.984848> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=177 len=14 SNR=6 RSSI=-45)
2019-05-30T10:54:31.985193> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:54:31.985535> splitted in: [125, 5, 12]
2019-05-30T10:54:31.985887> (BW=125 CR=5 SF=12)
2019-05-30T10:54:31.986205> rcv timestamp (^t): 2019-05-30T10:54:31.977
2019-05-30T10:54:31.986794> 
2019-05-30T10:54:31.987792> Got first framing byte
2019-05-30T10:54:31.988896> --> got LoRa data prefix
2019-05-30T10:54:31.990144> --> DATA with_appkey: read app key sequence
2019-05-30T10:54:31.991042> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:54:31.991667> app key disabled
2019-05-30T10:54:31.992110> valid app key: accept data
2019-05-30T10:54:31.992456> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:54:31.992756> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,177,10,6,-45" "125,5,12" "2019-05-30T10:54:31.977" "B827EB1B65FD"
2019-05-30T10:54:36.612595> CloudEdge: uploading
2019-05-30T10:54:36.613477> CloudEdge: run under guest identity, all data is public
2019-05-30T10:54:36.614237> CloudEdge: check if entity exits
2019-05-30T10:54:36.615015> CloudEdge: will issue requests with
2019-05-30T10:54:36.615702> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:54:36.616357> CloudEdge: returned msg from server is 200
2019-05-30T10:54:36.617114> CloudEdge: entity exists
2019-05-30T10:54:36.617741> CloudEdge: check if measurement exits
2019-05-30T10:54:36.618343> CloudEdge: will issue requests with
2019-05-30T10:54:36.618941> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:54:36.619534> CloudEdge: returned msg from server is 200
2019-05-30T10:54:36.620132> CloudEdge: measurement exists
2019-05-30T10:54:36.620716> CloudEdge: will issue requests with
2019-05-30T10:54:36.621315> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:54:36.621906> data: {"value":95.39,"timestamp":"2019-05-30T10:54:31.977"}
2019-05-30T10:54:36.622554> CloudEdge: returned msg from server is 200
2019-05-30T10:54:36.623301> CloudEdge: upload success
2019-05-30T10:54:36.792513> --> cloud end
2019-05-30T10:54:36.792893> 
2019-05-30T10:55:34.087476> --- rxlora. dst=1 type=0x12 src=8 seq=178 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:55:34.088111> 2019-05-30T10:55:34.084400
2019-05-30T10:55:34.088512> rcv ctrl pkt info (^p): 1,18,8,178,14,7,-43
2019-05-30T10:55:34.088851> splitted in: [1, 18, 8, 178, 14, 7, -43]
2019-05-30T10:55:34.089162> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=178 len=14 SNR=7 RSSI=-43)
2019-05-30T10:55:34.089516> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:55:34.089856> splitted in: [125, 5, 12]
2019-05-30T10:55:34.090200> (BW=125 CR=5 SF=12)
2019-05-30T10:55:34.090528> rcv timestamp (^t): 2019-05-30T10:55:34.080
2019-05-30T10:55:34.090921> 
2019-05-30T10:55:34.091291> Got first framing byte
2019-05-30T10:55:34.091640> --> got LoRa data prefix
2019-05-30T10:55:34.091969> --> DATA with_appkey: read app key sequence
2019-05-30T10:55:34.092304> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:55:34.092617> app key disabled
2019-05-30T10:55:34.092987> valid app key: accept data
2019-05-30T10:55:34.093447> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:55:34.093763> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,178,10,7,-43" "125,5,12" "2019-05-30T10:55:34.080" "B827EB1B65FD"
2019-05-30T10:55:38.767082> CloudEdge: uploading
2019-05-30T10:55:38.767667> CloudEdge: run under guest identity, all data is public
2019-05-30T10:55:38.768062> CloudEdge: check if entity exits
2019-05-30T10:55:38.768395> CloudEdge: will issue requests with
2019-05-30T10:55:38.768953> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:55:38.769352> CloudEdge: returned msg from server is 200
2019-05-30T10:55:38.769694> CloudEdge: entity exists
2019-05-30T10:55:38.769996> CloudEdge: check if measurement exits
2019-05-30T10:55:38.770277> CloudEdge: will issue requests with
2019-05-30T10:55:38.770565> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:55:38.770842> CloudEdge: returned msg from server is 200
2019-05-30T10:55:38.771122> CloudEdge: measurement exists
2019-05-30T10:55:38.771408> CloudEdge: will issue requests with
2019-05-30T10:55:38.771699> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:55:38.771980> data: {"value":95.33,"timestamp":"2019-05-30T10:55:34.080"}
2019-05-30T10:55:38.772258> CloudEdge: returned msg from server is 200
2019-05-30T10:55:38.772538> CloudEdge: upload success
2019-05-30T10:55:38.937753> --> cloud end
2019-05-30T10:55:38.938149> 
2019-05-30T10:56:36.190622> --- rxlora. dst=1 type=0x12 src=8 seq=179 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T10:56:36.191112> 2019-05-30T10:56:36.187677
2019-05-30T10:56:36.191463> rcv ctrl pkt info (^p): 1,18,8,179,14,7,-40
2019-05-30T10:56:36.199571> splitted in: [1, 18, 8, 179, 14, 7, -40]
2019-05-30T10:56:36.200176> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=179 len=14 SNR=7 RSSI=-40)
2019-05-30T10:56:36.200616> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:56:36.201041> splitted in: [125, 5, 12]
2019-05-30T10:56:36.201450> (BW=125 CR=5 SF=12)
2019-05-30T10:56:36.201854> rcv timestamp (^t): 2019-05-30T10:56:36.184
2019-05-30T10:56:36.202292> 
2019-05-30T10:56:36.202696> Got first framing byte
2019-05-30T10:56:36.203084> --> got LoRa data prefix
2019-05-30T10:56:36.203472> --> DATA with_appkey: read app key sequence
2019-05-30T10:56:36.203981> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:56:36.204508> app key disabled
2019-05-30T10:56:36.205067> valid app key: accept data
2019-05-30T10:56:36.205584> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:56:36.206209> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,179,10,7,-40" "125,5,12" "2019-05-30T10:56:36.184" "B827EB1B65FD"
2019-05-30T10:56:40.825252> CloudEdge: uploading
2019-05-30T10:56:40.826109> CloudEdge: run under guest identity, all data is public
2019-05-30T10:56:40.827245> CloudEdge: check if entity exits
2019-05-30T10:56:40.828006> CloudEdge: will issue requests with
2019-05-30T10:56:40.828689> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:56:40.829324> CloudEdge: returned msg from server is 200
2019-05-30T10:56:40.829906> CloudEdge: entity exists
2019-05-30T10:56:40.830489> CloudEdge: check if measurement exits
2019-05-30T10:56:40.831069> CloudEdge: will issue requests with
2019-05-30T10:56:40.831639> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:56:40.832219> CloudEdge: returned msg from server is 200
2019-05-30T10:56:40.832807> CloudEdge: measurement exists
2019-05-30T10:56:40.833377> CloudEdge: will issue requests with
2019-05-30T10:56:40.833978> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:56:40.834592> data: {"value":95.20,"timestamp":"2019-05-30T10:56:36.184"}
2019-05-30T10:56:40.835208> CloudEdge: returned msg from server is 200
2019-05-30T10:56:40.835810> CloudEdge: upload success
2019-05-30T10:56:41.010046> --> cloud end
2019-05-30T10:56:41.010450> 
2019-05-30T10:57:38.294568> --- rxlora. dst=1 type=0x12 src=8 seq=180 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T10:57:38.294990> 2019-05-30T10:57:38.291617
2019-05-30T10:57:38.295273> rcv ctrl pkt info (^p): 1,18,8,180,14,6,-45
2019-05-30T10:57:38.295544> splitted in: [1, 18, 8, 180, 14, 6, -45]
2019-05-30T10:57:38.295811> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=180 len=14 SNR=6 RSSI=-45)
2019-05-30T10:57:38.296079> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:57:38.296350> splitted in: [125, 5, 12]
2019-05-30T10:57:38.296755> (BW=125 CR=5 SF=12)
2019-05-30T10:57:38.297056> rcv timestamp (^t): 2019-05-30T10:57:38.288
2019-05-30T10:57:38.297330> 
2019-05-30T10:57:38.297673> Got first framing byte
2019-05-30T10:57:38.297992> --> got LoRa data prefix
2019-05-30T10:57:38.298286> --> DATA with_appkey: read app key sequence
2019-05-30T10:57:38.298574> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:57:38.298865> app key disabled
2019-05-30T10:57:38.299145> valid app key: accept data
2019-05-30T10:57:38.299450> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:57:38.299799> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,180,10,6,-45" "125,5,12" "2019-05-30T10:57:38.288" "B827EB1B65FD"
2019-05-30T10:57:42.774457> CloudEdge: uploading
2019-05-30T10:57:42.774954> CloudEdge: run under guest identity, all data is public
2019-05-30T10:57:42.782432> CloudEdge: check if entity exits
2019-05-30T10:57:42.782834> CloudEdge: will issue requests with
2019-05-30T10:57:42.783163> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:57:42.783463> CloudEdge: returned msg from server is 200
2019-05-30T10:57:42.783762> CloudEdge: entity exists
2019-05-30T10:57:42.784062> CloudEdge: check if measurement exits
2019-05-30T10:57:42.784357> CloudEdge: will issue requests with
2019-05-30T10:57:42.784651> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:57:42.785054> CloudEdge: returned msg from server is 200
2019-05-30T10:57:42.785369> CloudEdge: measurement exists
2019-05-30T10:57:42.785660> CloudEdge: will issue requests with
2019-05-30T10:57:42.785948> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:57:42.786236> data: {"value":95.33,"timestamp":"2019-05-30T10:57:38.288"}
2019-05-30T10:57:42.786612> CloudEdge: returned msg from server is 200
2019-05-30T10:57:42.786979> CloudEdge: upload success
2019-05-30T10:57:42.980494> --> cloud end
2019-05-30T10:57:42.980873> 
2019-05-30T10:57:46.763469> 2019-05-30 10:57:46.759820
2019-05-30T10:57:46.764234> post status: gw ON
2019-05-30T10:57:46.764862> post status: executing periodic tasks
2019-05-30T10:57:47.873354> no timezone support, time will be expressed only in local time
2019-05-30T10:57:47.873859> post status: start running
2019-05-30T10:57:48.921701> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T10:57:48.922237> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T10:57:48.922635> get_gps.py: invalid serial port
2019-05-30T10:57:49.062401> post status: dynamic GPS is requested
2019-05-30T10:57:49.062797> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T10:57:49.063108> post status get GPS: no GPS coordinates
2019-05-30T10:57:49.063391> post status: show current GPS position
2019-05-30T10:57:49.063678> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T10:57:49.063974> post status: exiting
2019-05-30T10:58:40.397400> --- rxlora. dst=1 type=0x12 src=8 seq=181 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T10:58:40.397977> 2019-05-30T10:58:40.394555
2019-05-30T10:58:40.398445> rcv ctrl pkt info (^p): 1,18,8,181,14,6,-43
2019-05-30T10:58:40.398836> splitted in: [1, 18, 8, 181, 14, 6, -43]
2019-05-30T10:58:40.399220> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=181 len=14 SNR=6 RSSI=-43)
2019-05-30T10:58:40.399618> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:58:40.400078> splitted in: [125, 5, 12]
2019-05-30T10:58:40.400500> (BW=125 CR=5 SF=12)
2019-05-30T10:58:40.400943> rcv timestamp (^t): 2019-05-30T10:58:40.391
2019-05-30T10:58:40.401416> 
2019-05-30T10:58:40.401895> Got first framing byte
2019-05-30T10:58:40.402302> --> got LoRa data prefix
2019-05-30T10:58:40.402764> --> DATA with_appkey: read app key sequence
2019-05-30T10:58:40.403181> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:58:40.403808> app key disabled
2019-05-30T10:58:40.404216> valid app key: accept data
2019-05-30T10:58:40.404670> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:58:40.405056> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,181,10,6,-43" "125,5,12" "2019-05-30T10:58:40.391" "B827EB1B65FD"
2019-05-30T10:58:45.139156> CloudEdge: uploading
2019-05-30T10:58:45.139873> CloudEdge: run under guest identity, all data is public
2019-05-30T10:58:45.140471> CloudEdge: check if entity exits
2019-05-30T10:58:45.141134> CloudEdge: will issue requests with
2019-05-30T10:58:45.141753> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:58:45.142356> CloudEdge: returned msg from server is 200
2019-05-30T10:58:45.142976> CloudEdge: entity exists
2019-05-30T10:58:45.143664> CloudEdge: check if measurement exits
2019-05-30T10:58:45.144276> CloudEdge: will issue requests with
2019-05-30T10:58:45.144858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:58:45.145422> CloudEdge: returned msg from server is 200
2019-05-30T10:58:45.145994> CloudEdge: measurement exists
2019-05-30T10:58:45.146640> CloudEdge: will issue requests with
2019-05-30T10:58:45.147269> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:58:45.147845> data: {"value":95.26,"timestamp":"2019-05-30T10:58:40.391"}
2019-05-30T10:58:45.148410> CloudEdge: returned msg from server is 200
2019-05-30T10:58:45.148971> CloudEdge: upload success
2019-05-30T10:58:45.327887> --> cloud end
2019-05-30T10:58:45.328323> 
2019-05-30T10:59:42.497911> --- rxlora. dst=1 type=0x12 src=8 seq=182 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T10:59:42.498371> 2019-05-30T10:59:42.496000
2019-05-30T10:59:42.498840> rcv ctrl pkt info (^p): 1,18,8,182,14,6,-46
2019-05-30T10:59:42.499190> splitted in: [1, 18, 8, 182, 14, 6, -46]
2019-05-30T10:59:42.499491> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=182 len=14 SNR=6 RSSI=-46)
2019-05-30T10:59:42.499797> rcv ctrl radio info (^r): 125,5,12
2019-05-30T10:59:42.500100> splitted in: [125, 5, 12]
2019-05-30T10:59:42.500384> (BW=125 CR=5 SF=12)
2019-05-30T10:59:42.500717> rcv timestamp (^t): 2019-05-30T10:59:42.492
2019-05-30T10:59:42.501073> 
2019-05-30T10:59:42.501507> Got first framing byte
2019-05-30T10:59:42.501861> --> got LoRa data prefix
2019-05-30T10:59:42.502260> --> DATA with_appkey: read app key sequence
2019-05-30T10:59:42.502631> app key is 0x05 0x06 0x07 0x08
2019-05-30T10:59:42.502987> app key disabled
2019-05-30T10:59:42.503319> valid app key: accept data
2019-05-30T10:59:42.503669> uploading with python /app/data_acq/edgeCall.py
2019-05-30T10:59:42.503998> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,182,10,6,-46" "125,5,12" "2019-05-30T10:59:42.492" "B827EB1B65FD"
2019-05-30T10:59:47.298572> CloudEdge: uploading
2019-05-30T10:59:47.299872> CloudEdge: run under guest identity, all data is public
2019-05-30T10:59:47.300931> CloudEdge: check if entity exits
2019-05-30T10:59:47.302125> CloudEdge: will issue requests with
2019-05-30T10:59:47.303461> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T10:59:47.304566> CloudEdge: returned msg from server is 200
2019-05-30T10:59:47.305632> CloudEdge: entity exists
2019-05-30T10:59:47.307534> CloudEdge: check if measurement exits
2019-05-30T10:59:47.308613> CloudEdge: will issue requests with
2019-05-30T10:59:47.309683> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T10:59:47.310641> CloudEdge: returned msg from server is 200
2019-05-30T10:59:47.311520> CloudEdge: measurement exists
2019-05-30T10:59:47.312387> CloudEdge: will issue requests with
2019-05-30T10:59:47.313232> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T10:59:47.314555> data: {"value":95.33,"timestamp":"2019-05-30T10:59:42.492"}
2019-05-30T10:59:47.315436> CloudEdge: returned msg from server is 200
2019-05-30T10:59:47.316209> CloudEdge: upload success
2019-05-30T10:59:47.479336> --> cloud end
2019-05-30T10:59:47.479753> 
2019-05-30T10:59:47.480046> Low-level gw status ON
2019-05-30T11:00:44.597713> --- rxlora. dst=1 type=0x12 src=8 seq=183 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:00:44.598248> 2019-05-30T11:00:44.596913
2019-05-30T11:00:44.598598> rcv ctrl pkt info (^p): 1,18,8,183,14,6,-43
2019-05-30T11:00:44.598896> splitted in: [1, 18, 8, 183, 14, 6, -43]
2019-05-30T11:00:44.599181> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=183 len=14 SNR=6 RSSI=-43)
2019-05-30T11:00:44.599487> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:00:44.599902> splitted in: [125, 5, 12]
2019-05-30T11:00:44.600272> (BW=125 CR=5 SF=12)
2019-05-30T11:00:44.600577> rcv timestamp (^t): 2019-05-30T11:00:44.593
2019-05-30T11:00:44.600874> 
2019-05-30T11:00:44.601168> Got first framing byte
2019-05-30T11:00:44.601460> --> got LoRa data prefix
2019-05-30T11:00:44.602107> --> DATA with_appkey: read app key sequence
2019-05-30T11:00:44.602906> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:00:44.603709> app key disabled
2019-05-30T11:00:44.604361> valid app key: accept data
2019-05-30T11:00:44.605302> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:00:44.605809> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,183,10,6,-43" "125,5,12" "2019-05-30T11:00:44.593" "B827EB1B65FD"
2019-05-30T11:00:49.351289> CloudEdge: uploading
2019-05-30T11:00:49.352021> CloudEdge: run under guest identity, all data is public
2019-05-30T11:00:49.352623> CloudEdge: check if entity exits
2019-05-30T11:00:49.353283> CloudEdge: will issue requests with
2019-05-30T11:00:49.353924> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:00:49.354533> CloudEdge: returned msg from server is 200
2019-05-30T11:00:49.355143> CloudEdge: entity exists
2019-05-30T11:00:49.355751> CloudEdge: check if measurement exits
2019-05-30T11:00:49.356342> CloudEdge: will issue requests with
2019-05-30T11:00:49.357025> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:00:49.357634> CloudEdge: returned msg from server is 200
2019-05-30T11:00:49.358213> CloudEdge: measurement exists
2019-05-30T11:00:49.358878> CloudEdge: will issue requests with
2019-05-30T11:00:49.359446> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:00:49.362412> data: {"value":95.39,"timestamp":"2019-05-30T11:00:44.593"}
2019-05-30T11:00:49.364358> CloudEdge: returned msg from server is 200
2019-05-30T11:00:49.365996> CloudEdge: upload success
2019-05-30T11:00:49.558645> --> cloud end
2019-05-30T11:00:49.559014> 
2019-05-30T11:01:46.701431> --- rxlora. dst=1 type=0x12 src=8 seq=184 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:01:46.701975> 2019-05-30T11:01:46.698366
2019-05-30T11:01:46.702420> rcv ctrl pkt info (^p): 1,18,8,184,14,6,-45
2019-05-30T11:01:46.702770> splitted in: [1, 18, 8, 184, 14, 6, -45]
2019-05-30T11:01:46.703182> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=184 len=14 SNR=6 RSSI=-45)
2019-05-30T11:01:46.703567> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:01:46.704015> splitted in: [125, 5, 12]
2019-05-30T11:01:46.704419> (BW=125 CR=5 SF=12)
2019-05-30T11:01:46.704973> rcv timestamp (^t): 2019-05-30T11:01:46.694
2019-05-30T11:01:46.705447> 
2019-05-30T11:01:46.705914> Got first framing byte
2019-05-30T11:01:46.706331> --> got LoRa data prefix
2019-05-30T11:01:46.706920> --> DATA with_appkey: read app key sequence
2019-05-30T11:01:46.707607> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:01:46.708011> app key disabled
2019-05-30T11:01:46.708458> valid app key: accept data
2019-05-30T11:01:46.708821> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:01:46.709170> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,184,10,6,-45" "125,5,12" "2019-05-30T11:01:46.694" "B827EB1B65FD"
2019-05-30T11:01:51.405721> CloudEdge: uploading
2019-05-30T11:01:51.406745> CloudEdge: run under guest identity, all data is public
2019-05-30T11:01:51.407587> CloudEdge: check if entity exits
2019-05-30T11:01:51.408290> CloudEdge: will issue requests with
2019-05-30T11:01:51.408942> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:01:51.409581> CloudEdge: returned msg from server is 200
2019-05-30T11:01:51.410169> CloudEdge: entity exists
2019-05-30T11:01:51.410737> CloudEdge: check if measurement exits
2019-05-30T11:01:51.411303> CloudEdge: will issue requests with
2019-05-30T11:01:51.411876> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:01:51.412447> CloudEdge: returned msg from server is 200
2019-05-30T11:01:51.413033> CloudEdge: measurement exists
2019-05-30T11:01:51.413602> CloudEdge: will issue requests with
2019-05-30T11:01:51.414182> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:01:51.414747> data: {"value":95.33,"timestamp":"2019-05-30T11:01:46.694"}
2019-05-30T11:01:51.415322> CloudEdge: returned msg from server is 200
2019-05-30T11:01:51.415905> CloudEdge: upload success
2019-05-30T11:01:51.594735> --> cloud end
2019-05-30T11:01:51.595097> 
2019-05-30T11:02:48.801891> --- rxlora. dst=1 type=0x12 src=8 seq=185 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:02:48.802442> 2019-05-30T11:02:48.798852
2019-05-30T11:02:48.802860> rcv ctrl pkt info (^p): 1,18,8,185,14,6,-45
2019-05-30T11:02:48.803227> splitted in: [1, 18, 8, 185, 14, 6, -45]
2019-05-30T11:02:48.803582> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=185 len=14 SNR=6 RSSI=-45)
2019-05-30T11:02:48.804046> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:02:48.804444> splitted in: [125, 5, 12]
2019-05-30T11:02:48.804894> (BW=125 CR=5 SF=12)
2019-05-30T11:02:48.805368> rcv timestamp (^t): 2019-05-30T11:02:48.795
2019-05-30T11:02:48.805833> 
2019-05-30T11:02:48.806235> Got first framing byte
2019-05-30T11:02:48.806728> --> got LoRa data prefix
2019-05-30T11:02:48.807189> --> DATA with_appkey: read app key sequence
2019-05-30T11:02:48.807685> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:02:48.808241> app key disabled
2019-05-30T11:02:48.808698> valid app key: accept data
2019-05-30T11:02:48.809172> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:02:48.809562> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,185,10,6,-45" "125,5,12" "2019-05-30T11:02:48.795" "B827EB1B65FD"
2019-05-30T11:02:53.151068> CloudEdge: uploading
2019-05-30T11:02:53.151832> CloudEdge: run under guest identity, all data is public
2019-05-30T11:02:53.152440> CloudEdge: check if entity exits
2019-05-30T11:02:53.153004> CloudEdge: will issue requests with
2019-05-30T11:02:53.153605> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:02:53.154164> CloudEdge: returned msg from server is 200
2019-05-30T11:02:53.154698> CloudEdge: entity exists
2019-05-30T11:02:53.155162> CloudEdge: check if measurement exits
2019-05-30T11:02:53.155623> CloudEdge: will issue requests with
2019-05-30T11:02:53.155993> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:02:53.156374> CloudEdge: returned msg from server is 200
2019-05-30T11:02:53.156937> CloudEdge: measurement exists
2019-05-30T11:02:53.157407> CloudEdge: will issue requests with
2019-05-30T11:02:53.157901> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:02:53.158509> data: {"value":95.46,"timestamp":"2019-05-30T11:02:48.795"}
2019-05-30T11:02:53.159139> CloudEdge: returned msg from server is 200
2019-05-30T11:02:53.159573> CloudEdge: upload success
2019-05-30T11:02:53.328588> --> cloud end
2019-05-30T11:02:53.328960> 
2019-05-30T11:03:50.900397> --- rxlora. dst=1 type=0x12 src=8 seq=186 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:03:50.900943> 2019-05-30T11:03:50.897325
2019-05-30T11:03:50.901398> rcv ctrl pkt info (^p): 1,18,8,186,14,6,-43
2019-05-30T11:03:50.901759> splitted in: [1, 18, 8, 186, 14, 6, -43]
2019-05-30T11:03:50.902136> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=186 len=14 SNR=6 RSSI=-43)
2019-05-30T11:03:50.902521> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:03:50.902958> splitted in: [125, 5, 12]
2019-05-30T11:03:50.903374> (BW=125 CR=5 SF=12)
2019-05-30T11:03:50.903818> rcv timestamp (^t): 2019-05-30T11:03:50.893
2019-05-30T11:03:50.904297> 
2019-05-30T11:03:50.904677> Got first framing byte
2019-05-30T11:03:50.905057> --> got LoRa data prefix
2019-05-30T11:03:50.905420> --> DATA with_appkey: read app key sequence
2019-05-30T11:03:50.905782> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:03:50.906109> app key disabled
2019-05-30T11:03:50.906619> valid app key: accept data
2019-05-30T11:03:50.907135> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:03:50.907502> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,186,10,6,-43" "125,5,12" "2019-05-30T11:03:50.893" "B827EB1B65FD"
2019-05-30T11:03:57.050901> --> cloud end
2019-05-30T11:03:57.051284> 
2019-05-30T11:04:52.997373> --- rxlora. dst=1 type=0x12 src=8 seq=187 len=14 SNR=5 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:04:52.997922> 2019-05-30T11:04:52.995055
2019-05-30T11:04:52.998267> rcv ctrl pkt info (^p): 1,18,8,187,14,5,-45
2019-05-30T11:04:52.998563> splitted in: [1, 18, 8, 187, 14, 5, -45]
2019-05-30T11:04:52.998875> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=187 len=14 SNR=5 RSSI=-45)
2019-05-30T11:04:52.999164> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:04:52.999447> splitted in: [125, 5, 12]
2019-05-30T11:04:52.999781> (BW=125 CR=5 SF=12)
2019-05-30T11:04:53.000127> rcv timestamp (^t): 2019-05-30T11:04:52.991
2019-05-30T11:04:53.000479> 
2019-05-30T11:04:53.000800> Got first framing byte
2019-05-30T11:04:53.001217> --> got LoRa data prefix
2019-05-30T11:04:53.001575> --> DATA with_appkey: read app key sequence
2019-05-30T11:04:53.001926> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:04:53.002273> app key disabled
2019-05-30T11:04:53.002663> valid app key: accept data
2019-05-30T11:04:53.002988> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:04:53.003414> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,187,10,5,-45" "125,5,12" "2019-05-30T11:04:52.991" "B827EB1B65FD"
2019-05-30T11:04:58.903422> CloudEdge: uploading
2019-05-30T11:04:58.904211> CloudEdge: run under guest identity, all data is public
2019-05-30T11:04:58.904955> CloudEdge: check if entity exits
2019-05-30T11:04:58.905618> CloudEdge: will issue requests with
2019-05-30T11:04:58.906248> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:04:58.907440> CloudEdge: returned msg from server is 200
2019-05-30T11:04:58.908266> CloudEdge: entity exists
2019-05-30T11:04:58.908925> CloudEdge: check if measurement exits
2019-05-30T11:04:58.909517> CloudEdge: will issue requests with
2019-05-30T11:04:58.910092> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:04:58.910669> CloudEdge: returned msg from server is 200
2019-05-30T11:04:58.911232> CloudEdge: measurement exists
2019-05-30T11:04:58.911795> CloudEdge: will issue requests with
2019-05-30T11:04:58.912359> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:04:58.912925> data: {"value":95.71,"timestamp":"2019-05-30T11:04:52.991"}
2019-05-30T11:04:58.913482> CloudEdge: returned msg from server is 200
2019-05-30T11:04:58.914045> CloudEdge: upload success
2019-05-30T11:04:59.084900> --> cloud end
2019-05-30T11:04:59.085263> 
2019-05-30T11:05:55.095227> --- rxlora. dst=1 type=0x12 src=8 seq=188 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:05:55.095823> 2019-05-30T11:05:55.092212
2019-05-30T11:05:55.096341> rcv ctrl pkt info (^p): 1,18,8,188,14,6,-43
2019-05-30T11:05:55.097059> splitted in: [1, 18, 8, 188, 14, 6, -43]
2019-05-30T11:05:55.097529> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=188 len=14 SNR=6 RSSI=-43)
2019-05-30T11:05:55.098056> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:05:55.098498> splitted in: [125, 5, 12]
2019-05-30T11:05:55.098945> (BW=125 CR=5 SF=12)
2019-05-30T11:05:55.099373> rcv timestamp (^t): 2019-05-30T11:05:55.088
2019-05-30T11:05:55.099773> 
2019-05-30T11:05:55.100160> Got first framing byte
2019-05-30T11:05:55.100527> --> got LoRa data prefix
2019-05-30T11:05:55.100859> --> DATA with_appkey: read app key sequence
2019-05-30T11:05:55.101216> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:05:55.101534> app key disabled
2019-05-30T11:05:55.102000> valid app key: accept data
2019-05-30T11:05:55.102353> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:05:55.102661> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,188,10,6,-43" "125,5,12" "2019-05-30T11:05:55.088" "B827EB1B65FD"
2019-05-30T11:06:01.365863> CloudEdge: uploading
2019-05-30T11:06:01.366992> CloudEdge: run under guest identity, all data is public
2019-05-30T11:06:01.367776> CloudEdge: check if entity exits
2019-05-30T11:06:01.368471> CloudEdge: will issue requests with
2019-05-30T11:06:01.369181> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:06:01.369905> CloudEdge: returned msg from server is 200
2019-05-30T11:06:01.370621> CloudEdge: entity exists
2019-05-30T11:06:01.371335> CloudEdge: check if measurement exits
2019-05-30T11:06:01.372063> CloudEdge: will issue requests with
2019-05-30T11:06:01.372797> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:06:01.373525> CloudEdge: returned msg from server is 200
2019-05-30T11:06:01.374242> CloudEdge: measurement exists
2019-05-30T11:06:01.374960> CloudEdge: will issue requests with
2019-05-30T11:06:01.375698> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:06:01.376442> data: {"value":95.71,"timestamp":"2019-05-30T11:05:55.088"}
2019-05-30T11:06:01.379428> CloudEdge: returned msg from server is 200
2019-05-30T11:06:01.380276> CloudEdge: upload success
2019-05-30T11:06:01.550073> --> cloud end
2019-05-30T11:06:01.550438> 
2019-05-30T11:06:57.191642> --- rxlora. dst=1 type=0x12 src=8 seq=189 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:06:57.192116> 2019-05-30T11:06:57.188626
2019-05-30T11:06:57.192464> rcv ctrl pkt info (^p): 1,18,8,189,14,6,-45
2019-05-30T11:06:57.192766> splitted in: [1, 18, 8, 189, 14, 6, -45]
2019-05-30T11:06:57.193051> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=189 len=14 SNR=6 RSSI=-45)
2019-05-30T11:06:57.193390> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:06:57.193729> splitted in: [125, 5, 12]
2019-05-30T11:06:57.194079> (BW=125 CR=5 SF=12)
2019-05-30T11:06:57.194395> rcv timestamp (^t): 2019-05-30T11:06:57.185
2019-05-30T11:06:57.194814> 
2019-05-30T11:06:57.195179> Got first framing byte
2019-05-30T11:06:57.195525> --> got LoRa data prefix
2019-05-30T11:06:57.195858> --> DATA with_appkey: read app key sequence
2019-05-30T11:06:57.196197> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:06:57.196514> app key disabled
2019-05-30T11:06:57.197161> valid app key: accept data
2019-05-30T11:06:57.197630> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:06:57.197941> python /app/data_acq/edgeCall.py "TC/95.65" "1,18,8,189,10,6,-45" "125,5,12" "2019-05-30T11:06:57.185" "B827EB1B65FD"
2019-05-30T11:07:03.724405> CloudEdge: uploading
2019-05-30T11:07:03.724799> CloudEdge: run under guest identity, all data is public
2019-05-30T11:07:03.725076> CloudEdge: check if entity exits
2019-05-30T11:07:03.725345> CloudEdge: will issue requests with
2019-05-30T11:07:03.725620> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:07:03.725889> CloudEdge: returned msg from server is 200
2019-05-30T11:07:03.726289> CloudEdge: entity exists
2019-05-30T11:07:03.727312> CloudEdge: check if measurement exits
2019-05-30T11:07:03.728085> CloudEdge: will issue requests with
2019-05-30T11:07:03.728729> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:07:03.729395> CloudEdge: returned msg from server is 200
2019-05-30T11:07:03.730043> CloudEdge: measurement exists
2019-05-30T11:07:03.730705> CloudEdge: will issue requests with
2019-05-30T11:07:03.731275> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:07:03.731844> data: {"value":95.65,"timestamp":"2019-05-30T11:06:57.185"}
2019-05-30T11:07:03.732314> CloudEdge: returned msg from server is 200
2019-05-30T11:07:03.732929> CloudEdge: upload success
2019-05-30T11:07:03.925744> --> cloud end
2019-05-30T11:07:03.926248> 
2019-05-30T11:07:49.228622> 2019-05-30 11:07:49.226850
2019-05-30T11:07:49.229411> post status: gw ON
2019-05-30T11:07:49.230145> post status: executing periodic tasks
2019-05-30T11:07:50.399847> no timezone support, time will be expressed only in local time
2019-05-30T11:07:50.400210> post status: start running
2019-05-30T11:07:51.535787> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:07:51.536351> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:07:51.536766> get_gps.py: invalid serial port
2019-05-30T11:07:51.675953> post status: dynamic GPS is requested
2019-05-30T11:07:51.676459> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:07:51.676992> post status get GPS: no GPS coordinates
2019-05-30T11:07:51.677332> post status: show current GPS position
2019-05-30T11:07:51.677633> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:07:51.677924> post status: exiting
2019-05-30T11:07:59.287235> --- rxlora. dst=1 type=0x12 src=8 seq=190 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:07:59.287862> 2019-05-30T11:07:59.285263
2019-05-30T11:07:59.288408> rcv ctrl pkt info (^p): 1,18,8,190,14,6,-43
2019-05-30T11:07:59.288811> splitted in: [1, 18, 8, 190, 14, 6, -43]
2019-05-30T11:07:59.289237> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=190 len=14 SNR=6 RSSI=-43)
2019-05-30T11:07:59.289597> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:07:59.289979> splitted in: [125, 5, 12]
2019-05-30T11:07:59.290444> (BW=125 CR=5 SF=12)
2019-05-30T11:07:59.290914> rcv timestamp (^t): 2019-05-30T11:07:59.281
2019-05-30T11:07:59.291428> 
2019-05-30T11:07:59.291958> Got first framing byte
2019-05-30T11:07:59.292356> --> got LoRa data prefix
2019-05-30T11:07:59.292720> --> DATA with_appkey: read app key sequence
2019-05-30T11:07:59.293072> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:07:59.293413> app key disabled
2019-05-30T11:07:59.293763> valid app key: accept data
2019-05-30T11:07:59.294224> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:07:59.294559> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,190,10,6,-43" "125,5,12" "2019-05-30T11:07:59.281" "B827EB1B65FD"
2019-05-30T11:08:04.144334> CloudEdge: uploading
2019-05-30T11:08:04.145104> CloudEdge: run under guest identity, all data is public
2019-05-30T11:08:04.145774> CloudEdge: check if entity exits
2019-05-30T11:08:04.146740> CloudEdge: will issue requests with
2019-05-30T11:08:04.147846> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:08:04.148759> CloudEdge: returned msg from server is 200
2019-05-30T11:08:04.149652> CloudEdge: entity exists
2019-05-30T11:08:04.150451> CloudEdge: check if measurement exits
2019-05-30T11:08:04.151190> CloudEdge: will issue requests with
2019-05-30T11:08:04.151946> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:08:04.152663> CloudEdge: returned msg from server is 200
2019-05-30T11:08:04.153379> CloudEdge: measurement exists
2019-05-30T11:08:04.154111> CloudEdge: will issue requests with
2019-05-30T11:08:04.154830> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:08:04.155646> data: {"value":95.71,"timestamp":"2019-05-30T11:07:59.281"}
2019-05-30T11:08:04.156401> CloudEdge: returned msg from server is 200
2019-05-30T11:08:04.157204> CloudEdge: upload success
2019-05-30T11:08:04.328447> --> cloud end
2019-05-30T11:08:04.328921> 
2019-05-30T11:09:01.380114> --- rxlora. dst=1 type=0x12 src=8 seq=191 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:09:01.380628> 2019-05-30T11:09:01.379665
2019-05-30T11:09:01.381092> rcv ctrl pkt info (^p): 1,18,8,191,14,6,-45
2019-05-30T11:09:01.381491> splitted in: [1, 18, 8, 191, 14, 6, -45]
2019-05-30T11:09:01.381868> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=191 len=14 SNR=6 RSSI=-45)
2019-05-30T11:09:01.382217> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:09:01.382655> splitted in: [125, 5, 12]
2019-05-30T11:09:01.383009> (BW=125 CR=5 SF=12)
2019-05-30T11:09:01.383376> rcv timestamp (^t): 2019-05-30T11:09:01.376
2019-05-30T11:09:01.383747> 
2019-05-30T11:09:01.384177> Got first framing byte
2019-05-30T11:09:01.384573> --> got LoRa data prefix
2019-05-30T11:09:01.385021> --> DATA with_appkey: read app key sequence
2019-05-30T11:09:01.385452> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:09:01.385861> app key disabled
2019-05-30T11:09:01.386396> valid app key: accept data
2019-05-30T11:09:01.387155> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:09:01.387690> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,191,10,6,-45" "125,5,12" "2019-05-30T11:09:01.376" "B827EB1B65FD"
2019-05-30T11:09:06.095693> CloudEdge: uploading
2019-05-30T11:09:06.100360> CloudEdge: run under guest identity, all data is public
2019-05-30T11:09:06.101125> CloudEdge: check if entity exits
2019-05-30T11:09:06.102144> CloudEdge: will issue requests with
2019-05-30T11:09:06.102799> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:09:06.103412> CloudEdge: returned msg from server is 200
2019-05-30T11:09:06.104048> CloudEdge: entity exists
2019-05-30T11:09:06.104727> CloudEdge: check if measurement exits
2019-05-30T11:09:06.105362> CloudEdge: will issue requests with
2019-05-30T11:09:06.106001> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:09:06.106832> CloudEdge: returned msg from server is 200
2019-05-30T11:09:06.107600> CloudEdge: measurement exists
2019-05-30T11:09:06.108233> CloudEdge: will issue requests with
2019-05-30T11:09:06.108825> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:09:06.109400> data: {"value":95.71,"timestamp":"2019-05-30T11:09:01.376"}
2019-05-30T11:09:06.109978> CloudEdge: returned msg from server is 200
2019-05-30T11:09:06.110546> CloudEdge: upload success
2019-05-30T11:09:06.270798> --> cloud end
2019-05-30T11:09:06.271162> 
2019-05-30T11:10:03.473045> --- rxlora. dst=1 type=0x12 src=8 seq=192 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:10:03.473512> 2019-05-30T11:10:03.472628
2019-05-30T11:10:03.473827> rcv ctrl pkt info (^p): 1,18,8,192,14,6,-45
2019-05-30T11:10:03.474131> splitted in: [1, 18, 8, 192, 14, 6, -45]
2019-05-30T11:10:03.474411> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=192 len=14 SNR=6 RSSI=-45)
2019-05-30T11:10:03.474685> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:10:03.474968> splitted in: [125, 5, 12]
2019-05-30T11:10:03.475331> (BW=125 CR=5 SF=12)
2019-05-30T11:10:03.475658> rcv timestamp (^t): 2019-05-30T11:10:03.469
2019-05-30T11:10:03.475949> 
2019-05-30T11:10:03.476309> Got first framing byte
2019-05-30T11:10:03.480518> --> got LoRa data prefix
2019-05-30T11:10:03.481111> --> DATA with_appkey: read app key sequence
2019-05-30T11:10:03.481554> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:10:03.481927> app key disabled
2019-05-30T11:10:03.482265> valid app key: accept data
2019-05-30T11:10:03.482667> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:10:03.483378> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,192,10,6,-45" "125,5,12" "2019-05-30T11:10:03.469" "B827EB1B65FD"
2019-05-30T11:10:08.150628> CloudEdge: uploading
2019-05-30T11:10:08.151443> CloudEdge: run under guest identity, all data is public
2019-05-30T11:10:08.152270> CloudEdge: check if entity exits
2019-05-30T11:10:08.153190> CloudEdge: will issue requests with
2019-05-30T11:10:08.154621> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:10:08.155512> CloudEdge: returned msg from server is 200
2019-05-30T11:10:08.159314> CloudEdge: entity exists
2019-05-30T11:10:08.160519> CloudEdge: check if measurement exits
2019-05-30T11:10:08.161243> CloudEdge: will issue requests with
2019-05-30T11:10:08.161861> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:10:08.162805> CloudEdge: returned msg from server is 200
2019-05-30T11:10:08.163439> CloudEdge: measurement exists
2019-05-30T11:10:08.164038> CloudEdge: will issue requests with
2019-05-30T11:10:08.164624> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:10:08.165194> data: {"value":95.71,"timestamp":"2019-05-30T11:10:03.469"}
2019-05-30T11:10:08.165774> CloudEdge: returned msg from server is 200
2019-05-30T11:10:08.166702> CloudEdge: upload success
2019-05-30T11:10:08.359313> --> cloud end
2019-05-30T11:10:08.359737> 
2019-05-30T11:10:08.360016> Low-level gw status ON
2019-05-30T11:11:05.567096> --- rxlora. dst=1 type=0x12 src=8 seq=193 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T11:11:05.567548> 2019-05-30T11:11:05.566519
2019-05-30T11:11:05.567880> rcv ctrl pkt info (^p): 1,18,8,193,14,6,-46
2019-05-30T11:11:05.568194> splitted in: [1, 18, 8, 193, 14, 6, -46]
2019-05-30T11:11:05.568474> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=193 len=14 SNR=6 RSSI=-46)
2019-05-30T11:11:05.568751> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:11:05.569049> splitted in: [125, 5, 12]
2019-05-30T11:11:05.569388> (BW=125 CR=5 SF=12)
2019-05-30T11:11:05.569692> rcv timestamp (^t): 2019-05-30T11:11:05.563
2019-05-30T11:11:05.569976> 
2019-05-30T11:11:05.570354> Got first framing byte
2019-05-30T11:11:05.570660> --> got LoRa data prefix
2019-05-30T11:11:05.571009> --> DATA with_appkey: read app key sequence
2019-05-30T11:11:05.571361> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:11:05.571730> app key disabled
2019-05-30T11:11:05.572092> valid app key: accept data
2019-05-30T11:11:05.572405> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:11:05.572833> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,193,10,6,-46" "125,5,12" "2019-05-30T11:11:05.563" "B827EB1B65FD"
2019-05-30T11:11:10.207922> CloudEdge: uploading
2019-05-30T11:11:10.208865> CloudEdge: run under guest identity, all data is public
2019-05-30T11:11:10.209748> CloudEdge: check if entity exits
2019-05-30T11:11:10.210569> CloudEdge: will issue requests with
2019-05-30T11:11:10.211421> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:11:10.212315> CloudEdge: returned msg from server is 200
2019-05-30T11:11:10.213048> CloudEdge: entity exists
2019-05-30T11:11:10.213749> CloudEdge: check if measurement exits
2019-05-30T11:11:10.214448> CloudEdge: will issue requests with
2019-05-30T11:11:10.215129> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:11:10.215814> CloudEdge: returned msg from server is 200
2019-05-30T11:11:10.216510> CloudEdge: measurement exists
2019-05-30T11:11:10.217418> CloudEdge: will issue requests with
2019-05-30T11:11:10.218136> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:11:10.218862> data: {"value":95.71,"timestamp":"2019-05-30T11:11:05.563"}
2019-05-30T11:11:10.219579> CloudEdge: returned msg from server is 200
2019-05-30T11:11:10.220311> CloudEdge: upload success
2019-05-30T11:11:10.410651> --> cloud end
2019-05-30T11:11:10.411057> 
2019-05-30T11:12:07.659401> --- rxlora. dst=1 type=0x12 src=8 seq=194 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:12:07.659902> 2019-05-30T11:12:07.658910
2019-05-30T11:12:07.660378> rcv ctrl pkt info (^p): 1,18,8,194,14,6,-45
2019-05-30T11:12:07.660773> splitted in: [1, 18, 8, 194, 14, 6, -45]
2019-05-30T11:12:07.661140> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=194 len=14 SNR=6 RSSI=-45)
2019-05-30T11:12:07.661484> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:12:07.661905> splitted in: [125, 5, 12]
2019-05-30T11:12:07.662263> (BW=125 CR=5 SF=12)
2019-05-30T11:12:07.662626> rcv timestamp (^t): 2019-05-30T11:12:07.655
2019-05-30T11:12:07.662950> 
2019-05-30T11:12:07.663385> Got first framing byte
2019-05-30T11:12:07.663795> --> got LoRa data prefix
2019-05-30T11:12:07.664163> --> DATA with_appkey: read app key sequence
2019-05-30T11:12:07.664596> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:12:07.664967> app key disabled
2019-05-30T11:12:07.665463> valid app key: accept data
2019-05-30T11:12:07.665900> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:12:07.666379> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,194,10,6,-45" "125,5,12" "2019-05-30T11:12:07.655" "B827EB1B65FD"
2019-05-30T11:12:12.260306> CloudEdge: uploading
2019-05-30T11:12:12.261174> CloudEdge: run under guest identity, all data is public
2019-05-30T11:12:12.261953> CloudEdge: check if entity exits
2019-05-30T11:12:12.262668> CloudEdge: will issue requests with
2019-05-30T11:12:12.263378> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:12:12.264045> CloudEdge: returned msg from server is 200
2019-05-30T11:12:12.264647> CloudEdge: entity exists
2019-05-30T11:12:12.265223> CloudEdge: check if measurement exits
2019-05-30T11:12:12.265791> CloudEdge: will issue requests with
2019-05-30T11:12:12.266355> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:12:12.267185> CloudEdge: returned msg from server is 200
2019-05-30T11:12:12.267843> CloudEdge: measurement exists
2019-05-30T11:12:12.268429> CloudEdge: will issue requests with
2019-05-30T11:12:12.269015> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:12:12.269674> data: {"value":95.71,"timestamp":"2019-05-30T11:12:07.655"}
2019-05-30T11:12:12.270264> CloudEdge: returned msg from server is 200
2019-05-30T11:12:12.270834> CloudEdge: upload success
2019-05-30T11:12:12.462331> --> cloud end
2019-05-30T11:12:12.462783> 
2019-05-30T11:13:09.752705> --- rxlora. dst=1 type=0x12 src=8 seq=195 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:13:09.753152> 2019-05-30T11:13:09.752285
2019-05-30T11:13:09.753462> rcv ctrl pkt info (^p): 1,18,8,195,14,6,-43
2019-05-30T11:13:09.753769> splitted in: [1, 18, 8, 195, 14, 6, -43]
2019-05-30T11:13:09.754050> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=195 len=14 SNR=6 RSSI=-43)
2019-05-30T11:13:09.754333> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:13:09.754609> splitted in: [125, 5, 12]
2019-05-30T11:13:09.754952> (BW=125 CR=5 SF=12)
2019-05-30T11:13:09.755284> rcv timestamp (^t): 2019-05-30T11:13:09.748
2019-05-30T11:13:09.755579> 
2019-05-30T11:13:09.755942> Got first framing byte
2019-05-30T11:13:09.756267> --> got LoRa data prefix
2019-05-30T11:13:09.757164> --> DATA with_appkey: read app key sequence
2019-05-30T11:13:09.758130> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:13:09.759124> app key disabled
2019-05-30T11:13:09.760965> valid app key: accept data
2019-05-30T11:13:09.762579> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:13:09.763384> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,195,10,6,-43" "125,5,12" "2019-05-30T11:13:09.748" "B827EB1B65FD"
2019-05-30T11:13:14.497469> CloudEdge: uploading
2019-05-30T11:13:14.498326> CloudEdge: run under guest identity, all data is public
2019-05-30T11:13:14.499049> CloudEdge: check if entity exits
2019-05-30T11:13:14.499701> CloudEdge: will issue requests with
2019-05-30T11:13:14.500320> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:13:14.500936> CloudEdge: returned msg from server is 200
2019-05-30T11:13:14.501515> CloudEdge: entity exists
2019-05-30T11:13:14.502074> CloudEdge: check if measurement exits
2019-05-30T11:13:14.502640> CloudEdge: will issue requests with
2019-05-30T11:13:14.503306> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:13:14.504091> CloudEdge: returned msg from server is 200
2019-05-30T11:13:14.504972> CloudEdge: measurement exists
2019-05-30T11:13:14.505873> CloudEdge: will issue requests with
2019-05-30T11:13:14.506999> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:13:14.508026> data: {"value":95.71,"timestamp":"2019-05-30T11:13:09.748"}
2019-05-30T11:13:14.508941> CloudEdge: returned msg from server is 200
2019-05-30T11:13:14.509879> CloudEdge: upload success
2019-05-30T11:13:14.677972> --> cloud end
2019-05-30T11:13:14.678574> 
2019-05-30T11:14:11.846838> --- rxlora. dst=1 type=0x12 src=8 seq=196 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:14:11.848110> 2019-05-30T11:14:11.846165
2019-05-30T11:14:11.849022> rcv ctrl pkt info (^p): 1,18,8,196,14,6,-43
2019-05-30T11:14:11.849972> splitted in: [1, 18, 8, 196, 14, 6, -43]
2019-05-30T11:14:11.850885> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=196 len=14 SNR=6 RSSI=-43)
2019-05-30T11:14:11.851854> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:14:11.853200> splitted in: [125, 5, 12]
2019-05-30T11:14:11.854147> (BW=125 CR=5 SF=12)
2019-05-30T11:14:11.855343> rcv timestamp (^t): 2019-05-30T11:14:11.842
2019-05-30T11:14:11.856649> 
2019-05-30T11:14:11.857539> Got first framing byte
2019-05-30T11:14:11.858524> --> got LoRa data prefix
2019-05-30T11:14:11.859246> --> DATA with_appkey: read app key sequence
2019-05-30T11:14:11.859914> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:14:11.860346> app key disabled
2019-05-30T11:14:11.861054> valid app key: accept data
2019-05-30T11:14:11.861691> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:14:11.862312> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,196,10,6,-43" "125,5,12" "2019-05-30T11:14:11.842" "B827EB1B65FD"
2019-05-30T11:14:17.979535> --> cloud end
2019-05-30T11:14:17.979993> 
2019-05-30T11:15:13.942013> --- rxlora. dst=1 type=0x12 src=8 seq=197 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:15:13.942543> 2019-05-30T11:15:13.939109
2019-05-30T11:15:13.942940> rcv ctrl pkt info (^p): 1,18,8,197,14,6,-42
2019-05-30T11:15:13.943257> splitted in: [1, 18, 8, 197, 14, 6, -42]
2019-05-30T11:15:13.943563> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=197 len=14 SNR=6 RSSI=-42)
2019-05-30T11:15:13.943854> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:15:13.944155> splitted in: [125, 5, 12]
2019-05-30T11:15:13.944496> (BW=125 CR=5 SF=12)
2019-05-30T11:15:13.944846> rcv timestamp (^t): 2019-05-30T11:15:13.935
2019-05-30T11:15:13.945184> 
2019-05-30T11:15:13.945513> Got first framing byte
2019-05-30T11:15:13.945881> --> got LoRa data prefix
2019-05-30T11:15:13.946229> --> DATA with_appkey: read app key sequence
2019-05-30T11:15:13.946634> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:15:13.947021> app key disabled
2019-05-30T11:15:13.947365> valid app key: accept data
2019-05-30T11:15:13.947703> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:15:13.948029> python /app/data_acq/edgeCall.py "TC/95.78" "1,18,8,197,10,6,-42" "125,5,12" "2019-05-30T11:15:13.935" "B827EB1B65FD"
2019-05-30T11:15:18.629673> CloudEdge: uploading
2019-05-30T11:15:18.630585> CloudEdge: run under guest identity, all data is public
2019-05-30T11:15:18.631313> CloudEdge: check if entity exits
2019-05-30T11:15:18.631953> CloudEdge: will issue requests with
2019-05-30T11:15:18.632578> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:15:18.633201> CloudEdge: returned msg from server is 200
2019-05-30T11:15:18.633776> CloudEdge: entity exists
2019-05-30T11:15:18.634342> CloudEdge: check if measurement exits
2019-05-30T11:15:18.634892> CloudEdge: will issue requests with
2019-05-30T11:15:18.635448> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:15:18.636003> CloudEdge: returned msg from server is 200
2019-05-30T11:15:18.636739> CloudEdge: measurement exists
2019-05-30T11:15:18.637411> CloudEdge: will issue requests with
2019-05-30T11:15:18.638033> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:15:18.638642> data: {"value":95.78,"timestamp":"2019-05-30T11:15:13.935"}
2019-05-30T11:15:18.639217> CloudEdge: returned msg from server is 200
2019-05-30T11:15:18.639792> CloudEdge: upload success
2019-05-30T11:15:18.829539> --> cloud end
2019-05-30T11:15:18.830139> 
2019-05-30T11:16:16.034382> --- rxlora. dst=1 type=0x12 src=8 seq=198 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:16:16.034991> 2019-05-30T11:16:16.033269
2019-05-30T11:16:16.035461> rcv ctrl pkt info (^p): 1,18,8,198,14,6,-42
2019-05-30T11:16:16.035890> splitted in: [1, 18, 8, 198, 14, 6, -42]
2019-05-30T11:16:16.036274> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=198 len=14 SNR=6 RSSI=-42)
2019-05-30T11:16:16.036931> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:16:16.037319> splitted in: [125, 5, 12]
2019-05-30T11:16:16.037629> (BW=125 CR=5 SF=12)
2019-05-30T11:16:16.037977> rcv timestamp (^t): 2019-05-30T11:16:16.029
2019-05-30T11:16:16.038340> 
2019-05-30T11:16:16.038689> Got first framing byte
2019-05-30T11:16:16.039133> --> got LoRa data prefix
2019-05-30T11:16:16.039558> --> DATA with_appkey: read app key sequence
2019-05-30T11:16:16.040000> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:16:16.040468> app key disabled
2019-05-30T11:16:16.040943> valid app key: accept data
2019-05-30T11:16:16.041360> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:16:16.041833> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,198,10,6,-42" "125,5,12" "2019-05-30T11:16:16.029" "B827EB1B65FD"
2019-05-30T11:16:20.786769> CloudEdge: uploading
2019-05-30T11:16:20.787796> CloudEdge: run under guest identity, all data is public
2019-05-30T11:16:20.788793> CloudEdge: check if entity exits
2019-05-30T11:16:20.789637> CloudEdge: will issue requests with
2019-05-30T11:16:20.790490> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:16:20.791273> CloudEdge: returned msg from server is 200
2019-05-30T11:16:20.791974> CloudEdge: entity exists
2019-05-30T11:16:20.792658> CloudEdge: check if measurement exits
2019-05-30T11:16:20.793355> CloudEdge: will issue requests with
2019-05-30T11:16:20.794067> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:16:20.794770> CloudEdge: returned msg from server is 200
2019-05-30T11:16:20.795453> CloudEdge: measurement exists
2019-05-30T11:16:20.796116> CloudEdge: will issue requests with
2019-05-30T11:16:20.796941> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:16:20.797695> data: {"value":95.71,"timestamp":"2019-05-30T11:16:16.029"}
2019-05-30T11:16:20.798385> CloudEdge: returned msg from server is 200
2019-05-30T11:16:20.799067> CloudEdge: upload success
2019-05-30T11:16:20.976030> --> cloud end
2019-05-30T11:16:20.976434> 
2019-05-30T11:17:18.127608> --- rxlora. dst=1 type=0x12 src=8 seq=199 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:17:18.130790> 2019-05-30T11:17:18.127856
2019-05-30T11:17:18.131226> rcv ctrl pkt info (^p): 1,18,8,199,14,6,-41
2019-05-30T11:17:18.131556> splitted in: [1, 18, 8, 199, 14, 6, -41]
2019-05-30T11:17:18.131856> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=199 len=14 SNR=6 RSSI=-41)
2019-05-30T11:17:18.132136> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:17:18.132455> splitted in: [125, 5, 12]
2019-05-30T11:17:18.132806> (BW=125 CR=5 SF=12)
2019-05-30T11:17:18.133150> rcv timestamp (^t): 2019-05-30T11:17:18.123
2019-05-30T11:17:18.133480> 
2019-05-30T11:17:18.133808> Got first framing byte
2019-05-30T11:17:18.134103> --> got LoRa data prefix
2019-05-30T11:17:18.134370> --> DATA with_appkey: read app key sequence
2019-05-30T11:17:18.134636> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:17:18.134901> app key disabled
2019-05-30T11:17:18.135166> valid app key: accept data
2019-05-30T11:17:18.135428> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:17:18.135695> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,199,10,6,-41" "125,5,12" "2019-05-30T11:17:18.123" "B827EB1B65FD"
2019-05-30T11:17:22.635890> CloudEdge: uploading
2019-05-30T11:17:22.636858> CloudEdge: run under guest identity, all data is public
2019-05-30T11:17:22.637609> CloudEdge: check if entity exits
2019-05-30T11:17:22.638308> CloudEdge: will issue requests with
2019-05-30T11:17:22.639017> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:17:22.639703> CloudEdge: returned msg from server is 200
2019-05-30T11:17:22.640383> CloudEdge: entity exists
2019-05-30T11:17:22.641026> CloudEdge: check if measurement exits
2019-05-30T11:17:22.641682> CloudEdge: will issue requests with
2019-05-30T11:17:22.642350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:17:22.643005> CloudEdge: returned msg from server is 200
2019-05-30T11:17:22.643653> CloudEdge: measurement exists
2019-05-30T11:17:22.644281> CloudEdge: will issue requests with
2019-05-30T11:17:22.644894> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:17:22.645512> data: {"value":95.71,"timestamp":"2019-05-30T11:17:18.123"}
2019-05-30T11:17:22.646127> CloudEdge: returned msg from server is 200
2019-05-30T11:17:22.646813> CloudEdge: upload success
2019-05-30T11:17:22.845127> --> cloud end
2019-05-30T11:17:22.845513> 
2019-05-30T11:17:51.847851> 2019-05-30 11:17:51.846712
2019-05-30T11:17:51.848691> post status: gw ON
2019-05-30T11:17:51.849400> post status: executing periodic tasks
2019-05-30T11:17:52.951837> no timezone support, time will be expressed only in local time
2019-05-30T11:17:52.952226> post status: start running
2019-05-30T11:17:54.005550> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:17:54.005927> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:17:54.013172> get_gps.py: invalid serial port
2019-05-30T11:17:54.165994> post status: dynamic GPS is requested
2019-05-30T11:17:54.166469> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:17:54.167141> post status get GPS: no GPS coordinates
2019-05-30T11:17:54.167552> post status: show current GPS position
2019-05-30T11:17:54.167932> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:17:54.168270> post status: exiting
2019-05-30T11:18:20.224100> --- rxlora. dst=1 type=0x12 src=8 seq=200 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:18:20.224582> 2019-05-30T11:18:20.221063
2019-05-30T11:18:20.224928> rcv ctrl pkt info (^p): 1,18,8,200,14,6,-41
2019-05-30T11:18:20.225260> splitted in: [1, 18, 8, 200, 14, 6, -41]
2019-05-30T11:18:20.225550> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=200 len=14 SNR=6 RSSI=-41)
2019-05-30T11:18:20.225885> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:18:20.226235> splitted in: [125, 5, 12]
2019-05-30T11:18:20.226765> (BW=125 CR=5 SF=12)
2019-05-30T11:18:20.227213> rcv timestamp (^t): 2019-05-30T11:18:20.217
2019-05-30T11:18:20.227548> 
2019-05-30T11:18:20.227819> Got first framing byte
2019-05-30T11:18:20.228093> --> got LoRa data prefix
2019-05-30T11:18:20.228357> --> DATA with_appkey: read app key sequence
2019-05-30T11:18:20.228620> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:18:20.228881> app key disabled
2019-05-30T11:18:20.229149> valid app key: accept data
2019-05-30T11:18:20.229414> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:18:20.229678> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,200,10,6,-41" "125,5,12" "2019-05-30T11:18:20.217" "B827EB1B65FD"
2019-05-30T11:18:24.896450> CloudEdge: uploading
2019-05-30T11:18:24.898105> CloudEdge: run under guest identity, all data is public
2019-05-30T11:18:24.901407> CloudEdge: check if entity exits
2019-05-30T11:18:24.902399> CloudEdge: will issue requests with
2019-05-30T11:18:24.903287> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:18:24.904107> CloudEdge: returned msg from server is 200
2019-05-30T11:18:24.904903> CloudEdge: entity exists
2019-05-30T11:18:24.907296> CloudEdge: check if measurement exits
2019-05-30T11:18:24.908462> CloudEdge: will issue requests with
2019-05-30T11:18:24.909304> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:18:24.910024> CloudEdge: returned msg from server is 200
2019-05-30T11:18:24.910708> CloudEdge: measurement exists
2019-05-30T11:18:24.911445> CloudEdge: will issue requests with
2019-05-30T11:18:24.912136> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:18:24.912789> data: {"value":95.71,"timestamp":"2019-05-30T11:18:20.217"}
2019-05-30T11:18:24.913463> CloudEdge: returned msg from server is 200
2019-05-30T11:18:24.914115> CloudEdge: upload success
2019-05-30T11:18:25.094837> --> cloud end
2019-05-30T11:18:25.095391> 
2019-05-30T11:19:22.315576> --- rxlora. dst=1 type=0x12 src=8 seq=201 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:19:22.316030> 2019-05-30T11:19:22.315168
2019-05-30T11:19:22.316348> rcv ctrl pkt info (^p): 1,18,8,201,14,6,-41
2019-05-30T11:19:22.316795> splitted in: [1, 18, 8, 201, 14, 6, -41]
2019-05-30T11:19:22.318057> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=201 len=14 SNR=6 RSSI=-41)
2019-05-30T11:19:22.318548> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:19:22.318883> splitted in: [125, 5, 12]
2019-05-30T11:19:22.319187> (BW=125 CR=5 SF=12)
2019-05-30T11:19:22.319483> rcv timestamp (^t): 2019-05-30T11:19:22.311
2019-05-30T11:19:22.319765> 
2019-05-30T11:19:22.320235> Got first framing byte
2019-05-30T11:19:22.320596> --> got LoRa data prefix
2019-05-30T11:19:22.320962> --> DATA with_appkey: read app key sequence
2019-05-30T11:19:22.321281> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:19:22.321689> app key disabled
2019-05-30T11:19:22.322064> valid app key: accept data
2019-05-30T11:19:22.322652> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:19:22.326242> python /app/data_acq/edgeCall.py "TC/95.71" "1,18,8,201,10,6,-41" "125,5,12" "2019-05-30T11:19:22.311" "B827EB1B65FD"
2019-05-30T11:19:26.957915> CloudEdge: uploading
2019-05-30T11:19:26.958587> CloudEdge: run under guest identity, all data is public
2019-05-30T11:19:26.959165> CloudEdge: check if entity exits
2019-05-30T11:19:26.959743> CloudEdge: will issue requests with
2019-05-30T11:19:26.960392> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:19:26.961009> CloudEdge: returned msg from server is 200
2019-05-30T11:19:26.961596> CloudEdge: entity exists
2019-05-30T11:19:26.962184> CloudEdge: check if measurement exits
2019-05-30T11:19:26.962770> CloudEdge: will issue requests with
2019-05-30T11:19:26.963332> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:19:26.963889> CloudEdge: returned msg from server is 200
2019-05-30T11:19:26.964449> CloudEdge: measurement exists
2019-05-30T11:19:26.965003> CloudEdge: will issue requests with
2019-05-30T11:19:26.965558> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:19:26.966109> data: {"value":95.71,"timestamp":"2019-05-30T11:19:22.311"}
2019-05-30T11:19:26.966749> CloudEdge: returned msg from server is 200
2019-05-30T11:19:26.967362> CloudEdge: upload success
2019-05-30T11:19:27.168405> --> cloud end
2019-05-30T11:19:27.169010> 
2019-05-30T11:20:24.411553> --- rxlora. dst=1 type=0x12 src=8 seq=202 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:20:24.412041> 2019-05-30T11:20:24.408567
2019-05-30T11:20:24.412385> rcv ctrl pkt info (^p): 1,18,8,202,14,7,-41
2019-05-30T11:20:24.412711> splitted in: [1, 18, 8, 202, 14, 7, -41]
2019-05-30T11:20:24.413014> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=202 len=14 SNR=7 RSSI=-41)
2019-05-30T11:20:24.413369> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:20:24.413708> splitted in: [125, 5, 12]
2019-05-30T11:20:24.414079> (BW=125 CR=5 SF=12)
2019-05-30T11:20:24.414398> rcv timestamp (^t): 2019-05-30T11:20:24.404
2019-05-30T11:20:24.414775> 
2019-05-30T11:20:24.415131> Got first framing byte
2019-05-30T11:20:24.415484> --> got LoRa data prefix
2019-05-30T11:20:24.415829> --> DATA with_appkey: read app key sequence
2019-05-30T11:20:24.416183> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:20:24.416615> app key disabled
2019-05-30T11:20:24.417186> valid app key: accept data
2019-05-30T11:20:24.417605> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:20:24.417951> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,202,10,7,-41" "125,5,12" "2019-05-30T11:20:24.404" "B827EB1B65FD"
2019-05-30T11:20:29.211988> CloudEdge: uploading
2019-05-30T11:20:29.213295> CloudEdge: run under guest identity, all data is public
2019-05-30T11:20:29.214436> CloudEdge: check if entity exits
2019-05-30T11:20:29.215511> CloudEdge: will issue requests with
2019-05-30T11:20:29.222854> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:20:29.226256> CloudEdge: returned msg from server is 200
2019-05-30T11:20:29.227290> CloudEdge: entity exists
2019-05-30T11:20:29.228140> CloudEdge: check if measurement exits
2019-05-30T11:20:29.230228> CloudEdge: will issue requests with
2019-05-30T11:20:29.232184> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:20:29.235305> CloudEdge: returned msg from server is 200
2019-05-30T11:20:29.236397> CloudEdge: measurement exists
2019-05-30T11:20:29.237325> CloudEdge: will issue requests with
2019-05-30T11:20:29.237998> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:20:29.238606> data: {"value":95.39,"timestamp":"2019-05-30T11:20:24.404"}
2019-05-30T11:20:29.239197> CloudEdge: returned msg from server is 200
2019-05-30T11:20:29.239783> CloudEdge: upload success
2019-05-30T11:20:29.390806> --> cloud end
2019-05-30T11:20:29.391206> 
2019-05-30T11:20:29.391502> Low-level gw status ON
2019-05-30T11:21:26.503651> --- rxlora. dst=1 type=0x12 src=8 seq=203 len=14 SNR=8 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:21:26.504023> 2019-05-30T11:21:26.501977
2019-05-30T11:21:26.504341> rcv ctrl pkt info (^p): 1,18,8,203,14,8,-41
2019-05-30T11:21:26.504611> splitted in: [1, 18, 8, 203, 14, 8, -41]
2019-05-30T11:21:26.504878> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=203 len=14 SNR=8 RSSI=-41)
2019-05-30T11:21:26.505144> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:21:26.505408> splitted in: [125, 5, 12]
2019-05-30T11:21:26.505675> (BW=125 CR=5 SF=12)
2019-05-30T11:21:26.505946> rcv timestamp (^t): 2019-05-30T11:21:26.498
2019-05-30T11:21:26.506212> 
2019-05-30T11:21:26.506477> Got first framing byte
2019-05-30T11:21:26.506882> --> got LoRa data prefix
2019-05-30T11:21:26.507198> --> DATA with_appkey: read app key sequence
2019-05-30T11:21:26.507484> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:21:26.507766> app key disabled
2019-05-30T11:21:26.508073> valid app key: accept data
2019-05-30T11:21:26.508354> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:21:26.508625> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,203,10,8,-41" "125,5,12" "2019-05-30T11:21:26.498" "B827EB1B65FD"
2019-05-30T11:21:31.265243> CloudEdge: uploading
2019-05-30T11:21:31.266016> CloudEdge: run under guest identity, all data is public
2019-05-30T11:21:31.266781> CloudEdge: check if entity exits
2019-05-30T11:21:31.267533> CloudEdge: will issue requests with
2019-05-30T11:21:31.268297> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:21:31.269192> CloudEdge: returned msg from server is 200
2019-05-30T11:21:31.270026> CloudEdge: entity exists
2019-05-30T11:21:31.270889> CloudEdge: check if measurement exits
2019-05-30T11:21:31.271731> CloudEdge: will issue requests with
2019-05-30T11:21:31.272576> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:21:31.273317> CloudEdge: returned msg from server is 200
2019-05-30T11:21:31.274023> CloudEdge: measurement exists
2019-05-30T11:21:31.274795> CloudEdge: will issue requests with
2019-05-30T11:21:31.275556> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:21:31.276301> data: {"value":95.39,"timestamp":"2019-05-30T11:21:26.498"}
2019-05-30T11:21:31.277120> CloudEdge: returned msg from server is 200
2019-05-30T11:21:31.277875> CloudEdge: upload success
2019-05-30T11:21:31.476524> --> cloud end
2019-05-30T11:21:31.477101> 
2019-05-30T11:22:28.597162> --- rxlora. dst=1 type=0x12 src=8 seq=204 len=14 SNR=8 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:22:28.597614> 2019-05-30T11:22:28.596763
2019-05-30T11:22:28.597947> rcv ctrl pkt info (^p): 1,18,8,204,14,8,-42
2019-05-30T11:22:28.598261> splitted in: [1, 18, 8, 204, 14, 8, -42]
2019-05-30T11:22:28.598554> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=204 len=14 SNR=8 RSSI=-42)
2019-05-30T11:22:28.598839> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:22:28.599126> splitted in: [125, 5, 12]
2019-05-30T11:22:28.599475> (BW=125 CR=5 SF=12)
2019-05-30T11:22:28.599791> rcv timestamp (^t): 2019-05-30T11:22:28.593
2019-05-30T11:22:28.600143> 
2019-05-30T11:22:28.600520> Got first framing byte
2019-05-30T11:22:28.600822> --> got LoRa data prefix
2019-05-30T11:22:28.601115> --> DATA with_appkey: read app key sequence
2019-05-30T11:22:28.601457> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:22:28.601800> app key disabled
2019-05-30T11:22:28.602240> valid app key: accept data
2019-05-30T11:22:28.602570> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:22:28.602959> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,204,10,8,-42" "125,5,12" "2019-05-30T11:22:28.593" "B827EB1B65FD"
2019-05-30T11:22:33.013096> CloudEdge: uploading
2019-05-30T11:22:33.013968> CloudEdge: run under guest identity, all data is public
2019-05-30T11:22:33.014713> CloudEdge: check if entity exits
2019-05-30T11:22:33.015373> CloudEdge: will issue requests with
2019-05-30T11:22:33.016079> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:22:33.016971> CloudEdge: returned msg from server is 200
2019-05-30T11:22:33.017625> CloudEdge: entity exists
2019-05-30T11:22:33.018200> CloudEdge: check if measurement exits
2019-05-30T11:22:33.018779> CloudEdge: will issue requests with
2019-05-30T11:22:33.019350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:22:33.019916> CloudEdge: returned msg from server is 200
2019-05-30T11:22:33.020489> CloudEdge: measurement exists
2019-05-30T11:22:33.021375> CloudEdge: will issue requests with
2019-05-30T11:22:33.022018> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:22:33.022616> data: {"value":95.33,"timestamp":"2019-05-30T11:22:28.593"}
2019-05-30T11:22:33.023203> CloudEdge: returned msg from server is 200
2019-05-30T11:22:33.024773> CloudEdge: upload success
2019-05-30T11:22:33.223663> --> cloud end
2019-05-30T11:22:33.224120> 
2019-05-30T11:23:30.693660> --- rxlora. dst=1 type=0x12 src=8 seq=205 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:23:30.694173> 2019-05-30T11:23:30.690770
2019-05-30T11:23:30.694551> rcv ctrl pkt info (^p): 1,18,8,205,14,6,-42
2019-05-30T11:23:30.694869> splitted in: [1, 18, 8, 205, 14, 6, -42]
2019-05-30T11:23:30.695166> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=205 len=14 SNR=6 RSSI=-42)
2019-05-30T11:23:30.695487> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:23:30.695822> splitted in: [125, 5, 12]
2019-05-30T11:23:30.696157> (BW=125 CR=5 SF=12)
2019-05-30T11:23:30.696490> rcv timestamp (^t): 2019-05-30T11:23:30.687
2019-05-30T11:23:30.697105> 
2019-05-30T11:23:30.697519> Got first framing byte
2019-05-30T11:23:30.697888> --> got LoRa data prefix
2019-05-30T11:23:30.698225> --> DATA with_appkey: read app key sequence
2019-05-30T11:23:30.698577> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:23:30.698897> app key disabled
2019-05-30T11:23:30.699429> valid app key: accept data
2019-05-30T11:23:30.699940> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:23:30.700261> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,205,10,6,-42" "125,5,12" "2019-05-30T11:23:30.687" "B827EB1B65FD"
2019-05-30T11:23:35.374946> CloudEdge: uploading
2019-05-30T11:23:35.375921> CloudEdge: run under guest identity, all data is public
2019-05-30T11:23:35.377086> CloudEdge: check if entity exits
2019-05-30T11:23:35.378058> CloudEdge: will issue requests with
2019-05-30T11:23:35.378950> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:23:35.379709> CloudEdge: returned msg from server is 200
2019-05-30T11:23:35.380412> CloudEdge: entity exists
2019-05-30T11:23:35.381131> CloudEdge: check if measurement exits
2019-05-30T11:23:35.381825> CloudEdge: will issue requests with
2019-05-30T11:23:35.382520> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:23:35.383210> CloudEdge: returned msg from server is 200
2019-05-30T11:23:35.383905> CloudEdge: measurement exists
2019-05-30T11:23:35.384616> CloudEdge: will issue requests with
2019-05-30T11:23:35.385315> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:23:35.386015> data: {"value":95.33,"timestamp":"2019-05-30T11:23:30.687"}
2019-05-30T11:23:35.386912> CloudEdge: returned msg from server is 200
2019-05-30T11:23:35.387676> CloudEdge: upload success
2019-05-30T11:23:35.559526> --> cloud end
2019-05-30T11:23:35.560057> 
2019-05-30T11:24:32.785780> --- rxlora. dst=1 type=0x12 src=8 seq=206 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:24:32.787057> 2019-05-30T11:24:32.786027
2019-05-30T11:24:32.787503> rcv ctrl pkt info (^p): 1,18,8,206,14,7,-42
2019-05-30T11:24:32.787820> splitted in: [1, 18, 8, 206, 14, 7, -42]
2019-05-30T11:24:32.788106> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=206 len=14 SNR=7 RSSI=-42)
2019-05-30T11:24:32.788389> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:24:32.788743> splitted in: [125, 5, 12]
2019-05-30T11:24:32.789068> (BW=125 CR=5 SF=12)
2019-05-30T11:24:32.789362> rcv timestamp (^t): 2019-05-30T11:24:32.781
2019-05-30T11:24:32.789648> 
2019-05-30T11:24:32.790026> Got first framing byte
2019-05-30T11:24:32.790323> --> got LoRa data prefix
2019-05-30T11:24:32.790639> --> DATA with_appkey: read app key sequence
2019-05-30T11:24:32.790983> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:24:32.791329> app key disabled
2019-05-30T11:24:32.791734> valid app key: accept data
2019-05-30T11:24:32.792138> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:24:32.792525> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,206,10,7,-42" "125,5,12" "2019-05-30T11:24:32.781" "B827EB1B65FD"
2019-05-30T11:24:38.348622> CloudEdge: uploading
2019-05-30T11:24:38.349189> CloudEdge: run under guest identity, all data is public
2019-05-30T11:24:38.349597> CloudEdge: check if entity exits
2019-05-30T11:24:38.349934> CloudEdge: will issue requests with
2019-05-30T11:24:38.350240> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:24:38.350546> CloudEdge: returned msg from server is 200
2019-05-30T11:24:38.350849> CloudEdge: entity exists
2019-05-30T11:24:38.351147> CloudEdge: check if measurement exits
2019-05-30T11:24:38.351445> CloudEdge: will issue requests with
2019-05-30T11:24:38.351819> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:24:38.352110> CloudEdge: returned msg from server is 200
2019-05-30T11:24:38.352400> CloudEdge: measurement exists
2019-05-30T11:24:38.352688> CloudEdge: will issue requests with
2019-05-30T11:24:38.352988> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:24:38.353290> data: {"value":95.46,"timestamp":"2019-05-30T11:24:32.781"}
2019-05-30T11:24:38.353580> CloudEdge: returned msg from server is 200
2019-05-30T11:24:38.353877> CloudEdge: upload success
2019-05-30T11:24:38.513851> --> cloud end
2019-05-30T11:24:38.514311> 
2019-05-30T11:25:34.881007> --- rxlora. dst=1 type=0x12 src=8 seq=207 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:25:34.881462> 2019-05-30T11:25:34.880582
2019-05-30T11:25:34.881780> rcv ctrl pkt info (^p): 1,18,8,207,14,6,-43
2019-05-30T11:25:34.882091> splitted in: [1, 18, 8, 207, 14, 6, -43]
2019-05-30T11:25:34.882374> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=207 len=14 SNR=6 RSSI=-43)
2019-05-30T11:25:34.882653> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:25:34.882934> splitted in: [125, 5, 12]
2019-05-30T11:25:34.883281> (BW=125 CR=5 SF=12)
2019-05-30T11:25:34.883580> rcv timestamp (^t): 2019-05-30T11:25:34.877
2019-05-30T11:25:34.883869> 
2019-05-30T11:25:34.884225> Got first framing byte
2019-05-30T11:25:34.884519> --> got LoRa data prefix
2019-05-30T11:25:34.884804> --> DATA with_appkey: read app key sequence
2019-05-30T11:25:34.885124> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:25:34.885458> app key disabled
2019-05-30T11:25:34.885798> valid app key: accept data
2019-05-30T11:25:34.886130> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:25:34.886520> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,207,10,6,-43" "125,5,12" "2019-05-30T11:25:34.877" "B827EB1B65FD"
2019-05-30T11:25:39.689287> CloudEdge: uploading
2019-05-30T11:25:39.690222> CloudEdge: run under guest identity, all data is public
2019-05-30T11:25:39.690976> CloudEdge: check if entity exits
2019-05-30T11:25:39.691626> CloudEdge: will issue requests with
2019-05-30T11:25:39.692267> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:25:39.692893> CloudEdge: returned msg from server is 200
2019-05-30T11:25:39.693501> CloudEdge: entity exists
2019-05-30T11:25:39.694093> CloudEdge: check if measurement exits
2019-05-30T11:25:39.694683> CloudEdge: will issue requests with
2019-05-30T11:25:39.695265> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:25:39.695848> CloudEdge: returned msg from server is 200
2019-05-30T11:25:39.696427> CloudEdge: measurement exists
2019-05-30T11:25:39.697164> CloudEdge: will issue requests with
2019-05-30T11:25:39.697778> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:25:39.698370> data: {"value":95.39,"timestamp":"2019-05-30T11:25:34.877"}
2019-05-30T11:25:39.698951> CloudEdge: returned msg from server is 200
2019-05-30T11:25:39.699523> CloudEdge: upload success
2019-05-30T11:25:39.875181> --> cloud end
2019-05-30T11:25:39.875591> 
2019-05-30T11:26:36.975696> --- rxlora. dst=1 type=0x12 src=8 seq=208 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:26:36.976145> 2019-05-30T11:26:36.975293
2019-05-30T11:26:36.976508> rcv ctrl pkt info (^p): 1,18,8,208,14,7,-42
2019-05-30T11:26:36.977047> splitted in: [1, 18, 8, 208, 14, 7, -42]
2019-05-30T11:26:36.977367> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=208 len=14 SNR=7 RSSI=-42)
2019-05-30T11:26:36.977907> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:26:36.978319> splitted in: [125, 5, 12]
2019-05-30T11:26:36.978648> (BW=125 CR=5 SF=12)
2019-05-30T11:26:36.978946> rcv timestamp (^t): 2019-05-30T11:26:36.971
2019-05-30T11:26:36.979257> 
2019-05-30T11:26:36.979620> Got first framing byte
2019-05-30T11:26:36.979917> --> got LoRa data prefix
2019-05-30T11:26:36.980259> --> DATA with_appkey: read app key sequence
2019-05-30T11:26:36.980614> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:26:36.980967> app key disabled
2019-05-30T11:26:36.981304> valid app key: accept data
2019-05-30T11:26:36.981713> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:26:36.982086> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,208,10,7,-42" "125,5,12" "2019-05-30T11:26:36.971" "B827EB1B65FD"
2019-05-30T11:26:41.745303> CloudEdge: uploading
2019-05-30T11:26:41.746184> CloudEdge: run under guest identity, all data is public
2019-05-30T11:26:41.747152> CloudEdge: check if entity exits
2019-05-30T11:26:41.747916> CloudEdge: will issue requests with
2019-05-30T11:26:41.748619> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:26:41.749279> CloudEdge: returned msg from server is 200
2019-05-30T11:26:41.749880> CloudEdge: entity exists
2019-05-30T11:26:41.750734> CloudEdge: check if measurement exits
2019-05-30T11:26:41.751460> CloudEdge: will issue requests with
2019-05-30T11:26:41.752101> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:26:41.752710> CloudEdge: returned msg from server is 200
2019-05-30T11:26:41.753308> CloudEdge: measurement exists
2019-05-30T11:26:41.753889> CloudEdge: will issue requests with
2019-05-30T11:26:41.754484> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:26:41.755081> data: {"value":95.33,"timestamp":"2019-05-30T11:26:36.971"}
2019-05-30T11:26:41.755668> CloudEdge: returned msg from server is 200
2019-05-30T11:26:41.756249> CloudEdge: upload success
2019-05-30T11:26:41.933096> --> cloud end
2019-05-30T11:26:41.933497> 
2019-05-30T11:27:39.070336> --- rxlora. dst=1 type=0x12 src=8 seq=209 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:27:39.070782> 2019-05-30T11:27:39.069930
2019-05-30T11:27:39.071183> rcv ctrl pkt info (^p): 1,18,8,209,14,7,-42
2019-05-30T11:27:39.071506> splitted in: [1, 18, 8, 209, 14, 7, -42]
2019-05-30T11:27:39.071792> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=209 len=14 SNR=7 RSSI=-42)
2019-05-30T11:27:39.072069> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:27:39.072349> splitted in: [125, 5, 12]
2019-05-30T11:27:39.072711> (BW=125 CR=5 SF=12)
2019-05-30T11:27:39.073017> rcv timestamp (^t): 2019-05-30T11:27:39.066
2019-05-30T11:27:39.073304> 
2019-05-30T11:27:39.073668> Got first framing byte
2019-05-30T11:27:39.073967> --> got LoRa data prefix
2019-05-30T11:27:39.074249> --> DATA with_appkey: read app key sequence
2019-05-30T11:27:39.074572> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:27:39.074930> app key disabled
2019-05-30T11:27:39.075277> valid app key: accept data
2019-05-30T11:27:39.075595> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:27:39.075995> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,209,10,7,-42" "125,5,12" "2019-05-30T11:27:39.066" "B827EB1B65FD"
2019-05-30T11:27:43.488037> CloudEdge: uploading
2019-05-30T11:27:43.488621> CloudEdge: run under guest identity, all data is public
2019-05-30T11:27:43.489023> CloudEdge: check if entity exits
2019-05-30T11:27:43.489360> CloudEdge: will issue requests with
2019-05-30T11:27:43.489667> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:27:43.489976> CloudEdge: returned msg from server is 200
2019-05-30T11:27:43.490280> CloudEdge: entity exists
2019-05-30T11:27:43.490577> CloudEdge: check if measurement exits
2019-05-30T11:27:43.490873> CloudEdge: will issue requests with
2019-05-30T11:27:43.491159> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:27:43.491449> CloudEdge: returned msg from server is 200
2019-05-30T11:27:43.491732> CloudEdge: measurement exists
2019-05-30T11:27:43.492036> CloudEdge: will issue requests with
2019-05-30T11:27:43.492350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:27:43.492653> data: {"value":95.39,"timestamp":"2019-05-30T11:27:39.066"}
2019-05-30T11:27:43.492939> CloudEdge: returned msg from server is 200
2019-05-30T11:27:43.493227> CloudEdge: upload success
2019-05-30T11:27:43.667417> --> cloud end
2019-05-30T11:27:43.668147> 
2019-05-30T11:27:54.318034> 2019-05-30 11:27:54.316735
2019-05-30T11:27:54.319026> post status: gw ON
2019-05-30T11:27:54.319928> post status: executing periodic tasks
2019-05-30T11:27:55.402725> no timezone support, time will be expressed only in local time
2019-05-30T11:27:55.403092> post status: start running
2019-05-30T11:27:56.542384> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:27:56.542805> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:27:56.550969> get_gps.py: invalid serial port
2019-05-30T11:27:56.737114> post status: dynamic GPS is requested
2019-05-30T11:27:56.737631> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:27:56.737929> post status get GPS: no GPS coordinates
2019-05-30T11:27:56.738275> post status: show current GPS position
2019-05-30T11:27:56.738555> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:27:56.738823> post status: exiting
2019-05-30T11:28:41.166028> --- rxlora. dst=1 type=0x12 src=8 seq=210 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:28:41.167333> 2019-05-30T11:28:41.165298
2019-05-30T11:28:41.168682> rcv ctrl pkt info (^p): 1,18,8,210,14,6,-43
2019-05-30T11:28:41.169482> splitted in: [1, 18, 8, 210, 14, 6, -43]
2019-05-30T11:28:41.170093> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=210 len=14 SNR=6 RSSI=-43)
2019-05-30T11:28:41.170766> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:28:41.171347> splitted in: [125, 5, 12]
2019-05-30T11:28:41.172095> (BW=125 CR=5 SF=12)
2019-05-30T11:28:41.172739> rcv timestamp (^t): 2019-05-30T11:28:41.160
2019-05-30T11:28:41.173226> 
2019-05-30T11:28:41.173606> Got first framing byte
2019-05-30T11:28:41.174008> --> got LoRa data prefix
2019-05-30T11:28:41.174384> --> DATA with_appkey: read app key sequence
2019-05-30T11:28:41.174739> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:28:41.175102> app key disabled
2019-05-30T11:28:41.175433> valid app key: accept data
2019-05-30T11:28:41.175793> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:28:41.176267> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,210,10,6,-43" "125,5,12" "2019-05-30T11:28:41.160" "B827EB1B65FD"
2019-05-30T11:28:45.853697> CloudEdge: uploading
2019-05-30T11:28:45.854547> CloudEdge: run under guest identity, all data is public
2019-05-30T11:28:45.855479> CloudEdge: check if entity exits
2019-05-30T11:28:45.861363> CloudEdge: will issue requests with
2019-05-30T11:28:45.862534> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:28:45.863425> CloudEdge: returned msg from server is 200
2019-05-30T11:28:45.864266> CloudEdge: entity exists
2019-05-30T11:28:45.865086> CloudEdge: check if measurement exits
2019-05-30T11:28:45.865898> CloudEdge: will issue requests with
2019-05-30T11:28:45.866830> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:28:45.867666> CloudEdge: returned msg from server is 200
2019-05-30T11:28:45.868490> CloudEdge: measurement exists
2019-05-30T11:28:45.869274> CloudEdge: will issue requests with
2019-05-30T11:28:45.870039> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:28:45.870790> data: {"value":95.33,"timestamp":"2019-05-30T11:28:41.160"}
2019-05-30T11:28:45.871515> CloudEdge: returned msg from server is 200
2019-05-30T11:28:45.872242> CloudEdge: upload success
2019-05-30T11:28:46.039031> --> cloud end
2019-05-30T11:28:46.039482> 
2019-05-30T11:29:43.257510> --- rxlora. dst=1 type=0x12 src=8 seq=211 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:29:43.257984> 2019-05-30T11:29:43.257091
2019-05-30T11:29:43.258320> rcv ctrl pkt info (^p): 1,18,8,211,14,6,-42
2019-05-30T11:29:43.258698> splitted in: [1, 18, 8, 211, 14, 6, -42]
2019-05-30T11:29:43.259015> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=211 len=14 SNR=6 RSSI=-42)
2019-05-30T11:29:43.259309> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:29:43.259628> splitted in: [125, 5, 12]
2019-05-30T11:29:43.259974> (BW=125 CR=5 SF=12)
2019-05-30T11:29:43.260285> rcv timestamp (^t): 2019-05-30T11:29:43.253
2019-05-30T11:29:43.260579> 
2019-05-30T11:29:43.260951> Got first framing byte
2019-05-30T11:29:43.261261> --> got LoRa data prefix
2019-05-30T11:29:43.261551> --> DATA with_appkey: read app key sequence
2019-05-30T11:29:43.261889> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:29:43.262244> app key disabled
2019-05-30T11:29:43.262612> valid app key: accept data
2019-05-30T11:29:43.262981> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:29:43.263390> python /app/data_acq/edgeCall.py "TC/95.46" "1,18,8,211,10,6,-42" "125,5,12" "2019-05-30T11:29:43.253" "B827EB1B65FD"
2019-05-30T11:29:48.253873> CloudEdge: uploading
2019-05-30T11:29:48.254783> CloudEdge: run under guest identity, all data is public
2019-05-30T11:29:48.255559> CloudEdge: check if entity exits
2019-05-30T11:29:48.256244> CloudEdge: will issue requests with
2019-05-30T11:29:48.257111> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:29:48.257838> CloudEdge: returned msg from server is 200
2019-05-30T11:29:48.258454> CloudEdge: entity exists
2019-05-30T11:29:48.259033> CloudEdge: check if measurement exits
2019-05-30T11:29:48.259620> CloudEdge: will issue requests with
2019-05-30T11:29:48.260206> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:29:48.260792> CloudEdge: returned msg from server is 200
2019-05-30T11:29:48.261374> CloudEdge: measurement exists
2019-05-30T11:29:48.262051> CloudEdge: will issue requests with
2019-05-30T11:29:48.262644> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:29:48.263246> data: {"value":95.46,"timestamp":"2019-05-30T11:29:43.253"}
2019-05-30T11:29:48.263837> CloudEdge: returned msg from server is 200
2019-05-30T11:29:48.264428> CloudEdge: upload success
2019-05-30T11:29:48.448682> --> cloud end
2019-05-30T11:29:48.449090> 
2019-05-30T11:30:45.351503> --- rxlora. dst=1 type=0x12 src=8 seq=212 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:30:45.352427> 2019-05-30T11:30:45.350902
2019-05-30T11:30:45.353287> rcv ctrl pkt info (^p): 1,18,8,212,14,6,-42
2019-05-30T11:30:45.354232> splitted in: [1, 18, 8, 212, 14, 6, -42]
2019-05-30T11:30:45.355402> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=212 len=14 SNR=6 RSSI=-42)
2019-05-30T11:30:45.356376> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:30:45.357534> splitted in: [125, 5, 12]
2019-05-30T11:30:45.358858> (BW=125 CR=5 SF=12)
2019-05-30T11:30:45.360019> rcv timestamp (^t): 2019-05-30T11:30:45.347
2019-05-30T11:30:45.361030> 
2019-05-30T11:30:45.361904> Got first framing byte
2019-05-30T11:30:45.365161> --> got LoRa data prefix
2019-05-30T11:30:45.365696> --> DATA with_appkey: read app key sequence
2019-05-30T11:30:45.366041> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:30:45.366346> app key disabled
2019-05-30T11:30:45.367028> valid app key: accept data
2019-05-30T11:30:45.367644> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:30:45.368125> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,212,10,6,-42" "125,5,12" "2019-05-30T11:30:45.347" "B827EB1B65FD"
2019-05-30T11:30:50.064607> CloudEdge: uploading
2019-05-30T11:30:50.065464> CloudEdge: run under guest identity, all data is public
2019-05-30T11:30:50.066224> CloudEdge: check if entity exits
2019-05-30T11:30:50.067104> CloudEdge: will issue requests with
2019-05-30T11:30:50.067845> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:30:50.068535> CloudEdge: returned msg from server is 200
2019-05-30T11:30:50.069145> CloudEdge: entity exists
2019-05-30T11:30:50.069751> CloudEdge: check if measurement exits
2019-05-30T11:30:50.070354> CloudEdge: will issue requests with
2019-05-30T11:30:50.070965> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:30:50.071556> CloudEdge: returned msg from server is 200
2019-05-30T11:30:50.072145> CloudEdge: measurement exists
2019-05-30T11:30:50.072740> CloudEdge: will issue requests with
2019-05-30T11:30:50.073336> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:30:50.073922> data: {"value":95.39,"timestamp":"2019-05-30T11:30:45.347"}
2019-05-30T11:30:50.074510> CloudEdge: returned msg from server is 200
2019-05-30T11:30:50.075109> CloudEdge: upload success
2019-05-30T11:30:50.266244> --> cloud end
2019-05-30T11:30:50.266763> 
2019-05-30T11:30:50.267074> Low-level gw status ON
2019-05-30T11:31:47.446178> --- rxlora. dst=1 type=0x12 src=8 seq=213 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:31:47.446819> 2019-05-30T11:31:47.445630
2019-05-30T11:31:47.447338> rcv ctrl pkt info (^p): 1,18,8,213,14,6,-42
2019-05-30T11:31:47.447729> splitted in: [1, 18, 8, 213, 14, 6, -42]
2019-05-30T11:31:47.448114> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=213 len=14 SNR=6 RSSI=-42)
2019-05-30T11:31:47.448480> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:31:47.448896> splitted in: [125, 5, 12]
2019-05-30T11:31:47.449239> (BW=125 CR=5 SF=12)
2019-05-30T11:31:47.449607> rcv timestamp (^t): 2019-05-30T11:31:47.442
2019-05-30T11:31:47.450040> 
2019-05-30T11:31:47.450501> Got first framing byte
2019-05-30T11:31:47.450927> --> got LoRa data prefix
2019-05-30T11:31:47.451377> --> DATA with_appkey: read app key sequence
2019-05-30T11:31:47.451787> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:31:47.452213> app key disabled
2019-05-30T11:31:47.452720> valid app key: accept data
2019-05-30T11:31:47.453173> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:31:47.453576> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,213,10,6,-42" "125,5,12" "2019-05-30T11:31:47.442" "B827EB1B65FD"
2019-05-30T11:31:52.121047> CloudEdge: uploading
2019-05-30T11:31:52.122014> CloudEdge: run under guest identity, all data is public
2019-05-30T11:31:52.122891> CloudEdge: check if entity exits
2019-05-30T11:31:52.123701> CloudEdge: will issue requests with
2019-05-30T11:31:52.124514> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:31:52.125333> CloudEdge: returned msg from server is 200
2019-05-30T11:31:52.126044> CloudEdge: entity exists
2019-05-30T11:31:52.126903> CloudEdge: check if measurement exits
2019-05-30T11:31:52.127722> CloudEdge: will issue requests with
2019-05-30T11:31:52.128459> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:31:52.129168> CloudEdge: returned msg from server is 200
2019-05-30T11:31:52.129870> CloudEdge: measurement exists
2019-05-30T11:31:52.130574> CloudEdge: will issue requests with
2019-05-30T11:31:52.131273> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:31:52.131977> data: {"value":95.39,"timestamp":"2019-05-30T11:31:47.442"}
2019-05-30T11:31:52.132666> CloudEdge: returned msg from server is 200
2019-05-30T11:31:52.133348> CloudEdge: upload success
2019-05-30T11:31:52.320541> --> cloud end
2019-05-30T11:31:52.320944> 
2019-05-30T11:32:49.542234> --- rxlora. dst=1 type=0x12 src=8 seq=214 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:32:49.542776> 2019-05-30T11:32:49.540808
2019-05-30T11:32:49.543232> rcv ctrl pkt info (^p): 1,18,8,214,14,6,-41
2019-05-30T11:32:49.543697> splitted in: [1, 18, 8, 214, 14, 6, -41]
2019-05-30T11:32:49.544135> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=214 len=14 SNR=6 RSSI=-41)
2019-05-30T11:32:49.544513> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:32:49.544891> splitted in: [125, 5, 12]
2019-05-30T11:32:49.545205> (BW=125 CR=5 SF=12)
2019-05-30T11:32:49.545595> rcv timestamp (^t): 2019-05-30T11:32:49.537
2019-05-30T11:32:49.545990> 
2019-05-30T11:32:49.546427> Got first framing byte
2019-05-30T11:32:49.547043> --> got LoRa data prefix
2019-05-30T11:32:49.547554> --> DATA with_appkey: read app key sequence
2019-05-30T11:32:49.548029> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:32:49.548433> app key disabled
2019-05-30T11:32:49.548958> valid app key: accept data
2019-05-30T11:32:49.549372> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:32:49.549988> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,214,10,6,-41" "125,5,12" "2019-05-30T11:32:49.537" "B827EB1B65FD"
2019-05-30T11:32:54.371835> CloudEdge: uploading
2019-05-30T11:32:54.372645> CloudEdge: run under guest identity, all data is public
2019-05-30T11:32:54.373375> CloudEdge: check if entity exits
2019-05-30T11:32:54.374009> CloudEdge: will issue requests with
2019-05-30T11:32:54.374629> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:32:54.375247> CloudEdge: returned msg from server is 200
2019-05-30T11:32:54.375838> CloudEdge: entity exists
2019-05-30T11:32:54.376400> CloudEdge: check if measurement exits
2019-05-30T11:32:54.377180> CloudEdge: will issue requests with
2019-05-30T11:32:54.377861> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:32:54.378465> CloudEdge: returned msg from server is 200
2019-05-30T11:32:54.379039> CloudEdge: measurement exists
2019-05-30T11:32:54.379611> CloudEdge: will issue requests with
2019-05-30T11:32:54.380176> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:32:54.380741> data: {"value":95.39,"timestamp":"2019-05-30T11:32:49.537"}
2019-05-30T11:32:54.381380> CloudEdge: returned msg from server is 200
2019-05-30T11:32:54.387270> CloudEdge: upload success
2019-05-30T11:32:54.578042> --> cloud end
2019-05-30T11:32:54.578987> 
2019-05-30T11:33:51.637209> --- rxlora. dst=1 type=0x12 src=8 seq=215 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:33:51.637786> 2019-05-30T11:33:51.636638
2019-05-30T11:33:51.638218> rcv ctrl pkt info (^p): 1,18,8,215,14,6,-42
2019-05-30T11:33:51.638572> splitted in: [1, 18, 8, 215, 14, 6, -42]
2019-05-30T11:33:51.638894> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=215 len=14 SNR=6 RSSI=-42)
2019-05-30T11:33:51.639217> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:33:51.639590> splitted in: [125, 5, 12]
2019-05-30T11:33:51.639966> (BW=125 CR=5 SF=12)
2019-05-30T11:33:51.640310> rcv timestamp (^t): 2019-05-30T11:33:51.633
2019-05-30T11:33:51.640629> 
2019-05-30T11:33:51.641022> Got first framing byte
2019-05-30T11:33:51.641358> --> got LoRa data prefix
2019-05-30T11:33:51.641741> --> DATA with_appkey: read app key sequence
2019-05-30T11:33:51.642060> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:33:51.642359> app key disabled
2019-05-30T11:33:51.642691> valid app key: accept data
2019-05-30T11:33:51.643027> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:33:51.643390> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,215,10,6,-42" "125,5,12" "2019-05-30T11:33:51.633" "B827EB1B65FD"
2019-05-30T11:33:56.332491> CloudEdge: uploading
2019-05-30T11:33:56.333337> CloudEdge: run under guest identity, all data is public
2019-05-30T11:33:56.334076> CloudEdge: check if entity exits
2019-05-30T11:33:56.334737> CloudEdge: will issue requests with
2019-05-30T11:33:56.335392> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:33:56.336026> CloudEdge: returned msg from server is 200
2019-05-30T11:33:56.336754> CloudEdge: entity exists
2019-05-30T11:33:56.337377> CloudEdge: check if measurement exits
2019-05-30T11:33:56.337958> CloudEdge: will issue requests with
2019-05-30T11:33:56.338536> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:33:56.339103> CloudEdge: returned msg from server is 200
2019-05-30T11:33:56.339682> CloudEdge: measurement exists
2019-05-30T11:33:56.340268> CloudEdge: will issue requests with
2019-05-30T11:33:56.340859> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:33:56.341432> data: {"value":95.33,"timestamp":"2019-05-30T11:33:51.633"}
2019-05-30T11:33:56.342013> CloudEdge: returned msg from server is 200
2019-05-30T11:33:56.342602> CloudEdge: upload success
2019-05-30T11:33:56.547202> --> cloud end
2019-05-30T11:33:56.547606> 
2019-05-30T11:34:53.732254> --- rxlora. dst=1 type=0x12 src=8 seq=216 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:34:53.732766> 2019-05-30T11:34:53.731840
2019-05-30T11:34:53.733187> rcv ctrl pkt info (^p): 1,18,8,216,14,7,-42
2019-05-30T11:34:53.733601> splitted in: [1, 18, 8, 216, 14, 7, -42]
2019-05-30T11:34:53.733972> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=216 len=14 SNR=7 RSSI=-42)
2019-05-30T11:34:53.734338> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:34:53.734753> splitted in: [125, 5, 12]
2019-05-30T11:34:53.735122> (BW=125 CR=5 SF=12)
2019-05-30T11:34:53.735475> rcv timestamp (^t): 2019-05-30T11:34:53.728
2019-05-30T11:34:53.735795> 
2019-05-30T11:34:53.736260> Got first framing byte
2019-05-30T11:34:53.736801> --> got LoRa data prefix
2019-05-30T11:34:53.737348> --> DATA with_appkey: read app key sequence
2019-05-30T11:34:53.737801> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:34:53.738206> app key disabled
2019-05-30T11:34:53.738683> valid app key: accept data
2019-05-30T11:34:53.739114> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:34:53.739537> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,216,10,7,-42" "125,5,12" "2019-05-30T11:34:53.728" "B827EB1B65FD"
2019-05-30T11:34:58.793831> CloudEdge: uploading
2019-05-30T11:34:58.799969> CloudEdge: run under guest identity, all data is public
2019-05-30T11:34:58.800442> CloudEdge: check if entity exits
2019-05-30T11:34:58.800764> CloudEdge: will issue requests with
2019-05-30T11:34:58.801065> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:34:58.801369> CloudEdge: returned msg from server is 200
2019-05-30T11:34:58.801657> CloudEdge: entity exists
2019-05-30T11:34:58.801939> CloudEdge: check if measurement exits
2019-05-30T11:34:58.802226> CloudEdge: will issue requests with
2019-05-30T11:34:58.802546> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:34:58.802868> CloudEdge: returned msg from server is 200
2019-05-30T11:34:58.803150> CloudEdge: measurement exists
2019-05-30T11:34:58.803437> CloudEdge: will issue requests with
2019-05-30T11:34:58.803724> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:34:58.804008> data: {"value":95.33,"timestamp":"2019-05-30T11:34:53.728"}
2019-05-30T11:34:58.804289> CloudEdge: returned msg from server is 200
2019-05-30T11:34:58.804571> CloudEdge: upload success
2019-05-30T11:34:58.955842> --> cloud end
2019-05-30T11:34:58.956229> 
2019-05-30T11:35:55.827691> --- rxlora. dst=1 type=0x12 src=8 seq=217 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:35:55.828147> 2019-05-30T11:35:55.825857
2019-05-30T11:35:55.828600> rcv ctrl pkt info (^p): 1,18,8,217,14,7,-41
2019-05-30T11:35:55.828960> splitted in: [1, 18, 8, 217, 14, 7, -41]
2019-05-30T11:35:55.829264> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=217 len=14 SNR=7 RSSI=-41)
2019-05-30T11:35:55.829555> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:35:55.829863> splitted in: [125, 5, 12]
2019-05-30T11:35:55.830159> (BW=125 CR=5 SF=12)
2019-05-30T11:35:55.830474> rcv timestamp (^t): 2019-05-30T11:35:55.822
2019-05-30T11:35:55.830840> 
2019-05-30T11:35:55.831207> Got first framing byte
2019-05-30T11:35:55.831547> --> got LoRa data prefix
2019-05-30T11:35:55.831923> --> DATA with_appkey: read app key sequence
2019-05-30T11:35:55.832318> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:35:55.832676> app key disabled
2019-05-30T11:35:55.833017> valid app key: accept data
2019-05-30T11:35:55.833354> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:35:55.833677> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,217,10,7,-41" "125,5,12" "2019-05-30T11:35:55.822" "B827EB1B65FD"
2019-05-30T11:36:02.282355> CloudEdge: uploading
2019-05-30T11:36:02.283001> CloudEdge: run under guest identity, all data is public
2019-05-30T11:36:02.283396> CloudEdge: check if entity exits
2019-05-30T11:36:02.283720> CloudEdge: will issue requests with
2019-05-30T11:36:02.284026> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:36:02.284329> CloudEdge: returned msg from server is 200
2019-05-30T11:36:02.284629> CloudEdge: entity exists
2019-05-30T11:36:02.284933> CloudEdge: check if measurement exits
2019-05-30T11:36:02.285225> CloudEdge: will issue requests with
2019-05-30T11:36:02.285510> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:36:02.285795> CloudEdge: returned msg from server is 200
2019-05-30T11:36:02.286109> CloudEdge: measurement exists
2019-05-30T11:36:02.286432> CloudEdge: will issue requests with
2019-05-30T11:36:02.293592> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:36:02.294289> data: {"value":95.39,"timestamp":"2019-05-30T11:35:55.822"}
2019-05-30T11:36:02.294859> CloudEdge: returned msg from server is 200
2019-05-30T11:36:02.295380> CloudEdge: upload success
2019-05-30T11:36:02.454000> --> cloud end
2019-05-30T11:36:02.454434> 
2019-05-30T11:36:57.921493> --- rxlora. dst=1 type=0x12 src=8 seq=218 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:36:57.921973> 2019-05-30T11:36:57.921058
2019-05-30T11:36:57.922357> rcv ctrl pkt info (^p): 1,18,8,218,14,6,-42
2019-05-30T11:36:57.922658> splitted in: [1, 18, 8, 218, 14, 6, -42]
2019-05-30T11:36:57.922931> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=218 len=14 SNR=6 RSSI=-42)
2019-05-30T11:36:57.923198> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:36:57.923471> splitted in: [125, 5, 12]
2019-05-30T11:36:57.923823> (BW=125 CR=5 SF=12)
2019-05-30T11:36:57.924133> rcv timestamp (^t): 2019-05-30T11:36:57.917
2019-05-30T11:36:57.924421> 
2019-05-30T11:36:57.924780> Got first framing byte
2019-05-30T11:36:57.925089> --> got LoRa data prefix
2019-05-30T11:36:57.925363> --> DATA with_appkey: read app key sequence
2019-05-30T11:36:57.925657> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:36:57.926020> app key disabled
2019-05-30T11:36:57.926362> valid app key: accept data
2019-05-30T11:36:57.927797> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:36:57.928559> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,218,10,6,-42" "125,5,12" "2019-05-30T11:36:57.917" "B827EB1B65FD"
2019-05-30T11:37:03.009691> CloudEdge: uploading
2019-05-30T11:37:03.010521> CloudEdge: run under guest identity, all data is public
2019-05-30T11:37:03.011256> CloudEdge: check if entity exits
2019-05-30T11:37:03.011945> CloudEdge: will issue requests with
2019-05-30T11:37:03.012602> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:37:03.013240> CloudEdge: returned msg from server is 200
2019-05-30T11:37:03.013835> CloudEdge: entity exists
2019-05-30T11:37:03.014408> CloudEdge: check if measurement exits
2019-05-30T11:37:03.014977> CloudEdge: will issue requests with
2019-05-30T11:37:03.015552> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:37:03.016107> CloudEdge: returned msg from server is 200
2019-05-30T11:37:03.016863> CloudEdge: measurement exists
2019-05-30T11:37:03.017498> CloudEdge: will issue requests with
2019-05-30T11:37:03.018081> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:37:03.018654> data: {"value":95.39,"timestamp":"2019-05-30T11:36:57.917"}
2019-05-30T11:37:03.019212> CloudEdge: returned msg from server is 200
2019-05-30T11:37:03.019787> CloudEdge: upload success
2019-05-30T11:37:03.212982> --> cloud end
2019-05-30T11:37:03.213389> 
2019-05-30T11:37:56.918309> 2019-05-30 11:37:56.917452
2019-05-30T11:37:56.918867> post status: gw ON
2019-05-30T11:37:56.919288> post status: executing periodic tasks
2019-05-30T11:37:58.071245> no timezone support, time will be expressed only in local time
2019-05-30T11:37:58.071609> post status: start running
2019-05-30T11:37:59.116677> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:37:59.117295> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:37:59.117719> get_gps.py: invalid serial port
2019-05-30T11:37:59.255400> post status: dynamic GPS is requested
2019-05-30T11:37:59.255819> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:37:59.256206> post status get GPS: no GPS coordinates
2019-05-30T11:37:59.256515> post status: show current GPS position
2019-05-30T11:37:59.257092> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:37:59.257425> post status: exiting
2019-05-30T11:38:00.017123> --- rxlora. dst=1 type=0x12 src=8 seq=219 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:38:00.017572> 2019-05-30T11:38:00.016199
2019-05-30T11:38:00.018029> rcv ctrl pkt info (^p): 1,18,8,219,14,7,-42
2019-05-30T11:38:00.018391> splitted in: [1, 18, 8, 219, 14, 7, -42]
2019-05-30T11:38:00.018746> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=219 len=14 SNR=7 RSSI=-42)
2019-05-30T11:38:00.019264> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:38:00.019667> splitted in: [125, 5, 12]
2019-05-30T11:38:00.020042> (BW=125 CR=5 SF=12)
2019-05-30T11:38:00.020417> rcv timestamp (^t): 2019-05-30T11:38:00.012
2019-05-30T11:38:00.020856> 
2019-05-30T11:38:00.021240> Got first framing byte
2019-05-30T11:38:00.021700> --> got LoRa data prefix
2019-05-30T11:38:00.022161> --> DATA with_appkey: read app key sequence
2019-05-30T11:38:00.022650> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:38:00.023137> app key disabled
2019-05-30T11:38:00.023575> valid app key: accept data
2019-05-30T11:38:00.024009> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:38:00.024417> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,219,10,7,-42" "125,5,12" "2019-05-30T11:38:00.012" "B827EB1B65FD"
2019-05-30T11:38:04.962430> CloudEdge: uploading
2019-05-30T11:38:04.963327> CloudEdge: run under guest identity, all data is public
2019-05-30T11:38:04.964072> CloudEdge: check if entity exits
2019-05-30T11:38:04.964724> CloudEdge: will issue requests with
2019-05-30T11:38:04.965375> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:38:04.966029> CloudEdge: returned msg from server is 200
2019-05-30T11:38:04.967276> CloudEdge: entity exists
2019-05-30T11:38:04.968562> CloudEdge: check if measurement exits
2019-05-30T11:38:04.969744> CloudEdge: will issue requests with
2019-05-30T11:38:04.970722> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:38:04.971378> CloudEdge: returned msg from server is 200
2019-05-30T11:38:04.981403> CloudEdge: measurement exists
2019-05-30T11:38:04.982287> CloudEdge: will issue requests with
2019-05-30T11:38:04.984694> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:38:04.985762> data: {"value":95.39,"timestamp":"2019-05-30T11:38:00.012"}
2019-05-30T11:38:04.986781> CloudEdge: returned msg from server is 200
2019-05-30T11:38:04.987885> CloudEdge: upload success
2019-05-30T11:38:05.172673> --> cloud end
2019-05-30T11:38:05.173161> 
2019-05-30T11:39:02.114026> --- rxlora. dst=1 type=0x12 src=8 seq=220 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:39:02.114501> 2019-05-30T11:39:02.111056
2019-05-30T11:39:02.114854> rcv ctrl pkt info (^p): 1,18,8,220,14,6,-41
2019-05-30T11:39:02.115162> splitted in: [1, 18, 8, 220, 14, 6, -41]
2019-05-30T11:39:02.115459> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=220 len=14 SNR=6 RSSI=-41)
2019-05-30T11:39:02.115822> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:39:02.116177> splitted in: [125, 5, 12]
2019-05-30T11:39:02.116648> (BW=125 CR=5 SF=12)
2019-05-30T11:39:02.117049> rcv timestamp (^t): 2019-05-30T11:39:02.107
2019-05-30T11:39:02.117466> 
2019-05-30T11:39:02.117848> Got first framing byte
2019-05-30T11:39:02.118210> --> got LoRa data prefix
2019-05-30T11:39:02.118554> --> DATA with_appkey: read app key sequence
2019-05-30T11:39:02.118902> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:39:02.119229> app key disabled
2019-05-30T11:39:02.119683> valid app key: accept data
2019-05-30T11:39:02.120068> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:39:02.120387> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,220,10,6,-41" "125,5,12" "2019-05-30T11:39:02.107" "B827EB1B65FD"
2019-05-30T11:39:06.809293> CloudEdge: uploading
2019-05-30T11:39:06.809973> CloudEdge: run under guest identity, all data is public
2019-05-30T11:39:06.810539> CloudEdge: check if entity exits
2019-05-30T11:39:06.810994> CloudEdge: will issue requests with
2019-05-30T11:39:06.811505> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:39:06.812013> CloudEdge: returned msg from server is 200
2019-05-30T11:39:06.812514> CloudEdge: entity exists
2019-05-30T11:39:06.812898> CloudEdge: check if measurement exits
2019-05-30T11:39:06.813308> CloudEdge: will issue requests with
2019-05-30T11:39:06.813653> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:39:06.814083> CloudEdge: returned msg from server is 200
2019-05-30T11:39:06.814461> CloudEdge: measurement exists
2019-05-30T11:39:06.814947> CloudEdge: will issue requests with
2019-05-30T11:39:06.815324> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:39:06.815738> data: {"value":95.39,"timestamp":"2019-05-30T11:39:02.107"}
2019-05-30T11:39:06.816088> CloudEdge: returned msg from server is 200
2019-05-30T11:39:06.816469> CloudEdge: upload success
2019-05-30T11:39:06.989300> --> cloud end
2019-05-30T11:39:06.989970> 
2019-05-30T11:40:04.204238> --- rxlora. dst=1 type=0x12 src=8 seq=221 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:40:04.204700> 2019-05-30T11:40:04.203812
2019-05-30T11:40:04.205021> rcv ctrl pkt info (^p): 1,18,8,221,14,6,-42
2019-05-30T11:40:04.205336> splitted in: [1, 18, 8, 221, 14, 6, -42]
2019-05-30T11:40:04.205623> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=221 len=14 SNR=6 RSSI=-42)
2019-05-30T11:40:04.205913> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:40:04.206196> splitted in: [125, 5, 12]
2019-05-30T11:40:04.207076> (BW=125 CR=5 SF=12)
2019-05-30T11:40:04.208008> rcv timestamp (^t): 2019-05-30T11:40:04.200
2019-05-30T11:40:04.208975> 
2019-05-30T11:40:04.210057> Got first framing byte
2019-05-30T11:40:04.211409> --> got LoRa data prefix
2019-05-30T11:40:04.212481> --> DATA with_appkey: read app key sequence
2019-05-30T11:40:04.213954> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:40:04.214767> app key disabled
2019-05-30T11:40:04.215643> valid app key: accept data
2019-05-30T11:40:04.216475> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:40:04.217334> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,221,10,6,-42" "125,5,12" "2019-05-30T11:40:04.200" "B827EB1B65FD"
2019-05-30T11:40:08.969103> CloudEdge: uploading
2019-05-30T11:40:08.969965> CloudEdge: run under guest identity, all data is public
2019-05-30T11:40:08.970691> CloudEdge: check if entity exits
2019-05-30T11:40:08.971346> CloudEdge: will issue requests with
2019-05-30T11:40:08.971994> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:40:08.972619> CloudEdge: returned msg from server is 200
2019-05-30T11:40:08.973202> CloudEdge: entity exists
2019-05-30T11:40:08.973791> CloudEdge: check if measurement exits
2019-05-30T11:40:08.974375> CloudEdge: will issue requests with
2019-05-30T11:40:08.974947> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:40:08.975519> CloudEdge: returned msg from server is 200
2019-05-30T11:40:08.976088> CloudEdge: measurement exists
2019-05-30T11:40:08.976812> CloudEdge: will issue requests with
2019-05-30T11:40:08.977594> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:40:08.978222> data: {"value":95.33,"timestamp":"2019-05-30T11:40:04.200"}
2019-05-30T11:40:08.978826> CloudEdge: returned msg from server is 200
2019-05-30T11:40:08.979419> CloudEdge: upload success
2019-05-30T11:40:09.155519> --> cloud end
2019-05-30T11:40:09.155889> 
2019-05-30T11:41:06.298978> --- rxlora. dst=1 type=0x12 src=8 seq=222 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:41:06.299456> 2019-05-30T11:41:06.298566
2019-05-30T11:41:06.299805> rcv ctrl pkt info (^p): 1,18,8,222,14,6,-42
2019-05-30T11:41:06.300180> splitted in: [1, 18, 8, 222, 14, 6, -42]
2019-05-30T11:41:06.300509> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=222 len=14 SNR=6 RSSI=-42)
2019-05-30T11:41:06.300803> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:41:06.301128> splitted in: [125, 5, 12]
2019-05-30T11:41:06.301478> (BW=125 CR=5 SF=12)
2019-05-30T11:41:06.301791> rcv timestamp (^t): 2019-05-30T11:41:06.295
2019-05-30T11:41:06.302083> 
2019-05-30T11:41:06.302445> Got first framing byte
2019-05-30T11:41:06.302756> --> got LoRa data prefix
2019-05-30T11:41:06.303045> --> DATA with_appkey: read app key sequence
2019-05-30T11:41:06.303383> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:41:06.303743> app key disabled
2019-05-30T11:41:06.304102> valid app key: accept data
2019-05-30T11:41:06.304506> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:41:06.304911> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,222,10,6,-42" "125,5,12" "2019-05-30T11:41:06.295" "B827EB1B65FD"
2019-05-30T11:41:11.024065> CloudEdge: uploading
2019-05-30T11:41:11.024752> CloudEdge: run under guest identity, all data is public
2019-05-30T11:41:11.025339> CloudEdge: check if entity exits
2019-05-30T11:41:11.025955> CloudEdge: will issue requests with
2019-05-30T11:41:11.026786> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:41:11.027672> CloudEdge: returned msg from server is 200
2019-05-30T11:41:11.029448> CloudEdge: entity exists
2019-05-30T11:41:11.030769> CloudEdge: check if measurement exits
2019-05-30T11:41:11.031558> CloudEdge: will issue requests with
2019-05-30T11:41:11.032454> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:41:11.033147> CloudEdge: returned msg from server is 200
2019-05-30T11:41:11.033770> CloudEdge: measurement exists
2019-05-30T11:41:11.034368> CloudEdge: will issue requests with
2019-05-30T11:41:11.034950> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:41:11.035529> data: {"value":95.39,"timestamp":"2019-05-30T11:41:06.295"}
2019-05-30T11:41:11.036096> CloudEdge: returned msg from server is 200
2019-05-30T11:41:11.037076> CloudEdge: upload success
2019-05-30T11:41:11.207165> --> cloud end
2019-05-30T11:41:11.207570> 
2019-05-30T11:41:11.207841> Low-level gw status ON
2019-05-30T11:42:08.396126> --- rxlora. dst=1 type=0x12 src=8 seq=223 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:42:08.396828> 2019-05-30T11:42:08.393083
2019-05-30T11:42:08.397360> rcv ctrl pkt info (^p): 1,18,8,223,14,6,-43
2019-05-30T11:42:08.397746> splitted in: [1, 18, 8, 223, 14, 6, -43]
2019-05-30T11:42:08.398188> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=223 len=14 SNR=6 RSSI=-43)
2019-05-30T11:42:08.398610> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:42:08.399051> splitted in: [125, 5, 12]
2019-05-30T11:42:08.399472> (BW=125 CR=5 SF=12)
2019-05-30T11:42:08.399963> rcv timestamp (^t): 2019-05-30T11:42:08.389
2019-05-30T11:42:08.400386> 
2019-05-30T11:42:08.400842> Got first framing byte
2019-05-30T11:42:08.401232> --> got LoRa data prefix
2019-05-30T11:42:08.401644> --> DATA with_appkey: read app key sequence
2019-05-30T11:42:08.402158> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:42:08.402698> app key disabled
2019-05-30T11:42:08.403065> valid app key: accept data
2019-05-30T11:42:08.403500> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:42:08.403842> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,223,10,6,-43" "125,5,12" "2019-05-30T11:42:08.389" "B827EB1B65FD"
2019-05-30T11:42:12.771963> CloudEdge: uploading
2019-05-30T11:42:12.772839> CloudEdge: run under guest identity, all data is public
2019-05-30T11:42:12.773572> CloudEdge: check if entity exits
2019-05-30T11:42:12.774245> CloudEdge: will issue requests with
2019-05-30T11:42:12.774903> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:42:12.775544> CloudEdge: returned msg from server is 200
2019-05-30T11:42:12.776143> CloudEdge: entity exists
2019-05-30T11:42:12.776863> CloudEdge: check if measurement exits
2019-05-30T11:42:12.777521> CloudEdge: will issue requests with
2019-05-30T11:42:12.778107> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:42:12.778680> CloudEdge: returned msg from server is 200
2019-05-30T11:42:12.779548> CloudEdge: measurement exists
2019-05-30T11:42:12.780204> CloudEdge: will issue requests with
2019-05-30T11:42:12.780798> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:42:12.781375> data: {"value":95.39,"timestamp":"2019-05-30T11:42:08.389"}
2019-05-30T11:42:12.782072> CloudEdge: returned msg from server is 200
2019-05-30T11:42:12.782652> CloudEdge: upload success
2019-05-30T11:42:12.957905> --> cloud end
2019-05-30T11:42:12.958280> 
2019-05-30T11:43:10.488758> --- rxlora. dst=1 type=0x12 src=8 seq=224 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:43:10.489202> 2019-05-30T11:43:10.488304
2019-05-30T11:43:10.489570> rcv ctrl pkt info (^p): 1,18,8,224,14,6,-43
2019-05-30T11:43:10.489894> splitted in: [1, 18, 8, 224, 14, 6, -43]
2019-05-30T11:43:10.490184> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=224 len=14 SNR=6 RSSI=-43)
2019-05-30T11:43:10.490468> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:43:10.490778> splitted in: [125, 5, 12]
2019-05-30T11:43:10.491145> (BW=125 CR=5 SF=12)
2019-05-30T11:43:10.491467> rcv timestamp (^t): 2019-05-30T11:43:10.484
2019-05-30T11:43:10.491765> 
2019-05-30T11:43:10.492133> Got first framing byte
2019-05-30T11:43:10.492435> --> got LoRa data prefix
2019-05-30T11:43:10.492721> --> DATA with_appkey: read app key sequence
2019-05-30T11:43:10.493064> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:43:10.493468> app key disabled
2019-05-30T11:43:10.493876> valid app key: accept data
2019-05-30T11:43:10.494205> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:43:10.494607> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,224,10,6,-43" "125,5,12" "2019-05-30T11:43:10.484" "B827EB1B65FD"
2019-05-30T11:43:15.441272> CloudEdge: uploading
2019-05-30T11:43:15.442151> CloudEdge: run under guest identity, all data is public
2019-05-30T11:43:15.442903> CloudEdge: check if entity exits
2019-05-30T11:43:15.443590> CloudEdge: will issue requests with
2019-05-30T11:43:15.444247> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:43:15.444900> CloudEdge: returned msg from server is 200
2019-05-30T11:43:15.445591> CloudEdge: entity exists
2019-05-30T11:43:15.446466> CloudEdge: check if measurement exits
2019-05-30T11:43:15.447351> CloudEdge: will issue requests with
2019-05-30T11:43:15.448006> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:43:15.448618> CloudEdge: returned msg from server is 200
2019-05-30T11:43:15.449224> CloudEdge: measurement exists
2019-05-30T11:43:15.449817> CloudEdge: will issue requests with
2019-05-30T11:43:15.450424> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:43:15.451024> data: {"value":95.33,"timestamp":"2019-05-30T11:43:10.484"}
2019-05-30T11:43:15.451625> CloudEdge: returned msg from server is 200
2019-05-30T11:43:15.452573> CloudEdge: upload success
2019-05-30T11:43:15.660207> --> cloud end
2019-05-30T11:43:15.660629> 
2019-05-30T11:44:12.585596> --- rxlora. dst=1 type=0x12 src=8 seq=225 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T11:44:12.585979> 2019-05-30T11:44:12.583731
2019-05-30T11:44:12.586249> rcv ctrl pkt info (^p): 1,18,8,225,14,6,-43
2019-05-30T11:44:12.586515> splitted in: [1, 18, 8, 225, 14, 6, -43]
2019-05-30T11:44:12.587045> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=225 len=14 SNR=6 RSSI=-43)
2019-05-30T11:44:12.587345> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:44:12.587620> splitted in: [125, 5, 12]
2019-05-30T11:44:12.587964> (BW=125 CR=5 SF=12)
2019-05-30T11:44:12.588290> rcv timestamp (^t): 2019-05-30T11:44:12.580
2019-05-30T11:44:12.588581> 
2019-05-30T11:44:12.588868> Got first framing byte
2019-05-30T11:44:12.589162> --> got LoRa data prefix
2019-05-30T11:44:12.589457> --> DATA with_appkey: read app key sequence
2019-05-30T11:44:12.589841> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:44:12.590192> app key disabled
2019-05-30T11:44:12.590547> valid app key: accept data
2019-05-30T11:44:12.590896> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:44:12.591243> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,225,10,6,-43" "125,5,12" "2019-05-30T11:44:12.580" "B827EB1B65FD"
2019-05-30T11:44:19.851771> CloudEdge: uploading
2019-05-30T11:44:19.852701> CloudEdge: run under guest identity, all data is public
2019-05-30T11:44:19.853401> CloudEdge: check if entity exits
2019-05-30T11:44:19.854020> CloudEdge: will issue requests with
2019-05-30T11:44:19.854635> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:44:19.855242> CloudEdge: returned msg from server is 200
2019-05-30T11:44:19.855821> CloudEdge: entity exists
2019-05-30T11:44:19.856377> CloudEdge: check if measurement exits
2019-05-30T11:44:19.857276> CloudEdge: will issue requests with
2019-05-30T11:44:19.857905> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:44:19.858474> CloudEdge: returned msg from server is 200
2019-05-30T11:44:19.859043> CloudEdge: measurement exists
2019-05-30T11:44:19.859603> CloudEdge: will issue requests with
2019-05-30T11:44:19.860157> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:44:19.860704> data: {"value":95.33,"timestamp":"2019-05-30T11:44:12.580"}
2019-05-30T11:44:19.861255> CloudEdge: returned msg from server is 200
2019-05-30T11:44:19.861818> CloudEdge: upload success
2019-05-30T11:44:20.029879> --> cloud end
2019-05-30T11:44:20.030247> 
2019-05-30T11:45:14.678249> --- rxlora. dst=1 type=0x12 src=8 seq=226 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T11:45:14.678713> 2019-05-30T11:45:14.677638
2019-05-30T11:45:14.679093> rcv ctrl pkt info (^p): 1,18,8,226,14,6,-45
2019-05-30T11:45:14.679390> splitted in: [1, 18, 8, 226, 14, 6, -45]
2019-05-30T11:45:14.679664> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=226 len=14 SNR=6 RSSI=-45)
2019-05-30T11:45:14.679942> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:45:14.680312> splitted in: [125, 5, 12]
2019-05-30T11:45:14.680647> (BW=125 CR=5 SF=12)
2019-05-30T11:45:14.680943> rcv timestamp (^t): 2019-05-30T11:45:14.674
2019-05-30T11:45:14.681229> 
2019-05-30T11:45:14.681525> Got first framing byte
2019-05-30T11:45:14.681812> --> got LoRa data prefix
2019-05-30T11:45:14.682091> --> DATA with_appkey: read app key sequence
2019-05-30T11:45:14.682412> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:45:14.682765> app key disabled
2019-05-30T11:45:14.683184> valid app key: accept data
2019-05-30T11:45:14.683504> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:45:14.683899> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,226,10,6,-45" "125,5,12" "2019-05-30T11:45:14.674" "B827EB1B65FD"
2019-05-30T11:45:19.346690> CloudEdge: uploading
2019-05-30T11:45:19.347470> CloudEdge: run under guest identity, all data is public
2019-05-30T11:45:19.348072> CloudEdge: check if entity exits
2019-05-30T11:45:19.348640> CloudEdge: will issue requests with
2019-05-30T11:45:19.349217> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:45:19.349808> CloudEdge: returned msg from server is 200
2019-05-30T11:45:19.350371> CloudEdge: entity exists
2019-05-30T11:45:19.350931> CloudEdge: check if measurement exits
2019-05-30T11:45:19.351497> CloudEdge: will issue requests with
2019-05-30T11:45:19.352064> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:45:19.352623> CloudEdge: returned msg from server is 200
2019-05-30T11:45:19.353189> CloudEdge: measurement exists
2019-05-30T11:45:19.353750> CloudEdge: will issue requests with
2019-05-30T11:45:19.354309> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:45:19.354870> data: {"value":95.33,"timestamp":"2019-05-30T11:45:14.674"}
2019-05-30T11:45:19.355441> CloudEdge: returned msg from server is 200
2019-05-30T11:45:19.356001> CloudEdge: upload success
2019-05-30T11:45:19.547632> --> cloud end
2019-05-30T11:45:19.548037> 
2019-05-30T11:46:16.776989> --- rxlora. dst=1 type=0x12 src=8 seq=227 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:46:16.777594> 2019-05-30T11:46:16.773950
2019-05-30T11:46:16.777985> rcv ctrl pkt info (^p): 1,18,8,227,14,6,-42
2019-05-30T11:46:16.778309> splitted in: [1, 18, 8, 227, 14, 6, -42]
2019-05-30T11:46:16.778602> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=227 len=14 SNR=6 RSSI=-42)
2019-05-30T11:46:16.778896> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:46:16.779182> splitted in: [125, 5, 12]
2019-05-30T11:46:16.779455> (BW=125 CR=5 SF=12)
2019-05-30T11:46:16.779782> rcv timestamp (^t): 2019-05-30T11:46:16.770
2019-05-30T11:46:16.780131> 
2019-05-30T11:46:16.780474> Got first framing byte
2019-05-30T11:46:16.780797> --> got LoRa data prefix
2019-05-30T11:46:16.781184> --> DATA with_appkey: read app key sequence
2019-05-30T11:46:16.781541> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:46:16.781916> app key disabled
2019-05-30T11:46:16.782346> valid app key: accept data
2019-05-30T11:46:16.782728> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:46:16.783099> python /app/data_acq/edgeCall.py "TC/95.39" "1,18,8,227,10,6,-42" "125,5,12" "2019-05-30T11:46:16.770" "B827EB1B65FD"
2019-05-30T11:46:21.377290> CloudEdge: uploading
2019-05-30T11:46:21.378140> CloudEdge: run under guest identity, all data is public
2019-05-30T11:46:21.378891> CloudEdge: check if entity exits
2019-05-30T11:46:21.379565> CloudEdge: will issue requests with
2019-05-30T11:46:21.380202> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:46:21.380853> CloudEdge: returned msg from server is 200
2019-05-30T11:46:21.381477> CloudEdge: entity exists
2019-05-30T11:46:21.382059> CloudEdge: check if measurement exits
2019-05-30T11:46:21.382638> CloudEdge: will issue requests with
2019-05-30T11:46:21.383220> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:46:21.383795> CloudEdge: returned msg from server is 200
2019-05-30T11:46:21.384381> CloudEdge: measurement exists
2019-05-30T11:46:21.384968> CloudEdge: will issue requests with
2019-05-30T11:46:21.385550> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:46:21.386129> data: {"value":95.39,"timestamp":"2019-05-30T11:46:16.770"}
2019-05-30T11:46:21.387026> CloudEdge: returned msg from server is 200
2019-05-30T11:46:21.387825> CloudEdge: upload success
2019-05-30T11:46:21.570006> --> cloud end
2019-05-30T11:46:21.573288> 
2019-05-30T11:47:18.872511> --- rxlora. dst=1 type=0x12 src=8 seq=228 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T11:47:18.873034> 2019-05-30T11:47:18.870522
2019-05-30T11:47:18.873472> rcv ctrl pkt info (^p): 1,18,8,228,14,7,-40
2019-05-30T11:47:18.873824> splitted in: [1, 18, 8, 228, 14, 7, -40]
2019-05-30T11:47:18.874124> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=228 len=14 SNR=7 RSSI=-40)
2019-05-30T11:47:18.874432> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:47:18.874734> splitted in: [125, 5, 12]
2019-05-30T11:47:18.875025> (BW=125 CR=5 SF=12)
2019-05-30T11:47:18.875357> rcv timestamp (^t): 2019-05-30T11:47:18.867
2019-05-30T11:47:18.875726> 
2019-05-30T11:47:18.876092> Got first framing byte
2019-05-30T11:47:18.876432> --> got LoRa data prefix
2019-05-30T11:47:18.876988> --> DATA with_appkey: read app key sequence
2019-05-30T11:47:18.877411> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:47:18.877783> app key disabled
2019-05-30T11:47:18.878125> valid app key: accept data
2019-05-30T11:47:18.878470> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:47:18.878814> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,228,10,7,-40" "125,5,12" "2019-05-30T11:47:18.867" "B827EB1B65FD"
2019-05-30T11:47:23.124430> CloudEdge: uploading
2019-05-30T11:47:23.125208> CloudEdge: run under guest identity, all data is public
2019-05-30T11:47:23.125880> CloudEdge: check if entity exits
2019-05-30T11:47:23.126521> CloudEdge: will issue requests with
2019-05-30T11:47:23.127348> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:47:23.128093> CloudEdge: returned msg from server is 200
2019-05-30T11:47:23.128732> CloudEdge: entity exists
2019-05-30T11:47:23.129341> CloudEdge: check if measurement exits
2019-05-30T11:47:23.129970> CloudEdge: will issue requests with
2019-05-30T11:47:23.130588> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:47:23.131201> CloudEdge: returned msg from server is 200
2019-05-30T11:47:23.131811> CloudEdge: measurement exists
2019-05-30T11:47:23.132430> CloudEdge: will issue requests with
2019-05-30T11:47:23.133055> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:47:23.133676> data: {"value":95.26,"timestamp":"2019-05-30T11:47:18.867"}
2019-05-30T11:47:23.134303> CloudEdge: returned msg from server is 200
2019-05-30T11:47:23.134961> CloudEdge: upload success
2019-05-30T11:47:23.335232> --> cloud end
2019-05-30T11:47:23.335713> 
2019-05-30T11:47:59.441823> 2019-05-30 11:47:59.438219
2019-05-30T11:47:59.442668> post status: gw ON
2019-05-30T11:47:59.443393> post status: executing periodic tasks
2019-05-30T11:48:00.567949> no timezone support, time will be expressed only in local time
2019-05-30T11:48:00.568391> post status: start running
2019-05-30T11:48:01.665486> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:48:01.666152> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:48:01.666943> get_gps.py: invalid serial port
2019-05-30T11:48:01.817215> post status: dynamic GPS is requested
2019-05-30T11:48:01.817642> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:48:01.817958> post status get GPS: no GPS coordinates
2019-05-30T11:48:01.818233> post status: show current GPS position
2019-05-30T11:48:01.818539> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:48:01.818818> post status: exiting
2019-05-30T11:48:20.971068> --- rxlora. dst=1 type=0x12 src=8 seq=229 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:48:20.971650> 2019-05-30T11:48:20.969532
2019-05-30T11:48:20.972087> rcv ctrl pkt info (^p): 1,18,8,229,14,7,-41
2019-05-30T11:48:20.972616> splitted in: [1, 18, 8, 229, 14, 7, -41]
2019-05-30T11:48:20.973104> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=229 len=14 SNR=7 RSSI=-41)
2019-05-30T11:48:20.973539> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:48:20.973908> splitted in: [125, 5, 12]
2019-05-30T11:48:20.974277> (BW=125 CR=5 SF=12)
2019-05-30T11:48:20.974676> rcv timestamp (^t): 2019-05-30T11:48:20.965
2019-05-30T11:48:20.975161> 
2019-05-30T11:48:20.975571> Got first framing byte
2019-05-30T11:48:20.976078> --> got LoRa data prefix
2019-05-30T11:48:20.976498> --> DATA with_appkey: read app key sequence
2019-05-30T11:48:20.987411> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:48:20.987798> app key disabled
2019-05-30T11:48:20.988151> valid app key: accept data
2019-05-30T11:48:20.988469> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:48:20.988828> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,229,10,7,-41" "125,5,12" "2019-05-30T11:48:20.965" "B827EB1B65FD"
2019-05-30T11:48:25.612837> CloudEdge: uploading
2019-05-30T11:48:25.613764> CloudEdge: run under guest identity, all data is public
2019-05-30T11:48:25.614487> CloudEdge: check if entity exits
2019-05-30T11:48:25.615119> CloudEdge: will issue requests with
2019-05-30T11:48:25.615732> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:48:25.616345> CloudEdge: returned msg from server is 200
2019-05-30T11:48:25.617136> CloudEdge: entity exists
2019-05-30T11:48:25.617752> CloudEdge: check if measurement exits
2019-05-30T11:48:25.618330> CloudEdge: will issue requests with
2019-05-30T11:48:25.618893> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:48:25.619462> CloudEdge: returned msg from server is 200
2019-05-30T11:48:25.621500> CloudEdge: measurement exists
2019-05-30T11:48:25.622506> CloudEdge: will issue requests with
2019-05-30T11:48:25.623326> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:48:25.624109> data: {"value":95.07,"timestamp":"2019-05-30T11:48:20.965"}
2019-05-30T11:48:25.624902> CloudEdge: returned msg from server is 200
2019-05-30T11:48:25.625676> CloudEdge: upload success
2019-05-30T11:48:25.807610> --> cloud end
2019-05-30T11:48:25.808184> 
2019-05-30T11:49:23.073092> --- rxlora. dst=1 type=0x12 src=8 seq=230 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:49:23.073496> 2019-05-30T11:49:23.070241
2019-05-30T11:49:23.073767> rcv ctrl pkt info (^p): 1,18,8,230,14,7,-42
2019-05-30T11:49:23.074037> splitted in: [1, 18, 8, 230, 14, 7, -42]
2019-05-30T11:49:23.074302> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=230 len=14 SNR=7 RSSI=-42)
2019-05-30T11:49:23.074567> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:49:23.074832> splitted in: [125, 5, 12]
2019-05-30T11:49:23.075097> (BW=125 CR=5 SF=12)
2019-05-30T11:49:23.075363> rcv timestamp (^t): 2019-05-30T11:49:23.066
2019-05-30T11:49:23.075628> 
2019-05-30T11:49:23.075890> Got first framing byte
2019-05-30T11:49:23.076156> --> got LoRa data prefix
2019-05-30T11:49:23.076419> --> DATA with_appkey: read app key sequence
2019-05-30T11:49:23.076736> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:49:23.077017> app key disabled
2019-05-30T11:49:23.077281> valid app key: accept data
2019-05-30T11:49:23.077544> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:49:23.077808> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,230,10,7,-42" "125,5,12" "2019-05-30T11:49:23.066" "B827EB1B65FD"
2019-05-30T11:49:28.384300> CloudEdge: uploading
2019-05-30T11:49:28.385162> CloudEdge: run under guest identity, all data is public
2019-05-30T11:49:28.385889> CloudEdge: check if entity exits
2019-05-30T11:49:28.386668> CloudEdge: will issue requests with
2019-05-30T11:49:28.387405> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:49:28.388233> CloudEdge: returned msg from server is 200
2019-05-30T11:49:28.388888> CloudEdge: entity exists
2019-05-30T11:49:28.389487> CloudEdge: check if measurement exits
2019-05-30T11:49:28.390079> CloudEdge: will issue requests with
2019-05-30T11:49:28.390660> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:49:28.391239> CloudEdge: returned msg from server is 200
2019-05-30T11:49:28.391805> CloudEdge: measurement exists
2019-05-30T11:49:28.392377> CloudEdge: will issue requests with
2019-05-30T11:49:28.392941> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:49:28.393506> data: {"value":95.07,"timestamp":"2019-05-30T11:49:23.066"}
2019-05-30T11:49:28.394069> CloudEdge: returned msg from server is 200
2019-05-30T11:49:28.394642> CloudEdge: upload success
2019-05-30T11:49:28.598097> --> cloud end
2019-05-30T11:49:28.598462> 
2019-05-30T11:50:25.174524> --- rxlora. dst=1 type=0x12 src=8 seq=231 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:50:25.175027> 2019-05-30T11:50:25.171521
2019-05-30T11:50:25.175440> rcv ctrl pkt info (^p): 1,18,8,231,14,7,-41
2019-05-30T11:50:25.175755> splitted in: [1, 18, 8, 231, 14, 7, -41]
2019-05-30T11:50:25.176065> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=231 len=14 SNR=7 RSSI=-41)
2019-05-30T11:50:25.176436> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:50:25.176932> splitted in: [125, 5, 12]
2019-05-30T11:50:25.177319> (BW=125 CR=5 SF=12)
2019-05-30T11:50:25.177707> rcv timestamp (^t): 2019-05-30T11:50:25.168
2019-05-30T11:50:25.178096> 
2019-05-30T11:50:25.178467> Got first framing byte
2019-05-30T11:50:25.178812> --> got LoRa data prefix
2019-05-30T11:50:25.179153> --> DATA with_appkey: read app key sequence
2019-05-30T11:50:25.179493> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:50:25.179852> app key disabled
2019-05-30T11:50:25.180457> valid app key: accept data
2019-05-30T11:50:25.180824> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:50:25.181209> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,231,10,7,-41" "125,5,12" "2019-05-30T11:50:25.168" "B827EB1B65FD"
2019-05-30T11:50:29.825133> CloudEdge: uploading
2019-05-30T11:50:29.826079> CloudEdge: run under guest identity, all data is public
2019-05-30T11:50:29.827044> CloudEdge: check if entity exits
2019-05-30T11:50:29.827802> CloudEdge: will issue requests with
2019-05-30T11:50:29.828593> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:50:29.829280> CloudEdge: returned msg from server is 200
2019-05-30T11:50:29.829890> CloudEdge: entity exists
2019-05-30T11:50:29.830485> CloudEdge: check if measurement exits
2019-05-30T11:50:29.831073> CloudEdge: will issue requests with
2019-05-30T11:50:29.831659> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:50:29.832239> CloudEdge: returned msg from server is 200
2019-05-30T11:50:29.832834> CloudEdge: measurement exists
2019-05-30T11:50:29.833423> CloudEdge: will issue requests with
2019-05-30T11:50:29.834006> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:50:29.834584> data: {"value":95.07,"timestamp":"2019-05-30T11:50:25.168"}
2019-05-30T11:50:29.835183> CloudEdge: returned msg from server is 200
2019-05-30T11:50:29.835759> CloudEdge: upload success
2019-05-30T11:50:30.028938> --> cloud end
2019-05-30T11:50:30.029306> 
2019-05-30T11:51:27.275741> --- rxlora. dst=1 type=0x12 src=8 seq=232 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:51:27.276218> 2019-05-30T11:51:27.272762
2019-05-30T11:51:27.276790> rcv ctrl pkt info (^p): 1,18,8,232,14,7,-42
2019-05-30T11:51:27.277156> splitted in: [1, 18, 8, 232, 14, 7, -42]
2019-05-30T11:51:27.277491> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=232 len=14 SNR=7 RSSI=-42)
2019-05-30T11:51:27.277842> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:51:27.278183> splitted in: [125, 5, 12]
2019-05-30T11:51:27.278517> (BW=125 CR=5 SF=12)
2019-05-30T11:51:27.278912> rcv timestamp (^t): 2019-05-30T11:51:27.269
2019-05-30T11:51:27.279286> 
2019-05-30T11:51:27.279643> Got first framing byte
2019-05-30T11:51:27.279988> --> got LoRa data prefix
2019-05-30T11:51:27.280337> --> DATA with_appkey: read app key sequence
2019-05-30T11:51:27.280667> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:51:27.281101> app key disabled
2019-05-30T11:51:27.281521> valid app key: accept data
2019-05-30T11:51:27.281819> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:51:27.282192> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,232,10,7,-42" "125,5,12" "2019-05-30T11:51:27.269" "B827EB1B65FD"
2019-05-30T11:51:31.869290> CloudEdge: uploading
2019-05-30T11:51:31.870281> CloudEdge: run under guest identity, all data is public
2019-05-30T11:51:31.871215> CloudEdge: check if entity exits
2019-05-30T11:51:31.872093> CloudEdge: will issue requests with
2019-05-30T11:51:31.872984> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:51:31.873784> CloudEdge: returned msg from server is 200
2019-05-30T11:51:31.874537> CloudEdge: entity exists
2019-05-30T11:51:31.875299> CloudEdge: check if measurement exits
2019-05-30T11:51:31.876031> CloudEdge: will issue requests with
2019-05-30T11:51:31.877088> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:51:31.877931> CloudEdge: returned msg from server is 200
2019-05-30T11:51:31.878696> CloudEdge: measurement exists
2019-05-30T11:51:31.879445> CloudEdge: will issue requests with
2019-05-30T11:51:31.880205> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:51:31.880952> data: {"value":95.07,"timestamp":"2019-05-30T11:51:27.269"}
2019-05-30T11:51:31.881796> CloudEdge: returned msg from server is 200
2019-05-30T11:51:31.882541> CloudEdge: upload success
2019-05-30T11:51:32.076142> --> cloud end
2019-05-30T11:51:32.076690> 
2019-05-30T11:51:32.077021> Low-level gw status ON
2019-05-30T11:52:29.377222> --- rxlora. dst=1 type=0x12 src=8 seq=233 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:52:29.377742> 2019-05-30T11:52:29.375108
2019-05-30T11:52:29.378124> rcv ctrl pkt info (^p): 1,18,8,233,14,7,-42
2019-05-30T11:52:29.378447> splitted in: [1, 18, 8, 233, 14, 7, -42]
2019-05-30T11:52:29.378741> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=233 len=14 SNR=7 RSSI=-42)
2019-05-30T11:52:29.379039> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:52:29.379329> splitted in: [125, 5, 12]
2019-05-30T11:52:29.379624> (BW=125 CR=5 SF=12)
2019-05-30T11:52:29.379970> rcv timestamp (^t): 2019-05-30T11:52:29.371
2019-05-30T11:52:29.380337> 
2019-05-30T11:52:29.380703> Got first framing byte
2019-05-30T11:52:29.381030> --> got LoRa data prefix
2019-05-30T11:52:29.381399> --> DATA with_appkey: read app key sequence
2019-05-30T11:52:29.381749> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:52:29.382096> app key disabled
2019-05-30T11:52:29.382435> valid app key: accept data
2019-05-30T11:52:29.382790> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:52:29.383113> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,233,10,7,-42" "125,5,12" "2019-05-30T11:52:29.371" "B827EB1B65FD"
2019-05-30T11:52:33.513912> CloudEdge: uploading
2019-05-30T11:52:33.514828> CloudEdge: run under guest identity, all data is public
2019-05-30T11:52:33.515545> CloudEdge: check if entity exits
2019-05-30T11:52:33.516182> CloudEdge: will issue requests with
2019-05-30T11:52:33.517023> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:52:33.517745> CloudEdge: returned msg from server is 200
2019-05-30T11:52:33.518345> CloudEdge: entity exists
2019-05-30T11:52:33.518906> CloudEdge: check if measurement exits
2019-05-30T11:52:33.519466> CloudEdge: will issue requests with
2019-05-30T11:52:33.520028> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:52:33.520590> CloudEdge: returned msg from server is 200
2019-05-30T11:52:33.521169> CloudEdge: measurement exists
2019-05-30T11:52:33.521730> CloudEdge: will issue requests with
2019-05-30T11:52:33.522295> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:52:33.522854> data: {"value":95.07,"timestamp":"2019-05-30T11:52:29.371"}
2019-05-30T11:52:33.523415> CloudEdge: returned msg from server is 200
2019-05-30T11:52:33.523976> CloudEdge: upload success
2019-05-30T11:52:33.692035> --> cloud end
2019-05-30T11:52:33.692423> 
2019-05-30T11:53:31.478987> --- rxlora. dst=1 type=0x12 src=8 seq=234 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T11:53:31.481530> 2019-05-30T11:53:31.479186
2019-05-30T11:53:31.482491> rcv ctrl pkt info (^p): 1,18,8,234,14,7,-40
2019-05-30T11:53:31.483388> splitted in: [1, 18, 8, 234, 14, 7, -40]
2019-05-30T11:53:31.484319> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=234 len=14 SNR=7 RSSI=-40)
2019-05-30T11:53:31.485263> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:53:31.486264> splitted in: [125, 5, 12]
2019-05-30T11:53:31.488049> (BW=125 CR=5 SF=12)
2019-05-30T11:53:31.489381> rcv timestamp (^t): 2019-05-30T11:53:31.474
2019-05-30T11:53:31.490149> 
2019-05-30T11:53:31.491002> Got first framing byte
2019-05-30T11:53:31.491805> --> got LoRa data prefix
2019-05-30T11:53:31.492236> --> DATA with_appkey: read app key sequence
2019-05-30T11:53:31.492924> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:53:31.493599> app key disabled
2019-05-30T11:53:31.494255> valid app key: accept data
2019-05-30T11:53:31.494635> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:53:31.495272> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,234,10,7,-40" "125,5,12" "2019-05-30T11:53:31.474" "B827EB1B65FD"
2019-05-30T11:53:36.193801> CloudEdge: uploading
2019-05-30T11:53:36.194710> CloudEdge: run under guest identity, all data is public
2019-05-30T11:53:36.195461> CloudEdge: check if entity exits
2019-05-30T11:53:36.196151> CloudEdge: will issue requests with
2019-05-30T11:53:36.197185> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:53:36.198044> CloudEdge: returned msg from server is 200
2019-05-30T11:53:36.198728> CloudEdge: entity exists
2019-05-30T11:53:36.199377> CloudEdge: check if measurement exits
2019-05-30T11:53:36.200035> CloudEdge: will issue requests with
2019-05-30T11:53:36.200699> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:53:36.201322> CloudEdge: returned msg from server is 200
2019-05-30T11:53:36.202201> CloudEdge: measurement exists
2019-05-30T11:53:36.202826> CloudEdge: will issue requests with
2019-05-30T11:53:36.203412> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:53:36.203991> data: {"value":95.07,"timestamp":"2019-05-30T11:53:31.474"}
2019-05-30T11:53:36.204582> CloudEdge: returned msg from server is 200
2019-05-30T11:53:36.217310> CloudEdge: upload success
2019-05-30T11:53:36.404478> --> cloud end
2019-05-30T11:53:36.404890> 
2019-05-30T11:54:33.583287> --- rxlora. dst=1 type=0x12 src=8 seq=235 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:54:33.583750> 2019-05-30T11:54:33.580324
2019-05-30T11:54:33.584097> rcv ctrl pkt info (^p): 1,18,8,235,14,7,-41
2019-05-30T11:54:33.584407> splitted in: [1, 18, 8, 235, 14, 7, -41]
2019-05-30T11:54:33.584706> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=235 len=14 SNR=7 RSSI=-41)
2019-05-30T11:54:33.585073> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:54:33.585433> splitted in: [125, 5, 12]
2019-05-30T11:54:33.585811> (BW=125 CR=5 SF=12)
2019-05-30T11:54:33.586155> rcv timestamp (^t): 2019-05-30T11:54:33.576
2019-05-30T11:54:33.586609> 
2019-05-30T11:54:33.587043> Got first framing byte
2019-05-30T11:54:33.587470> --> got LoRa data prefix
2019-05-30T11:54:33.587848> --> DATA with_appkey: read app key sequence
2019-05-30T11:54:33.588208> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:54:33.588560> app key disabled
2019-05-30T11:54:33.589035> valid app key: accept data
2019-05-30T11:54:33.589375> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:54:33.589717> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,235,10,7,-41" "125,5,12" "2019-05-30T11:54:33.576" "B827EB1B65FD"
2019-05-30T11:54:38.348412> CloudEdge: uploading
2019-05-30T11:54:38.348851> CloudEdge: run under guest identity, all data is public
2019-05-30T11:54:38.349157> CloudEdge: check if entity exits
2019-05-30T11:54:38.349449> CloudEdge: will issue requests with
2019-05-30T11:54:38.349741> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:54:38.350018> CloudEdge: returned msg from server is 200
2019-05-30T11:54:38.350316> CloudEdge: entity exists
2019-05-30T11:54:38.350598> CloudEdge: check if measurement exits
2019-05-30T11:54:38.350885> CloudEdge: will issue requests with
2019-05-30T11:54:38.351177> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:54:38.351451> CloudEdge: returned msg from server is 200
2019-05-30T11:54:38.351756> CloudEdge: measurement exists
2019-05-30T11:54:38.352038> CloudEdge: will issue requests with
2019-05-30T11:54:38.352324> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:54:38.352612> data: {"value":95.00,"timestamp":"2019-05-30T11:54:33.576"}
2019-05-30T11:54:38.352892> CloudEdge: returned msg from server is 200
2019-05-30T11:54:38.353192> CloudEdge: upload success
2019-05-30T11:54:38.548122> --> cloud end
2019-05-30T11:54:38.549613> 
2019-05-30T11:55:35.682698> --- rxlora. dst=1 type=0x12 src=8 seq=236 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:55:35.683204> 2019-05-30T11:55:35.682297
2019-05-30T11:55:35.683586> rcv ctrl pkt info (^p): 1,18,8,236,14,7,-41
2019-05-30T11:55:35.683904> splitted in: [1, 18, 8, 236, 14, 7, -41]
2019-05-30T11:55:35.684183> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=236 len=14 SNR=7 RSSI=-41)
2019-05-30T11:55:35.684462> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:55:35.684765> splitted in: [125, 5, 12]
2019-05-30T11:55:35.685139> (BW=125 CR=5 SF=12)
2019-05-30T11:55:35.685451> rcv timestamp (^t): 2019-05-30T11:55:35.678
2019-05-30T11:55:35.685738> 
2019-05-30T11:55:35.686106> Got first framing byte
2019-05-30T11:55:35.686411> --> got LoRa data prefix
2019-05-30T11:55:35.686824> --> DATA with_appkey: read app key sequence
2019-05-30T11:55:35.687195> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:55:35.687555> app key disabled
2019-05-30T11:55:35.687904> valid app key: accept data
2019-05-30T11:55:35.688231> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:55:35.688648> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,236,10,7,-41" "125,5,12" "2019-05-30T11:55:35.678" "B827EB1B65FD"
2019-05-30T11:55:40.376332> CloudEdge: uploading
2019-05-30T11:55:40.376985> CloudEdge: run under guest identity, all data is public
2019-05-30T11:55:40.377464> CloudEdge: check if entity exits
2019-05-30T11:55:40.377842> CloudEdge: will issue requests with
2019-05-30T11:55:40.378175> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:55:40.378488> CloudEdge: returned msg from server is 200
2019-05-30T11:55:40.378783> CloudEdge: entity exists
2019-05-30T11:55:40.379089> CloudEdge: check if measurement exits
2019-05-30T11:55:40.379389> CloudEdge: will issue requests with
2019-05-30T11:55:40.379697> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:55:40.380000> CloudEdge: returned msg from server is 200
2019-05-30T11:55:40.380289> CloudEdge: measurement exists
2019-05-30T11:55:40.380577> CloudEdge: will issue requests with
2019-05-30T11:55:40.380858> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:55:40.381143> data: {"value":95.07,"timestamp":"2019-05-30T11:55:35.678"}
2019-05-30T11:55:40.381428> CloudEdge: returned msg from server is 200
2019-05-30T11:55:40.381718> CloudEdge: upload success
2019-05-30T11:55:40.549542> --> cloud end
2019-05-30T11:55:40.549951> 
2019-05-30T11:56:37.784944> --- rxlora. dst=1 type=0x12 src=8 seq=237 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:56:37.785395> 2019-05-30T11:56:37.784546
2019-05-30T11:56:37.785726> rcv ctrl pkt info (^p): 1,18,8,237,14,7,-41
2019-05-30T11:56:37.786042> splitted in: [1, 18, 8, 237, 14, 7, -41]
2019-05-30T11:56:37.786334> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=237 len=14 SNR=7 RSSI=-41)
2019-05-30T11:56:37.786788> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:56:37.787161> splitted in: [125, 5, 12]
2019-05-30T11:56:37.787522> (BW=125 CR=5 SF=12)
2019-05-30T11:56:37.787851> rcv timestamp (^t): 2019-05-30T11:56:37.781
2019-05-30T11:56:37.788146> 
2019-05-30T11:56:37.788513> Got first framing byte
2019-05-30T11:56:37.788817> --> got LoRa data prefix
2019-05-30T11:56:37.789112> --> DATA with_appkey: read app key sequence
2019-05-30T11:56:37.789456> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:56:37.789797> app key disabled
2019-05-30T11:56:37.790162> valid app key: accept data
2019-05-30T11:56:37.790477> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:56:37.790869> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,237,10,7,-41" "125,5,12" "2019-05-30T11:56:37.781" "B827EB1B65FD"
2019-05-30T11:56:42.461558> CloudEdge: uploading
2019-05-30T11:56:42.462456> CloudEdge: run under guest identity, all data is public
2019-05-30T11:56:42.463271> CloudEdge: check if entity exits
2019-05-30T11:56:42.464141> CloudEdge: will issue requests with
2019-05-30T11:56:42.464943> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:56:42.465746> CloudEdge: returned msg from server is 200
2019-05-30T11:56:42.466462> CloudEdge: entity exists
2019-05-30T11:56:42.467319> CloudEdge: check if measurement exits
2019-05-30T11:56:42.468039> CloudEdge: will issue requests with
2019-05-30T11:56:42.468800> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:56:42.469453> CloudEdge: returned msg from server is 200
2019-05-30T11:56:42.470079> CloudEdge: measurement exists
2019-05-30T11:56:42.470801> CloudEdge: will issue requests with
2019-05-30T11:56:42.471498> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:56:42.472141> data: {"value":95.07,"timestamp":"2019-05-30T11:56:37.781"}
2019-05-30T11:56:42.472794> CloudEdge: returned msg from server is 200
2019-05-30T11:56:42.473428> CloudEdge: upload success
2019-05-30T11:56:42.655638> --> cloud end
2019-05-30T11:56:42.656014> 
2019-05-30T11:57:39.887554> --- rxlora. dst=1 type=0x12 src=8 seq=238 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:57:39.887996> 2019-05-30T11:57:39.887150
2019-05-30T11:57:39.888303> rcv ctrl pkt info (^p): 1,18,8,238,14,7,-41
2019-05-30T11:57:39.888697> splitted in: [1, 18, 8, 238, 14, 7, -41]
2019-05-30T11:57:39.889060> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=238 len=14 SNR=7 RSSI=-41)
2019-05-30T11:57:39.889360> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:57:39.889747> splitted in: [125, 5, 12]
2019-05-30T11:57:39.890143> (BW=125 CR=5 SF=12)
2019-05-30T11:57:39.890528> rcv timestamp (^t): 2019-05-30T11:57:39.883
2019-05-30T11:57:39.890871> 
2019-05-30T11:57:39.891336> Got first framing byte
2019-05-30T11:57:39.891708> --> got LoRa data prefix
2019-05-30T11:57:39.892091> --> DATA with_appkey: read app key sequence
2019-05-30T11:57:39.892552> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:57:39.892984> app key disabled
2019-05-30T11:57:39.893418> valid app key: accept data
2019-05-30T11:57:39.893890> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:57:39.894325> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,238,10,7,-41" "125,5,12" "2019-05-30T11:57:39.883" "B827EB1B65FD"
2019-05-30T11:57:44.721293> CloudEdge: uploading
2019-05-30T11:57:44.722330> CloudEdge: run under guest identity, all data is public
2019-05-30T11:57:44.723239> CloudEdge: check if entity exits
2019-05-30T11:57:44.724085> CloudEdge: will issue requests with
2019-05-30T11:57:44.724939> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:57:44.725743> CloudEdge: returned msg from server is 200
2019-05-30T11:57:44.726465> CloudEdge: entity exists
2019-05-30T11:57:44.727472> CloudEdge: check if measurement exits
2019-05-30T11:57:44.728215> CloudEdge: will issue requests with
2019-05-30T11:57:44.728933> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:57:44.729645> CloudEdge: returned msg from server is 200
2019-05-30T11:57:44.730337> CloudEdge: measurement exists
2019-05-30T11:57:44.731026> CloudEdge: will issue requests with
2019-05-30T11:57:44.731724> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:57:44.732437> data: {"value":95.00,"timestamp":"2019-05-30T11:57:39.883"}
2019-05-30T11:57:44.733141> CloudEdge: returned msg from server is 200
2019-05-30T11:57:44.733848> CloudEdge: upload success
2019-05-30T11:57:44.909851> --> cloud end
2019-05-30T11:57:44.910259> 
2019-05-30T11:58:01.969990> 2019-05-30 11:58:01.966298
2019-05-30T11:58:01.970766> post status: gw ON
2019-05-30T11:58:01.971442> post status: executing periodic tasks
2019-05-30T11:58:03.111090> no timezone support, time will be expressed only in local time
2019-05-30T11:58:03.111530> post status: start running
2019-05-30T11:58:04.166230> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T11:58:04.167011> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T11:58:04.167578> get_gps.py: invalid serial port
2019-05-30T11:58:04.309694> post status: dynamic GPS is requested
2019-05-30T11:58:04.310162> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T11:58:04.310479> post status get GPS: no GPS coordinates
2019-05-30T11:58:04.310768> post status: show current GPS position
2019-05-30T11:58:04.311097> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T11:58:04.311383> post status: exiting
2019-05-30T11:58:41.994495> --- rxlora. dst=1 type=0x12 src=8 seq=239 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T11:58:41.995196> 2019-05-30T11:58:41.993948
2019-05-30T11:58:41.995729> rcv ctrl pkt info (^p): 1,18,8,239,14,7,-41
2019-05-30T11:58:41.996290> splitted in: [1, 18, 8, 239, 14, 7, -41]
2019-05-30T11:58:42.001728> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=239 len=14 SNR=7 RSSI=-41)
2019-05-30T11:58:42.002560> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:58:42.003373> splitted in: [125, 5, 12]
2019-05-30T11:58:42.004182> (BW=125 CR=5 SF=12)
2019-05-30T11:58:42.005055> rcv timestamp (^t): 2019-05-30T11:58:41.988
2019-05-30T11:58:42.005816> 
2019-05-30T11:58:42.006766> Got first framing byte
2019-05-30T11:58:42.007442> --> got LoRa data prefix
2019-05-30T11:58:42.008168> --> DATA with_appkey: read app key sequence
2019-05-30T11:58:42.008928> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:58:42.009662> app key disabled
2019-05-30T11:58:42.010310> valid app key: accept data
2019-05-30T11:58:42.010908> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:58:42.011478> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,239,10,7,-41" "125,5,12" "2019-05-30T11:58:41.988" "B827EB1B65FD"
2019-05-30T11:58:47.287566> CloudEdge: uploading
2019-05-30T11:58:47.288548> CloudEdge: run under guest identity, all data is public
2019-05-30T11:58:47.289423> CloudEdge: check if entity exits
2019-05-30T11:58:47.290248> CloudEdge: will issue requests with
2019-05-30T11:58:47.291104> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:58:47.291928> CloudEdge: returned msg from server is 200
2019-05-30T11:58:47.292662> CloudEdge: entity exists
2019-05-30T11:58:47.293381> CloudEdge: check if measurement exits
2019-05-30T11:58:47.294097> CloudEdge: will issue requests with
2019-05-30T11:58:47.294801> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:58:47.295502> CloudEdge: returned msg from server is 200
2019-05-30T11:58:47.307008> CloudEdge: measurement exists
2019-05-30T11:58:47.308039> CloudEdge: will issue requests with
2019-05-30T11:58:47.308875> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:58:47.309715> data: {"value":95.07,"timestamp":"2019-05-30T11:58:41.988"}
2019-05-30T11:58:47.310461> CloudEdge: returned msg from server is 200
2019-05-30T11:58:47.311181> CloudEdge: upload success
2019-05-30T11:58:47.491215> --> cloud end
2019-05-30T11:58:47.491676> 
2019-05-30T11:59:44.096825> --- rxlora. dst=1 type=0x12 src=8 seq=240 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T11:59:44.097339> 2019-05-30T11:59:44.096259
2019-05-30T11:59:44.097683> rcv ctrl pkt info (^p): 1,18,8,240,14,7,-42
2019-05-30T11:59:44.097986> splitted in: [1, 18, 8, 240, 14, 7, -42]
2019-05-30T11:59:44.098268> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=240 len=14 SNR=7 RSSI=-42)
2019-05-30T11:59:44.098541> rcv ctrl radio info (^r): 125,5,12
2019-05-30T11:59:44.098813> splitted in: [125, 5, 12]
2019-05-30T11:59:44.099186> (BW=125 CR=5 SF=12)
2019-05-30T11:59:44.099523> rcv timestamp (^t): 2019-05-30T11:59:44.092
2019-05-30T11:59:44.099817> 
2019-05-30T11:59:44.100168> Got first framing byte
2019-05-30T11:59:44.100484> --> got LoRa data prefix
2019-05-30T11:59:44.100765> --> DATA with_appkey: read app key sequence
2019-05-30T11:59:44.101105> app key is 0x05 0x06 0x07 0x08
2019-05-30T11:59:44.101467> app key disabled
2019-05-30T11:59:44.101900> valid app key: accept data
2019-05-30T11:59:44.102235> uploading with python /app/data_acq/edgeCall.py
2019-05-30T11:59:44.102620> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,240,10,7,-42" "125,5,12" "2019-05-30T11:59:44.092" "B827EB1B65FD"
2019-05-30T11:59:48.814810> CloudEdge: uploading
2019-05-30T11:59:48.815459> CloudEdge: run under guest identity, all data is public
2019-05-30T11:59:48.815988> CloudEdge: check if entity exits
2019-05-30T11:59:48.816507> CloudEdge: will issue requests with
2019-05-30T11:59:48.817218> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T11:59:48.817777> CloudEdge: returned msg from server is 200
2019-05-30T11:59:48.818397> CloudEdge: entity exists
2019-05-30T11:59:48.819002> CloudEdge: check if measurement exits
2019-05-30T11:59:48.819580> CloudEdge: will issue requests with
2019-05-30T11:59:48.820155> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T11:59:48.820747> CloudEdge: returned msg from server is 200
2019-05-30T11:59:48.821327> CloudEdge: measurement exists
2019-05-30T11:59:48.821889> CloudEdge: will issue requests with
2019-05-30T11:59:48.822444> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T11:59:48.823053> data: {"value":95.00,"timestamp":"2019-05-30T11:59:44.092"}
2019-05-30T11:59:48.823647> CloudEdge: returned msg from server is 200
2019-05-30T11:59:48.824234> CloudEdge: upload success
2019-05-30T11:59:49.016191> --> cloud end
2019-05-30T11:59:49.016820> 
2019-05-30T12:00:46.201786> --- rxlora. dst=1 type=0x12 src=8 seq=241 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:00:46.202651> 2019-05-30T12:00:46.201206
2019-05-30T12:00:46.203528> rcv ctrl pkt info (^p): 1,18,8,241,14,7,-42
2019-05-30T12:00:46.204420> splitted in: [1, 18, 8, 241, 14, 7, -42]
2019-05-30T12:00:46.205267> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=241 len=14 SNR=7 RSSI=-42)
2019-05-30T12:00:46.206479> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:00:46.207606> splitted in: [125, 5, 12]
2019-05-30T12:00:46.208577> (BW=125 CR=5 SF=12)
2019-05-30T12:00:46.209484> rcv timestamp (^t): 2019-05-30T12:00:46.197
2019-05-30T12:00:46.211016> 
2019-05-30T12:00:46.211898> Got first framing byte
2019-05-30T12:00:46.212671> --> got LoRa data prefix
2019-05-30T12:00:46.213529> --> DATA with_appkey: read app key sequence
2019-05-30T12:00:46.214256> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:00:46.214904> app key disabled
2019-05-30T12:00:46.215322> valid app key: accept data
2019-05-30T12:00:46.216028> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:00:46.216829> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,241,10,7,-42" "125,5,12" "2019-05-30T12:00:46.197" "B827EB1B65FD"
2019-05-30T12:00:51.090354> CloudEdge: uploading
2019-05-30T12:00:51.091216> CloudEdge: run under guest identity, all data is public
2019-05-30T12:00:51.091937> CloudEdge: check if entity exits
2019-05-30T12:00:51.092560> CloudEdge: will issue requests with
2019-05-30T12:00:51.093170> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:00:51.093774> CloudEdge: returned msg from server is 200
2019-05-30T12:00:51.094352> CloudEdge: entity exists
2019-05-30T12:00:51.094923> CloudEdge: check if measurement exits
2019-05-30T12:00:51.095485> CloudEdge: will issue requests with
2019-05-30T12:00:51.096068> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:00:51.096887> CloudEdge: returned msg from server is 200
2019-05-30T12:00:51.097567> CloudEdge: measurement exists
2019-05-30T12:00:51.098161> CloudEdge: will issue requests with
2019-05-30T12:00:51.098746> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:00:51.099327> data: {"value":95.00,"timestamp":"2019-05-30T12:00:46.197"}
2019-05-30T12:00:51.099983> CloudEdge: returned msg from server is 200
2019-05-30T12:00:51.100554> CloudEdge: upload success
2019-05-30T12:00:51.267982> --> cloud end
2019-05-30T12:00:51.268381> 
2019-05-30T12:01:48.306423> --- rxlora. dst=1 type=0x12 src=8 seq=242 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:01:48.307012> 2019-05-30T12:01:48.306035
2019-05-30T12:01:48.307358> rcv ctrl pkt info (^p): 1,18,8,242,14,7,-41
2019-05-30T12:01:48.307666> splitted in: [1, 18, 8, 242, 14, 7, -41]
2019-05-30T12:01:48.307952> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=242 len=14 SNR=7 RSSI=-41)
2019-05-30T12:01:48.308231> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:01:48.308504> splitted in: [125, 5, 12]
2019-05-30T12:01:48.308839> (BW=125 CR=5 SF=12)
2019-05-30T12:01:48.309240> rcv timestamp (^t): 2019-05-30T12:01:48.302
2019-05-30T12:01:48.309543> 
2019-05-30T12:01:48.309827> Got first framing byte
2019-05-30T12:01:48.310141> --> got LoRa data prefix
2019-05-30T12:01:48.310455> --> DATA with_appkey: read app key sequence
2019-05-30T12:01:48.310739> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:01:48.311054> app key disabled
2019-05-30T12:01:48.311410> valid app key: accept data
2019-05-30T12:01:48.311763> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:01:48.312090> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,242,10,7,-41" "125,5,12" "2019-05-30T12:01:48.302" "B827EB1B65FD"
2019-05-30T12:01:52.735668> CloudEdge: uploading
2019-05-30T12:01:52.736845> CloudEdge: run under guest identity, all data is public
2019-05-30T12:01:52.737885> CloudEdge: check if entity exits
2019-05-30T12:01:52.738757> CloudEdge: will issue requests with
2019-05-30T12:01:52.739622> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:01:52.740407> CloudEdge: returned msg from server is 200
2019-05-30T12:01:52.741108> CloudEdge: entity exists
2019-05-30T12:01:52.741831> CloudEdge: check if measurement exits
2019-05-30T12:01:52.742531> CloudEdge: will issue requests with
2019-05-30T12:01:52.743225> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:01:52.743963> CloudEdge: returned msg from server is 200
2019-05-30T12:01:52.744679> CloudEdge: measurement exists
2019-05-30T12:01:52.745382> CloudEdge: will issue requests with
2019-05-30T12:01:52.746068> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:01:52.746913> data: {"value":94.94,"timestamp":"2019-05-30T12:01:48.302"}
2019-05-30T12:01:52.747683> CloudEdge: returned msg from server is 200
2019-05-30T12:01:52.748403> CloudEdge: upload success
2019-05-30T12:01:52.941033> --> cloud end
2019-05-30T12:01:52.941420> 
2019-05-30T12:01:52.941697> Low-level gw status ON
2019-05-30T12:02:50.414259> --- rxlora. dst=1 type=0x12 src=8 seq=243 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:02:50.414822> 2019-05-30T12:02:50.411173
2019-05-30T12:02:50.415313> rcv ctrl pkt info (^p): 1,18,8,243,14,7,-41
2019-05-30T12:02:50.415683> splitted in: [1, 18, 8, 243, 14, 7, -41]
2019-05-30T12:02:50.416158> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=243 len=14 SNR=7 RSSI=-41)
2019-05-30T12:02:50.416709> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:02:50.417300> splitted in: [125, 5, 12]
2019-05-30T12:02:50.417832> (BW=125 CR=5 SF=12)
2019-05-30T12:02:50.418299> rcv timestamp (^t): 2019-05-30T12:02:50.407
2019-05-30T12:02:50.418712> 
2019-05-30T12:02:50.419087> Got first framing byte
2019-05-30T12:02:50.419453> --> got LoRa data prefix
2019-05-30T12:02:50.419799> --> DATA with_appkey: read app key sequence
2019-05-30T12:02:50.420280> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:02:50.420648> app key disabled
2019-05-30T12:02:50.420970> valid app key: accept data
2019-05-30T12:02:50.421323> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:02:50.421645> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,243,10,7,-41" "125,5,12" "2019-05-30T12:02:50.407" "B827EB1B65FD"
2019-05-30T12:02:54.479753> CloudEdge: uploading
2019-05-30T12:02:54.480356> CloudEdge: run under guest identity, all data is public
2019-05-30T12:02:54.480796> CloudEdge: check if entity exits
2019-05-30T12:02:54.481160> CloudEdge: will issue requests with
2019-05-30T12:02:54.481482> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:02:54.481799> CloudEdge: returned msg from server is 200
2019-05-30T12:02:54.482107> CloudEdge: entity exists
2019-05-30T12:02:54.482415> CloudEdge: check if measurement exits
2019-05-30T12:02:54.482716> CloudEdge: will issue requests with
2019-05-30T12:02:54.483006> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:02:54.483298> CloudEdge: returned msg from server is 200
2019-05-30T12:02:54.483598> CloudEdge: measurement exists
2019-05-30T12:02:54.483892> CloudEdge: will issue requests with
2019-05-30T12:02:54.484175> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:02:54.484475> data: {"value":95.00,"timestamp":"2019-05-30T12:02:50.407"}
2019-05-30T12:02:54.484775> CloudEdge: returned msg from server is 200
2019-05-30T12:02:54.485059> CloudEdge: upload success
2019-05-30T12:02:54.646258> --> cloud end
2019-05-30T12:02:54.646758> 
2019-05-30T12:03:52.517613> --- rxlora. dst=1 type=0x12 src=8 seq=244 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:03:52.518081> 2019-05-30T12:03:52.517037
2019-05-30T12:03:52.518469> rcv ctrl pkt info (^p): 1,18,8,244,14,6,-45
2019-05-30T12:03:52.518769> splitted in: [1, 18, 8, 244, 14, 6, -45]
2019-05-30T12:03:52.519046> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=244 len=14 SNR=6 RSSI=-45)
2019-05-30T12:03:52.519326> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:03:52.519670> splitted in: [125, 5, 12]
2019-05-30T12:03:52.520009> (BW=125 CR=5 SF=12)
2019-05-30T12:03:52.520308> rcv timestamp (^t): 2019-05-30T12:03:52.513
2019-05-30T12:03:52.520595> 
2019-05-30T12:03:52.520975> Got first framing byte
2019-05-30T12:03:52.521271> --> got LoRa data prefix
2019-05-30T12:03:52.521557> --> DATA with_appkey: read app key sequence
2019-05-30T12:03:52.521892> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:03:52.522239> app key disabled
2019-05-30T12:03:52.522582> valid app key: accept data
2019-05-30T12:03:52.522905> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:03:52.523295> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,244,10,6,-45" "125,5,12" "2019-05-30T12:03:52.513" "B827EB1B65FD"
2019-05-30T12:03:56.640204> CloudEdge: uploading
2019-05-30T12:03:56.641051> CloudEdge: run under guest identity, all data is public
2019-05-30T12:03:56.641881> CloudEdge: check if entity exits
2019-05-30T12:03:56.642705> CloudEdge: will issue requests with
2019-05-30T12:03:56.643532> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:03:56.644337> CloudEdge: returned msg from server is 200
2019-05-30T12:03:56.645043> CloudEdge: entity exists
2019-05-30T12:03:56.645742> CloudEdge: check if measurement exits
2019-05-30T12:03:56.646447> CloudEdge: will issue requests with
2019-05-30T12:03:56.647384> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:03:56.648136> CloudEdge: returned msg from server is 200
2019-05-30T12:03:56.648858> CloudEdge: measurement exists
2019-05-30T12:03:56.649553> CloudEdge: will issue requests with
2019-05-30T12:03:56.650273> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:03:56.651006> data: {"value":95.00,"timestamp":"2019-05-30T12:03:52.513"}
2019-05-30T12:03:56.651713> CloudEdge: returned msg from server is 200
2019-05-30T12:03:56.677734> CloudEdge: upload success
2019-05-30T12:03:56.876821> --> cloud end
2019-05-30T12:03:56.877209> 
2019-05-30T12:04:54.626473> --- rxlora. dst=1 type=0x12 src=8 seq=245 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:04:54.627247> 2019-05-30T12:04:54.623408
2019-05-30T12:04:54.627735> rcv ctrl pkt info (^p): 1,18,8,245,14,6,-45
2019-05-30T12:04:54.628122> splitted in: [1, 18, 8, 245, 14, 6, -45]
2019-05-30T12:04:54.628529> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=245 len=14 SNR=6 RSSI=-45)
2019-05-30T12:04:54.628881> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:04:54.629343> splitted in: [125, 5, 12]
2019-05-30T12:04:54.629739> (BW=125 CR=5 SF=12)
2019-05-30T12:04:54.630192> rcv timestamp (^t): 2019-05-30T12:04:54.620
2019-05-30T12:04:54.630705> 
2019-05-30T12:04:54.631192> Got first framing byte
2019-05-30T12:04:54.631629> --> got LoRa data prefix
2019-05-30T12:04:54.632069> --> DATA with_appkey: read app key sequence
2019-05-30T12:04:54.632473> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:04:54.633055> app key disabled
2019-05-30T12:04:54.633554> valid app key: accept data
2019-05-30T12:04:54.633960> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:04:54.634490> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,245,10,6,-45" "125,5,12" "2019-05-30T12:04:54.620" "B827EB1B65FD"
2019-05-30T12:05:00.125600> CloudEdge: uploading
2019-05-30T12:05:00.126299> CloudEdge: run under guest identity, all data is public
2019-05-30T12:05:00.127058> CloudEdge: check if entity exits
2019-05-30T12:05:00.127637> CloudEdge: will issue requests with
2019-05-30T12:05:00.128094> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:05:00.128565> CloudEdge: returned msg from server is 200
2019-05-30T12:05:00.128953> CloudEdge: entity exists
2019-05-30T12:05:00.129326> CloudEdge: check if measurement exits
2019-05-30T12:05:00.129680> CloudEdge: will issue requests with
2019-05-30T12:05:00.129996> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:05:00.130491> CloudEdge: returned msg from server is 200
2019-05-30T12:05:00.130850> CloudEdge: measurement exists
2019-05-30T12:05:00.131240> CloudEdge: will issue requests with
2019-05-30T12:05:00.131573> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:05:00.131953> data: {"value":94.75,"timestamp":"2019-05-30T12:04:54.620"}
2019-05-30T12:05:00.132294> CloudEdge: returned msg from server is 200
2019-05-30T12:05:00.132638> CloudEdge: upload success
2019-05-30T12:05:00.306834> --> cloud end
2019-05-30T12:05:00.307218> 
2019-05-30T12:05:56.734087> --- rxlora. dst=1 type=0x12 src=8 seq=246 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:05:56.734711> 2019-05-30T12:05:56.730419
2019-05-30T12:05:56.735146> rcv ctrl pkt info (^p): 1,18,8,246,14,6,-45
2019-05-30T12:05:56.735511> splitted in: [1, 18, 8, 246, 14, 6, -45]
2019-05-30T12:05:56.735887> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=246 len=14 SNR=6 RSSI=-45)
2019-05-30T12:05:56.736268> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:05:56.736728> splitted in: [125, 5, 12]
2019-05-30T12:05:56.737241> (BW=125 CR=5 SF=12)
2019-05-30T12:05:56.737634> rcv timestamp (^t): 2019-05-30T12:05:56.726
2019-05-30T12:05:56.738065> 
2019-05-30T12:05:56.738474> Got first framing byte
2019-05-30T12:05:56.738931> --> got LoRa data prefix
2019-05-30T12:05:56.739427> --> DATA with_appkey: read app key sequence
2019-05-30T12:05:56.739929> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:05:56.740316> app key disabled
2019-05-30T12:05:56.740660> valid app key: accept data
2019-05-30T12:05:56.740945> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:05:56.741401> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,246,10,6,-45" "125,5,12" "2019-05-30T12:05:56.726" "B827EB1B65FD"
2019-05-30T12:06:02.591237> CloudEdge: uploading
2019-05-30T12:06:02.592105> CloudEdge: run under guest identity, all data is public
2019-05-30T12:06:02.592772> CloudEdge: check if entity exits
2019-05-30T12:06:02.593416> CloudEdge: will issue requests with
2019-05-30T12:06:02.594465> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:06:02.595915> CloudEdge: returned msg from server is 200
2019-05-30T12:06:02.597342> CloudEdge: entity exists
2019-05-30T12:06:02.600166> CloudEdge: check if measurement exits
2019-05-30T12:06:02.602583> CloudEdge: will issue requests with
2019-05-30T12:06:02.603232> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:06:02.605897> CloudEdge: returned msg from server is 200
2019-05-30T12:06:02.606512> CloudEdge: measurement exists
2019-05-30T12:06:02.607436> CloudEdge: will issue requests with
2019-05-30T12:06:02.607878> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:06:02.608206> data: {"value":94.88,"timestamp":"2019-05-30T12:05:56.726"}
2019-05-30T12:06:02.609340> CloudEdge: returned msg from server is 200
2019-05-30T12:06:02.610063> CloudEdge: upload success
2019-05-30T12:06:02.774544> --> cloud end
2019-05-30T12:06:02.775105> 
2019-05-30T12:06:58.838174> --- rxlora. dst=1 type=0x12 src=8 seq=247 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:06:58.838666> 2019-05-30T12:06:58.837691
2019-05-30T12:06:58.839014> rcv ctrl pkt info (^p): 1,18,8,247,14,7,-43
2019-05-30T12:06:58.839334> splitted in: [1, 18, 8, 247, 14, 7, -43]
2019-05-30T12:06:58.839692> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=247 len=14 SNR=7 RSSI=-43)
2019-05-30T12:06:58.840045> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:06:58.840424> splitted in: [125, 5, 12]
2019-05-30T12:06:58.840852> (BW=125 CR=5 SF=12)
2019-05-30T12:06:58.841195> rcv timestamp (^t): 2019-05-30T12:06:58.834
2019-05-30T12:06:58.841596> 
2019-05-30T12:06:58.842120> Got first framing byte
2019-05-30T12:06:58.842567> --> got LoRa data prefix
2019-05-30T12:06:58.842986> --> DATA with_appkey: read app key sequence
2019-05-30T12:06:58.843458> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:06:58.843894> app key disabled
2019-05-30T12:06:58.844407> valid app key: accept data
2019-05-30T12:06:58.844860> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:06:58.845869> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,247,10,7,-43" "125,5,12" "2019-05-30T12:06:58.834" "B827EB1B65FD"
2019-05-30T12:07:03.622713> CloudEdge: uploading
2019-05-30T12:07:03.623577> CloudEdge: run under guest identity, all data is public
2019-05-30T12:07:03.624310> CloudEdge: check if entity exits
2019-05-30T12:07:03.624956> CloudEdge: will issue requests with
2019-05-30T12:07:03.625593> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:07:03.626339> CloudEdge: returned msg from server is 200
2019-05-30T12:07:03.627198> CloudEdge: entity exists
2019-05-30T12:07:03.627834> CloudEdge: check if measurement exits
2019-05-30T12:07:03.628424> CloudEdge: will issue requests with
2019-05-30T12:07:03.629002> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:07:03.629580> CloudEdge: returned msg from server is 200
2019-05-30T12:07:03.630151> CloudEdge: measurement exists
2019-05-30T12:07:03.630730> CloudEdge: will issue requests with
2019-05-30T12:07:03.631308> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:07:03.631875> data: {"value":94.88,"timestamp":"2019-05-30T12:06:58.834"}
2019-05-30T12:07:03.632454> CloudEdge: returned msg from server is 200
2019-05-30T12:07:03.633033> CloudEdge: upload success
2019-05-30T12:07:03.823642> --> cloud end
2019-05-30T12:07:03.824209> 
2019-05-30T12:08:00.947081> --- rxlora. dst=1 type=0x12 src=8 seq=248 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:08:00.947570> 2019-05-30T12:08:00.946079
2019-05-30T12:08:00.947898> rcv ctrl pkt info (^p): 1,18,8,248,14,6,-41
2019-05-30T12:08:00.948182> splitted in: [1, 18, 8, 248, 14, 6, -41]
2019-05-30T12:08:00.948461> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=248 len=14 SNR=6 RSSI=-41)
2019-05-30T12:08:00.948812> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:08:00.949186> splitted in: [125, 5, 12]
2019-05-30T12:08:00.949477> (BW=125 CR=5 SF=12)
2019-05-30T12:08:00.949838> rcv timestamp (^t): 2019-05-30T12:08:00.942
2019-05-30T12:08:00.950141> 
2019-05-30T12:08:00.950415> Got first framing byte
2019-05-30T12:08:00.950695> --> got LoRa data prefix
2019-05-30T12:08:00.951040> --> DATA with_appkey: read app key sequence
2019-05-30T12:08:00.951390> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:08:00.951741> app key disabled
2019-05-30T12:08:00.952056> valid app key: accept data
2019-05-30T12:08:00.952427> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:08:00.952781> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,248,10,6,-41" "125,5,12" "2019-05-30T12:08:00.942" "B827EB1B65FD"
2019-05-30T12:08:04.451263> 2019-05-30 12:08:04.450148
2019-05-30T12:08:04.451723> post status: gw ON
2019-05-30T12:08:04.452068> post status: executing periodic tasks
2019-05-30T12:08:05.153127> CloudEdge: uploading
2019-05-30T12:08:05.154105> CloudEdge: run under guest identity, all data is public
2019-05-30T12:08:05.154825> CloudEdge: check if entity exits
2019-05-30T12:08:05.155511> CloudEdge: will issue requests with
2019-05-30T12:08:05.156128> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:08:05.156950> CloudEdge: returned msg from server is 200
2019-05-30T12:08:05.157623> CloudEdge: entity exists
2019-05-30T12:08:05.158182> CloudEdge: check if measurement exits
2019-05-30T12:08:05.158718> CloudEdge: will issue requests with
2019-05-30T12:08:05.159196> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:08:05.159658> CloudEdge: returned msg from server is 200
2019-05-30T12:08:05.160112> CloudEdge: measurement exists
2019-05-30T12:08:05.160556> CloudEdge: will issue requests with
2019-05-30T12:08:05.161008> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:08:05.161546> data: {"value":94.75,"timestamp":"2019-05-30T12:08:00.942"}
2019-05-30T12:08:05.162066> CloudEdge: returned msg from server is 200
2019-05-30T12:08:05.162549> CloudEdge: upload success
2019-05-30T12:08:05.347506> --> cloud end
2019-05-30T12:08:05.347962> 
2019-05-30T12:08:05.588602> no timezone support, time will be expressed only in local time
2019-05-30T12:08:05.589101> post status: start running
2019-05-30T12:08:06.721553> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:08:06.721931> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:08:06.722200> get_gps.py: invalid serial port
2019-05-30T12:08:06.875945> post status: dynamic GPS is requested
2019-05-30T12:08:06.876405> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:08:06.877069> post status get GPS: no GPS coordinates
2019-05-30T12:08:06.877495> post status: show current GPS position
2019-05-30T12:08:06.877885> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:08:06.878235> post status: exiting
2019-05-30T12:09:03.054943> --- rxlora. dst=1 type=0x12 src=8 seq=249 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:09:03.055856> 2019-05-30T12:09:03.054283
2019-05-30T12:09:03.056826> rcv ctrl pkt info (^p): 1,18,8,249,14,6,-42
2019-05-30T12:09:03.057783> splitted in: [1, 18, 8, 249, 14, 6, -42]
2019-05-30T12:09:03.058653> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=249 len=14 SNR=6 RSSI=-42)
2019-05-30T12:09:03.059569> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:09:03.061118> splitted in: [125, 5, 12]
2019-05-30T12:09:03.061749> (BW=125 CR=5 SF=12)
2019-05-30T12:09:03.062504> rcv timestamp (^t): 2019-05-30T12:09:03.050
2019-05-30T12:09:03.063118> 
2019-05-30T12:09:03.063714> Got first framing byte
2019-05-30T12:09:03.064431> --> got LoRa data prefix
2019-05-30T12:09:03.064894> --> DATA with_appkey: read app key sequence
2019-05-30T12:09:03.065279> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:09:03.065664> app key disabled
2019-05-30T12:09:03.066262> valid app key: accept data
2019-05-30T12:09:03.066757> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:09:03.067166> python /app/data_acq/edgeCall.py "TC/94.81" "1,18,8,249,10,6,-42" "125,5,12" "2019-05-30T12:09:03.050" "B827EB1B65FD"
2019-05-30T12:09:07.270588> CloudEdge: uploading
2019-05-30T12:09:07.271447> CloudEdge: run under guest identity, all data is public
2019-05-30T12:09:07.272197> CloudEdge: check if entity exits
2019-05-30T12:09:07.272872> CloudEdge: will issue requests with
2019-05-30T12:09:07.273533> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:09:07.274210> CloudEdge: returned msg from server is 200
2019-05-30T12:09:07.274832> CloudEdge: entity exists
2019-05-30T12:09:07.276076> CloudEdge: check if measurement exits
2019-05-30T12:09:07.277317> CloudEdge: will issue requests with
2019-05-30T12:09:07.278103> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:09:07.278757> CloudEdge: returned msg from server is 200
2019-05-30T12:09:07.293160> CloudEdge: measurement exists
2019-05-30T12:09:07.294754> CloudEdge: will issue requests with
2019-05-30T12:09:07.296249> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:09:07.298011> data: {"value":94.81,"timestamp":"2019-05-30T12:09:03.050"}
2019-05-30T12:09:07.299351> CloudEdge: returned msg from server is 200
2019-05-30T12:09:07.301376> CloudEdge: upload success
2019-05-30T12:09:07.464885> --> cloud end
2019-05-30T12:09:07.465319> 
2019-05-30T12:10:05.167264> --- rxlora. dst=1 type=0x12 src=8 seq=250 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:10:05.167910> 2019-05-30T12:10:05.164527
2019-05-30T12:10:05.168393> rcv ctrl pkt info (^p): 1,18,8,250,14,6,-43
2019-05-30T12:10:05.168788> splitted in: [1, 18, 8, 250, 14, 6, -43]
2019-05-30T12:10:05.169269> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=250 len=14 SNR=6 RSSI=-43)
2019-05-30T12:10:05.169638> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:10:05.170054> splitted in: [125, 5, 12]
2019-05-30T12:10:05.170470> (BW=125 CR=5 SF=12)
2019-05-30T12:10:05.170913> rcv timestamp (^t): 2019-05-30T12:10:05.161
2019-05-30T12:10:05.171317> 
2019-05-30T12:10:05.171808> Got first framing byte
2019-05-30T12:10:05.172220> --> got LoRa data prefix
2019-05-30T12:10:05.172599> --> DATA with_appkey: read app key sequence
2019-05-30T12:10:05.173167> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:10:05.173637> app key disabled
2019-05-30T12:10:05.174143> valid app key: accept data
2019-05-30T12:10:05.174510> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:10:05.174865> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,250,10,6,-43" "125,5,12" "2019-05-30T12:10:05.161" "B827EB1B65FD"
2019-05-30T12:10:10.095272> CloudEdge: uploading
2019-05-30T12:10:10.096203> CloudEdge: run under guest identity, all data is public
2019-05-30T12:10:10.097938> CloudEdge: check if entity exits
2019-05-30T12:10:10.100324> CloudEdge: will issue requests with
2019-05-30T12:10:10.101267> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:10:10.101943> CloudEdge: returned msg from server is 200
2019-05-30T12:10:10.102567> CloudEdge: entity exists
2019-05-30T12:10:10.103163> CloudEdge: check if measurement exits
2019-05-30T12:10:10.103746> CloudEdge: will issue requests with
2019-05-30T12:10:10.104326> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:10:10.104903> CloudEdge: returned msg from server is 200
2019-05-30T12:10:10.105562> CloudEdge: measurement exists
2019-05-30T12:10:10.106140> CloudEdge: will issue requests with
2019-05-30T12:10:10.106929> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:10:10.107572> data: {"value":94.75,"timestamp":"2019-05-30T12:10:05.161"}
2019-05-30T12:10:10.108410> CloudEdge: returned msg from server is 200
2019-05-30T12:10:10.109149> CloudEdge: upload success
2019-05-30T12:10:10.280417> --> cloud end
2019-05-30T12:10:10.280821> 
2019-05-30T12:11:07.277945> --- rxlora. dst=1 type=0x12 src=8 seq=251 len=14 SNR=8 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T12:11:07.278563> 2019-05-30T12:11:07.275243
2019-05-30T12:11:07.279046> rcv ctrl pkt info (^p): 1,18,8,251,14,8,-40
2019-05-30T12:11:07.279453> splitted in: [1, 18, 8, 251, 14, 8, -40]
2019-05-30T12:11:07.279866> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=251 len=14 SNR=8 RSSI=-40)
2019-05-30T12:11:07.280299> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:11:07.280774> splitted in: [125, 5, 12]
2019-05-30T12:11:07.281199> (BW=125 CR=5 SF=12)
2019-05-30T12:11:07.281675> rcv timestamp (^t): 2019-05-30T12:11:07.271
2019-05-30T12:11:07.282197> 
2019-05-30T12:11:07.282661> Got first framing byte
2019-05-30T12:11:07.283083> --> got LoRa data prefix
2019-05-30T12:11:07.283516> --> DATA with_appkey: read app key sequence
2019-05-30T12:11:07.283962> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:11:07.284590> app key disabled
2019-05-30T12:11:07.285167> valid app key: accept data
2019-05-30T12:11:07.285857> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:11:07.286481> python /app/data_acq/edgeCall.py "TC/94.68" "1,18,8,251,10,8,-40" "125,5,12" "2019-05-30T12:11:07.271" "B827EB1B65FD"
2019-05-30T12:11:11.941923> CloudEdge: uploading
2019-05-30T12:11:11.942478> CloudEdge: run under guest identity, all data is public
2019-05-30T12:11:11.942874> CloudEdge: check if entity exits
2019-05-30T12:11:11.943191> CloudEdge: will issue requests with
2019-05-30T12:11:11.943486> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:11:11.943775> CloudEdge: returned msg from server is 200
2019-05-30T12:11:11.944072> CloudEdge: entity exists
2019-05-30T12:11:11.944376> CloudEdge: check if measurement exits
2019-05-30T12:11:11.944665> CloudEdge: will issue requests with
2019-05-30T12:11:11.944951> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:11:11.945239> CloudEdge: returned msg from server is 200
2019-05-30T12:11:11.945524> CloudEdge: measurement exists
2019-05-30T12:11:11.945810> CloudEdge: will issue requests with
2019-05-30T12:11:11.946101> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:11:11.946389> data: {"value":94.68,"timestamp":"2019-05-30T12:11:07.271"}
2019-05-30T12:11:11.946871> CloudEdge: returned msg from server is 200
2019-05-30T12:11:11.947217> CloudEdge: upload success
2019-05-30T12:11:12.104814> --> cloud end
2019-05-30T12:11:12.105207> 
2019-05-30T12:12:09.387168> --- rxlora. dst=1 type=0x12 src=8 seq=252 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:12:09.388097> 2019-05-30T12:12:09.386409
2019-05-30T12:12:09.388904> rcv ctrl pkt info (^p): 1,18,8,252,14,7,-43
2019-05-30T12:12:09.389859> splitted in: [1, 18, 8, 252, 14, 7, -43]
2019-05-30T12:12:09.390735> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=252 len=14 SNR=7 RSSI=-43)
2019-05-30T12:12:09.391636> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:12:09.395176> splitted in: [125, 5, 12]
2019-05-30T12:12:09.395831> (BW=125 CR=5 SF=12)
2019-05-30T12:12:09.396519> rcv timestamp (^t): 2019-05-30T12:12:09.382
2019-05-30T12:12:09.397658> 
2019-05-30T12:12:09.398511> Got first framing byte
2019-05-30T12:12:09.400154> --> got LoRa data prefix
2019-05-30T12:12:09.403507> --> DATA with_appkey: read app key sequence
2019-05-30T12:12:09.404367> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:12:09.405232> app key disabled
2019-05-30T12:12:09.407315> valid app key: accept data
2019-05-30T12:12:09.408149> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:12:09.408903> python /app/data_acq/edgeCall.py "TC/94.68" "1,18,8,252,10,7,-43" "125,5,12" "2019-05-30T12:12:09.382" "B827EB1B65FD"
2019-05-30T12:12:13.751660> CloudEdge: uploading
2019-05-30T12:12:13.752619> CloudEdge: run under guest identity, all data is public
2019-05-30T12:12:13.753369> CloudEdge: check if entity exits
2019-05-30T12:12:13.754055> CloudEdge: will issue requests with
2019-05-30T12:12:13.754700> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:12:13.755337> CloudEdge: returned msg from server is 200
2019-05-30T12:12:13.755914> CloudEdge: entity exists
2019-05-30T12:12:13.756483> CloudEdge: check if measurement exits
2019-05-30T12:12:13.757272> CloudEdge: will issue requests with
2019-05-30T12:12:13.757878> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:12:13.758457> CloudEdge: returned msg from server is 200
2019-05-30T12:12:13.759023> CloudEdge: measurement exists
2019-05-30T12:12:13.759586> CloudEdge: will issue requests with
2019-05-30T12:12:13.760151> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:12:13.760712> data: {"value":94.68,"timestamp":"2019-05-30T12:12:09.382"}
2019-05-30T12:12:13.761276> CloudEdge: returned msg from server is 200
2019-05-30T12:12:13.761841> CloudEdge: upload success
2019-05-30T12:12:13.956995> --> cloud end
2019-05-30T12:12:13.957521> 
2019-05-30T12:12:13.957815> Low-level gw status ON
2019-05-30T12:13:11.497694> --- rxlora. dst=1 type=0x12 src=8 seq=253 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:13:11.498134> 2019-05-30T12:13:11.497287
2019-05-30T12:13:11.498448> rcv ctrl pkt info (^p): 1,18,8,253,14,6,-43
2019-05-30T12:13:11.498751> splitted in: [1, 18, 8, 253, 14, 6, -43]
2019-05-30T12:13:11.499030> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=253 len=14 SNR=6 RSSI=-43)
2019-05-30T12:13:11.499304> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:13:11.499577> splitted in: [125, 5, 12]
2019-05-30T12:13:11.499919> (BW=125 CR=5 SF=12)
2019-05-30T12:13:11.500256> rcv timestamp (^t): 2019-05-30T12:13:11.493
2019-05-30T12:13:11.500555> 
2019-05-30T12:13:11.500909> Got first framing byte
2019-05-30T12:13:11.501220> --> got LoRa data prefix
2019-05-30T12:13:11.501509> --> DATA with_appkey: read app key sequence
2019-05-30T12:13:11.501793> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:13:11.502111> app key disabled
2019-05-30T12:13:11.502460> valid app key: accept data
2019-05-30T12:13:11.502810> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:13:11.503130> python /app/data_acq/edgeCall.py "TC/94.68" "1,18,8,253,10,6,-43" "125,5,12" "2019-05-30T12:13:11.493" "B827EB1B65FD"
2019-05-30T12:13:15.849989> CloudEdge: uploading
2019-05-30T12:13:15.850978> CloudEdge: run under guest identity, all data is public
2019-05-30T12:13:15.851870> CloudEdge: check if entity exits
2019-05-30T12:13:15.852706> CloudEdge: will issue requests with
2019-05-30T12:13:15.853581> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:13:15.854385> CloudEdge: returned msg from server is 200
2019-05-30T12:13:15.855116> CloudEdge: entity exists
2019-05-30T12:13:15.855832> CloudEdge: check if measurement exits
2019-05-30T12:13:15.856667> CloudEdge: will issue requests with
2019-05-30T12:13:15.857483> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:13:15.858225> CloudEdge: returned msg from server is 200
2019-05-30T12:13:15.858953> CloudEdge: measurement exists
2019-05-30T12:13:15.859663> CloudEdge: will issue requests with
2019-05-30T12:13:15.860388> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:13:15.861105> data: {"value":94.68,"timestamp":"2019-05-30T12:13:11.493"}
2019-05-30T12:13:15.861810> CloudEdge: returned msg from server is 200
2019-05-30T12:13:15.862508> CloudEdge: upload success
2019-05-30T12:13:16.054519> --> cloud end
2019-05-30T12:13:16.054989> 
2019-05-30T12:14:13.611418> --- rxlora. dst=1 type=0x12 src=8 seq=254 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:14:13.611951> 2019-05-30T12:14:13.608479
2019-05-30T12:14:13.612285> rcv ctrl pkt info (^p): 1,18,8,254,14,7,-42
2019-05-30T12:14:13.612586> splitted in: [1, 18, 8, 254, 14, 7, -42]
2019-05-30T12:14:13.612869> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=254 len=14 SNR=7 RSSI=-42)
2019-05-30T12:14:13.613202> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:14:13.613539> splitted in: [125, 5, 12]
2019-05-30T12:14:13.613877> (BW=125 CR=5 SF=12)
2019-05-30T12:14:13.614182> rcv timestamp (^t): 2019-05-30T12:14:13.604
2019-05-30T12:14:13.614582> 
2019-05-30T12:14:13.614972> Got first framing byte
2019-05-30T12:14:13.615325> --> got LoRa data prefix
2019-05-30T12:14:13.615666> --> DATA with_appkey: read app key sequence
2019-05-30T12:14:13.616041> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:14:13.616381> app key disabled
2019-05-30T12:14:13.617450> valid app key: accept data
2019-05-30T12:14:13.618218> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:14:13.618863> python /app/data_acq/edgeCall.py "TC/94.68" "1,18,8,254,10,7,-42" "125,5,12" "2019-05-30T12:14:13.604" "B827EB1B65FD"
2019-05-30T12:14:18.663498> CloudEdge: uploading
2019-05-30T12:14:18.664377> CloudEdge: run under guest identity, all data is public
2019-05-30T12:14:18.665109> CloudEdge: check if entity exits
2019-05-30T12:14:18.665751> CloudEdge: will issue requests with
2019-05-30T12:14:18.666372> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:14:18.667359> CloudEdge: returned msg from server is 200
2019-05-30T12:14:18.668014> CloudEdge: entity exists
2019-05-30T12:14:18.668725> CloudEdge: check if measurement exits
2019-05-30T12:14:18.669343> CloudEdge: will issue requests with
2019-05-30T12:14:18.669910> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:14:18.670474> CloudEdge: returned msg from server is 200
2019-05-30T12:14:18.671031> CloudEdge: measurement exists
2019-05-30T12:14:18.671590> CloudEdge: will issue requests with
2019-05-30T12:14:18.672146> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:14:18.672711> data: {"value":94.68,"timestamp":"2019-05-30T12:14:13.604"}
2019-05-30T12:14:18.673277> CloudEdge: returned msg from server is 200
2019-05-30T12:14:18.674094> CloudEdge: upload success
2019-05-30T12:14:18.862976> --> cloud end
2019-05-30T12:14:18.863335> 
2019-05-30T12:15:15.718456> --- rxlora. dst=1 type=0x12 src=8 seq=255 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:15:15.718982> 2019-05-30T12:15:15.718044
2019-05-30T12:15:15.719429> rcv ctrl pkt info (^p): 1,18,8,255,14,6,-42
2019-05-30T12:15:15.719813> splitted in: [1, 18, 8, 255, 14, 6, -42]
2019-05-30T12:15:15.720195> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=255 len=14 SNR=6 RSSI=-42)
2019-05-30T12:15:15.720554> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:15:15.720977> splitted in: [125, 5, 12]
2019-05-30T12:15:15.721345> (BW=125 CR=5 SF=12)
2019-05-30T12:15:15.721665> rcv timestamp (^t): 2019-05-30T12:15:15.714
2019-05-30T12:15:15.722062> 
2019-05-30T12:15:15.722449> Got first framing byte
2019-05-30T12:15:15.722844> --> got LoRa data prefix
2019-05-30T12:15:15.723231> --> DATA with_appkey: read app key sequence
2019-05-30T12:15:15.723695> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:15:15.724241> app key disabled
2019-05-30T12:15:15.724776> valid app key: accept data
2019-05-30T12:15:15.725241> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:15:15.725692> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,255,10,6,-42" "125,5,12" "2019-05-30T12:15:15.714" "B827EB1B65FD"
2019-05-30T12:15:20.571562> CloudEdge: uploading
2019-05-30T12:15:20.572392> CloudEdge: run under guest identity, all data is public
2019-05-30T12:15:20.573031> CloudEdge: check if entity exits
2019-05-30T12:15:20.573647> CloudEdge: will issue requests with
2019-05-30T12:15:20.574239> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:15:20.574919> CloudEdge: returned msg from server is 200
2019-05-30T12:15:20.575407> CloudEdge: entity exists
2019-05-30T12:15:20.575785> CloudEdge: check if measurement exits
2019-05-30T12:15:20.576137> CloudEdge: will issue requests with
2019-05-30T12:15:20.576471> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:15:20.577084> CloudEdge: returned msg from server is 200
2019-05-30T12:15:20.577522> CloudEdge: measurement exists
2019-05-30T12:15:20.577902> CloudEdge: will issue requests with
2019-05-30T12:15:20.578289> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:15:20.578675> data: {"value":94.75,"timestamp":"2019-05-30T12:15:15.714"}
2019-05-30T12:15:20.579035> CloudEdge: returned msg from server is 200
2019-05-30T12:15:20.579419> CloudEdge: upload success
2019-05-30T12:15:20.742654> --> cloud end
2019-05-30T12:15:20.743091> 
2019-05-30T12:16:17.828665> --- rxlora. dst=1 type=0x12 src=8 seq=0 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:16:17.831115> 2019-05-30T12:16:17.828836
2019-05-30T12:16:17.832086> rcv ctrl pkt info (^p): 1,18,8,0,14,7,-41
2019-05-30T12:16:17.832959> splitted in: [1, 18, 8, 0, 14, 7, -41]
2019-05-30T12:16:17.833862> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=0 len=14 SNR=7 RSSI=-41)
2019-05-30T12:16:17.834818> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:16:17.835812> splitted in: [125, 5, 12]
2019-05-30T12:16:17.837297> (BW=125 CR=5 SF=12)
2019-05-30T12:16:17.838465> rcv timestamp (^t): 2019-05-30T12:16:17.824
2019-05-30T12:16:17.839651> 
2019-05-30T12:16:17.840529> Got first framing byte
2019-05-30T12:16:17.841391> --> got LoRa data prefix
2019-05-30T12:16:17.842085> --> DATA with_appkey: read app key sequence
2019-05-30T12:16:17.842521> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:16:17.843223> app key disabled
2019-05-30T12:16:17.843924> valid app key: accept data
2019-05-30T12:16:17.844575> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:16:17.844962> python /app/data_acq/edgeCall.py "TC/94.68" "1,18,8,0,10,7,-41" "125,5,12" "2019-05-30T12:16:17.824" "B827EB1B65FD"
2019-05-30T12:16:22.239184> CloudEdge: uploading
2019-05-30T12:16:22.239824> CloudEdge: run under guest identity, all data is public
2019-05-30T12:16:22.240267> CloudEdge: check if entity exits
2019-05-30T12:16:22.240623> CloudEdge: will issue requests with
2019-05-30T12:16:22.240945> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:16:22.241262> CloudEdge: returned msg from server is 200
2019-05-30T12:16:22.241569> CloudEdge: entity exists
2019-05-30T12:16:22.241869> CloudEdge: check if measurement exits
2019-05-30T12:16:22.242162> CloudEdge: will issue requests with
2019-05-30T12:16:22.242450> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:16:22.242913> CloudEdge: returned msg from server is 200
2019-05-30T12:16:22.243561> CloudEdge: measurement exists
2019-05-30T12:16:22.244368> CloudEdge: will issue requests with
2019-05-30T12:16:22.245117> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:16:22.245843> data: {"value":94.68,"timestamp":"2019-05-30T12:16:17.824"}
2019-05-30T12:16:22.246748> CloudEdge: returned msg from server is 200
2019-05-30T12:16:22.247601> CloudEdge: upload success
2019-05-30T12:16:22.411244> --> cloud end
2019-05-30T12:16:22.411696> 
2019-05-30T12:17:19.938498> --- rxlora. dst=1 type=0x12 src=8 seq=1 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:17:19.938990> 2019-05-30T12:17:19.938121
2019-05-30T12:17:19.939356> rcv ctrl pkt info (^p): 1,18,8,1,14,6,-42
2019-05-30T12:17:19.939703> splitted in: [1, 18, 8, 1, 14, 6, -42]
2019-05-30T12:17:19.940019> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=1 len=14 SNR=6 RSSI=-42)
2019-05-30T12:17:19.940331> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:17:19.940746> splitted in: [125, 5, 12]
2019-05-30T12:17:19.941136> (BW=125 CR=5 SF=12)
2019-05-30T12:17:19.941473> rcv timestamp (^t): 2019-05-30T12:17:19.934
2019-05-30T12:17:19.941783> 
2019-05-30T12:17:19.942188> Got first framing byte
2019-05-30T12:17:19.942503> --> got LoRa data prefix
2019-05-30T12:17:19.942844> --> DATA with_appkey: read app key sequence
2019-05-30T12:17:19.943223> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:17:19.943593> app key disabled
2019-05-30T12:17:19.943944> valid app key: accept data
2019-05-30T12:17:19.944310> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:17:19.944624> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,1,10,6,-42" "125,5,12" "2019-05-30T12:17:19.934" "B827EB1B65FD"
2019-05-30T12:17:24.170839> CloudEdge: uploading
2019-05-30T12:17:24.171733> CloudEdge: run under guest identity, all data is public
2019-05-30T12:17:24.172489> CloudEdge: check if entity exits
2019-05-30T12:17:24.173159> CloudEdge: will issue requests with
2019-05-30T12:17:24.173816> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:17:24.174462> CloudEdge: returned msg from server is 200
2019-05-30T12:17:24.175056> CloudEdge: entity exists
2019-05-30T12:17:24.175645> CloudEdge: check if measurement exits
2019-05-30T12:17:24.176242> CloudEdge: will issue requests with
2019-05-30T12:17:24.176990> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:17:24.177624> CloudEdge: returned msg from server is 200
2019-05-30T12:17:24.178223> CloudEdge: measurement exists
2019-05-30T12:17:24.178811> CloudEdge: will issue requests with
2019-05-30T12:17:24.179389> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:17:24.179967> data: {"value":94.75,"timestamp":"2019-05-30T12:17:19.934"}
2019-05-30T12:17:24.180569> CloudEdge: returned msg from server is 200
2019-05-30T12:17:24.181264> CloudEdge: upload success
2019-05-30T12:17:24.367772> --> cloud end
2019-05-30T12:17:24.368350> 
2019-05-30T12:18:07.069157> 2019-05-30 12:18:07.066680
2019-05-30T12:18:07.069718> post status: gw ON
2019-05-30T12:18:07.070133> post status: executing periodic tasks
2019-05-30T12:18:08.175704> no timezone support, time will be expressed only in local time
2019-05-30T12:18:08.176140> post status: start running
2019-05-30T12:18:09.204880> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:18:09.205401> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:18:09.205795> get_gps.py: invalid serial port
2019-05-30T12:18:09.339757> post status: dynamic GPS is requested
2019-05-30T12:18:09.340165> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:18:09.340523> post status get GPS: no GPS coordinates
2019-05-30T12:18:09.340917> post status: show current GPS position
2019-05-30T12:18:09.341250> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:18:09.341546> post status: exiting
2019-05-30T12:18:22.047825> --- rxlora. dst=1 type=0x12 src=8 seq=2 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:18:22.048288> 2019-05-30T12:18:22.047404
2019-05-30T12:18:22.048607> rcv ctrl pkt info (^p): 1,18,8,2,14,7,-41
2019-05-30T12:18:22.049000> splitted in: [1, 18, 8, 2, 14, 7, -41]
2019-05-30T12:18:22.049359> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=2 len=14 SNR=7 RSSI=-41)
2019-05-30T12:18:22.049657> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:18:22.050061> splitted in: [125, 5, 12]
2019-05-30T12:18:22.050454> (BW=125 CR=5 SF=12)
2019-05-30T12:18:22.050842> rcv timestamp (^t): 2019-05-30T12:18:22.043
2019-05-30T12:18:22.051184> 
2019-05-30T12:18:22.051640> Got first framing byte
2019-05-30T12:18:22.051988> --> got LoRa data prefix
2019-05-30T12:18:22.052340> --> DATA with_appkey: read app key sequence
2019-05-30T12:18:22.052788> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:18:22.053199> app key disabled
2019-05-30T12:18:22.053697> valid app key: accept data
2019-05-30T12:18:22.054156> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:18:22.054581> python /app/data_acq/edgeCall.py "TC/94.75" "1,18,8,2,10,7,-41" "125,5,12" "2019-05-30T12:18:22.043" "B827EB1B65FD"
2019-05-30T12:18:26.131057> CloudEdge: uploading
2019-05-30T12:18:26.131941> CloudEdge: run under guest identity, all data is public
2019-05-30T12:18:26.132712> CloudEdge: check if entity exits
2019-05-30T12:18:26.133392> CloudEdge: will issue requests with
2019-05-30T12:18:26.134059> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:18:26.134720> CloudEdge: returned msg from server is 200
2019-05-30T12:18:26.135321> CloudEdge: entity exists
2019-05-30T12:18:26.135903> CloudEdge: check if measurement exits
2019-05-30T12:18:26.136472> CloudEdge: will issue requests with
2019-05-30T12:18:26.137255> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:18:26.137855> CloudEdge: returned msg from server is 200
2019-05-30T12:18:26.138456> CloudEdge: measurement exists
2019-05-30T12:18:26.139043> CloudEdge: will issue requests with
2019-05-30T12:18:26.139621> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:18:26.140196> data: {"value":94.75,"timestamp":"2019-05-30T12:18:22.043"}
2019-05-30T12:18:26.140760> CloudEdge: returned msg from server is 200
2019-05-30T12:18:26.141335> CloudEdge: upload success
2019-05-30T12:18:26.337397> --> cloud end
2019-05-30T12:18:26.337789> 
2019-05-30T12:19:24.157170> --- rxlora. dst=1 type=0x12 src=8 seq=3 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:19:24.157614> 2019-05-30T12:19:24.156669
2019-05-30T12:19:24.157941> rcv ctrl pkt info (^p): 1,18,8,3,14,6,-41
2019-05-30T12:19:24.158262> splitted in: [1, 18, 8, 3, 14, 6, -41]
2019-05-30T12:19:24.158547> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=3 len=14 SNR=6 RSSI=-41)
2019-05-30T12:19:24.158825> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:19:24.159113> splitted in: [125, 5, 12]
2019-05-30T12:19:24.159457> (BW=125 CR=5 SF=12)
2019-05-30T12:19:24.159784> rcv timestamp (^t): 2019-05-30T12:19:24.153
2019-05-30T12:19:24.160094> 
2019-05-30T12:19:24.160454> Got first framing byte
2019-05-30T12:19:24.160748> --> got LoRa data prefix
2019-05-30T12:19:24.161029> --> DATA with_appkey: read app key sequence
2019-05-30T12:19:24.161323> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:19:24.161662> app key disabled
2019-05-30T12:19:24.161999> valid app key: accept data
2019-05-30T12:19:24.162358> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:19:24.162706> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,3,10,6,-41" "125,5,12" "2019-05-30T12:19:24.153" "B827EB1B65FD"
2019-05-30T12:19:28.892879> CloudEdge: uploading
2019-05-30T12:19:28.893583> CloudEdge: run under guest identity, all data is public
2019-05-30T12:19:28.894152> CloudEdge: check if entity exits
2019-05-30T12:19:28.894609> CloudEdge: will issue requests with
2019-05-30T12:19:28.895039> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:19:28.895484> CloudEdge: returned msg from server is 200
2019-05-30T12:19:28.895915> CloudEdge: entity exists
2019-05-30T12:19:28.896277> CloudEdge: check if measurement exits
2019-05-30T12:19:28.896837> CloudEdge: will issue requests with
2019-05-30T12:19:28.897282> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:19:28.897701> CloudEdge: returned msg from server is 200
2019-05-30T12:19:28.898046> CloudEdge: measurement exists
2019-05-30T12:19:28.912792> CloudEdge: will issue requests with
2019-05-30T12:19:28.913581> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:19:28.914205> data: {"value":94.94,"timestamp":"2019-05-30T12:19:24.153"}
2019-05-30T12:19:28.914939> CloudEdge: returned msg from server is 200
2019-05-30T12:19:28.915557> CloudEdge: upload success
2019-05-30T12:19:29.068852> --> cloud end
2019-05-30T12:19:29.069341> 
2019-05-30T12:20:26.267563> --- rxlora. dst=1 type=0x12 src=8 seq=4 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:20:26.268028> 2019-05-30T12:20:26.267130
2019-05-30T12:20:26.268388> rcv ctrl pkt info (^p): 1,18,8,4,14,6,-42
2019-05-30T12:20:26.268834> splitted in: [1, 18, 8, 4, 14, 6, -42]
2019-05-30T12:20:26.269459> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=4 len=14 SNR=6 RSSI=-42)
2019-05-30T12:20:26.270016> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:20:26.270483> splitted in: [125, 5, 12]
2019-05-30T12:20:26.270874> (BW=125 CR=5 SF=12)
2019-05-30T12:20:26.271302> rcv timestamp (^t): 2019-05-30T12:20:26.262
2019-05-30T12:20:26.271654> 
2019-05-30T12:20:26.272144> Got first framing byte
2019-05-30T12:20:26.272584> --> got LoRa data prefix
2019-05-30T12:20:26.273060> --> DATA with_appkey: read app key sequence
2019-05-30T12:20:26.273451> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:20:26.273956> app key disabled
2019-05-30T12:20:26.274418> valid app key: accept data
2019-05-30T12:20:26.274904> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:20:26.275337> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,4,10,6,-42" "125,5,12" "2019-05-30T12:20:26.262" "B827EB1B65FD"
2019-05-30T12:20:30.847335> CloudEdge: uploading
2019-05-30T12:20:30.848201> CloudEdge: run under guest identity, all data is public
2019-05-30T12:20:30.848961> CloudEdge: check if entity exits
2019-05-30T12:20:30.849618> CloudEdge: will issue requests with
2019-05-30T12:20:30.850264> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:20:30.850890> CloudEdge: returned msg from server is 200
2019-05-30T12:20:30.851480> CloudEdge: entity exists
2019-05-30T12:20:30.852061> CloudEdge: check if measurement exits
2019-05-30T12:20:30.852650> CloudEdge: will issue requests with
2019-05-30T12:20:30.853513> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:20:30.854193> CloudEdge: returned msg from server is 200
2019-05-30T12:20:30.854807> CloudEdge: measurement exists
2019-05-30T12:20:30.855406> CloudEdge: will issue requests with
2019-05-30T12:20:30.855988> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:20:30.856658> data: {"value":95.07,"timestamp":"2019-05-30T12:20:26.262"}
2019-05-30T12:20:30.857299> CloudEdge: returned msg from server is 200
2019-05-30T12:20:30.857885> CloudEdge: upload success
2019-05-30T12:20:31.065462> --> cloud end
2019-05-30T12:20:31.065908> 
2019-05-30T12:21:28.377234> --- rxlora. dst=1 type=0x12 src=8 seq=5 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:21:28.377805> 2019-05-30T12:21:28.376127
2019-05-30T12:21:28.378254> rcv ctrl pkt info (^p): 1,18,8,5,14,6,-43
2019-05-30T12:21:28.378730> splitted in: [1, 18, 8, 5, 14, 6, -43]
2019-05-30T12:21:28.379134> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=5 len=14 SNR=6 RSSI=-43)
2019-05-30T12:21:28.379558> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:21:28.379978> splitted in: [125, 5, 12]
2019-05-30T12:21:28.380328> (BW=125 CR=5 SF=12)
2019-05-30T12:21:28.380621> rcv timestamp (^t): 2019-05-30T12:21:28.372
2019-05-30T12:21:28.380913> 
2019-05-30T12:21:28.381291> Got first framing byte
2019-05-30T12:21:28.381579> --> got LoRa data prefix
2019-05-30T12:21:28.381913> --> DATA with_appkey: read app key sequence
2019-05-30T12:21:28.382281> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:21:28.382649> app key disabled
2019-05-30T12:21:28.382998> valid app key: accept data
2019-05-30T12:21:28.383449> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:21:28.383837> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,5,10,6,-43" "125,5,12" "2019-05-30T12:21:28.372" "B827EB1B65FD"
2019-05-30T12:21:32.774806> CloudEdge: uploading
2019-05-30T12:21:32.775638> CloudEdge: run under guest identity, all data is public
2019-05-30T12:21:32.776484> CloudEdge: check if entity exits
2019-05-30T12:21:32.777440> CloudEdge: will issue requests with
2019-05-30T12:21:32.778136> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:21:32.778777> CloudEdge: returned msg from server is 200
2019-05-30T12:21:32.779364> CloudEdge: entity exists
2019-05-30T12:21:32.779931> CloudEdge: check if measurement exits
2019-05-30T12:21:32.780494> CloudEdge: will issue requests with
2019-05-30T12:21:32.781061> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:21:32.781621> CloudEdge: returned msg from server is 200
2019-05-30T12:21:32.782192> CloudEdge: measurement exists
2019-05-30T12:21:32.782746> CloudEdge: will issue requests with
2019-05-30T12:21:32.783316> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:21:32.783879> data: {"value":95.07,"timestamp":"2019-05-30T12:21:28.372"}
2019-05-30T12:21:32.784439> CloudEdge: returned msg from server is 200
2019-05-30T12:21:32.785000> CloudEdge: upload success
2019-05-30T12:21:32.964889> --> cloud end
2019-05-30T12:21:32.965292> 
2019-05-30T12:22:30.487231> --- rxlora. dst=1 type=0x12 src=8 seq=6 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:22:30.487747> 2019-05-30T12:22:30.485186
2019-05-30T12:22:30.488095> rcv ctrl pkt info (^p): 1,18,8,6,14,6,-42
2019-05-30T12:22:30.488423> splitted in: [1, 18, 8, 6, 14, 6, -42]
2019-05-30T12:22:30.488907> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=6 len=14 SNR=6 RSSI=-42)
2019-05-30T12:22:30.489285> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:22:30.489671> splitted in: [125, 5, 12]
2019-05-30T12:22:30.490053> (BW=125 CR=5 SF=12)
2019-05-30T12:22:30.490413> rcv timestamp (^t): 2019-05-30T12:22:30.481
2019-05-30T12:22:30.490795> 
2019-05-30T12:22:30.491215> Got first framing byte
2019-05-30T12:22:30.491648> --> got LoRa data prefix
2019-05-30T12:22:30.492036> --> DATA with_appkey: read app key sequence
2019-05-30T12:22:30.492534> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:22:30.492998> app key disabled
2019-05-30T12:22:30.493424> valid app key: accept data
2019-05-30T12:22:30.493856> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:22:30.494281> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,6,10,6,-42" "125,5,12" "2019-05-30T12:22:30.481" "B827EB1B65FD"
2019-05-30T12:22:34.646517> CloudEdge: uploading
2019-05-30T12:22:34.647381> CloudEdge: run under guest identity, all data is public
2019-05-30T12:22:34.647968> CloudEdge: check if entity exits
2019-05-30T12:22:34.648394> CloudEdge: will issue requests with
2019-05-30T12:22:34.648757> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:22:34.649086> CloudEdge: returned msg from server is 200
2019-05-30T12:22:34.649412> CloudEdge: entity exists
2019-05-30T12:22:34.649708> CloudEdge: check if measurement exits
2019-05-30T12:22:34.650001> CloudEdge: will issue requests with
2019-05-30T12:22:34.650285> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:22:34.650582> CloudEdge: returned msg from server is 200
2019-05-30T12:22:34.650877> CloudEdge: measurement exists
2019-05-30T12:22:34.651167> CloudEdge: will issue requests with
2019-05-30T12:22:34.651465> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:22:34.651762> data: {"value":95.07,"timestamp":"2019-05-30T12:22:30.481"}
2019-05-30T12:22:34.652051> CloudEdge: returned msg from server is 200
2019-05-30T12:22:34.652336> CloudEdge: upload success
2019-05-30T12:22:34.812853> --> cloud end
2019-05-30T12:22:34.813264> 
2019-05-30T12:22:34.813536> Low-level gw status ON
2019-05-30T12:23:32.594694> --- rxlora. dst=1 type=0x12 src=8 seq=7 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:23:32.595236> 2019-05-30T12:23:32.593338
2019-05-30T12:23:32.595779> rcv ctrl pkt info (^p): 1,18,8,7,14,7,-42
2019-05-30T12:23:32.596280> splitted in: [1, 18, 8, 7, 14, 7, -42]
2019-05-30T12:23:32.596847> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=7 len=14 SNR=7 RSSI=-42)
2019-05-30T12:23:32.597325> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:23:32.597709> splitted in: [125, 5, 12]
2019-05-30T12:23:32.598076> (BW=125 CR=5 SF=12)
2019-05-30T12:23:32.598523> rcv timestamp (^t): 2019-05-30T12:23:32.590
2019-05-30T12:23:32.598968> 
2019-05-30T12:23:32.599367> Got first framing byte
2019-05-30T12:23:32.599863> --> got LoRa data prefix
2019-05-30T12:23:32.600348> --> DATA with_appkey: read app key sequence
2019-05-30T12:23:32.600744> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:23:32.601103> app key disabled
2019-05-30T12:23:32.601534> valid app key: accept data
2019-05-30T12:23:32.601867> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:23:32.602327> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,7,10,7,-42" "125,5,12" "2019-05-30T12:23:32.590" "B827EB1B65FD"
2019-05-30T12:23:36.702334> CloudEdge: uploading
2019-05-30T12:23:36.702882> CloudEdge: run under guest identity, all data is public
2019-05-30T12:23:36.703276> CloudEdge: check if entity exits
2019-05-30T12:23:36.703592> CloudEdge: will issue requests with
2019-05-30T12:23:36.703892> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:23:36.704189> CloudEdge: returned msg from server is 200
2019-05-30T12:23:36.704486> CloudEdge: entity exists
2019-05-30T12:23:36.704782> CloudEdge: check if measurement exits
2019-05-30T12:23:36.705078> CloudEdge: will issue requests with
2019-05-30T12:23:36.705373> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:23:36.705682> CloudEdge: returned msg from server is 200
2019-05-30T12:23:36.705973> CloudEdge: measurement exists
2019-05-30T12:23:36.706258> CloudEdge: will issue requests with
2019-05-30T12:23:36.706639> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:23:36.707004> data: {"value":95.13,"timestamp":"2019-05-30T12:23:32.590"}
2019-05-30T12:23:36.707314> CloudEdge: returned msg from server is 200
2019-05-30T12:23:36.707608> CloudEdge: upload success
2019-05-30T12:23:36.880630> --> cloud end
2019-05-30T12:23:36.881171> 
2019-05-30T12:24:34.701895> --- rxlora. dst=1 type=0x12 src=8 seq=8 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:24:34.702349> 2019-05-30T12:24:34.701506
2019-05-30T12:24:34.702655> rcv ctrl pkt info (^p): 1,18,8,8,14,6,-43
2019-05-30T12:24:34.702961> splitted in: [1, 18, 8, 8, 14, 6, -43]
2019-05-30T12:24:34.703239> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=8 len=14 SNR=6 RSSI=-43)
2019-05-30T12:24:34.703514> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:24:34.703786> splitted in: [125, 5, 12]
2019-05-30T12:24:34.704104> (BW=125 CR=5 SF=12)
2019-05-30T12:24:34.704449> rcv timestamp (^t): 2019-05-30T12:24:34.698
2019-05-30T12:24:34.704752> 
2019-05-30T12:24:34.705100> Got first framing byte
2019-05-30T12:24:34.705395> --> got LoRa data prefix
2019-05-30T12:24:34.705684> --> DATA with_appkey: read app key sequence
2019-05-30T12:24:34.705964> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:24:34.706286> app key disabled
2019-05-30T12:24:34.706786> valid app key: accept data
2019-05-30T12:24:34.707213> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:24:34.707573> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,8,10,6,-43" "125,5,12" "2019-05-30T12:24:34.698" "B827EB1B65FD"
2019-05-30T12:24:39.271523> CloudEdge: uploading
2019-05-30T12:24:39.272258> CloudEdge: run under guest identity, all data is public
2019-05-30T12:24:39.272851> CloudEdge: check if entity exits
2019-05-30T12:24:39.273414> CloudEdge: will issue requests with
2019-05-30T12:24:39.273986> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:24:39.274559> CloudEdge: returned msg from server is 200
2019-05-30T12:24:39.275192> CloudEdge: entity exists
2019-05-30T12:24:39.275750> CloudEdge: check if measurement exits
2019-05-30T12:24:39.276308> CloudEdge: will issue requests with
2019-05-30T12:24:39.276949> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:24:39.277583> CloudEdge: returned msg from server is 200
2019-05-30T12:24:39.278246> CloudEdge: measurement exists
2019-05-30T12:24:39.279014> CloudEdge: will issue requests with
2019-05-30T12:24:39.279838> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:24:39.280606> data: {"value":95.20,"timestamp":"2019-05-30T12:24:34.698"}
2019-05-30T12:24:39.281372> CloudEdge: returned msg from server is 200
2019-05-30T12:24:39.282140> CloudEdge: upload success
2019-05-30T12:24:39.474450> --> cloud end
2019-05-30T12:24:39.474971> 
2019-05-30T12:25:36.808219> --- rxlora. dst=1 type=0x12 src=8 seq=9 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:25:36.809185> 2019-05-30T12:25:36.807814
2019-05-30T12:25:36.809838> rcv ctrl pkt info (^p): 1,18,8,9,14,6,-41
2019-05-30T12:25:36.810286> splitted in: [1, 18, 8, 9, 14, 6, -41]
2019-05-30T12:25:36.810693> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=9 len=14 SNR=6 RSSI=-41)
2019-05-30T12:25:36.811096> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:25:36.811489> splitted in: [125, 5, 12]
2019-05-30T12:25:36.811911> (BW=125 CR=5 SF=12)
2019-05-30T12:25:36.812322> rcv timestamp (^t): 2019-05-30T12:25:36.804
2019-05-30T12:25:36.812715> 
2019-05-30T12:25:36.813180> Got first framing byte
2019-05-30T12:25:36.813564> --> got LoRa data prefix
2019-05-30T12:25:36.813961> --> DATA with_appkey: read app key sequence
2019-05-30T12:25:36.814344> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:25:36.814695> app key disabled
2019-05-30T12:25:36.815070> valid app key: accept data
2019-05-30T12:25:36.815509> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:25:36.815927> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,9,10,6,-41" "125,5,12" "2019-05-30T12:25:36.804" "B827EB1B65FD"
2019-05-30T12:25:41.632790> CloudEdge: uploading
2019-05-30T12:25:41.633663> CloudEdge: run under guest identity, all data is public
2019-05-30T12:25:41.634381> CloudEdge: check if entity exits
2019-05-30T12:25:41.635015> CloudEdge: will issue requests with
2019-05-30T12:25:41.635639> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:25:41.636267> CloudEdge: returned msg from server is 200
2019-05-30T12:25:41.637034> CloudEdge: entity exists
2019-05-30T12:25:41.637636> CloudEdge: check if measurement exits
2019-05-30T12:25:41.638204> CloudEdge: will issue requests with
2019-05-30T12:25:41.638777> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:25:41.639339> CloudEdge: returned msg from server is 200
2019-05-30T12:25:41.639901> CloudEdge: measurement exists
2019-05-30T12:25:41.640465> CloudEdge: will issue requests with
2019-05-30T12:25:41.641018> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:25:41.641571> data: {"value":95.13,"timestamp":"2019-05-30T12:25:36.804"}
2019-05-30T12:25:41.642123> CloudEdge: returned msg from server is 200
2019-05-30T12:25:41.642676> CloudEdge: upload success
2019-05-30T12:25:41.821620> --> cloud end
2019-05-30T12:25:41.822222> 
2019-05-30T12:26:38.917664> --- rxlora. dst=1 type=0x12 src=8 seq=10 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:26:38.918206> 2019-05-30T12:26:38.915120
2019-05-30T12:26:38.918565> rcv ctrl pkt info (^p): 1,18,8,10,14,6,-42
2019-05-30T12:26:38.918872> splitted in: [1, 18, 8, 10, 14, 6, -42]
2019-05-30T12:26:38.919171> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=10 len=14 SNR=6 RSSI=-42)
2019-05-30T12:26:38.919464> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:26:38.919764> splitted in: [125, 5, 12]
2019-05-30T12:26:38.920156> (BW=125 CR=5 SF=12)
2019-05-30T12:26:38.920476> rcv timestamp (^t): 2019-05-30T12:26:38.911
2019-05-30T12:26:38.920838> 
2019-05-30T12:26:38.921173> Got first framing byte
2019-05-30T12:26:38.921646> --> got LoRa data prefix
2019-05-30T12:26:38.922074> --> DATA with_appkey: read app key sequence
2019-05-30T12:26:38.922507> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:26:38.923165> app key disabled
2019-05-30T12:26:38.923836> valid app key: accept data
2019-05-30T12:26:38.924362> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:26:38.924796> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,10,10,6,-42" "125,5,12" "2019-05-30T12:26:38.911" "B827EB1B65FD"
2019-05-30T12:26:43.176016> CloudEdge: uploading
2019-05-30T12:26:43.177169> CloudEdge: run under guest identity, all data is public
2019-05-30T12:26:43.178076> CloudEdge: check if entity exits
2019-05-30T12:26:43.178898> CloudEdge: will issue requests with
2019-05-30T12:26:43.179732> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:26:43.180523> CloudEdge: returned msg from server is 200
2019-05-30T12:26:43.181221> CloudEdge: entity exists
2019-05-30T12:26:43.181954> CloudEdge: check if measurement exits
2019-05-30T12:26:43.182676> CloudEdge: will issue requests with
2019-05-30T12:26:43.183381> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:26:43.184071> CloudEdge: returned msg from server is 200
2019-05-30T12:26:43.184755> CloudEdge: measurement exists
2019-05-30T12:26:43.185439> CloudEdge: will issue requests with
2019-05-30T12:26:43.186118> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:26:43.187163> data: {"value":95.07,"timestamp":"2019-05-30T12:26:38.911"}
2019-05-30T12:26:43.188013> CloudEdge: returned msg from server is 200
2019-05-30T12:26:43.190064> CloudEdge: upload success
2019-05-30T12:26:43.358321> --> cloud end
2019-05-30T12:26:43.358762> 
2019-05-30T12:27:41.024959> --- rxlora. dst=1 type=0x12 src=8 seq=11 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:27:41.025822> 2019-05-30T12:27:41.024336
2019-05-30T12:27:41.026767> rcv ctrl pkt info (^p): 1,18,8,11,14,7,-42
2019-05-30T12:27:41.027680> splitted in: [1, 18, 8, 11, 14, 7, -42]
2019-05-30T12:27:41.028844> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=11 len=14 SNR=7 RSSI=-42)
2019-05-30T12:27:41.029820> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:27:41.030785> splitted in: [125, 5, 12]
2019-05-30T12:27:41.031777> (BW=125 CR=5 SF=12)
2019-05-30T12:27:41.032685> rcv timestamp (^t): 2019-05-30T12:27:41.020
2019-05-30T12:27:41.034202> 
2019-05-30T12:27:41.035177> Got first framing byte
2019-05-30T12:27:41.035957> --> got LoRa data prefix
2019-05-30T12:27:41.036968> --> DATA with_appkey: read app key sequence
2019-05-30T12:27:41.037741> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:27:41.038412> app key disabled
2019-05-30T12:27:41.039087> valid app key: accept data
2019-05-30T12:27:41.039748> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:27:41.040154> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,11,10,7,-42" "125,5,12" "2019-05-30T12:27:41.020" "B827EB1B65FD"
2019-05-30T12:27:45.435346> CloudEdge: uploading
2019-05-30T12:27:45.436181> CloudEdge: run under guest identity, all data is public
2019-05-30T12:27:45.437126> CloudEdge: check if entity exits
2019-05-30T12:27:45.437902> CloudEdge: will issue requests with
2019-05-30T12:27:45.438625> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:27:45.439296> CloudEdge: returned msg from server is 200
2019-05-30T12:27:45.439903> CloudEdge: entity exists
2019-05-30T12:27:45.440478> CloudEdge: check if measurement exits
2019-05-30T12:27:45.441053> CloudEdge: will issue requests with
2019-05-30T12:27:45.441625> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:27:45.442323> CloudEdge: returned msg from server is 200
2019-05-30T12:27:45.442936> CloudEdge: measurement exists
2019-05-30T12:27:45.443521> CloudEdge: will issue requests with
2019-05-30T12:27:45.444096> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:27:45.444667> data: {"value":94.94,"timestamp":"2019-05-30T12:27:41.020"}
2019-05-30T12:27:45.445233> CloudEdge: returned msg from server is 200
2019-05-30T12:27:45.445821> CloudEdge: upload success
2019-05-30T12:27:45.610861> --> cloud end
2019-05-30T12:27:45.611266> 
2019-05-30T12:28:09.489815> 2019-05-30 12:28:09.486013
2019-05-30T12:28:09.490580> post status: gw ON
2019-05-30T12:28:09.491189> post status: executing periodic tasks
2019-05-30T12:28:10.594838> no timezone support, time will be expressed only in local time
2019-05-30T12:28:10.595267> post status: start running
2019-05-30T12:28:11.652660> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:28:11.653038> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:28:11.653309> get_gps.py: invalid serial port
2019-05-30T12:28:11.797471> post status: dynamic GPS is requested
2019-05-30T12:28:11.797891> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:28:11.798250> post status get GPS: no GPS coordinates
2019-05-30T12:28:11.798548> post status: show current GPS position
2019-05-30T12:28:11.798832> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:28:11.799112> post status: exiting
2019-05-30T12:28:43.135880> --- rxlora. dst=1 type=0x12 src=8 seq=12 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:28:43.136390> 2019-05-30T12:28:43.134812
2019-05-30T12:28:43.137011> rcv ctrl pkt info (^p): 1,18,8,12,14,6,-42
2019-05-30T12:28:43.137460> splitted in: [1, 18, 8, 12, 14, 6, -42]
2019-05-30T12:28:43.137890> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=12 len=14 SNR=6 RSSI=-42)
2019-05-30T12:28:43.138304> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:28:43.138648> splitted in: [125, 5, 12]
2019-05-30T12:28:43.138996> (BW=125 CR=5 SF=12)
2019-05-30T12:28:43.139363> rcv timestamp (^t): 2019-05-30T12:28:43.131
2019-05-30T12:28:43.139680> 
2019-05-30T12:28:43.140174> Got first framing byte
2019-05-30T12:28:43.140577> --> got LoRa data prefix
2019-05-30T12:28:43.141006> --> DATA with_appkey: read app key sequence
2019-05-30T12:28:43.141423> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:28:43.141801> app key disabled
2019-05-30T12:28:43.142153> valid app key: accept data
2019-05-30T12:28:43.142490> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:28:43.142834> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,12,10,6,-42" "125,5,12" "2019-05-30T12:28:43.131" "B827EB1B65FD"
2019-05-30T12:28:47.387289> CloudEdge: uploading
2019-05-30T12:28:47.391891> CloudEdge: run under guest identity, all data is public
2019-05-30T12:28:47.392681> CloudEdge: check if entity exits
2019-05-30T12:28:47.393287> CloudEdge: will issue requests with
2019-05-30T12:28:47.393864> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:28:47.394440> CloudEdge: returned msg from server is 200
2019-05-30T12:28:47.395010> CloudEdge: entity exists
2019-05-30T12:28:47.395874> CloudEdge: check if measurement exits
2019-05-30T12:28:47.396483> CloudEdge: will issue requests with
2019-05-30T12:28:47.397222> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:28:47.397815> CloudEdge: returned msg from server is 200
2019-05-30T12:28:47.398384> CloudEdge: measurement exists
2019-05-30T12:28:47.398952> CloudEdge: will issue requests with
2019-05-30T12:28:47.399518> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:28:47.400080> data: {"value":95.13,"timestamp":"2019-05-30T12:28:43.131"}
2019-05-30T12:28:47.400640> CloudEdge: returned msg from server is 200
2019-05-30T12:28:47.401282> CloudEdge: upload success
2019-05-30T12:28:47.620639> --> cloud end
2019-05-30T12:28:47.621076> 
2019-05-30T12:29:45.247073> --- rxlora. dst=1 type=0x12 src=8 seq=13 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:29:45.247589> 2019-05-30T12:29:45.243808
2019-05-30T12:29:45.247917> rcv ctrl pkt info (^p): 1,18,8,13,14,6,-43
2019-05-30T12:29:45.248282> splitted in: [1, 18, 8, 13, 14, 6, -43]
2019-05-30T12:29:45.248661> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=13 len=14 SNR=6 RSSI=-43)
2019-05-30T12:29:45.249030> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:29:45.249508> splitted in: [125, 5, 12]
2019-05-30T12:29:45.249954> (BW=125 CR=5 SF=12)
2019-05-30T12:29:45.250433> rcv timestamp (^t): 2019-05-30T12:29:45.240
2019-05-30T12:29:45.250894> 
2019-05-30T12:29:45.251384> Got first framing byte
2019-05-30T12:29:45.251821> --> got LoRa data prefix
2019-05-30T12:29:45.252290> --> DATA with_appkey: read app key sequence
2019-05-30T12:29:45.252713> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:29:45.253410> app key disabled
2019-05-30T12:29:45.253899> valid app key: accept data
2019-05-30T12:29:45.254365> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:29:45.254782> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,13,10,6,-43" "125,5,12" "2019-05-30T12:29:45.240" "B827EB1B65FD"
2019-05-30T12:29:50.056431> CloudEdge: uploading
2019-05-30T12:29:50.057586> CloudEdge: run under guest identity, all data is public
2019-05-30T12:29:50.058482> CloudEdge: check if entity exits
2019-05-30T12:29:50.059291> CloudEdge: will issue requests with
2019-05-30T12:29:50.060063> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:29:50.060787> CloudEdge: returned msg from server is 200
2019-05-30T12:29:50.061584> CloudEdge: entity exists
2019-05-30T12:29:50.062235> CloudEdge: check if measurement exits
2019-05-30T12:29:50.062846> CloudEdge: will issue requests with
2019-05-30T12:29:50.063437> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:29:50.064031> CloudEdge: returned msg from server is 200
2019-05-30T12:29:50.064625> CloudEdge: measurement exists
2019-05-30T12:29:50.065214> CloudEdge: will issue requests with
2019-05-30T12:29:50.065839> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:29:50.074443> data: {"value":95.13,"timestamp":"2019-05-30T12:29:45.240"}
2019-05-30T12:29:50.079150> CloudEdge: returned msg from server is 200
2019-05-30T12:29:50.097041> CloudEdge: upload success
2019-05-30T12:29:50.259767> --> cloud end
2019-05-30T12:29:50.260137> 
2019-05-30T12:30:47.356226> --- rxlora. dst=1 type=0x12 src=8 seq=14 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:30:47.357123> 2019-05-30T12:30:47.353302
2019-05-30T12:30:47.358060> rcv ctrl pkt info (^p): 1,18,8,14,14,6,-43
2019-05-30T12:30:47.359015> splitted in: [1, 18, 8, 14, 14, 6, -43]
2019-05-30T12:30:47.359856> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=14 len=14 SNR=6 RSSI=-43)
2019-05-30T12:30:47.360321> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:30:47.360751> splitted in: [125, 5, 12]
2019-05-30T12:30:47.361152> (BW=125 CR=5 SF=12)
2019-05-30T12:30:47.361515> rcv timestamp (^t): 2019-05-30T12:30:47.350
2019-05-30T12:30:47.361869> 
2019-05-30T12:30:47.362221> Got first framing byte
2019-05-30T12:30:47.362584> --> got LoRa data prefix
2019-05-30T12:30:47.363065> --> DATA with_appkey: read app key sequence
2019-05-30T12:30:47.363401> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:30:47.363747> app key disabled
2019-05-30T12:30:47.364098> valid app key: accept data
2019-05-30T12:30:47.364389> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:30:47.364675> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,14,10,6,-43" "125,5,12" "2019-05-30T12:30:47.350" "B827EB1B65FD"
2019-05-30T12:30:51.903594> CloudEdge: uploading
2019-05-30T12:30:51.903975> CloudEdge: run under guest identity, all data is public
2019-05-30T12:30:51.904331> CloudEdge: check if entity exits
2019-05-30T12:30:51.904629> CloudEdge: will issue requests with
2019-05-30T12:30:51.904958> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:30:51.905296> CloudEdge: returned msg from server is 200
2019-05-30T12:30:51.905600> CloudEdge: entity exists
2019-05-30T12:30:51.905905> CloudEdge: check if measurement exits
2019-05-30T12:30:51.906199> CloudEdge: will issue requests with
2019-05-30T12:30:51.906488> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:30:51.906949> CloudEdge: returned msg from server is 200
2019-05-30T12:30:51.907276> CloudEdge: measurement exists
2019-05-30T12:30:51.907586> CloudEdge: will issue requests with
2019-05-30T12:30:51.907891> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:30:51.908180> data: {"value":95.20,"timestamp":"2019-05-30T12:30:47.350"}
2019-05-30T12:30:51.908463> CloudEdge: returned msg from server is 200
2019-05-30T12:30:51.908748> CloudEdge: upload success
2019-05-30T12:30:52.075716> --> cloud end
2019-05-30T12:30:52.076082> 
2019-05-30T12:31:49.465491> --- rxlora. dst=1 type=0x12 src=8 seq=15 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T12:31:49.465902> 2019-05-30T12:31:49.462597
2019-05-30T12:31:49.466172> rcv ctrl pkt info (^p): 1,18,8,15,14,6,-46
2019-05-30T12:31:49.466440> splitted in: [1, 18, 8, 15, 14, 6, -46]
2019-05-30T12:31:49.466874> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=15 len=14 SNR=6 RSSI=-46)
2019-05-30T12:31:49.467249> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:31:49.467576> splitted in: [125, 5, 12]
2019-05-30T12:31:49.467875> (BW=125 CR=5 SF=12)
2019-05-30T12:31:49.468165> rcv timestamp (^t): 2019-05-30T12:31:49.459
2019-05-30T12:31:49.468450> 
2019-05-30T12:31:49.468739> Got first framing byte
2019-05-30T12:31:49.469067> --> got LoRa data prefix
2019-05-30T12:31:49.469400> --> DATA with_appkey: read app key sequence
2019-05-30T12:31:49.469745> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:31:49.470070> app key disabled
2019-05-30T12:31:49.470466> valid app key: accept data
2019-05-30T12:31:49.470832> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:31:49.471196> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,15,10,6,-46" "125,5,12" "2019-05-30T12:31:49.459" "B827EB1B65FD"
2019-05-30T12:31:53.865444> CloudEdge: uploading
2019-05-30T12:31:53.866384> CloudEdge: run under guest identity, all data is public
2019-05-30T12:31:53.867316> CloudEdge: check if entity exits
2019-05-30T12:31:53.868042> CloudEdge: will issue requests with
2019-05-30T12:31:53.869017> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:31:53.869687> CloudEdge: returned msg from server is 200
2019-05-30T12:31:53.870302> CloudEdge: entity exists
2019-05-30T12:31:53.870925> CloudEdge: check if measurement exits
2019-05-30T12:31:53.871565> CloudEdge: will issue requests with
2019-05-30T12:31:53.872184> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:31:53.872795> CloudEdge: returned msg from server is 200
2019-05-30T12:31:53.873393> CloudEdge: measurement exists
2019-05-30T12:31:53.873994> CloudEdge: will issue requests with
2019-05-30T12:31:53.874587> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:31:53.875186> data: {"value":95.13,"timestamp":"2019-05-30T12:31:49.459"}
2019-05-30T12:31:53.875812> CloudEdge: returned msg from server is 200
2019-05-30T12:31:53.876477> CloudEdge: upload success
2019-05-30T12:31:54.035535> --> cloud end
2019-05-30T12:31:54.035944> 
2019-05-30T12:32:51.573444> --- rxlora. dst=1 type=0x12 src=8 seq=16 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T12:32:51.573931> 2019-05-30T12:32:51.570463
2019-05-30T12:32:51.574254> rcv ctrl pkt info (^p): 1,18,8,16,14,6,-46
2019-05-30T12:32:51.574618> splitted in: [1, 18, 8, 16, 14, 6, -46]
2019-05-30T12:32:51.574906> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=16 len=14 SNR=6 RSSI=-46)
2019-05-30T12:32:51.575196> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:32:51.575500> splitted in: [125, 5, 12]
2019-05-30T12:32:51.575773> (BW=125 CR=5 SF=12)
2019-05-30T12:32:51.576071> rcv timestamp (^t): 2019-05-30T12:32:51.567
2019-05-30T12:32:51.576349> 
2019-05-30T12:32:51.576710> Got first framing byte
2019-05-30T12:32:51.577119> --> got LoRa data prefix
2019-05-30T12:32:51.577446> --> DATA with_appkey: read app key sequence
2019-05-30T12:32:51.577739> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:32:51.578028> app key disabled
2019-05-30T12:32:51.578315> valid app key: accept data
2019-05-30T12:32:51.578592> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:32:51.578908> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,16,10,6,-46" "125,5,12" "2019-05-30T12:32:51.567" "B827EB1B65FD"
2019-05-30T12:32:55.922739> CloudEdge: uploading
2019-05-30T12:32:55.923622> CloudEdge: run under guest identity, all data is public
2019-05-30T12:32:55.924375> CloudEdge: check if entity exits
2019-05-30T12:32:55.925039> CloudEdge: will issue requests with
2019-05-30T12:32:55.925683> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:32:55.926325> CloudEdge: returned msg from server is 200
2019-05-30T12:32:55.927105> CloudEdge: entity exists
2019-05-30T12:32:55.927740> CloudEdge: check if measurement exits
2019-05-30T12:32:55.928347> CloudEdge: will issue requests with
2019-05-30T12:32:55.928943> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:32:55.929529> CloudEdge: returned msg from server is 200
2019-05-30T12:32:55.930136> CloudEdge: measurement exists
2019-05-30T12:32:55.930711> CloudEdge: will issue requests with
2019-05-30T12:32:55.931301> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:32:55.931886> data: {"value":95.26,"timestamp":"2019-05-30T12:32:51.567"}
2019-05-30T12:32:55.932494> CloudEdge: returned msg from server is 200
2019-05-30T12:32:55.933081> CloudEdge: upload success
2019-05-30T12:32:56.122601> --> cloud end
2019-05-30T12:32:56.122957> 
2019-05-30T12:32:56.123229> Low-level gw status ON
2019-05-30T12:33:53.677923> --- rxlora. dst=1 type=0x12 src=8 seq=17 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:33:53.678389> 2019-05-30T12:33:53.677308
2019-05-30T12:33:53.678768> rcv ctrl pkt info (^p): 1,18,8,17,14,6,-43
2019-05-30T12:33:53.679089> splitted in: [1, 18, 8, 17, 14, 6, -43]
2019-05-30T12:33:53.679372> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=17 len=14 SNR=6 RSSI=-43)
2019-05-30T12:33:53.679651> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:33:53.679960> splitted in: [125, 5, 12]
2019-05-30T12:33:53.680321> (BW=125 CR=5 SF=12)
2019-05-30T12:33:53.680625> rcv timestamp (^t): 2019-05-30T12:33:53.673
2019-05-30T12:33:53.680917> 
2019-05-30T12:33:53.681290> Got first framing byte
2019-05-30T12:33:53.681598> --> got LoRa data prefix
2019-05-30T12:33:53.681885> --> DATA with_appkey: read app key sequence
2019-05-30T12:33:53.682215> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:33:53.682567> app key disabled
2019-05-30T12:33:53.682929> valid app key: accept data
2019-05-30T12:33:53.683253> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:33:53.683657> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,17,10,6,-43" "125,5,12" "2019-05-30T12:33:53.673" "B827EB1B65FD"
2019-05-30T12:33:58.582775> CloudEdge: uploading
2019-05-30T12:33:58.583655> CloudEdge: run under guest identity, all data is public
2019-05-30T12:33:58.584426> CloudEdge: check if entity exits
2019-05-30T12:33:58.585114> CloudEdge: will issue requests with
2019-05-30T12:33:58.585782> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:33:58.586458> CloudEdge: returned msg from server is 200
2019-05-30T12:33:58.587355> CloudEdge: entity exists
2019-05-30T12:33:58.587975> CloudEdge: check if measurement exits
2019-05-30T12:33:58.588589> CloudEdge: will issue requests with
2019-05-30T12:33:58.589192> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:33:58.589781> CloudEdge: returned msg from server is 200
2019-05-30T12:33:58.590372> CloudEdge: measurement exists
2019-05-30T12:33:58.590952> CloudEdge: will issue requests with
2019-05-30T12:33:58.591531> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:33:58.592120> data: {"value":95.20,"timestamp":"2019-05-30T12:33:53.673"}
2019-05-30T12:33:58.592712> CloudEdge: returned msg from server is 200
2019-05-30T12:33:58.593300> CloudEdge: upload success
2019-05-30T12:33:58.784517> --> cloud end
2019-05-30T12:33:58.784995> 
2019-05-30T12:34:55.785669> --- rxlora. dst=1 type=0x12 src=8 seq=18 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:34:55.786181> 2019-05-30T12:34:55.785238
2019-05-30T12:34:55.786746> rcv ctrl pkt info (^p): 1,18,8,18,14,6,-43
2019-05-30T12:34:55.787248> splitted in: [1, 18, 8, 18, 14, 6, -43]
2019-05-30T12:34:55.787626> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=18 len=14 SNR=6 RSSI=-43)
2019-05-30T12:34:55.788013> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:34:55.788455> splitted in: [125, 5, 12]
2019-05-30T12:34:55.788846> (BW=125 CR=5 SF=12)
2019-05-30T12:34:55.789217> rcv timestamp (^t): 2019-05-30T12:34:55.781
2019-05-30T12:34:55.789582> 
2019-05-30T12:34:55.790011> Got first framing byte
2019-05-30T12:34:55.790408> --> got LoRa data prefix
2019-05-30T12:34:55.790873> --> DATA with_appkey: read app key sequence
2019-05-30T12:34:55.791292> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:34:55.791752> app key disabled
2019-05-30T12:34:55.792153> valid app key: accept data
2019-05-30T12:34:55.792534> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:34:55.792887> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,18,10,6,-43" "125,5,12" "2019-05-30T12:34:55.781" "B827EB1B65FD"
2019-05-30T12:35:02.276250> CloudEdge: uploading
2019-05-30T12:35:02.279369> CloudEdge: run under guest identity, all data is public
2019-05-30T12:35:02.280311> CloudEdge: check if entity exits
2019-05-30T12:35:02.281301> CloudEdge: will issue requests with
2019-05-30T12:35:02.282244> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:35:02.283184> CloudEdge: returned msg from server is 200
2019-05-30T12:35:02.284126> CloudEdge: entity exists
2019-05-30T12:35:02.284915> CloudEdge: check if measurement exits
2019-05-30T12:35:02.285669> CloudEdge: will issue requests with
2019-05-30T12:35:02.286415> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:35:02.287392> CloudEdge: returned msg from server is 200
2019-05-30T12:35:02.288175> CloudEdge: measurement exists
2019-05-30T12:35:02.288921> CloudEdge: will issue requests with
2019-05-30T12:35:02.289647> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:35:02.290389> data: {"value":95.07,"timestamp":"2019-05-30T12:34:55.781"}
2019-05-30T12:35:02.291111> CloudEdge: returned msg from server is 200
2019-05-30T12:35:02.291840> CloudEdge: upload success
2019-05-30T12:35:02.465388> --> cloud end
2019-05-30T12:35:02.465813> 
2019-05-30T12:35:57.893442> --- rxlora. dst=1 type=0x12 src=8 seq=19 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:35:57.893884> 2019-05-30T12:35:57.893043
2019-05-30T12:35:57.894216> rcv ctrl pkt info (^p): 1,18,8,19,14,6,-43
2019-05-30T12:35:57.894747> splitted in: [1, 18, 8, 19, 14, 6, -43]
2019-05-30T12:35:57.905867> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=19 len=14 SNR=6 RSSI=-43)
2019-05-30T12:35:57.906664> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:35:57.907296> splitted in: [125, 5, 12]
2019-05-30T12:35:57.907998> (BW=125 CR=5 SF=12)
2019-05-30T12:35:57.908681> rcv timestamp (^t): 2019-05-30T12:35:57.889
2019-05-30T12:35:57.909228> 
2019-05-30T12:35:57.909809> Got first framing byte
2019-05-30T12:35:57.910240> --> got LoRa data prefix
2019-05-30T12:35:57.910711> --> DATA with_appkey: read app key sequence
2019-05-30T12:35:57.911220> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:35:57.911717> app key disabled
2019-05-30T12:35:57.912134> valid app key: accept data
2019-05-30T12:35:57.912530> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:35:57.912925> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,19,10,6,-43" "125,5,12" "2019-05-30T12:35:57.889" "B827EB1B65FD"
2019-05-30T12:36:03.063797> CloudEdge: uploading
2019-05-30T12:36:03.064478> CloudEdge: run under guest identity, all data is public
2019-05-30T12:36:03.065049> CloudEdge: check if entity exits
2019-05-30T12:36:03.065497> CloudEdge: will issue requests with
2019-05-30T12:36:03.065958> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:36:03.066397> CloudEdge: returned msg from server is 200
2019-05-30T12:36:03.067046> CloudEdge: entity exists
2019-05-30T12:36:03.067545> CloudEdge: check if measurement exits
2019-05-30T12:36:03.067936> CloudEdge: will issue requests with
2019-05-30T12:36:03.068336> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:36:03.068725> CloudEdge: returned msg from server is 200
2019-05-30T12:36:03.069127> CloudEdge: measurement exists
2019-05-30T12:36:03.069493> CloudEdge: will issue requests with
2019-05-30T12:36:03.069847> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:36:03.070231> data: {"value":95.07,"timestamp":"2019-05-30T12:35:57.889"}
2019-05-30T12:36:03.070560> CloudEdge: returned msg from server is 200
2019-05-30T12:36:03.070934> CloudEdge: upload success
2019-05-30T12:36:03.252854> --> cloud end
2019-05-30T12:36:03.253582> 
2019-05-30T12:37:00.000711> --- rxlora. dst=1 type=0x12 src=8 seq=20 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:37:00.001250> 2019-05-30T12:37:00.000265
2019-05-30T12:37:00.001711> rcv ctrl pkt info (^p): 1,18,8,20,14,6,-42
2019-05-30T12:37:00.002108> splitted in: [1, 18, 8, 20, 14, 6, -42]
2019-05-30T12:37:00.002491> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=20 len=14 SNR=6 RSSI=-42)
2019-05-30T12:37:00.002853> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:37:00.003200> splitted in: [125, 5, 12]
2019-05-30T12:37:00.003605> (BW=125 CR=5 SF=12)
2019-05-30T12:37:00.004022> rcv timestamp (^t): 2019-05-30T12:36:59.996
2019-05-30T12:37:00.004451> 
2019-05-30T12:37:00.004877> Got first framing byte
2019-05-30T12:37:00.005306> --> got LoRa data prefix
2019-05-30T12:37:00.005745> --> DATA with_appkey: read app key sequence
2019-05-30T12:37:00.006218> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:37:00.006808> app key disabled
2019-05-30T12:37:00.007396> valid app key: accept data
2019-05-30T12:37:00.007881> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:37:00.008337> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,20,10,6,-42" "125,5,12" "2019-05-30T12:36:59.996" "B827EB1B65FD"
2019-05-30T12:37:04.235554> CloudEdge: uploading
2019-05-30T12:37:04.236166> CloudEdge: run under guest identity, all data is public
2019-05-30T12:37:04.236713> CloudEdge: check if entity exits
2019-05-30T12:37:04.237129> CloudEdge: will issue requests with
2019-05-30T12:37:04.237483> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:37:04.237800> CloudEdge: returned msg from server is 200
2019-05-30T12:37:04.238116> CloudEdge: entity exists
2019-05-30T12:37:04.238427> CloudEdge: check if measurement exits
2019-05-30T12:37:04.238722> CloudEdge: will issue requests with
2019-05-30T12:37:04.239007> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:37:04.239290> CloudEdge: returned msg from server is 200
2019-05-30T12:37:04.239646> CloudEdge: measurement exists
2019-05-30T12:37:04.239943> CloudEdge: will issue requests with
2019-05-30T12:37:04.240233> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:37:04.240526> data: {"value":95.13,"timestamp":"2019-05-30T12:36:59.996"}
2019-05-30T12:37:04.240819> CloudEdge: returned msg from server is 200
2019-05-30T12:37:04.241107> CloudEdge: upload success
2019-05-30T12:37:04.432539> --> cloud end
2019-05-30T12:37:04.432905> 
2019-05-30T12:38:02.108142> --- rxlora. dst=1 type=0x12 src=8 seq=21 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T12:38:02.111244> 2019-05-30T12:38:02.107282
2019-05-30T12:38:02.111676> rcv ctrl pkt info (^p): 1,18,8,21,14,7,-40
2019-05-30T12:38:02.112001> splitted in: [1, 18, 8, 21, 14, 7, -40]
2019-05-30T12:38:02.112288> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=21 len=14 SNR=7 RSSI=-40)
2019-05-30T12:38:02.112600> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:38:02.112880> splitted in: [125, 5, 12]
2019-05-30T12:38:02.113175> (BW=125 CR=5 SF=12)
2019-05-30T12:38:02.113471> rcv timestamp (^t): 2019-05-30T12:38:02.103
2019-05-30T12:38:02.113761> 
2019-05-30T12:38:02.114066> Got first framing byte
2019-05-30T12:38:02.114344> --> got LoRa data prefix
2019-05-30T12:38:02.114640> --> DATA with_appkey: read app key sequence
2019-05-30T12:38:02.114940> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:38:02.115219> app key disabled
2019-05-30T12:38:02.115531> valid app key: accept data
2019-05-30T12:38:02.115829> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:38:02.116131> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,21,10,7,-40" "125,5,12" "2019-05-30T12:38:02.103" "B827EB1B65FD"
2019-05-30T12:38:06.393238> CloudEdge: uploading
2019-05-30T12:38:06.393952> CloudEdge: run under guest identity, all data is public
2019-05-30T12:38:06.394620> CloudEdge: check if entity exits
2019-05-30T12:38:06.395273> CloudEdge: will issue requests with
2019-05-30T12:38:06.395897> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:38:06.396506> CloudEdge: returned msg from server is 200
2019-05-30T12:38:06.397319> CloudEdge: entity exists
2019-05-30T12:38:06.397969> CloudEdge: check if measurement exits
2019-05-30T12:38:06.398571> CloudEdge: will issue requests with
2019-05-30T12:38:06.399148> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:38:06.399733> CloudEdge: returned msg from server is 200
2019-05-30T12:38:06.400301> CloudEdge: measurement exists
2019-05-30T12:38:06.400867> CloudEdge: will issue requests with
2019-05-30T12:38:06.401436> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:38:06.402012> data: {"value":95.07,"timestamp":"2019-05-30T12:38:02.103"}
2019-05-30T12:38:06.402577> CloudEdge: returned msg from server is 200
2019-05-30T12:38:06.403147> CloudEdge: upload success
2019-05-30T12:38:06.597343> --> cloud end
2019-05-30T12:38:06.597729> 
2019-05-30T12:38:11.943715> 2019-05-30 12:38:11.942942
2019-05-30T12:38:11.944183> post status: gw ON
2019-05-30T12:38:11.944491> post status: executing periodic tasks
2019-05-30T12:38:13.027715> no timezone support, time will be expressed only in local time
2019-05-30T12:38:13.028088> post status: start running
2019-05-30T12:38:14.091899> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:38:14.092279> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:38:14.092579> get_gps.py: invalid serial port
2019-05-30T12:38:14.247209> post status: dynamic GPS is requested
2019-05-30T12:38:14.247605> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:38:14.247879> post status get GPS: no GPS coordinates
2019-05-30T12:38:14.248146> post status: show current GPS position
2019-05-30T12:38:14.248411> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:38:14.248731> post status: exiting
2019-05-30T12:39:04.212720> --- rxlora. dst=1 type=0x12 src=8 seq=22 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:39:04.213163> 2019-05-30T12:39:04.211449
2019-05-30T12:39:04.213509> rcv ctrl pkt info (^p): 1,18,8,22,14,6,-41
2019-05-30T12:39:04.213799> splitted in: [1, 18, 8, 22, 14, 6, -41]
2019-05-30T12:39:04.214161> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=22 len=14 SNR=6 RSSI=-41)
2019-05-30T12:39:04.214486> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:39:04.214783> splitted in: [125, 5, 12]
2019-05-30T12:39:04.215072> (BW=125 CR=5 SF=12)
2019-05-30T12:39:04.215365> rcv timestamp (^t): 2019-05-30T12:39:04.208
2019-05-30T12:39:04.215646> 
2019-05-30T12:39:04.215933> Got first framing byte
2019-05-30T12:39:04.216258> --> got LoRa data prefix
2019-05-30T12:39:04.216898> --> DATA with_appkey: read app key sequence
2019-05-30T12:39:04.217424> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:39:04.217785> app key disabled
2019-05-30T12:39:04.218165> valid app key: accept data
2019-05-30T12:39:04.218440> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:39:04.218708> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,22,10,6,-41" "125,5,12" "2019-05-30T12:39:04.208" "B827EB1B65FD"
2019-05-30T12:39:08.859615> CloudEdge: uploading
2019-05-30T12:39:08.860822> CloudEdge: run under guest identity, all data is public
2019-05-30T12:39:08.861961> CloudEdge: check if entity exits
2019-05-30T12:39:08.863010> CloudEdge: will issue requests with
2019-05-30T12:39:08.864080> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:39:08.865047> CloudEdge: returned msg from server is 200
2019-05-30T12:39:08.865941> CloudEdge: entity exists
2019-05-30T12:39:08.867078> CloudEdge: check if measurement exits
2019-05-30T12:39:08.868070> CloudEdge: will issue requests with
2019-05-30T12:39:08.868913> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:39:08.869616> CloudEdge: returned msg from server is 200
2019-05-30T12:39:08.870137> CloudEdge: measurement exists
2019-05-30T12:39:08.870608> CloudEdge: will issue requests with
2019-05-30T12:39:08.871129> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:39:08.871734> data: {"value":95.07,"timestamp":"2019-05-30T12:39:04.208"}
2019-05-30T12:39:08.872418> CloudEdge: returned msg from server is 200
2019-05-30T12:39:08.873128> CloudEdge: upload success
2019-05-30T12:39:09.042759> --> cloud end
2019-05-30T12:39:09.043140> 
2019-05-30T12:40:06.319674> --- rxlora. dst=1 type=0x12 src=8 seq=23 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:40:06.320120> 2019-05-30T12:40:06.319119
2019-05-30T12:40:06.320509> rcv ctrl pkt info (^p): 1,18,8,23,14,6,-42
2019-05-30T12:40:06.320813> splitted in: [1, 18, 8, 23, 14, 6, -42]
2019-05-30T12:40:06.321096> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=23 len=14 SNR=6 RSSI=-42)
2019-05-30T12:40:06.321379> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:40:06.321739> splitted in: [125, 5, 12]
2019-05-30T12:40:06.322080> (BW=125 CR=5 SF=12)
2019-05-30T12:40:06.322379> rcv timestamp (^t): 2019-05-30T12:40:06.315
2019-05-30T12:40:06.322671> 
2019-05-30T12:40:06.323059> Got first framing byte
2019-05-30T12:40:06.323366> --> got LoRa data prefix
2019-05-30T12:40:06.323671> --> DATA with_appkey: read app key sequence
2019-05-30T12:40:06.324022> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:40:06.324371> app key disabled
2019-05-30T12:40:06.324739> valid app key: accept data
2019-05-30T12:40:06.325080> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:40:06.325478> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,23,10,6,-42" "125,5,12" "2019-05-30T12:40:06.315" "B827EB1B65FD"
2019-05-30T12:40:10.987142> CloudEdge: uploading
2019-05-30T12:40:10.988376> CloudEdge: run under guest identity, all data is public
2019-05-30T12:40:10.989349> CloudEdge: check if entity exits
2019-05-30T12:40:10.990359> CloudEdge: will issue requests with
2019-05-30T12:40:10.991218> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:40:10.991946> CloudEdge: returned msg from server is 200
2019-05-30T12:40:10.992632> CloudEdge: entity exists
2019-05-30T12:40:10.993323> CloudEdge: check if measurement exits
2019-05-30T12:40:10.993974> CloudEdge: will issue requests with
2019-05-30T12:40:10.994591> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:40:10.995179> CloudEdge: returned msg from server is 200
2019-05-30T12:40:10.995753> CloudEdge: measurement exists
2019-05-30T12:40:10.996316> CloudEdge: will issue requests with
2019-05-30T12:40:10.997162> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:40:10.997877> data: {"value":95.13,"timestamp":"2019-05-30T12:40:06.315"}
2019-05-30T12:40:11.000665> CloudEdge: returned msg from server is 200
2019-05-30T12:40:11.001856> CloudEdge: upload success
2019-05-30T12:40:11.199659> --> cloud end
2019-05-30T12:40:11.200036> 
2019-05-30T12:41:08.427323> --- rxlora. dst=1 type=0x12 src=8 seq=24 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:41:08.427796> 2019-05-30T12:41:08.424284
2019-05-30T12:41:08.428130> rcv ctrl pkt info (^p): 1,18,8,24,14,7,-42
2019-05-30T12:41:08.428441> splitted in: [1, 18, 8, 24, 14, 7, -42]
2019-05-30T12:41:08.428728> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=24 len=14 SNR=7 RSSI=-42)
2019-05-30T12:41:08.429052> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:41:08.429418> splitted in: [125, 5, 12]
2019-05-30T12:41:08.429772> (BW=125 CR=5 SF=12)
2019-05-30T12:41:08.430090> rcv timestamp (^t): 2019-05-30T12:41:08.420
2019-05-30T12:41:08.430489> 
2019-05-30T12:41:08.430861> Got first framing byte
2019-05-30T12:41:08.431218> --> got LoRa data prefix
2019-05-30T12:41:08.431551> --> DATA with_appkey: read app key sequence
2019-05-30T12:41:08.431892> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:41:08.432212> app key disabled
2019-05-30T12:41:08.432628> valid app key: accept data
2019-05-30T12:41:08.433045> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:41:08.433359> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,24,10,7,-42" "125,5,12" "2019-05-30T12:41:08.420" "B827EB1B65FD"
2019-05-30T12:41:12.655803> CloudEdge: uploading
2019-05-30T12:41:12.656407> CloudEdge: run under guest identity, all data is public
2019-05-30T12:41:12.657006> CloudEdge: check if entity exits
2019-05-30T12:41:12.657384> CloudEdge: will issue requests with
2019-05-30T12:41:12.657701> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:41:12.657998> CloudEdge: returned msg from server is 200
2019-05-30T12:41:12.658287> CloudEdge: entity exists
2019-05-30T12:41:12.658573> CloudEdge: check if measurement exits
2019-05-30T12:41:12.658863> CloudEdge: will issue requests with
2019-05-30T12:41:12.659142> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:41:12.659422> CloudEdge: returned msg from server is 200
2019-05-30T12:41:12.659696> CloudEdge: measurement exists
2019-05-30T12:41:12.659980> CloudEdge: will issue requests with
2019-05-30T12:41:12.660265> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:41:12.660557> data: {"value":95.20,"timestamp":"2019-05-30T12:41:08.420"}
2019-05-30T12:41:12.660850> CloudEdge: returned msg from server is 200
2019-05-30T12:41:12.661132> CloudEdge: upload success
2019-05-30T12:41:12.822389> --> cloud end
2019-05-30T12:41:12.822791> 
2019-05-30T12:42:10.532622> --- rxlora. dst=1 type=0x12 src=8 seq=25 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:42:10.533071> 2019-05-30T12:42:10.532237
2019-05-30T12:42:10.533395> rcv ctrl pkt info (^p): 1,18,8,25,14,7,-43
2019-05-30T12:42:10.533709> splitted in: [1, 18, 8, 25, 14, 7, -43]
2019-05-30T12:42:10.534051> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=25 len=14 SNR=7 RSSI=-43)
2019-05-30T12:42:10.534336> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:42:10.534614> splitted in: [125, 5, 12]
2019-05-30T12:42:10.534959> (BW=125 CR=5 SF=12)
2019-05-30T12:42:10.535270> rcv timestamp (^t): 2019-05-30T12:42:10.528
2019-05-30T12:42:10.535562> 
2019-05-30T12:42:10.535906> Got first framing byte
2019-05-30T12:42:10.536193> --> got LoRa data prefix
2019-05-30T12:42:10.536478> --> DATA with_appkey: read app key sequence
2019-05-30T12:42:10.536933> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:42:10.537301> app key disabled
2019-05-30T12:42:10.537650> valid app key: accept data
2019-05-30T12:42:10.538012> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:42:10.538385> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,25,10,7,-43" "125,5,12" "2019-05-30T12:42:10.528" "B827EB1B65FD"
2019-05-30T12:42:14.715613> CloudEdge: uploading
2019-05-30T12:42:14.716474> CloudEdge: run under guest identity, all data is public
2019-05-30T12:42:14.717445> CloudEdge: check if entity exits
2019-05-30T12:42:14.718162> CloudEdge: will issue requests with
2019-05-30T12:42:14.718836> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:42:14.719514> CloudEdge: returned msg from server is 200
2019-05-30T12:42:14.720164> CloudEdge: entity exists
2019-05-30T12:42:14.720801> CloudEdge: check if measurement exits
2019-05-30T12:42:14.721419> CloudEdge: will issue requests with
2019-05-30T12:42:14.722016> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:42:14.722592> CloudEdge: returned msg from server is 200
2019-05-30T12:42:14.723174> CloudEdge: measurement exists
2019-05-30T12:42:14.723747> CloudEdge: will issue requests with
2019-05-30T12:42:14.724325> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:42:14.724896> data: {"value":95.13,"timestamp":"2019-05-30T12:42:10.528"}
2019-05-30T12:42:14.725459> CloudEdge: returned msg from server is 200
2019-05-30T12:42:14.726031> CloudEdge: upload success
2019-05-30T12:42:14.916502> --> cloud end
2019-05-30T12:42:14.917103> 
2019-05-30T12:43:12.641048> --- rxlora. dst=1 type=0x12 src=8 seq=26 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:43:12.641494> 2019-05-30T12:43:12.640654
2019-05-30T12:43:12.641810> rcv ctrl pkt info (^p): 1,18,8,26,14,6,-41
2019-05-30T12:43:12.642115> splitted in: [1, 18, 8, 26, 14, 6, -41]
2019-05-30T12:43:12.642400> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=26 len=14 SNR=6 RSSI=-41)
2019-05-30T12:43:12.642685> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:43:12.642965> splitted in: [125, 5, 12]
2019-05-30T12:43:12.643262> (BW=125 CR=5 SF=12)
2019-05-30T12:43:12.643608> rcv timestamp (^t): 2019-05-30T12:43:12.637
2019-05-30T12:43:12.643927> 
2019-05-30T12:43:12.644276> Got first framing byte
2019-05-30T12:43:12.644567> --> got LoRa data prefix
2019-05-30T12:43:12.644866> --> DATA with_appkey: read app key sequence
2019-05-30T12:43:12.645146> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:43:12.645459> app key disabled
2019-05-30T12:43:12.645784> valid app key: accept data
2019-05-30T12:43:12.646123> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:43:12.646470> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,26,10,6,-41" "125,5,12" "2019-05-30T12:43:12.637" "B827EB1B65FD"
2019-05-30T12:43:16.980557> CloudEdge: uploading
2019-05-30T12:43:16.981322> CloudEdge: run under guest identity, all data is public
2019-05-30T12:43:16.981931> CloudEdge: check if entity exits
2019-05-30T12:43:16.982585> CloudEdge: will issue requests with
2019-05-30T12:43:16.983224> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:43:16.983892> CloudEdge: returned msg from server is 200
2019-05-30T12:43:16.984513> CloudEdge: entity exists
2019-05-30T12:43:16.985132> CloudEdge: check if measurement exits
2019-05-30T12:43:16.985835> CloudEdge: will issue requests with
2019-05-30T12:43:16.986442> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:43:16.987279> CloudEdge: returned msg from server is 200
2019-05-30T12:43:16.987884> CloudEdge: measurement exists
2019-05-30T12:43:16.988456> CloudEdge: will issue requests with
2019-05-30T12:43:16.989023> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:43:16.989586> data: {"value":95.20,"timestamp":"2019-05-30T12:43:12.637"}
2019-05-30T12:43:16.990148> CloudEdge: returned msg from server is 200
2019-05-30T12:43:16.990711> CloudEdge: upload success
2019-05-30T12:43:17.181500> --> cloud end
2019-05-30T12:43:17.181912> 
2019-05-30T12:43:17.182206> Low-level gw status ON
2019-05-30T12:44:14.748582> --- rxlora. dst=1 type=0x12 src=8 seq=27 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T12:44:14.749090> 2019-05-30T12:44:14.748144
2019-05-30T12:44:14.749502> rcv ctrl pkt info (^p): 1,18,8,27,14,6,-41
2019-05-30T12:44:14.749977> splitted in: [1, 18, 8, 27, 14, 6, -41]
2019-05-30T12:44:14.750345> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=27 len=14 SNR=6 RSSI=-41)
2019-05-30T12:44:14.750744> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:44:14.751213> splitted in: [125, 5, 12]
2019-05-30T12:44:14.751569> (BW=125 CR=5 SF=12)
2019-05-30T12:44:14.751876> rcv timestamp (^t): 2019-05-30T12:44:14.744
2019-05-30T12:44:14.752176> 
2019-05-30T12:44:14.752527> Got first framing byte
2019-05-30T12:44:14.752816> --> got LoRa data prefix
2019-05-30T12:44:14.753140> --> DATA with_appkey: read app key sequence
2019-05-30T12:44:14.753497> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:44:14.753859> app key disabled
2019-05-30T12:44:14.754209> valid app key: accept data
2019-05-30T12:44:14.754684> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:44:14.755105> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,27,10,6,-41" "125,5,12" "2019-05-30T12:44:14.744" "B827EB1B65FD"
2019-05-30T12:44:19.437918> CloudEdge: uploading
2019-05-30T12:44:19.438734> CloudEdge: run under guest identity, all data is public
2019-05-30T12:44:19.439462> CloudEdge: check if entity exits
2019-05-30T12:44:19.440100> CloudEdge: will issue requests with
2019-05-30T12:44:19.440730> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:44:19.441360> CloudEdge: returned msg from server is 200
2019-05-30T12:44:19.441958> CloudEdge: entity exists
2019-05-30T12:44:19.442531> CloudEdge: check if measurement exits
2019-05-30T12:44:19.443102> CloudEdge: will issue requests with
2019-05-30T12:44:19.443674> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:44:19.444248> CloudEdge: returned msg from server is 200
2019-05-30T12:44:19.444825> CloudEdge: measurement exists
2019-05-30T12:44:19.445394> CloudEdge: will issue requests with
2019-05-30T12:44:19.445956> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:44:19.446519> data: {"value":95.07,"timestamp":"2019-05-30T12:44:14.744"}
2019-05-30T12:44:19.447299> CloudEdge: returned msg from server is 200
2019-05-30T12:44:19.447911> CloudEdge: upload success
2019-05-30T12:44:19.633186> --> cloud end
2019-05-30T12:44:19.633568> 
2019-05-30T12:45:16.856140> --- rxlora. dst=1 type=0x12 src=8 seq=28 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:45:16.859377> 2019-05-30T12:45:16.853200
2019-05-30T12:45:16.859983> rcv ctrl pkt info (^p): 1,18,8,28,14,6,-43
2019-05-30T12:45:16.860393> splitted in: [1, 18, 8, 28, 14, 6, -43]
2019-05-30T12:45:16.860764> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=28 len=14 SNR=6 RSSI=-43)
2019-05-30T12:45:16.861104> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:45:16.861557> splitted in: [125, 5, 12]
2019-05-30T12:45:16.861946> (BW=125 CR=5 SF=12)
2019-05-30T12:45:16.862318> rcv timestamp (^t): 2019-05-30T12:45:16.849
2019-05-30T12:45:16.862676> 
2019-05-30T12:45:16.862999> Got first framing byte
2019-05-30T12:45:16.863278> --> got LoRa data prefix
2019-05-30T12:45:16.863566> --> DATA with_appkey: read app key sequence
2019-05-30T12:45:16.863858> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:45:16.864150> app key disabled
2019-05-30T12:45:16.864468> valid app key: accept data
2019-05-30T12:45:16.864778> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:45:16.865070> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,28,10,6,-43" "125,5,12" "2019-05-30T12:45:16.849" "B827EB1B65FD"
2019-05-30T12:45:21.493247> CloudEdge: uploading
2019-05-30T12:45:21.494102> CloudEdge: run under guest identity, all data is public
2019-05-30T12:45:21.494826> CloudEdge: check if entity exits
2019-05-30T12:45:21.495465> CloudEdge: will issue requests with
2019-05-30T12:45:21.496095> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:45:21.496883> CloudEdge: returned msg from server is 200
2019-05-30T12:45:21.497544> CloudEdge: entity exists
2019-05-30T12:45:21.498122> CloudEdge: check if measurement exits
2019-05-30T12:45:21.498729> CloudEdge: will issue requests with
2019-05-30T12:45:21.499312> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:45:21.499877> CloudEdge: returned msg from server is 200
2019-05-30T12:45:21.500441> CloudEdge: measurement exists
2019-05-30T12:45:21.500997> CloudEdge: will issue requests with
2019-05-30T12:45:21.501566> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:45:21.502127> data: {"value":95.13,"timestamp":"2019-05-30T12:45:16.849"}
2019-05-30T12:45:21.502685> CloudEdge: returned msg from server is 200
2019-05-30T12:45:21.503248> CloudEdge: upload success
2019-05-30T12:45:21.690403> --> cloud end
2019-05-30T12:45:21.690818> 
2019-05-30T12:46:18.960043> --- rxlora. dst=1 type=0x12 src=8 seq=29 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:46:18.960494> 2019-05-30T12:46:18.959648
2019-05-30T12:46:18.960822> rcv ctrl pkt info (^p): 1,18,8,29,14,7,-42
2019-05-30T12:46:18.961146> splitted in: [1, 18, 8, 29, 14, 7, -42]
2019-05-30T12:46:18.961432> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=29 len=14 SNR=7 RSSI=-42)
2019-05-30T12:46:18.966734> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:46:18.967331> splitted in: [125, 5, 12]
2019-05-30T12:46:18.967734> (BW=125 CR=5 SF=12)
2019-05-30T12:46:18.968095> rcv timestamp (^t): 2019-05-30T12:46:18.956
2019-05-30T12:46:18.968444> 
2019-05-30T12:46:18.968903> Got first framing byte
2019-05-30T12:46:18.969398> --> got LoRa data prefix
2019-05-30T12:46:18.969950> --> DATA with_appkey: read app key sequence
2019-05-30T12:46:18.970508> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:46:18.971060> app key disabled
2019-05-30T12:46:18.971674> valid app key: accept data
2019-05-30T12:46:18.972367> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:46:18.972922> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,29,10,7,-42" "125,5,12" "2019-05-30T12:46:18.956" "B827EB1B65FD"
2019-05-30T12:46:23.155344> CloudEdge: uploading
2019-05-30T12:46:23.156306> CloudEdge: run under guest identity, all data is public
2019-05-30T12:46:23.157452> CloudEdge: check if entity exits
2019-05-30T12:46:23.158240> CloudEdge: will issue requests with
2019-05-30T12:46:23.158957> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:46:23.159631> CloudEdge: returned msg from server is 200
2019-05-30T12:46:23.160238> CloudEdge: entity exists
2019-05-30T12:46:23.160814> CloudEdge: check if measurement exits
2019-05-30T12:46:23.161388> CloudEdge: will issue requests with
2019-05-30T12:46:23.161961> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:46:23.162534> CloudEdge: returned msg from server is 200
2019-05-30T12:46:23.163187> CloudEdge: measurement exists
2019-05-30T12:46:23.163775> CloudEdge: will issue requests with
2019-05-30T12:46:23.164360> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:46:23.164927> data: {"value":95.00,"timestamp":"2019-05-30T12:46:18.956"}
2019-05-30T12:46:23.165506> CloudEdge: returned msg from server is 200
2019-05-30T12:46:23.166070> CloudEdge: upload success
2019-05-30T12:46:23.344114> --> cloud end
2019-05-30T12:46:23.344517> 
2019-05-30T12:47:21.067978> --- rxlora. dst=1 type=0x12 src=8 seq=30 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:47:21.069394> 2019-05-30T12:47:21.068142
2019-05-30T12:47:21.070270> rcv ctrl pkt info (^p): 1,18,8,30,14,6,-42
2019-05-30T12:47:21.071447> splitted in: [1, 18, 8, 30, 14, 6, -42]
2019-05-30T12:47:21.072301> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=30 len=14 SNR=6 RSSI=-42)
2019-05-30T12:47:21.073224> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:47:21.074154> splitted in: [125, 5, 12]
2019-05-30T12:47:21.075158> (BW=125 CR=5 SF=12)
2019-05-30T12:47:21.076081> rcv timestamp (^t): 2019-05-30T12:47:21.064
2019-05-30T12:47:21.077724> 
2019-05-30T12:47:21.078713> Got first framing byte
2019-05-30T12:47:21.079493> --> got LoRa data prefix
2019-05-30T12:47:21.080374> --> DATA with_appkey: read app key sequence
2019-05-30T12:47:21.081090> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:47:21.081736> app key disabled
2019-05-30T12:47:21.082147> valid app key: accept data
2019-05-30T12:47:21.082863> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:47:21.083520> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,30,10,6,-42" "125,5,12" "2019-05-30T12:47:21.064" "B827EB1B65FD"
2019-05-30T12:47:25.214413> CloudEdge: uploading
2019-05-30T12:47:25.214883> CloudEdge: run under guest identity, all data is public
2019-05-30T12:47:25.215277> CloudEdge: check if entity exits
2019-05-30T12:47:25.215600> CloudEdge: will issue requests with
2019-05-30T12:47:25.215910> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:47:25.216206> CloudEdge: returned msg from server is 200
2019-05-30T12:47:25.216495> CloudEdge: entity exists
2019-05-30T12:47:25.217081> CloudEdge: check if measurement exits
2019-05-30T12:47:25.217576> CloudEdge: will issue requests with
2019-05-30T12:47:25.218074> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:47:25.218575> CloudEdge: returned msg from server is 200
2019-05-30T12:47:25.219021> CloudEdge: measurement exists
2019-05-30T12:47:25.219450> CloudEdge: will issue requests with
2019-05-30T12:47:25.219967> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:47:25.220402> data: {"value":95.20,"timestamp":"2019-05-30T12:47:21.064"}
2019-05-30T12:47:25.220815> CloudEdge: returned msg from server is 200
2019-05-30T12:47:25.221181> CloudEdge: upload success
2019-05-30T12:47:25.387761> --> cloud end
2019-05-30T12:47:25.388164> 
2019-05-30T12:48:14.400317> 2019-05-30 12:48:14.396752
2019-05-30T12:48:14.401033> post status: gw ON
2019-05-30T12:48:14.401648> post status: executing periodic tasks
2019-05-30T12:48:15.510612> no timezone support, time will be expressed only in local time
2019-05-30T12:48:15.511139> post status: start running
2019-05-30T12:48:16.577895> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:48:16.578460> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:48:16.578858> get_gps.py: invalid serial port
2019-05-30T12:48:16.714769> post status: dynamic GPS is requested
2019-05-30T12:48:16.715224> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:48:16.715600> post status get GPS: no GPS coordinates
2019-05-30T12:48:16.715914> post status: show current GPS position
2019-05-30T12:48:16.716206> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:48:16.716714> post status: exiting
2019-05-30T12:48:23.177696> --- rxlora. dst=1 type=0x12 src=8 seq=31 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:48:23.178140> 2019-05-30T12:48:23.175843
2019-05-30T12:48:23.178554> rcv ctrl pkt info (^p): 1,18,8,31,14,6,-43
2019-05-30T12:48:23.178884> splitted in: [1, 18, 8, 31, 14, 6, -43]
2019-05-30T12:48:23.179183> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=31 len=14 SNR=6 RSSI=-43)
2019-05-30T12:48:23.179473> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:48:23.179767> splitted in: [125, 5, 12]
2019-05-30T12:48:23.180053> (BW=125 CR=5 SF=12)
2019-05-30T12:48:23.180335> rcv timestamp (^t): 2019-05-30T12:48:23.172
2019-05-30T12:48:23.180662> 
2019-05-30T12:48:23.180987> Got first framing byte
2019-05-30T12:48:23.181331> --> got LoRa data prefix
2019-05-30T12:48:23.181659> --> DATA with_appkey: read app key sequence
2019-05-30T12:48:23.182058> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:48:23.182425> app key disabled
2019-05-30T12:48:23.182772> valid app key: accept data
2019-05-30T12:48:23.183117> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:48:23.183470> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,31,10,6,-43" "125,5,12" "2019-05-30T12:48:23.172" "B827EB1B65FD"
2019-05-30T12:48:27.419644> CloudEdge: uploading
2019-05-30T12:48:27.420202> CloudEdge: run under guest identity, all data is public
2019-05-30T12:48:27.420586> CloudEdge: check if entity exits
2019-05-30T12:48:27.420909> CloudEdge: will issue requests with
2019-05-30T12:48:27.421216> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:48:27.421515> CloudEdge: returned msg from server is 200
2019-05-30T12:48:27.421812> CloudEdge: entity exists
2019-05-30T12:48:27.422115> CloudEdge: check if measurement exits
2019-05-30T12:48:27.422413> CloudEdge: will issue requests with
2019-05-30T12:48:27.422699> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:48:27.422993> CloudEdge: returned msg from server is 200
2019-05-30T12:48:27.423305> CloudEdge: measurement exists
2019-05-30T12:48:27.423609> CloudEdge: will issue requests with
2019-05-30T12:48:27.423911> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:48:27.424211> data: {"value":95.00,"timestamp":"2019-05-30T12:48:23.172"}
2019-05-30T12:48:27.424502> CloudEdge: returned msg from server is 200
2019-05-30T12:48:27.424790> CloudEdge: upload success
2019-05-30T12:48:27.589160> --> cloud end
2019-05-30T12:48:27.589576> 
2019-05-30T12:49:25.287082> --- rxlora. dst=1 type=0x12 src=8 seq=32 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T12:49:25.287583> 2019-05-30T12:49:25.283987
2019-05-30T12:49:25.287925> rcv ctrl pkt info (^p): 1,18,8,32,14,6,-42
2019-05-30T12:49:25.288246> splitted in: [1, 18, 8, 32, 14, 6, -42]
2019-05-30T12:49:25.288544> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=32 len=14 SNR=6 RSSI=-42)
2019-05-30T12:49:25.288899> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:49:25.289276> splitted in: [125, 5, 12]
2019-05-30T12:49:25.289659> (BW=125 CR=5 SF=12)
2019-05-30T12:49:25.290023> rcv timestamp (^t): 2019-05-30T12:49:25.280
2019-05-30T12:49:25.290437> 
2019-05-30T12:49:25.290805> Got first framing byte
2019-05-30T12:49:25.291165> --> got LoRa data prefix
2019-05-30T12:49:25.291539> --> DATA with_appkey: read app key sequence
2019-05-30T12:49:25.291888> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:49:25.292247> app key disabled
2019-05-30T12:49:25.292758> valid app key: accept data
2019-05-30T12:49:25.293100> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:49:25.293453> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,32,10,6,-42" "125,5,12" "2019-05-30T12:49:25.280" "B827EB1B65FD"
2019-05-30T12:49:30.019178> CloudEdge: uploading
2019-05-30T12:49:30.020101> CloudEdge: run under guest identity, all data is public
2019-05-30T12:49:30.020877> CloudEdge: check if entity exits
2019-05-30T12:49:30.021649> CloudEdge: will issue requests with
2019-05-30T12:49:30.022362> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:49:30.023046> CloudEdge: returned msg from server is 200
2019-05-30T12:49:30.023713> CloudEdge: entity exists
2019-05-30T12:49:30.024308> CloudEdge: check if measurement exits
2019-05-30T12:49:30.024904> CloudEdge: will issue requests with
2019-05-30T12:49:30.025506> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:49:30.026116> CloudEdge: returned msg from server is 200
2019-05-30T12:49:30.026929> CloudEdge: measurement exists
2019-05-30T12:49:30.027602> CloudEdge: will issue requests with
2019-05-30T12:49:30.028205> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:49:30.028791> data: {"value":95.07,"timestamp":"2019-05-30T12:49:25.280"}
2019-05-30T12:49:30.029392> CloudEdge: returned msg from server is 200
2019-05-30T12:49:30.029981> CloudEdge: upload success
2019-05-30T12:49:30.217548> --> cloud end
2019-05-30T12:49:30.217928> 
2019-05-30T12:50:27.396980> --- rxlora. dst=1 type=0x12 src=8 seq=33 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:50:27.397581> 2019-05-30T12:50:27.394002
2019-05-30T12:50:27.397976> rcv ctrl pkt info (^p): 1,18,8,33,14,6,-45
2019-05-30T12:50:27.398290> splitted in: [1, 18, 8, 33, 14, 6, -45]
2019-05-30T12:50:27.398587> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=33 len=14 SNR=6 RSSI=-45)
2019-05-30T12:50:27.398880> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:50:27.399162> splitted in: [125, 5, 12]
2019-05-30T12:50:27.399493> (BW=125 CR=5 SF=12)
2019-05-30T12:50:27.399830> rcv timestamp (^t): 2019-05-30T12:50:27.390
2019-05-30T12:50:27.400179> 
2019-05-30T12:50:27.400507> Got first framing byte
2019-05-30T12:50:27.400885> --> got LoRa data prefix
2019-05-30T12:50:27.401272> --> DATA with_appkey: read app key sequence
2019-05-30T12:50:27.401638> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:50:27.401982> app key disabled
2019-05-30T12:50:27.402332> valid app key: accept data
2019-05-30T12:50:27.402648> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:50:27.403075> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,33,10,6,-45" "125,5,12" "2019-05-30T12:50:27.390" "B827EB1B65FD"
2019-05-30T12:50:31.971774> CloudEdge: uploading
2019-05-30T12:50:31.972614> CloudEdge: run under guest identity, all data is public
2019-05-30T12:50:31.973339> CloudEdge: check if entity exits
2019-05-30T12:50:31.973971> CloudEdge: will issue requests with
2019-05-30T12:50:31.974585> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:50:31.975189> CloudEdge: returned msg from server is 200
2019-05-30T12:50:31.975772> CloudEdge: entity exists
2019-05-30T12:50:31.976333> CloudEdge: check if measurement exits
2019-05-30T12:50:31.977116> CloudEdge: will issue requests with
2019-05-30T12:50:31.977759> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:50:31.978338> CloudEdge: returned msg from server is 200
2019-05-30T12:50:31.978907> CloudEdge: measurement exists
2019-05-30T12:50:31.979482> CloudEdge: will issue requests with
2019-05-30T12:50:31.980057> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:50:31.980625> data: {"value":95.00,"timestamp":"2019-05-30T12:50:27.390"}
2019-05-30T12:50:31.981185> CloudEdge: returned msg from server is 200
2019-05-30T12:50:31.981751> CloudEdge: upload success
2019-05-30T12:50:32.161724> --> cloud end
2019-05-30T12:50:32.162521> 
2019-05-30T12:51:29.507476> --- rxlora. dst=1 type=0x12 src=8 seq=34 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:51:29.507954> 2019-05-30T12:51:29.504403
2019-05-30T12:51:29.508302> rcv ctrl pkt info (^p): 1,18,8,34,14,6,-43
2019-05-30T12:51:29.508609> splitted in: [1, 18, 8, 34, 14, 6, -43]
2019-05-30T12:51:29.508975> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=34 len=14 SNR=6 RSSI=-43)
2019-05-30T12:51:29.509350> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:51:29.509692> splitted in: [125, 5, 12]
2019-05-30T12:51:29.510045> (BW=125 CR=5 SF=12)
2019-05-30T12:51:29.510416> rcv timestamp (^t): 2019-05-30T12:51:29.501
2019-05-30T12:51:29.510803> 
2019-05-30T12:51:29.511175> Got first framing byte
2019-05-30T12:51:29.511529> --> got LoRa data prefix
2019-05-30T12:51:29.511873> --> DATA with_appkey: read app key sequence
2019-05-30T12:51:29.512204> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:51:29.512592> app key disabled
2019-05-30T12:51:29.513187> valid app key: accept data
2019-05-30T12:51:29.513550> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:51:29.513930> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,34,10,6,-43" "125,5,12" "2019-05-30T12:51:29.501" "B827EB1B65FD"
2019-05-30T12:51:33.613946> CloudEdge: uploading
2019-05-30T12:51:33.614510> CloudEdge: run under guest identity, all data is public
2019-05-30T12:51:33.614901> CloudEdge: check if entity exits
2019-05-30T12:51:33.615223> CloudEdge: will issue requests with
2019-05-30T12:51:33.615521> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:51:33.615814> CloudEdge: returned msg from server is 200
2019-05-30T12:51:33.616120> CloudEdge: entity exists
2019-05-30T12:51:33.616427> CloudEdge: check if measurement exits
2019-05-30T12:51:33.617009> CloudEdge: will issue requests with
2019-05-30T12:51:33.617435> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:51:33.617760> CloudEdge: returned msg from server is 200
2019-05-30T12:51:33.618092> CloudEdge: measurement exists
2019-05-30T12:51:33.618405> CloudEdge: will issue requests with
2019-05-30T12:51:33.618705> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:51:33.618998> data: {"value":95.07,"timestamp":"2019-05-30T12:51:29.501"}
2019-05-30T12:51:33.619293> CloudEdge: returned msg from server is 200
2019-05-30T12:51:33.619592> CloudEdge: upload success
2019-05-30T12:51:33.772943> --> cloud end
2019-05-30T12:51:33.773323> 
2019-05-30T12:52:31.617056> --- rxlora. dst=1 type=0x12 src=8 seq=35 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:52:31.619076> 2019-05-30T12:52:31.617323
2019-05-30T12:52:31.619489> rcv ctrl pkt info (^p): 1,18,8,35,14,6,-43
2019-05-30T12:52:31.619939> splitted in: [1, 18, 8, 35, 14, 6, -43]
2019-05-30T12:52:31.620307> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=35 len=14 SNR=6 RSSI=-43)
2019-05-30T12:52:31.620651> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:52:31.620987> splitted in: [125, 5, 12]
2019-05-30T12:52:31.621296> (BW=125 CR=5 SF=12)
2019-05-30T12:52:31.621585> rcv timestamp (^t): 2019-05-30T12:52:31.612
2019-05-30T12:52:31.621908> 
2019-05-30T12:52:31.622269> Got first framing byte
2019-05-30T12:52:31.622617> --> got LoRa data prefix
2019-05-30T12:52:31.622958> --> DATA with_appkey: read app key sequence
2019-05-30T12:52:31.623336> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:52:31.623696> app key disabled
2019-05-30T12:52:31.624051> valid app key: accept data
2019-05-30T12:52:31.624393> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:52:31.624752> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,35,10,6,-43" "125,5,12" "2019-05-30T12:52:31.612" "B827EB1B65FD"
2019-05-30T12:52:36.078312> CloudEdge: uploading
2019-05-30T12:52:36.078868> CloudEdge: run under guest identity, all data is public
2019-05-30T12:52:36.079282> CloudEdge: check if entity exits
2019-05-30T12:52:36.079635> CloudEdge: will issue requests with
2019-05-30T12:52:36.079952> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:52:36.080259> CloudEdge: returned msg from server is 200
2019-05-30T12:52:36.080571> CloudEdge: entity exists
2019-05-30T12:52:36.080891> CloudEdge: check if measurement exits
2019-05-30T12:52:36.081270> CloudEdge: will issue requests with
2019-05-30T12:52:36.081578> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:52:36.081890> CloudEdge: returned msg from server is 200
2019-05-30T12:52:36.082331> CloudEdge: measurement exists
2019-05-30T12:52:36.082784> CloudEdge: will issue requests with
2019-05-30T12:52:36.083385> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:52:36.083966> data: {"value":95.07,"timestamp":"2019-05-30T12:52:31.612"}
2019-05-30T12:52:36.084610> CloudEdge: returned msg from server is 200
2019-05-30T12:52:36.085187> CloudEdge: upload success
2019-05-30T12:52:36.245358> --> cloud end
2019-05-30T12:52:36.245775> 
2019-05-30T12:53:33.730570> --- rxlora. dst=1 type=0x12 src=8 seq=36 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:53:33.731138> 2019-05-30T12:53:33.727436
2019-05-30T12:53:33.731563> rcv ctrl pkt info (^p): 1,18,8,36,14,6,-45
2019-05-30T12:53:33.731980> splitted in: [1, 18, 8, 36, 14, 6, -45]
2019-05-30T12:53:33.732376> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=36 len=14 SNR=6 RSSI=-45)
2019-05-30T12:53:33.732840> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:53:33.733268> splitted in: [125, 5, 12]
2019-05-30T12:53:33.733770> (BW=125 CR=5 SF=12)
2019-05-30T12:53:33.734237> rcv timestamp (^t): 2019-05-30T12:53:33.724
2019-05-30T12:53:33.734721> 
2019-05-30T12:53:33.735136> Got first framing byte
2019-05-30T12:53:33.735570> --> got LoRa data prefix
2019-05-30T12:53:33.736014> --> DATA with_appkey: read app key sequence
2019-05-30T12:53:33.736842> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:53:33.737382> app key disabled
2019-05-30T12:53:33.737866> valid app key: accept data
2019-05-30T12:53:33.738850> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:53:33.739545> python /app/data_acq/edgeCall.py "TC/94.81" "1,18,8,36,10,6,-45" "125,5,12" "2019-05-30T12:53:33.724" "B827EB1B65FD"
2019-05-30T12:53:38.238828> CloudEdge: uploading
2019-05-30T12:53:38.239666> CloudEdge: run under guest identity, all data is public
2019-05-30T12:53:38.240455> CloudEdge: check if entity exits
2019-05-30T12:53:38.241176> CloudEdge: will issue requests with
2019-05-30T12:53:38.241844> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:53:38.242482> CloudEdge: returned msg from server is 200
2019-05-30T12:53:38.243071> CloudEdge: entity exists
2019-05-30T12:53:38.243647> CloudEdge: check if measurement exits
2019-05-30T12:53:38.244231> CloudEdge: will issue requests with
2019-05-30T12:53:38.244810> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:53:38.245390> CloudEdge: returned msg from server is 200
2019-05-30T12:53:38.245978> CloudEdge: measurement exists
2019-05-30T12:53:38.249015> CloudEdge: will issue requests with
2019-05-30T12:53:38.250350> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:53:38.251504> data: {"value":94.81,"timestamp":"2019-05-30T12:53:33.724"}
2019-05-30T12:53:38.252443> CloudEdge: returned msg from server is 200
2019-05-30T12:53:38.253241> CloudEdge: upload success
2019-05-30T12:53:38.428636> --> cloud end
2019-05-30T12:53:38.429023> 
2019-05-30T12:53:38.429338> Low-level gw status ON
2019-05-30T12:54:35.841971> --- rxlora. dst=1 type=0x12 src=8 seq=37 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:54:35.842482> 2019-05-30T12:54:35.838908
2019-05-30T12:54:35.842922> rcv ctrl pkt info (^p): 1,18,8,37,14,6,-45
2019-05-30T12:54:35.843368> splitted in: [1, 18, 8, 37, 14, 6, -45]
2019-05-30T12:54:35.843889> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=37 len=14 SNR=6 RSSI=-45)
2019-05-30T12:54:35.844490> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:54:35.846672> splitted in: [125, 5, 12]
2019-05-30T12:54:35.847298> (BW=125 CR=5 SF=12)
2019-05-30T12:54:35.847798> rcv timestamp (^t): 2019-05-30T12:54:35.835
2019-05-30T12:54:35.848437> 
2019-05-30T12:54:35.848909> Got first framing byte
2019-05-30T12:54:35.849372> --> got LoRa data prefix
2019-05-30T12:54:35.849983> --> DATA with_appkey: read app key sequence
2019-05-30T12:54:35.850412> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:54:35.850862> app key disabled
2019-05-30T12:54:35.851250> valid app key: accept data
2019-05-30T12:54:35.851593> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:54:35.851934> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,37,10,6,-45" "125,5,12" "2019-05-30T12:54:35.835" "B827EB1B65FD"
2019-05-30T12:54:40.601456> CloudEdge: uploading
2019-05-30T12:54:40.602339> CloudEdge: run under guest identity, all data is public
2019-05-30T12:54:40.603088> CloudEdge: check if entity exits
2019-05-30T12:54:40.603768> CloudEdge: will issue requests with
2019-05-30T12:54:40.604431> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:54:40.605094> CloudEdge: returned msg from server is 200
2019-05-30T12:54:40.605699> CloudEdge: entity exists
2019-05-30T12:54:40.606288> CloudEdge: check if measurement exits
2019-05-30T12:54:40.607084> CloudEdge: will issue requests with
2019-05-30T12:54:40.607739> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:54:40.608432> CloudEdge: returned msg from server is 200
2019-05-30T12:54:40.609045> CloudEdge: measurement exists
2019-05-30T12:54:40.609644> CloudEdge: will issue requests with
2019-05-30T12:54:40.610233> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:54:40.610823> data: {"value":94.94,"timestamp":"2019-05-30T12:54:35.835"}
2019-05-30T12:54:40.611417> CloudEdge: returned msg from server is 200
2019-05-30T12:54:40.612001> CloudEdge: upload success
2019-05-30T12:54:40.794797> --> cloud end
2019-05-30T12:54:40.795208> 
2019-05-30T12:55:37.953493> --- rxlora. dst=1 type=0x12 src=8 seq=38 len=14 SNR=6 RSSIpkt=-47 BW=125 CR=4/5 SF=12
2019-05-30T12:55:37.954086> 2019-05-30T12:55:37.950460
2019-05-30T12:55:37.954555> rcv ctrl pkt info (^p): 1,18,8,38,14,6,-47
2019-05-30T12:55:37.954929> splitted in: [1, 18, 8, 38, 14, 6, -47]
2019-05-30T12:55:37.955351> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=38 len=14 SNR=6 RSSI=-47)
2019-05-30T12:55:37.955763> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:55:37.956202> splitted in: [125, 5, 12]
2019-05-30T12:55:37.956720> (BW=125 CR=5 SF=12)
2019-05-30T12:55:37.957247> rcv timestamp (^t): 2019-05-30T12:55:37.947
2019-05-30T12:55:37.957655> 
2019-05-30T12:55:37.958026> Got first framing byte
2019-05-30T12:55:37.958375> --> got LoRa data prefix
2019-05-30T12:55:37.958711> --> DATA with_appkey: read app key sequence
2019-05-30T12:55:37.959056> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:55:37.959514> app key disabled
2019-05-30T12:55:37.959853> valid app key: accept data
2019-05-30T12:55:37.960179> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:55:37.960542> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,38,10,6,-47" "125,5,12" "2019-05-30T12:55:37.947" "B827EB1B65FD"
2019-05-30T12:55:42.553156> CloudEdge: uploading
2019-05-30T12:55:42.553841> CloudEdge: run under guest identity, all data is public
2019-05-30T12:55:42.554418> CloudEdge: check if entity exits
2019-05-30T12:55:42.554922> CloudEdge: will issue requests with
2019-05-30T12:55:42.555427> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:55:42.556028> CloudEdge: returned msg from server is 200
2019-05-30T12:55:42.556941> CloudEdge: entity exists
2019-05-30T12:55:42.557741> CloudEdge: check if measurement exits
2019-05-30T12:55:42.558351> CloudEdge: will issue requests with
2019-05-30T12:55:42.558974> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:55:42.559555> CloudEdge: returned msg from server is 200
2019-05-30T12:55:42.560134> CloudEdge: measurement exists
2019-05-30T12:55:42.560607> CloudEdge: will issue requests with
2019-05-30T12:55:42.561118> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:55:42.561639> data: {"value":94.94,"timestamp":"2019-05-30T12:55:37.947"}
2019-05-30T12:55:42.562135> CloudEdge: returned msg from server is 200
2019-05-30T12:55:42.562641> CloudEdge: upload success
2019-05-30T12:55:42.722945> --> cloud end
2019-05-30T12:55:42.723320> 
2019-05-30T12:56:40.065408> --- rxlora. dst=1 type=0x12 src=8 seq=39 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T12:56:40.065878> 2019-05-30T12:56:40.062475
2019-05-30T12:56:40.066222> rcv ctrl pkt info (^p): 1,18,8,39,14,6,-46
2019-05-30T12:56:40.066718> splitted in: [1, 18, 8, 39, 14, 6, -46]
2019-05-30T12:56:40.067280> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=39 len=14 SNR=6 RSSI=-46)
2019-05-30T12:56:40.067828> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:56:40.068734> splitted in: [125, 5, 12]
2019-05-30T12:56:40.069979> (BW=125 CR=5 SF=12)
2019-05-30T12:56:40.070644> rcv timestamp (^t): 2019-05-30T12:56:40.059
2019-05-30T12:56:40.071256> 
2019-05-30T12:56:40.071837> Got first framing byte
2019-05-30T12:56:40.072420> --> got LoRa data prefix
2019-05-30T12:56:40.072999> --> DATA with_appkey: read app key sequence
2019-05-30T12:56:40.073570> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:56:40.074341> app key disabled
2019-05-30T12:56:40.074900> valid app key: accept data
2019-05-30T12:56:40.075462> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:56:40.076007> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,39,10,6,-46" "125,5,12" "2019-05-30T12:56:40.059" "B827EB1B65FD"
2019-05-30T12:56:44.197251> CloudEdge: uploading
2019-05-30T12:56:44.198108> CloudEdge: run under guest identity, all data is public
2019-05-30T12:56:44.199035> CloudEdge: check if entity exits
2019-05-30T12:56:44.199738> CloudEdge: will issue requests with
2019-05-30T12:56:44.200416> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:56:44.201051> CloudEdge: returned msg from server is 200
2019-05-30T12:56:44.201630> CloudEdge: entity exists
2019-05-30T12:56:44.202194> CloudEdge: check if measurement exits
2019-05-30T12:56:44.202759> CloudEdge: will issue requests with
2019-05-30T12:56:44.203341> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:56:44.203905> CloudEdge: returned msg from server is 200
2019-05-30T12:56:44.204467> CloudEdge: measurement exists
2019-05-30T12:56:44.205031> CloudEdge: will issue requests with
2019-05-30T12:56:44.205599> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:56:44.206162> data: {"value":95.00,"timestamp":"2019-05-30T12:56:40.059"}
2019-05-30T12:56:44.207283> CloudEdge: returned msg from server is 200
2019-05-30T12:56:44.208663> CloudEdge: upload success
2019-05-30T12:56:44.378498> --> cloud end
2019-05-30T12:56:44.378880> 
2019-05-30T12:57:42.177119> --- rxlora. dst=1 type=0x12 src=8 seq=40 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T12:57:42.177731> 2019-05-30T12:57:42.176248
2019-05-30T12:57:42.178177> rcv ctrl pkt info (^p): 1,18,8,40,14,6,-43
2019-05-30T12:57:42.178545> splitted in: [1, 18, 8, 40, 14, 6, -43]
2019-05-30T12:57:42.178902> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=40 len=14 SNR=6 RSSI=-43)
2019-05-30T12:57:42.179341> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:57:42.179678> splitted in: [125, 5, 12]
2019-05-30T12:57:42.180053> (BW=125 CR=5 SF=12)
2019-05-30T12:57:42.181059> rcv timestamp (^t): 2019-05-30T12:57:42.172
2019-05-30T12:57:42.181767> 
2019-05-30T12:57:42.182326> Got first framing byte
2019-05-30T12:57:42.182872> --> got LoRa data prefix
2019-05-30T12:57:42.183378> --> DATA with_appkey: read app key sequence
2019-05-30T12:57:42.184154> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:57:42.184674> app key disabled
2019-05-30T12:57:42.185390> valid app key: accept data
2019-05-30T12:57:42.185884> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:57:42.186366> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,40,10,6,-43" "125,5,12" "2019-05-30T12:57:42.172" "B827EB1B65FD"
2019-05-30T12:57:46.351794> CloudEdge: uploading
2019-05-30T12:57:46.352179> CloudEdge: run under guest identity, all data is public
2019-05-30T12:57:46.352454> CloudEdge: check if entity exits
2019-05-30T12:57:46.352749> CloudEdge: will issue requests with
2019-05-30T12:57:46.353051> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:57:46.353340> CloudEdge: returned msg from server is 200
2019-05-30T12:57:46.353658> CloudEdge: entity exists
2019-05-30T12:57:46.353969> CloudEdge: check if measurement exits
2019-05-30T12:57:46.354268> CloudEdge: will issue requests with
2019-05-30T12:57:46.354560> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:57:46.354852> CloudEdge: returned msg from server is 200
2019-05-30T12:57:46.355138> CloudEdge: measurement exists
2019-05-30T12:57:46.355434> CloudEdge: will issue requests with
2019-05-30T12:57:46.355736> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:57:46.356029> data: {"value":94.88,"timestamp":"2019-05-30T12:57:42.172"}
2019-05-30T12:57:46.356315> CloudEdge: returned msg from server is 200
2019-05-30T12:57:46.356715> CloudEdge: upload success
2019-05-30T12:57:46.516809> --> cloud end
2019-05-30T12:57:46.517243> 
2019-05-30T12:58:16.879503> 2019-05-30 12:58:16.877207
2019-05-30T12:58:16.880062> post status: gw ON
2019-05-30T12:58:16.880456> post status: executing periodic tasks
2019-05-30T12:58:17.934830> no timezone support, time will be expressed only in local time
2019-05-30T12:58:17.935294> post status: start running
2019-05-30T12:58:19.013529> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T12:58:19.014051> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T12:58:19.014449> get_gps.py: invalid serial port
2019-05-30T12:58:19.151799> post status: dynamic GPS is requested
2019-05-30T12:58:19.152372> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T12:58:19.152886> post status get GPS: no GPS coordinates
2019-05-30T12:58:19.153366> post status: show current GPS position
2019-05-30T12:58:19.153763> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T12:58:19.154207> post status: exiting
2019-05-30T12:58:44.289654> --- rxlora. dst=1 type=0x12 src=8 seq=41 len=14 SNR=6 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T12:58:44.290104> 2019-05-30T12:58:44.289245
2019-05-30T12:58:44.290429> rcv ctrl pkt info (^p): 1,18,8,41,14,6,-46
2019-05-30T12:58:44.290736> splitted in: [1, 18, 8, 41, 14, 6, -46]
2019-05-30T12:58:44.291019> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=41 len=14 SNR=6 RSSI=-46)
2019-05-30T12:58:44.291295> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:58:44.291579> splitted in: [125, 5, 12]
2019-05-30T12:58:44.291964> (BW=125 CR=5 SF=12)
2019-05-30T12:58:44.292318> rcv timestamp (^t): 2019-05-30T12:58:44.285
2019-05-30T12:58:44.292615> 
2019-05-30T12:58:44.292978> Got first framing byte
2019-05-30T12:58:44.293290> --> got LoRa data prefix
2019-05-30T12:58:44.293575> --> DATA with_appkey: read app key sequence
2019-05-30T12:58:44.293912> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:58:44.294283> app key disabled
2019-05-30T12:58:44.294647> valid app key: accept data
2019-05-30T12:58:44.294986> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:58:44.295328> python /app/data_acq/edgeCall.py "TC/94.81" "1,18,8,41,10,6,-46" "125,5,12" "2019-05-30T12:58:44.285" "B827EB1B65FD"
2019-05-30T12:58:48.933851> CloudEdge: uploading
2019-05-30T12:58:48.934869> CloudEdge: run under guest identity, all data is public
2019-05-30T12:58:48.935725> CloudEdge: check if entity exits
2019-05-30T12:58:48.936457> CloudEdge: will issue requests with
2019-05-30T12:58:48.937410> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:58:48.938139> CloudEdge: returned msg from server is 200
2019-05-30T12:58:48.938821> CloudEdge: entity exists
2019-05-30T12:58:48.939502> CloudEdge: check if measurement exits
2019-05-30T12:58:48.940172> CloudEdge: will issue requests with
2019-05-30T12:58:48.940885> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:58:48.941668> CloudEdge: returned msg from server is 200
2019-05-30T12:58:48.942423> CloudEdge: measurement exists
2019-05-30T12:58:48.943175> CloudEdge: will issue requests with
2019-05-30T12:58:48.944019> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:58:48.944785> data: {"value":94.81,"timestamp":"2019-05-30T12:58:44.285"}
2019-05-30T12:58:48.945522> CloudEdge: returned msg from server is 200
2019-05-30T12:58:48.953853> CloudEdge: upload success
2019-05-30T12:58:49.132321> --> cloud end
2019-05-30T12:58:49.132888> 
2019-05-30T12:59:46.404036> --- rxlora. dst=1 type=0x12 src=8 seq=42 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T12:59:46.404588> 2019-05-30T12:59:46.400961
2019-05-30T12:59:46.405055> rcv ctrl pkt info (^p): 1,18,8,42,14,6,-45
2019-05-30T12:59:46.405420> splitted in: [1, 18, 8, 42, 14, 6, -45]
2019-05-30T12:59:46.405865> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=42 len=14 SNR=6 RSSI=-45)
2019-05-30T12:59:46.406274> rcv ctrl radio info (^r): 125,5,12
2019-05-30T12:59:46.406834> splitted in: [125, 5, 12]
2019-05-30T12:59:46.407373> (BW=125 CR=5 SF=12)
2019-05-30T12:59:46.407882> rcv timestamp (^t): 2019-05-30T12:59:46.397
2019-05-30T12:59:46.408336> 
2019-05-30T12:59:46.408773> Got first framing byte
2019-05-30T12:59:46.409168> --> got LoRa data prefix
2019-05-30T12:59:46.409699> --> DATA with_appkey: read app key sequence
2019-05-30T12:59:46.410236> app key is 0x05 0x06 0x07 0x08
2019-05-30T12:59:46.410636> app key disabled
2019-05-30T12:59:46.411068> valid app key: accept data
2019-05-30T12:59:46.411417> uploading with python /app/data_acq/edgeCall.py
2019-05-30T12:59:46.411736> python /app/data_acq/edgeCall.py "TC/94.81" "1,18,8,42,10,6,-45" "125,5,12" "2019-05-30T12:59:46.397" "B827EB1B65FD"
2019-05-30T12:59:51.243508> CloudEdge: uploading
2019-05-30T12:59:51.244361> CloudEdge: run under guest identity, all data is public
2019-05-30T12:59:51.245090> CloudEdge: check if entity exits
2019-05-30T12:59:51.245738> CloudEdge: will issue requests with
2019-05-30T12:59:51.246386> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T12:59:51.247276> CloudEdge: returned msg from server is 200
2019-05-30T12:59:51.247937> CloudEdge: entity exists
2019-05-30T12:59:51.248521> CloudEdge: check if measurement exits
2019-05-30T12:59:51.249092> CloudEdge: will issue requests with
2019-05-30T12:59:51.249662> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T12:59:51.250225> CloudEdge: returned msg from server is 200
2019-05-30T12:59:51.250791> CloudEdge: measurement exists
2019-05-30T12:59:51.251368> CloudEdge: will issue requests with
2019-05-30T12:59:51.252101> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T12:59:51.252697> data: {"value":94.81,"timestamp":"2019-05-30T12:59:46.397"}
2019-05-30T12:59:51.253280> CloudEdge: returned msg from server is 200
2019-05-30T12:59:51.253848> CloudEdge: upload success
2019-05-30T12:59:51.426192> --> cloud end
2019-05-30T12:59:51.426817> 
2019-05-30T13:00:48.516103> --- rxlora. dst=1 type=0x12 src=8 seq=43 len=14 SNR=5 RSSIpkt=-46 BW=125 CR=4/5 SF=12
2019-05-30T13:00:48.516521> 2019-05-30T13:00:48.513204
2019-05-30T13:00:48.517064> rcv ctrl pkt info (^p): 1,18,8,43,14,5,-46
2019-05-30T13:00:48.517433> splitted in: [1, 18, 8, 43, 14, 5, -46]
2019-05-30T13:00:48.517807> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=43 len=14 SNR=5 RSSI=-46)
2019-05-30T13:00:48.518126> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:00:48.518420> splitted in: [125, 5, 12]
2019-05-30T13:00:48.518702> (BW=125 CR=5 SF=12)
2019-05-30T13:00:48.518996> rcv timestamp (^t): 2019-05-30T13:00:48.509
2019-05-30T13:00:48.519378> 
2019-05-30T13:00:48.519705> Got first framing byte
2019-05-30T13:00:48.520067> --> got LoRa data prefix
2019-05-30T13:00:48.520385> --> DATA with_appkey: read app key sequence
2019-05-30T13:00:48.520772> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:00:48.521124> app key disabled
2019-05-30T13:00:48.521476> valid app key: accept data
2019-05-30T13:00:48.521828> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:00:48.522179> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,43,10,5,-46" "125,5,12" "2019-05-30T13:00:48.509" "B827EB1B65FD"
2019-05-30T13:00:52.826967> CloudEdge: uploading
2019-05-30T13:00:52.827568> CloudEdge: run under guest identity, all data is public
2019-05-30T13:00:52.827967> CloudEdge: check if entity exits
2019-05-30T13:00:52.828301> CloudEdge: will issue requests with
2019-05-30T13:00:52.828612> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:00:52.828920> CloudEdge: returned msg from server is 200
2019-05-30T13:00:52.829220> CloudEdge: entity exists
2019-05-30T13:00:52.829518> CloudEdge: check if measurement exits
2019-05-30T13:00:52.829811> CloudEdge: will issue requests with
2019-05-30T13:00:52.830098> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:00:52.830378> CloudEdge: returned msg from server is 200
2019-05-30T13:00:52.830657> CloudEdge: measurement exists
2019-05-30T13:00:52.830938> CloudEdge: will issue requests with
2019-05-30T13:00:52.831234> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:00:52.831519> data: {"value":94.88,"timestamp":"2019-05-30T13:00:48.509"}
2019-05-30T13:00:52.831804> CloudEdge: returned msg from server is 200
2019-05-30T13:00:52.832093> CloudEdge: upload success
2019-05-30T13:00:53.005888> --> cloud end
2019-05-30T13:00:53.006255> 
2019-05-30T13:01:50.627282> --- rxlora. dst=1 type=0x12 src=8 seq=44 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:01:50.628025> 2019-05-30T13:01:50.624942
2019-05-30T13:01:50.628422> rcv ctrl pkt info (^p): 1,18,8,44,14,7,-41
2019-05-30T13:01:50.628735> splitted in: [1, 18, 8, 44, 14, 7, -41]
2019-05-30T13:01:50.629035> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=44 len=14 SNR=7 RSSI=-41)
2019-05-30T13:01:50.629329> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:01:50.629650> splitted in: [125, 5, 12]
2019-05-30T13:01:50.629987> (BW=125 CR=5 SF=12)
2019-05-30T13:01:50.630332> rcv timestamp (^t): 2019-05-30T13:01:50.621
2019-05-30T13:01:50.630681> 
2019-05-30T13:01:50.631066> Got first framing byte
2019-05-30T13:01:50.641506> --> got LoRa data prefix
2019-05-30T13:01:50.642145> --> DATA with_appkey: read app key sequence
2019-05-30T13:01:50.642667> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:01:50.643199> app key disabled
2019-05-30T13:01:50.643634> valid app key: accept data
2019-05-30T13:01:50.644019> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:01:50.644404> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,44,10,7,-41" "125,5,12" "2019-05-30T13:01:50.621" "B827EB1B65FD"
2019-05-30T13:01:55.291271> CloudEdge: uploading
2019-05-30T13:01:55.291955> CloudEdge: run under guest identity, all data is public
2019-05-30T13:01:55.292505> CloudEdge: check if entity exits
2019-05-30T13:01:55.293047> CloudEdge: will issue requests with
2019-05-30T13:01:55.293586> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:01:55.294135> CloudEdge: returned msg from server is 200
2019-05-30T13:01:55.294676> CloudEdge: entity exists
2019-05-30T13:01:55.295286> CloudEdge: check if measurement exits
2019-05-30T13:01:55.295893> CloudEdge: will issue requests with
2019-05-30T13:01:55.296441> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:01:55.297124> CloudEdge: returned msg from server is 200
2019-05-30T13:01:55.297716> CloudEdge: measurement exists
2019-05-30T13:01:55.298362> CloudEdge: will issue requests with
2019-05-30T13:01:55.299235> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:01:55.299895> data: {"value":94.88,"timestamp":"2019-05-30T13:01:50.621"}
2019-05-30T13:01:55.300519> CloudEdge: returned msg from server is 200
2019-05-30T13:01:55.301132> CloudEdge: upload success
2019-05-30T13:01:55.492684> --> cloud end
2019-05-30T13:01:55.493713> 
2019-05-30T13:02:52.737411> --- rxlora. dst=1 type=0x12 src=8 seq=45 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:02:52.738393> 2019-05-30T13:02:52.736759
2019-05-30T13:02:52.739275> rcv ctrl pkt info (^p): 1,18,8,45,14,6,-43
2019-05-30T13:02:52.740243> splitted in: [1, 18, 8, 45, 14, 6, -43]
2019-05-30T13:02:52.741514> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=45 len=14 SNR=6 RSSI=-43)
2019-05-30T13:02:52.742527> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:02:52.743507> splitted in: [125, 5, 12]
2019-05-30T13:02:52.744255> (BW=125 CR=5 SF=12)
2019-05-30T13:02:52.744960> rcv timestamp (^t): 2019-05-30T13:02:52.733
2019-05-30T13:02:52.745564> 
2019-05-30T13:02:52.745929> Got first framing byte
2019-05-30T13:02:52.746494> --> got LoRa data prefix
2019-05-30T13:02:52.747211> --> DATA with_appkey: read app key sequence
2019-05-30T13:02:52.747559> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:02:52.750079> app key disabled
2019-05-30T13:02:52.751752> valid app key: accept data
2019-05-30T13:02:52.753323> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:02:52.754898> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,45,10,6,-43" "125,5,12" "2019-05-30T13:02:52.733" "B827EB1B65FD"
2019-05-30T13:02:56.999227> CloudEdge: uploading
2019-05-30T13:02:56.999953> CloudEdge: run under guest identity, all data is public
2019-05-30T13:02:57.000594> CloudEdge: check if entity exits
2019-05-30T13:02:57.001241> CloudEdge: will issue requests with
2019-05-30T13:02:57.001854> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:02:57.002492> CloudEdge: returned msg from server is 200
2019-05-30T13:02:57.003173> CloudEdge: entity exists
2019-05-30T13:02:57.003802> CloudEdge: check if measurement exits
2019-05-30T13:02:57.004399> CloudEdge: will issue requests with
2019-05-30T13:02:57.004976> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:02:57.005558> CloudEdge: returned msg from server is 200
2019-05-30T13:02:57.006128> CloudEdge: measurement exists
2019-05-30T13:02:57.006774> CloudEdge: will issue requests with
2019-05-30T13:02:57.007397> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:02:57.007984> data: {"value":95.00,"timestamp":"2019-05-30T13:02:52.733"}
2019-05-30T13:02:57.008560> CloudEdge: returned msg from server is 200
2019-05-30T13:02:57.009127> CloudEdge: upload success
2019-05-30T13:02:57.217119> --> cloud end
2019-05-30T13:02:57.217528> 
2019-05-30T13:03:54.846203> --- rxlora. dst=1 type=0x12 src=8 seq=46 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:03:54.846932> 2019-05-30T13:03:54.845783
2019-05-30T13:03:54.847445> rcv ctrl pkt info (^p): 1,18,8,46,14,6,-41
2019-05-30T13:03:54.847861> splitted in: [1, 18, 8, 46, 14, 6, -41]
2019-05-30T13:03:54.848244> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=46 len=14 SNR=6 RSSI=-41)
2019-05-30T13:03:54.848579> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:03:54.848924> splitted in: [125, 5, 12]
2019-05-30T13:03:54.849217> (BW=125 CR=5 SF=12)
2019-05-30T13:03:54.849486> rcv timestamp (^t): 2019-05-30T13:03:54.842
2019-05-30T13:03:54.849786> 
2019-05-30T13:03:54.850178> Got first framing byte
2019-05-30T13:03:54.850475> --> got LoRa data prefix
2019-05-30T13:03:54.850748> --> DATA with_appkey: read app key sequence
2019-05-30T13:03:54.851024> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:03:54.851311> app key disabled
2019-05-30T13:03:54.851577> valid app key: accept data
2019-05-30T13:03:54.851866> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:03:54.852147> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,46,10,6,-41" "125,5,12" "2019-05-30T13:03:54.842" "B827EB1B65FD"
2019-05-30T13:04:01.039973> CloudEdge: uploading
2019-05-30T13:04:01.040801> CloudEdge: run under guest identity, all data is public
2019-05-30T13:04:01.041592> CloudEdge: check if entity exits
2019-05-30T13:04:01.042264> CloudEdge: will issue requests with
2019-05-30T13:04:01.042913> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:04:01.043541> CloudEdge: returned msg from server is 200
2019-05-30T13:04:01.044165> CloudEdge: entity exists
2019-05-30T13:04:01.044742> CloudEdge: check if measurement exits
2019-05-30T13:04:01.045323> CloudEdge: will issue requests with
2019-05-30T13:04:01.045898> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:04:01.046493> CloudEdge: returned msg from server is 200
2019-05-30T13:04:01.048057> CloudEdge: measurement exists
2019-05-30T13:04:01.048989> CloudEdge: will issue requests with
2019-05-30T13:04:01.049634> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:04:01.050244> data: {"value":95.00,"timestamp":"2019-05-30T13:03:54.842"}
2019-05-30T13:04:01.051151> CloudEdge: returned msg from server is 200
2019-05-30T13:04:01.051798> CloudEdge: upload success
2019-05-30T13:04:01.241333> --> cloud end
2019-05-30T13:04:01.241786> 
2019-05-30T13:04:01.242080> Low-level gw status ON
2019-05-30T13:04:56.957243> --- rxlora. dst=1 type=0x12 src=8 seq=47 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:04:56.957721> 2019-05-30T13:04:56.955455
2019-05-30T13:04:56.958090> rcv ctrl pkt info (^p): 1,18,8,47,14,6,-41
2019-05-30T13:04:56.958546> splitted in: [1, 18, 8, 47, 14, 6, -41]
2019-05-30T13:04:56.958913> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=47 len=14 SNR=6 RSSI=-41)
2019-05-30T13:04:56.959290> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:04:56.959669> splitted in: [125, 5, 12]
2019-05-30T13:04:56.960000> (BW=125 CR=5 SF=12)
2019-05-30T13:04:56.960368> rcv timestamp (^t): 2019-05-30T13:04:56.952
2019-05-30T13:04:56.960768> 
2019-05-30T13:04:56.961213> Got first framing byte
2019-05-30T13:04:56.961593> --> got LoRa data prefix
2019-05-30T13:04:56.962089> --> DATA with_appkey: read app key sequence
2019-05-30T13:04:56.962539> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:04:56.963023> app key disabled
2019-05-30T13:04:56.963432> valid app key: accept data
2019-05-30T13:04:56.963888> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:04:56.964374> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,47,10,6,-41" "125,5,12" "2019-05-30T13:04:56.952" "B827EB1B65FD"
2019-05-30T13:05:01.862035> CloudEdge: uploading
2019-05-30T13:05:01.862887> CloudEdge: run under guest identity, all data is public
2019-05-30T13:05:01.863604> CloudEdge: check if entity exits
2019-05-30T13:05:01.864237> CloudEdge: will issue requests with
2019-05-30T13:05:01.864865> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:05:01.865506> CloudEdge: returned msg from server is 200
2019-05-30T13:05:01.866172> CloudEdge: entity exists
2019-05-30T13:05:01.866941> CloudEdge: check if measurement exits
2019-05-30T13:05:01.867587> CloudEdge: will issue requests with
2019-05-30T13:05:01.868182> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:05:01.868766> CloudEdge: returned msg from server is 200
2019-05-30T13:05:01.869341> CloudEdge: measurement exists
2019-05-30T13:05:01.869987> CloudEdge: will issue requests with
2019-05-30T13:05:01.870560> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:05:01.871124> data: {"value":95.00,"timestamp":"2019-05-30T13:04:56.952"}
2019-05-30T13:05:01.871681> CloudEdge: returned msg from server is 200
2019-05-30T13:05:01.872246> CloudEdge: upload success
2019-05-30T13:05:02.064799> --> cloud end
2019-05-30T13:05:02.065176> 
2019-05-30T13:05:59.068622> --- rxlora. dst=1 type=0x12 src=8 seq=48 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:05:59.069195> 2019-05-30T13:05:59.065503
2019-05-30T13:05:59.069615> rcv ctrl pkt info (^p): 1,18,8,48,14,6,-43
2019-05-30T13:05:59.070071> splitted in: [1, 18, 8, 48, 14, 6, -43]
2019-05-30T13:05:59.070549> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=48 len=14 SNR=6 RSSI=-43)
2019-05-30T13:05:59.071024> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:05:59.071486> splitted in: [125, 5, 12]
2019-05-30T13:05:59.071983> (BW=125 CR=5 SF=12)
2019-05-30T13:05:59.072476> rcv timestamp (^t): 2019-05-30T13:05:59.062
2019-05-30T13:05:59.072913> 
2019-05-30T13:05:59.073373> Got first framing byte
2019-05-30T13:05:59.073771> --> got LoRa data prefix
2019-05-30T13:05:59.074380> --> DATA with_appkey: read app key sequence
2019-05-30T13:05:59.074922> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:05:59.075356> app key disabled
2019-05-30T13:05:59.075794> valid app key: accept data
2019-05-30T13:05:59.076136> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:05:59.076472> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,48,10,6,-43" "125,5,12" "2019-05-30T13:05:59.062" "B827EB1B65FD"
2019-05-30T13:06:03.305055> CloudEdge: uploading
2019-05-30T13:06:03.305934> CloudEdge: run under guest identity, all data is public
2019-05-30T13:06:03.306919> CloudEdge: check if entity exits
2019-05-30T13:06:03.307700> CloudEdge: will issue requests with
2019-05-30T13:06:03.308440> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:06:03.309109> CloudEdge: returned msg from server is 200
2019-05-30T13:06:03.309730> CloudEdge: entity exists
2019-05-30T13:06:03.310421> CloudEdge: check if measurement exits
2019-05-30T13:06:03.311051> CloudEdge: will issue requests with
2019-05-30T13:06:03.311656> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:06:03.312258> CloudEdge: returned msg from server is 200
2019-05-30T13:06:03.312862> CloudEdge: measurement exists
2019-05-30T13:06:03.313460> CloudEdge: will issue requests with
2019-05-30T13:06:03.314072> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:06:03.314702> data: {"value":95.00,"timestamp":"2019-05-30T13:05:59.062"}
2019-05-30T13:06:03.315330> CloudEdge: returned msg from server is 200
2019-05-30T13:06:03.315929> CloudEdge: upload success
2019-05-30T13:06:03.504545> --> cloud end
2019-05-30T13:06:03.504993> 
2019-05-30T13:07:01.176919> --- rxlora. dst=1 type=0x12 src=8 seq=49 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:07:01.177951> 2019-05-30T13:07:01.176019
2019-05-30T13:07:01.178811> rcv ctrl pkt info (^p): 1,18,8,49,14,7,-42
2019-05-30T13:07:01.179588> splitted in: [1, 18, 8, 49, 14, 7, -42]
2019-05-30T13:07:01.180110> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=49 len=14 SNR=7 RSSI=-42)
2019-05-30T13:07:01.180418> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:07:01.180693> splitted in: [125, 5, 12]
2019-05-30T13:07:01.180960> (BW=125 CR=5 SF=12)
2019-05-30T13:07:01.181228> rcv timestamp (^t): 2019-05-30T13:07:01.172
2019-05-30T13:07:01.181653> 
2019-05-30T13:07:01.182557> Got first framing byte
2019-05-30T13:07:01.183050> --> got LoRa data prefix
2019-05-30T13:07:01.183421> --> DATA with_appkey: read app key sequence
2019-05-30T13:07:01.183785> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:07:01.184149> app key disabled
2019-05-30T13:07:01.184493> valid app key: accept data
2019-05-30T13:07:01.184904> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:07:01.185274> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,49,10,7,-42" "125,5,12" "2019-05-30T13:07:01.172" "B827EB1B65FD"
2019-05-30T13:07:05.462305> CloudEdge: uploading
2019-05-30T13:07:05.463187> CloudEdge: run under guest identity, all data is public
2019-05-30T13:07:05.463898> CloudEdge: check if entity exits
2019-05-30T13:07:05.464595> CloudEdge: will issue requests with
2019-05-30T13:07:05.465248> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec
2019-05-30T13:07:05.465895> CloudEdge: returned msg from server is 200
2019-05-30T13:07:05.466517> CloudEdge: entity exists
2019-05-30T13:07:05.467451> CloudEdge: check if measurement exits
2019-05-30T13:07:05.468065> CloudEdge: will issue requests with
2019-05-30T13:07:05.468654> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC
2019-05-30T13:07:05.469233> CloudEdge: returned msg from server is 200
2019-05-30T13:07:05.469859> CloudEdge: measurement exists
2019-05-30T13:07:05.470484> CloudEdge: will issue requests with
2019-05-30T13:07:05.471066> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_ed882419416c810c215f185ec221f9ec/measurements/TC/values
2019-05-30T13:07:05.471663> data: {"value":94.94,"timestamp":"2019-05-30T13:07:01.172"}
2019-05-30T13:07:05.472237> CloudEdge: returned msg from server is 200
2019-05-30T13:07:05.472817> CloudEdge: upload success
2019-05-30T13:07:05.668776> --> cloud end
2019-05-30T13:07:05.669196> 
2019-05-30T13:08:03.289002> --- rxlora. dst=1 type=0x12 src=8 seq=50 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:08:03.290327> 2019-05-30T13:08:03.288404
2019-05-30T13:08:03.291241> rcv ctrl pkt info (^p): 1,18,8,50,14,6,-42
2019-05-30T13:08:03.292094> splitted in: [1, 18, 8, 50, 14, 6, -42]
2019-05-30T13:08:03.293012> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=50 len=14 SNR=6 RSSI=-42)
2019-05-30T13:08:03.294075> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:08:03.295430> splitted in: [125, 5, 12]
2019-05-30T13:08:03.296435> (BW=125 CR=5 SF=12)
2019-05-30T13:08:03.298047> rcv timestamp (^t): 2019-05-30T13:08:03.284
2019-05-30T13:08:03.299003> 
2019-05-30T13:08:03.299772> Got first framing byte
2019-05-30T13:08:03.300648> --> got LoRa data prefix
2019-05-30T13:08:03.301417> --> DATA with_appkey: read app key sequence
2019-05-30T13:08:03.302159> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:08:03.302853> app key disabled
2019-05-30T13:08:03.303302> valid app key: accept data
2019-05-30T13:08:03.303955> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:08:03.304588> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,50,10,6,-42" "125,5,12" "2019-05-30T13:08:03.284" "B827EB1B65FD"
2019-05-30T13:08:10.507482> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:08:10.507977> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:08:10.508607> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:08:10.509249> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:08:10.509908> CloudEdge: not uploading
2019-05-30T13:08:10.679093> --> cloud end
2019-05-30T13:08:10.679509> 
2019-05-30T13:08:19.298675> 2019-05-30 13:08:19.296692
2019-05-30T13:08:19.299229> post status: gw ON
2019-05-30T13:08:19.299581> post status: executing periodic tasks
2019-05-30T13:08:20.338700> no timezone support, time will be expressed only in local time
2019-05-30T13:08:20.339140> post status: start running
2019-05-30T13:08:21.403207> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:08:21.403865> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:08:21.404403> get_gps.py: invalid serial port
2019-05-30T13:08:21.543066> post status: dynamic GPS is requested
2019-05-30T13:08:21.543479> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:08:21.543845> post status get GPS: no GPS coordinates
2019-05-30T13:08:21.544159> post status: show current GPS position
2019-05-30T13:08:21.544520> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:08:21.544809> post status: exiting
2019-05-30T13:09:05.400585> --- rxlora. dst=1 type=0x12 src=8 seq=51 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:09:05.401027> 2019-05-30T13:09:05.400191
2019-05-30T13:09:05.401375> rcv ctrl pkt info (^p): 1,18,8,51,14,7,-42
2019-05-30T13:09:05.401689> splitted in: [1, 18, 8, 51, 14, 7, -42]
2019-05-30T13:09:05.401965> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=51 len=14 SNR=7 RSSI=-42)
2019-05-30T13:09:05.402239> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:09:05.402520> splitted in: [125, 5, 12]
2019-05-30T13:09:05.402858> (BW=125 CR=5 SF=12)
2019-05-30T13:09:05.403160> rcv timestamp (^t): 2019-05-30T13:09:05.396
2019-05-30T13:09:05.403448> 
2019-05-30T13:09:05.403794> Got first framing byte
2019-05-30T13:09:05.404088> --> got LoRa data prefix
2019-05-30T13:09:05.404365> --> DATA with_appkey: read app key sequence
2019-05-30T13:09:05.404671> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:09:05.405015> app key disabled
2019-05-30T13:09:05.405338> valid app key: accept data
2019-05-30T13:09:05.405698> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:09:05.406047> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,51,10,7,-42" "125,5,12" "2019-05-30T13:09:05.396" "B827EB1B65FD"
2019-05-30T13:09:12.641071> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:09:12.641861> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:09:12.642525> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:09:12.643161> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:09:12.643791> CloudEdge: not uploading
2019-05-30T13:09:12.848715> --> cloud end
2019-05-30T13:09:12.849092> 
2019-05-30T13:10:07.515696> --- rxlora. dst=1 type=0x12 src=8 seq=52 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T13:10:07.516240> 2019-05-30T13:10:07.512731
2019-05-30T13:10:07.516768> rcv ctrl pkt info (^p): 1,18,8,52,14,6,-45
2019-05-30T13:10:07.517277> splitted in: [1, 18, 8, 52, 14, 6, -45]
2019-05-30T13:10:07.517772> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=52 len=14 SNR=6 RSSI=-45)
2019-05-30T13:10:07.518252> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:10:07.518737> splitted in: [125, 5, 12]
2019-05-30T13:10:07.519298> (BW=125 CR=5 SF=12)
2019-05-30T13:10:07.519842> rcv timestamp (^t): 2019-05-30T13:10:07.509
2019-05-30T13:10:07.520279> 
2019-05-30T13:10:07.520684> Got first framing byte
2019-05-30T13:10:07.521041> --> got LoRa data prefix
2019-05-30T13:10:07.521532> --> DATA with_appkey: read app key sequence
2019-05-30T13:10:07.521948> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:10:07.522274> app key disabled
2019-05-30T13:10:07.522640> valid app key: accept data
2019-05-30T13:10:07.522961> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:10:07.523248> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,52,10,6,-45" "125,5,12" "2019-05-30T13:10:07.509" "B827EB1B65FD"
2019-05-30T13:10:14.773218> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:10:14.773939> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:10:14.774482> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:10:14.775025> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:10:14.775562> CloudEdge: not uploading
2019-05-30T13:10:14.966455> --> cloud end
2019-05-30T13:10:14.967339> 
2019-05-30T13:11:09.627308> --- rxlora. dst=1 type=0x12 src=8 seq=53 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:11:09.627881> 2019-05-30T13:11:09.625517
2019-05-30T13:11:09.628324> rcv ctrl pkt info (^p): 1,18,8,53,14,6,-41
2019-05-30T13:11:09.628679> splitted in: [1, 18, 8, 53, 14, 6, -41]
2019-05-30T13:11:09.628996> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=53 len=14 SNR=6 RSSI=-41)
2019-05-30T13:11:09.629372> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:11:09.629772> splitted in: [125, 5, 12]
2019-05-30T13:11:09.630183> (BW=125 CR=5 SF=12)
2019-05-30T13:11:09.630787> rcv timestamp (^t): 2019-05-30T13:11:09.622
2019-05-30T13:11:09.631290> 
2019-05-30T13:11:09.631755> Got first framing byte
2019-05-30T13:11:09.632165> --> got LoRa data prefix
2019-05-30T13:11:09.632662> --> DATA with_appkey: read app key sequence
2019-05-30T13:11:09.633166> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:11:09.633620> app key disabled
2019-05-30T13:11:09.634071> valid app key: accept data
2019-05-30T13:11:09.634498> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:11:09.635044> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,53,10,6,-41" "125,5,12" "2019-05-30T13:11:09.622" "B827EB1B65FD"
2019-05-30T13:11:16.792541> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:11:16.792919> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:11:16.793225> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:11:16.793493> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:11:16.793757> CloudEdge: not uploading
2019-05-30T13:11:16.956074> --> cloud end
2019-05-30T13:11:16.956457> 
2019-05-30T13:12:11.736159> --- rxlora. dst=1 type=0x12 src=8 seq=54 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:12:11.736972> 2019-05-30T13:12:11.735736
2019-05-30T13:12:11.737426> rcv ctrl pkt info (^p): 1,18,8,54,14,6,-42
2019-05-30T13:12:11.737797> splitted in: [1, 18, 8, 54, 14, 6, -42]
2019-05-30T13:12:11.738144> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=54 len=14 SNR=6 RSSI=-42)
2019-05-30T13:12:11.738538> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:12:11.738863> splitted in: [125, 5, 12]
2019-05-30T13:12:11.739159> (BW=125 CR=5 SF=12)
2019-05-30T13:12:11.739474> rcv timestamp (^t): 2019-05-30T13:12:11.731
2019-05-30T13:12:11.739839> 
2019-05-30T13:12:11.740271> Got first framing byte
2019-05-30T13:12:11.740638> --> got LoRa data prefix
2019-05-30T13:12:11.740987> --> DATA with_appkey: read app key sequence
2019-05-30T13:12:11.741409> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:12:11.741748> app key disabled
2019-05-30T13:12:11.742155> valid app key: accept data
2019-05-30T13:12:11.742570> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:12:11.743038> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,54,10,6,-42" "125,5,12" "2019-05-30T13:12:11.731" "B827EB1B65FD"
2019-05-30T13:12:18.910740> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:12:18.911128> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:12:18.911408> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:12:18.911704> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:12:18.912026> CloudEdge: not uploading
2019-05-30T13:12:19.081289> --> cloud end
2019-05-30T13:12:19.081698> 
2019-05-30T13:13:13.844533> --- rxlora. dst=1 type=0x12 src=8 seq=55 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:13:13.845002> 2019-05-30T13:13:13.844139
2019-05-30T13:13:13.845344> rcv ctrl pkt info (^p): 1,18,8,55,14,6,-43
2019-05-30T13:13:13.845663> splitted in: [1, 18, 8, 55, 14, 6, -43]
2019-05-30T13:13:13.845953> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=55 len=14 SNR=6 RSSI=-43)
2019-05-30T13:13:13.846245> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:13:13.846684> splitted in: [125, 5, 12]
2019-05-30T13:13:13.847139> (BW=125 CR=5 SF=12)
2019-05-30T13:13:13.847491> rcv timestamp (^t): 2019-05-30T13:13:13.840
2019-05-30T13:13:13.847794> 
2019-05-30T13:13:13.848165> Got first framing byte
2019-05-30T13:13:13.848474> --> got LoRa data prefix
2019-05-30T13:13:13.848785> --> DATA with_appkey: read app key sequence
2019-05-30T13:13:13.849130> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:13:13.849476> app key disabled
2019-05-30T13:13:13.849843> valid app key: accept data
2019-05-30T13:13:13.850174> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:13:13.850485> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,55,10,6,-43" "125,5,12" "2019-05-30T13:13:13.840" "B827EB1B65FD"
2019-05-30T13:13:21.174681> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:13:21.175445> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:13:21.176002> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:13:21.176657> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:13:21.177244> CloudEdge: not uploading
2019-05-30T13:13:21.365117> --> cloud end
2019-05-30T13:13:21.365569> 
2019-05-30T13:14:15.953549> --- rxlora. dst=1 type=0x12 src=8 seq=56 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:14:15.954000> 2019-05-30T13:14:15.953147
2019-05-30T13:14:15.954361> rcv ctrl pkt info (^p): 1,18,8,56,14,6,-41
2019-05-30T13:14:15.954677> splitted in: [1, 18, 8, 56, 14, 6, -41]
2019-05-30T13:14:15.954976> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=56 len=14 SNR=6 RSSI=-41)
2019-05-30T13:14:15.955263> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:14:15.955554> splitted in: [125, 5, 12]
2019-05-30T13:14:15.955938> (BW=125 CR=5 SF=12)
2019-05-30T13:14:15.956251> rcv timestamp (^t): 2019-05-30T13:14:15.949
2019-05-30T13:14:15.956655> 
2019-05-30T13:14:15.957154> Got first framing byte
2019-05-30T13:14:15.957477> --> got LoRa data prefix
2019-05-30T13:14:15.957778> --> DATA with_appkey: read app key sequence
2019-05-30T13:14:15.958133> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:14:15.958483> app key disabled
2019-05-30T13:14:15.958850> valid app key: accept data
2019-05-30T13:14:15.959186> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:14:15.959784> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,56,10,6,-41" "125,5,12" "2019-05-30T13:14:15.949" "B827EB1B65FD"
2019-05-30T13:14:23.204063> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:14:23.204471> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:14:23.204765> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:14:23.205041> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:14:23.205317> CloudEdge: not uploading
2019-05-30T13:14:23.376523> --> cloud end
2019-05-30T13:14:23.377072> 
2019-05-30T13:14:23.377353> Low-level gw status ON
2019-05-30T13:15:18.067150> --- rxlora. dst=1 type=0x12 src=8 seq=57 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:15:18.067592> 2019-05-30T13:15:18.065215
2019-05-30T13:15:18.067893> rcv ctrl pkt info (^p): 1,18,8,57,14,6,-42
2019-05-30T13:15:18.068169> splitted in: [1, 18, 8, 57, 14, 6, -42]
2019-05-30T13:15:18.068447> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=57 len=14 SNR=6 RSSI=-42)
2019-05-30T13:15:18.068725> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:15:18.069001> splitted in: [125, 5, 12]
2019-05-30T13:15:18.069292> (BW=125 CR=5 SF=12)
2019-05-30T13:15:18.069576> rcv timestamp (^t): 2019-05-30T13:15:18.062
2019-05-30T13:15:18.069883> 
2019-05-30T13:15:18.070163> Got first framing byte
2019-05-30T13:15:18.070435> --> got LoRa data prefix
2019-05-30T13:15:18.070731> --> DATA with_appkey: read app key sequence
2019-05-30T13:15:18.071394> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:15:18.072184> app key disabled
2019-05-30T13:15:18.072589> valid app key: accept data
2019-05-30T13:15:18.072909> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:15:18.073258> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,57,10,6,-42" "125,5,12" "2019-05-30T13:15:18.062" "B827EB1B65FD"
2019-05-30T13:15:25.351318> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:15:25.352268> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:15:25.353139> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:15:25.353832> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:15:25.354406> CloudEdge: not uploading
2019-05-30T13:15:25.548074> --> cloud end
2019-05-30T13:15:25.548555> 
2019-05-30T13:16:20.172037> --- rxlora. dst=1 type=0x12 src=8 seq=58 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:16:20.172489> 2019-05-30T13:16:20.171641
2019-05-30T13:16:20.172810> rcv ctrl pkt info (^p): 1,18,8,58,14,7,-43
2019-05-30T13:16:20.173110> splitted in: [1, 18, 8, 58, 14, 7, -43]
2019-05-30T13:16:20.173442> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=58 len=14 SNR=7 RSSI=-43)
2019-05-30T13:16:20.173724> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:16:20.173998> splitted in: [125, 5, 12]
2019-05-30T13:16:20.174323> (BW=125 CR=5 SF=12)
2019-05-30T13:16:20.174621> rcv timestamp (^t): 2019-05-30T13:16:20.168
2019-05-30T13:16:20.174920> 
2019-05-30T13:16:20.175267> Got first framing byte
2019-05-30T13:16:20.175554> --> got LoRa data prefix
2019-05-30T13:16:20.175836> --> DATA with_appkey: read app key sequence
2019-05-30T13:16:20.176127> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:16:20.176447> app key disabled
2019-05-30T13:16:20.176950> valid app key: accept data
2019-05-30T13:16:20.177346> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:16:20.177676> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,58,10,7,-43" "125,5,12" "2019-05-30T13:16:20.168" "B827EB1B65FD"
2019-05-30T13:16:27.507957> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:16:27.508748> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:16:27.509261> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:16:27.509650> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:16:27.510059> CloudEdge: not uploading
2019-05-30T13:16:27.670185> --> cloud end
2019-05-30T13:16:27.670556> 
2019-05-30T13:17:22.280373> --- rxlora. dst=1 type=0x12 src=8 seq=59 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T13:17:22.280841> 2019-05-30T13:17:22.279960
2019-05-30T13:17:22.281149> rcv ctrl pkt info (^p): 1,18,8,59,14,6,-45
2019-05-30T13:17:22.281450> splitted in: [1, 18, 8, 59, 14, 6, -45]
2019-05-30T13:17:22.281726> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=59 len=14 SNR=6 RSSI=-45)
2019-05-30T13:17:22.282003> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:17:22.282281> splitted in: [125, 5, 12]
2019-05-30T13:17:22.282623> (BW=125 CR=5 SF=12)
2019-05-30T13:17:22.282949> rcv timestamp (^t): 2019-05-30T13:17:22.276
2019-05-30T13:17:22.283244> 
2019-05-30T13:17:22.283640> Got first framing byte
2019-05-30T13:17:22.283969> --> got LoRa data prefix
2019-05-30T13:17:22.284260> --> DATA with_appkey: read app key sequence
2019-05-30T13:17:22.284564> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:17:22.284930> app key disabled
2019-05-30T13:17:22.285274> valid app key: accept data
2019-05-30T13:17:22.285623> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:17:22.285996> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,59,10,6,-45" "125,5,12" "2019-05-30T13:17:22.276" "B827EB1B65FD"
2019-05-30T13:17:29.467616> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:17:29.468470> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:17:29.469160> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:17:29.469774> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:17:29.470419> CloudEdge: not uploading
2019-05-30T13:17:29.672046> --> cloud end
2019-05-30T13:17:29.672413> 
2019-05-30T13:18:21.735845> 2019-05-30 13:18:21.734726
2019-05-30T13:18:21.736768> post status: gw ON
2019-05-30T13:18:21.737522> post status: executing periodic tasks
2019-05-30T13:18:22.821590> no timezone support, time will be expressed only in local time
2019-05-30T13:18:22.822039> post status: start running
2019-05-30T13:18:23.932442> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:18:23.933078> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:18:23.933638> get_gps.py: invalid serial port
2019-05-30T13:18:24.079682> post status: dynamic GPS is requested
2019-05-30T13:18:24.080105> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:18:24.080464> post status get GPS: no GPS coordinates
2019-05-30T13:18:24.080770> post status: show current GPS position
2019-05-30T13:18:24.081056> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:18:24.081341> post status: exiting
2019-05-30T13:18:24.388016> --- rxlora. dst=1 type=0x12 src=8 seq=60 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:18:24.388511> 2019-05-30T13:18:24.387465
2019-05-30T13:18:24.388895> rcv ctrl pkt info (^p): 1,18,8,60,14,7,-41
2019-05-30T13:18:24.389192> splitted in: [1, 18, 8, 60, 14, 7, -41]
2019-05-30T13:18:24.389467> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=60 len=14 SNR=7 RSSI=-41)
2019-05-30T13:18:24.389737> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:18:24.390068> splitted in: [125, 5, 12]
2019-05-30T13:18:24.390402> (BW=125 CR=5 SF=12)
2019-05-30T13:18:24.390701> rcv timestamp (^t): 2019-05-30T13:18:24.384
2019-05-30T13:18:24.390990> 
2019-05-30T13:18:24.391363> Got first framing byte
2019-05-30T13:18:24.391659> --> got LoRa data prefix
2019-05-30T13:18:24.391944> --> DATA with_appkey: read app key sequence
2019-05-30T13:18:24.392277> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:18:24.392633> app key disabled
2019-05-30T13:18:24.392969> valid app key: accept data
2019-05-30T13:18:24.393290> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:18:24.393683> python /app/data_acq/edgeCall.py "TC/94.94" "1,18,8,60,10,7,-41" "125,5,12" "2019-05-30T13:18:24.384" "B827EB1B65FD"
2019-05-30T13:18:31.637825> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:18:31.638429> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:18:31.638920> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:18:31.639379> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:18:31.639918> CloudEdge: not uploading
2019-05-30T13:18:31.797649> --> cloud end
2019-05-30T13:18:31.798064> 
2019-05-30T13:19:26.497200> --- rxlora. dst=1 type=0x12 src=8 seq=61 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:19:26.497658> 2019-05-30T13:19:26.495500
2019-05-30T13:19:26.498031> rcv ctrl pkt info (^p): 1,18,8,61,14,7,-41
2019-05-30T13:19:26.498416> splitted in: [1, 18, 8, 61, 14, 7, -41]
2019-05-30T13:19:26.498743> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=61 len=14 SNR=7 RSSI=-41)
2019-05-30T13:19:26.499034> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:19:26.499325> splitted in: [125, 5, 12]
2019-05-30T13:19:26.499625> (BW=125 CR=5 SF=12)
2019-05-30T13:19:26.499901> rcv timestamp (^t): 2019-05-30T13:19:26.492
2019-05-30T13:19:26.500204> 
2019-05-30T13:19:26.500542> Got first framing byte
2019-05-30T13:19:26.500873> --> got LoRa data prefix
2019-05-30T13:19:26.501219> --> DATA with_appkey: read app key sequence
2019-05-30T13:19:26.501571> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:19:26.501943> app key disabled
2019-05-30T13:19:26.502293> valid app key: accept data
2019-05-30T13:19:26.502642> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:19:26.502985> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,61,10,7,-41" "125,5,12" "2019-05-30T13:19:26.492" "B827EB1B65FD"
2019-05-30T13:19:33.717309> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:19:33.717721> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:19:33.717999> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:19:33.718266> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:19:33.718530> CloudEdge: not uploading
2019-05-30T13:19:33.913628> --> cloud end
2019-05-30T13:19:33.914080> 
2019-05-30T13:20:28.605632> --- rxlora. dst=1 type=0x12 src=8 seq=62 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:20:28.606229> 2019-05-30T13:20:28.602599
2019-05-30T13:20:28.606829> rcv ctrl pkt info (^p): 1,18,8,62,14,7,-43
2019-05-30T13:20:28.607331> splitted in: [1, 18, 8, 62, 14, 7, -43]
2019-05-30T13:20:28.607755> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=62 len=14 SNR=7 RSSI=-43)
2019-05-30T13:20:28.608149> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:20:28.608586> splitted in: [125, 5, 12]
2019-05-30T13:20:28.609004> (BW=125 CR=5 SF=12)
2019-05-30T13:20:28.609439> rcv timestamp (^t): 2019-05-30T13:20:28.599
2019-05-30T13:20:28.609917> 
2019-05-30T13:20:28.610366> Got first framing byte
2019-05-30T13:20:28.610764> --> got LoRa data prefix
2019-05-30T13:20:28.611118> --> DATA with_appkey: read app key sequence
2019-05-30T13:20:28.611524> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:20:28.611851> app key disabled
2019-05-30T13:20:28.612265> valid app key: accept data
2019-05-30T13:20:28.612669> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:20:28.613073> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,62,10,7,-43" "125,5,12" "2019-05-30T13:20:28.599" "B827EB1B65FD"
2019-05-30T13:20:35.797964> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:20:35.798345> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:20:35.798622> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:20:35.798895> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:20:35.799164> CloudEdge: not uploading
2019-05-30T13:20:35.981711> --> cloud end
2019-05-30T13:20:35.982087> 
2019-05-30T13:21:30.713151> --- rxlora. dst=1 type=0x12 src=8 seq=63 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:21:30.713709> 2019-05-30T13:21:30.710187
2019-05-30T13:21:30.714124> rcv ctrl pkt info (^p): 1,18,8,63,14,7,-43
2019-05-30T13:21:30.714441> splitted in: [1, 18, 8, 63, 14, 7, -43]
2019-05-30T13:21:30.714762> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=63 len=14 SNR=7 RSSI=-43)
2019-05-30T13:21:30.715128> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:21:30.715481> splitted in: [125, 5, 12]
2019-05-30T13:21:30.715824> (BW=125 CR=5 SF=12)
2019-05-30T13:21:30.716227> rcv timestamp (^t): 2019-05-30T13:21:30.706
2019-05-30T13:21:30.716674> 
2019-05-30T13:21:30.717119> Got first framing byte
2019-05-30T13:21:30.717505> --> got LoRa data prefix
2019-05-30T13:21:30.717873> --> DATA with_appkey: read app key sequence
2019-05-30T13:21:30.718206> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:21:30.718657> app key disabled
2019-05-30T13:21:30.719103> valid app key: accept data
2019-05-30T13:21:30.719421> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:21:30.719844> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,63,10,7,-43" "125,5,12" "2019-05-30T13:21:30.706" "B827EB1B65FD"
2019-05-30T13:21:37.948483> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:21:37.948953> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:21:37.949258> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:21:37.949534> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:21:37.949807> CloudEdge: not uploading
2019-05-30T13:21:38.115728> --> cloud end
2019-05-30T13:21:38.116140> 
2019-05-30T13:22:32.819647> --- rxlora. dst=1 type=0x12 src=8 seq=64 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:22:32.821587> 2019-05-30T13:22:32.818521
2019-05-30T13:22:32.822297> rcv ctrl pkt info (^p): 1,18,8,64,14,6,-41
2019-05-30T13:22:32.822686> splitted in: [1, 18, 8, 64, 14, 6, -41]
2019-05-30T13:22:32.823007> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=64 len=14 SNR=6 RSSI=-41)
2019-05-30T13:22:32.823340> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:22:32.823701> splitted in: [125, 5, 12]
2019-05-30T13:22:32.824053> (BW=125 CR=5 SF=12)
2019-05-30T13:22:32.824379> rcv timestamp (^t): 2019-05-30T13:22:32.815
2019-05-30T13:22:32.836941> 
2019-05-30T13:22:32.837558> Got first framing byte
2019-05-30T13:22:32.837986> --> got LoRa data prefix
2019-05-30T13:22:32.838354> --> DATA with_appkey: read app key sequence
2019-05-30T13:22:32.838756> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:22:32.839096> app key disabled
2019-05-30T13:22:32.839464> valid app key: accept data
2019-05-30T13:22:32.839822> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:22:32.840167> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,64,10,6,-41" "125,5,12" "2019-05-30T13:22:32.815" "B827EB1B65FD"
2019-05-30T13:22:40.021345> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:22:40.022076> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:22:40.025800> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:22:40.026446> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:22:40.027353> CloudEdge: not uploading
2019-05-30T13:22:40.230515> --> cloud end
2019-05-30T13:22:40.230897> 
2019-05-30T13:23:34.930077> --- rxlora. dst=1 type=0x12 src=8 seq=65 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:23:34.930569> 2019-05-30T13:23:34.927029
2019-05-30T13:23:34.930922> rcv ctrl pkt info (^p): 1,18,8,65,14,6,-42
2019-05-30T13:23:34.931235> splitted in: [1, 18, 8, 65, 14, 6, -42]
2019-05-30T13:23:34.931535> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=65 len=14 SNR=6 RSSI=-42)
2019-05-30T13:23:34.931904> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:23:34.932252> splitted in: [125, 5, 12]
2019-05-30T13:23:34.932613> (BW=125 CR=5 SF=12)
2019-05-30T13:23:34.932954> rcv timestamp (^t): 2019-05-30T13:23:34.923
2019-05-30T13:23:34.933351> 
2019-05-30T13:23:34.933761> Got first framing byte
2019-05-30T13:23:34.934243> --> got LoRa data prefix
2019-05-30T13:23:34.934634> --> DATA with_appkey: read app key sequence
2019-05-30T13:23:34.935001> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:23:34.935456> app key disabled
2019-05-30T13:23:34.935948> valid app key: accept data
2019-05-30T13:23:34.936275> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:23:34.936798> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,65,10,6,-42" "125,5,12" "2019-05-30T13:23:34.923" "B827EB1B65FD"
2019-05-30T13:23:42.094947> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:23:42.095621> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:23:42.096178> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:23:42.096958> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:23:42.097561> CloudEdge: not uploading
2019-05-30T13:23:42.292816> --> cloud end
2019-05-30T13:23:42.293195> 
2019-05-30T13:24:37.035233> --- rxlora. dst=1 type=0x12 src=8 seq=66 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:24:37.035708> 2019-05-30T13:24:37.032260
2019-05-30T13:24:37.036064> rcv ctrl pkt info (^p): 1,18,8,66,14,6,-43
2019-05-30T13:24:37.036371> splitted in: [1, 18, 8, 66, 14, 6, -43]
2019-05-30T13:24:37.036824> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=66 len=14 SNR=6 RSSI=-43)
2019-05-30T13:24:37.037251> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:24:37.037607> splitted in: [125, 5, 12]
2019-05-30T13:24:37.037965> (BW=125 CR=5 SF=12)
2019-05-30T13:24:37.038344> rcv timestamp (^t): 2019-05-30T13:24:37.028
2019-05-30T13:24:37.038741> 
2019-05-30T13:24:37.039126> Got first framing byte
2019-05-30T13:24:37.039479> --> got LoRa data prefix
2019-05-30T13:24:37.039844> --> DATA with_appkey: read app key sequence
2019-05-30T13:24:37.040172> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:24:37.040572> app key disabled
2019-05-30T13:24:37.041045> valid app key: accept data
2019-05-30T13:24:37.041360> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:24:37.041721> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,66,10,6,-43" "125,5,12" "2019-05-30T13:24:37.028" "B827EB1B65FD"
2019-05-30T13:24:44.308859> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:24:44.309567> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:24:44.310114> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:24:44.310653> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:24:44.311194> CloudEdge: not uploading
2019-05-30T13:24:44.488625> --> cloud end
2019-05-30T13:24:44.489002> 
2019-05-30T13:24:44.489276> Low-level gw status ON
2019-05-30T13:25:39.143273> --- rxlora. dst=1 type=0x12 src=8 seq=67 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:25:39.143752> 2019-05-30T13:25:39.140328
2019-05-30T13:25:39.144163> rcv ctrl pkt info (^p): 1,18,8,67,14,6,-42
2019-05-30T13:25:39.144489> splitted in: [1, 18, 8, 67, 14, 6, -42]
2019-05-30T13:25:39.144799> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=67 len=14 SNR=6 RSSI=-42)
2019-05-30T13:25:39.145152> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:25:39.145485> splitted in: [125, 5, 12]
2019-05-30T13:25:39.145852> (BW=125 CR=5 SF=12)
2019-05-30T13:25:39.146283> rcv timestamp (^t): 2019-05-30T13:25:39.136
2019-05-30T13:25:39.146750> 
2019-05-30T13:25:39.147163> Got first framing byte
2019-05-30T13:25:39.147513> --> got LoRa data prefix
2019-05-30T13:25:39.147853> --> DATA with_appkey: read app key sequence
2019-05-30T13:25:39.148191> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:25:39.148556> app key disabled
2019-05-30T13:25:39.149027> valid app key: accept data
2019-05-30T13:25:39.149355> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:25:39.149715> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,67,10,6,-42" "125,5,12" "2019-05-30T13:25:39.136" "B827EB1B65FD"
2019-05-30T13:25:46.327064> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:25:46.327823> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:25:46.328506> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:25:46.329097> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:25:46.329680> CloudEdge: not uploading
2019-05-30T13:25:46.556876> --> cloud end
2019-05-30T13:25:46.557258> 
2019-05-30T13:26:41.247729> --- rxlora. dst=1 type=0x12 src=8 seq=68 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:26:41.248252> 2019-05-30T13:26:41.247030
2019-05-30T13:26:41.248654> rcv ctrl pkt info (^p): 1,18,8,68,14,7,-42
2019-05-30T13:26:41.248956> splitted in: [1, 18, 8, 68, 14, 7, -42]
2019-05-30T13:26:41.249240> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=68 len=14 SNR=7 RSSI=-42)
2019-05-30T13:26:41.249566> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:26:41.249927> splitted in: [125, 5, 12]
2019-05-30T13:26:41.250238> (BW=125 CR=5 SF=12)
2019-05-30T13:26:41.250525> rcv timestamp (^t): 2019-05-30T13:26:41.243
2019-05-30T13:26:41.250825> 
2019-05-30T13:26:41.251121> Got first framing byte
2019-05-30T13:26:41.251402> --> got LoRa data prefix
2019-05-30T13:26:41.251741> --> DATA with_appkey: read app key sequence
2019-05-30T13:26:41.252102> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:26:41.252459> app key disabled
2019-05-30T13:26:41.252779> valid app key: accept data
2019-05-30T13:26:41.253189> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:26:41.253646> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,68,10,7,-42" "125,5,12" "2019-05-30T13:26:41.243" "B827EB1B65FD"
2019-05-30T13:26:48.446179> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:26:48.447123> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:26:48.447907> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:26:48.448572> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:26:48.449226> CloudEdge: not uploading
2019-05-30T13:26:48.643161> --> cloud end
2019-05-30T13:26:48.643529> 
2019-05-30T13:27:43.356768> --- rxlora. dst=1 type=0x12 src=8 seq=69 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:27:43.357278> 2019-05-30T13:27:43.353743
2019-05-30T13:27:43.357620> rcv ctrl pkt info (^p): 1,18,8,69,14,7,-42
2019-05-30T13:27:43.357920> splitted in: [1, 18, 8, 69, 14, 7, -42]
2019-05-30T13:27:43.358207> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=69 len=14 SNR=7 RSSI=-42)
2019-05-30T13:27:43.358550> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:27:43.358903> splitted in: [125, 5, 12]
2019-05-30T13:27:43.359252> (BW=125 CR=5 SF=12)
2019-05-30T13:27:43.359591> rcv timestamp (^t): 2019-05-30T13:27:43.350
2019-05-30T13:27:43.359985> 
2019-05-30T13:27:43.360352> Got first framing byte
2019-05-30T13:27:43.360697> --> got LoRa data prefix
2019-05-30T13:27:43.361031> --> DATA with_appkey: read app key sequence
2019-05-30T13:27:43.361378> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:27:43.361689> app key disabled
2019-05-30T13:27:43.362091> valid app key: accept data
2019-05-30T13:27:43.362514> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:27:43.362821> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,69,10,7,-42" "125,5,12" "2019-05-30T13:27:43.350" "B827EB1B65FD"
2019-05-30T13:27:50.492434> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:27:50.492874> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:27:50.493156> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:27:50.493425> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:27:50.493692> CloudEdge: not uploading
2019-05-30T13:27:50.661902> --> cloud end
2019-05-30T13:27:50.662474> 
2019-05-30T13:28:24.255517> 2019-05-30 13:28:24.254399
2019-05-30T13:28:24.256485> post status: gw ON
2019-05-30T13:28:24.259803> post status: executing periodic tasks
2019-05-30T13:28:25.326434> no timezone support, time will be expressed only in local time
2019-05-30T13:28:25.327094> post status: start running
2019-05-30T13:28:26.395351> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:28:26.395731> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:28:26.396009> get_gps.py: invalid serial port
2019-05-30T13:28:26.539328> post status: dynamic GPS is requested
2019-05-30T13:28:26.539815> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:28:26.540301> post status get GPS: no GPS coordinates
2019-05-30T13:28:26.540708> post status: show current GPS position
2019-05-30T13:28:26.541063> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:28:26.541399> post status: exiting
2019-05-30T13:28:45.464858> --- rxlora. dst=1 type=0x12 src=8 seq=70 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:28:45.465320> 2019-05-30T13:28:45.461898
2019-05-30T13:28:45.465636> rcv ctrl pkt info (^p): 1,18,8,70,14,7,-42
2019-05-30T13:28:45.465939> splitted in: [1, 18, 8, 70, 14, 7, -42]
2019-05-30T13:28:45.466247> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=70 len=14 SNR=7 RSSI=-42)
2019-05-30T13:28:45.466632> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:28:45.467025> splitted in: [125, 5, 12]
2019-05-30T13:28:45.467325> (BW=125 CR=5 SF=12)
2019-05-30T13:28:45.467638> rcv timestamp (^t): 2019-05-30T13:28:45.458
2019-05-30T13:28:45.467926> 
2019-05-30T13:28:45.468215> Got first framing byte
2019-05-30T13:28:45.468526> --> got LoRa data prefix
2019-05-30T13:28:45.468807> --> DATA with_appkey: read app key sequence
2019-05-30T13:28:45.469115> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:28:45.469400> app key disabled
2019-05-30T13:28:45.469685> valid app key: accept data
2019-05-30T13:28:45.469985> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:28:45.470261> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,70,10,7,-42" "125,5,12" "2019-05-30T13:28:45.458" "B827EB1B65FD"
2019-05-30T13:28:52.648544> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:28:52.649260> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:28:52.649850> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:28:52.650427> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:28:52.650989> CloudEdge: not uploading
2019-05-30T13:28:52.881800> --> cloud end
2019-05-30T13:28:52.882218> 
2019-05-30T13:29:47.571733> --- rxlora. dst=1 type=0x12 src=8 seq=71 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:29:47.572209> 2019-05-30T13:29:47.568837
2019-05-30T13:29:47.572552> rcv ctrl pkt info (^p): 1,18,8,71,14,7,-42
2019-05-30T13:29:47.572856> splitted in: [1, 18, 8, 71, 14, 7, -42]
2019-05-30T13:29:47.573156> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=71 len=14 SNR=7 RSSI=-42)
2019-05-30T13:29:47.573512> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:29:47.573875> splitted in: [125, 5, 12]
2019-05-30T13:29:47.574220> (BW=125 CR=5 SF=12)
2019-05-30T13:29:47.574546> rcv timestamp (^t): 2019-05-30T13:29:47.565
2019-05-30T13:29:47.574906> 
2019-05-30T13:29:47.575191> Got first framing byte
2019-05-30T13:29:47.575609> --> got LoRa data prefix
2019-05-30T13:29:47.575890> --> DATA with_appkey: read app key sequence
2019-05-30T13:29:47.576161> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:29:47.576427> app key disabled
2019-05-30T13:29:47.576857> valid app key: accept data
2019-05-30T13:29:47.577225> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:29:47.577660> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,71,10,7,-42" "125,5,12" "2019-05-30T13:29:47.565" "B827EB1B65FD"
2019-05-30T13:29:54.725332> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:29:54.725897> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:29:54.726344> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:29:54.727002> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:29:54.727485> CloudEdge: not uploading
2019-05-30T13:29:54.902950> --> cloud end
2019-05-30T13:29:54.903323> 
2019-05-30T13:30:49.679330> --- rxlora. dst=1 type=0x12 src=8 seq=72 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:30:49.679838> 2019-05-30T13:30:49.676309
2019-05-30T13:30:49.680173> rcv ctrl pkt info (^p): 1,18,8,72,14,7,-41
2019-05-30T13:30:49.680473> splitted in: [1, 18, 8, 72, 14, 7, -41]
2019-05-30T13:30:49.681861> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=72 len=14 SNR=7 RSSI=-41)
2019-05-30T13:30:49.682963> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:30:49.683796> splitted in: [125, 5, 12]
2019-05-30T13:30:49.684471> (BW=125 CR=5 SF=12)
2019-05-30T13:30:49.685109> rcv timestamp (^t): 2019-05-30T13:30:49.673
2019-05-30T13:30:49.685686> 
2019-05-30T13:30:49.686143> Got first framing byte
2019-05-30T13:30:49.686716> --> got LoRa data prefix
2019-05-30T13:30:49.687284> --> DATA with_appkey: read app key sequence
2019-05-30T13:30:49.687676> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:30:49.688027> app key disabled
2019-05-30T13:30:49.688531> valid app key: accept data
2019-05-30T13:30:49.689089> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:30:49.689633> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,72,10,7,-41" "125,5,12" "2019-05-30T13:30:49.673" "B827EB1B65FD"
2019-05-30T13:30:56.845552> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:30:56.846053> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:30:56.846370> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:30:56.846853> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:30:56.847163> CloudEdge: not uploading
2019-05-30T13:30:57.044329> --> cloud end
2019-05-30T13:30:57.044695> 
2019-05-30T13:31:51.792025> --- rxlora. dst=1 type=0x12 src=8 seq=73 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:31:51.792499> 2019-05-30T13:31:51.791116
2019-05-30T13:31:51.792876> rcv ctrl pkt info (^p): 1,18,8,73,14,6,-41
2019-05-30T13:31:51.793176> splitted in: [1, 18, 8, 73, 14, 6, -41]
2019-05-30T13:31:51.793466> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=73 len=14 SNR=6 RSSI=-41)
2019-05-30T13:31:51.793825> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:31:51.794132> splitted in: [125, 5, 12]
2019-05-30T13:31:51.794420> (BW=125 CR=5 SF=12)
2019-05-30T13:31:51.794779> rcv timestamp (^t): 2019-05-30T13:31:51.784
2019-05-30T13:31:51.795077> 
2019-05-30T13:31:51.795358> Got first framing byte
2019-05-30T13:31:51.795680> --> got LoRa data prefix
2019-05-30T13:31:51.796027> --> DATA with_appkey: read app key sequence
2019-05-30T13:31:51.796381> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:31:51.796879> app key disabled
2019-05-30T13:31:51.797363> valid app key: accept data
2019-05-30T13:31:51.797766> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:31:51.798182> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,73,10,6,-41" "125,5,12" "2019-05-30T13:31:51.784" "B827EB1B65FD"
2019-05-30T13:31:58.970246> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:31:58.970935> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:31:58.971495> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:31:58.972048> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:31:58.972592> CloudEdge: not uploading
2019-05-30T13:31:59.173921> --> cloud end
2019-05-30T13:31:59.174345> 
2019-05-30T13:32:53.902211> --- rxlora. dst=1 type=0x12 src=8 seq=74 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T13:32:53.902716> 2019-05-30T13:32:53.899110
2019-05-30T13:32:53.903130> rcv ctrl pkt info (^p): 1,18,8,74,14,6,-45
2019-05-30T13:32:53.903446> splitted in: [1, 18, 8, 74, 14, 6, -45]
2019-05-30T13:32:53.903740> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=74 len=14 SNR=6 RSSI=-45)
2019-05-30T13:32:53.904079> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:32:53.904413> splitted in: [125, 5, 12]
2019-05-30T13:32:53.904753> (BW=125 CR=5 SF=12)
2019-05-30T13:32:53.905100> rcv timestamp (^t): 2019-05-30T13:32:53.895
2019-05-30T13:32:53.905548> 
2019-05-30T13:32:53.905908> Got first framing byte
2019-05-30T13:32:53.906189> --> got LoRa data prefix
2019-05-30T13:32:53.906489> --> DATA with_appkey: read app key sequence
2019-05-30T13:32:53.906890> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:32:53.907359> app key disabled
2019-05-30T13:32:53.907792> valid app key: accept data
2019-05-30T13:32:53.908262> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:32:53.908679> python /app/data_acq/edgeCall.py "TC/94.88" "1,18,8,74,10,6,-45" "125,5,12" "2019-05-30T13:32:53.895" "B827EB1B65FD"
2019-05-30T13:33:01.052977> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:33:01.053629> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:33:01.054165> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:33:01.054695> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:33:01.055225> CloudEdge: not uploading
2019-05-30T13:33:01.261097> --> cloud end
2019-05-30T13:33:01.261499> 
2019-05-30T13:33:56.011433> --- rxlora. dst=1 type=0x12 src=8 seq=75 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:33:56.012312> 2019-05-30T13:33:56.010889
2019-05-30T13:33:56.013189> rcv ctrl pkt info (^p): 1,18,8,75,14,7,-41
2019-05-30T13:33:56.014507> splitted in: [1, 18, 8, 75, 14, 7, -41]
2019-05-30T13:33:56.015371> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=75 len=14 SNR=7 RSSI=-41)
2019-05-30T13:33:56.016328> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:33:56.017113> splitted in: [125, 5, 12]
2019-05-30T13:33:56.017668> (BW=125 CR=5 SF=12)
2019-05-30T13:33:56.018186> rcv timestamp (^t): 2019-05-30T13:33:56.007
2019-05-30T13:33:56.018629> 
2019-05-30T13:33:56.019098> Got first framing byte
2019-05-30T13:33:56.019515> --> got LoRa data prefix
2019-05-30T13:33:56.020154> --> DATA with_appkey: read app key sequence
2019-05-30T13:33:56.020656> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:33:56.021105> app key disabled
2019-05-30T13:33:56.021528> valid app key: accept data
2019-05-30T13:33:56.021863> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:33:56.022228> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,75,10,7,-41" "125,5,12" "2019-05-30T13:33:56.007" "B827EB1B65FD"
2019-05-30T13:34:03.286690> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:34:03.287424> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:34:03.287968> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:34:03.288499> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:34:03.289029> CloudEdge: not uploading
2019-05-30T13:34:03.471782> --> cloud end
2019-05-30T13:34:03.472194> 
2019-05-30T13:34:58.122049> --- rxlora. dst=1 type=0x12 src=8 seq=76 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:34:58.122500> 2019-05-30T13:34:58.121661
2019-05-30T13:34:58.122820> rcv ctrl pkt info (^p): 1,18,8,76,14,7,-42
2019-05-30T13:34:58.123122> splitted in: [1, 18, 8, 76, 14, 7, -42]
2019-05-30T13:34:58.123406> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=76 len=14 SNR=7 RSSI=-42)
2019-05-30T13:34:58.123705> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:34:58.123990> splitted in: [125, 5, 12]
2019-05-30T13:34:58.124271> (BW=125 CR=5 SF=12)
2019-05-30T13:34:58.124616> rcv timestamp (^t): 2019-05-30T13:34:58.118
2019-05-30T13:34:58.124968> 
2019-05-30T13:34:58.125330> Got first framing byte
2019-05-30T13:34:58.125632> --> got LoRa data prefix
2019-05-30T13:34:58.125937> --> DATA with_appkey: read app key sequence
2019-05-30T13:34:58.126222> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:34:58.126689> app key disabled
2019-05-30T13:34:58.127105> valid app key: accept data
2019-05-30T13:34:58.127453> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:34:58.127798> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,76,10,7,-42" "125,5,12" "2019-05-30T13:34:58.118" "B827EB1B65FD"
2019-05-30T13:35:05.354198> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:35:05.354915> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:35:05.355497> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:35:05.356065> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:35:05.356762> CloudEdge: not uploading
2019-05-30T13:35:05.563294> --> cloud end
2019-05-30T13:35:05.563767> 
2019-05-30T13:35:05.564061> Low-level gw status ON
2019-05-30T13:36:00.233030> --- rxlora. dst=1 type=0x12 src=8 seq=77 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:36:00.233621> 2019-05-30T13:36:00.232522
2019-05-30T13:36:00.234131> rcv ctrl pkt info (^p): 1,18,8,77,14,7,-42
2019-05-30T13:36:00.234635> splitted in: [1, 18, 8, 77, 14, 7, -42]
2019-05-30T13:36:00.235756> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=77 len=14 SNR=7 RSSI=-42)
2019-05-30T13:36:00.236279> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:36:00.236847> splitted in: [125, 5, 12]
2019-05-30T13:36:00.237340> (BW=125 CR=5 SF=12)
2019-05-30T13:36:00.237733> rcv timestamp (^t): 2019-05-30T13:36:00.229
2019-05-30T13:36:00.238191> 
2019-05-30T13:36:00.238705> Got first framing byte
2019-05-30T13:36:00.239150> --> got LoRa data prefix
2019-05-30T13:36:00.239599> --> DATA with_appkey: read app key sequence
2019-05-30T13:36:00.240025> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:36:00.240421> app key disabled
2019-05-30T13:36:00.240774> valid app key: accept data
2019-05-30T13:36:00.241134> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:36:00.241484> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,77,10,7,-42" "125,5,12" "2019-05-30T13:36:00.229" "B827EB1B65FD"
2019-05-30T13:36:07.413734> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:36:07.414405> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:36:07.414945> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:36:07.415485> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:36:07.416015> CloudEdge: not uploading
2019-05-30T13:36:07.585868> --> cloud end
2019-05-30T13:36:07.586245> 
2019-05-30T13:37:02.345142> --- rxlora. dst=1 type=0x12 src=8 seq=78 len=14 SNR=6 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:37:02.345611> 2019-05-30T13:37:02.342211
2019-05-30T13:37:02.345940> rcv ctrl pkt info (^p): 1,18,8,78,14,6,-42
2019-05-30T13:37:02.346237> splitted in: [1, 18, 8, 78, 14, 6, -42]
2019-05-30T13:37:02.346519> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=78 len=14 SNR=6 RSSI=-42)
2019-05-30T13:37:02.347026> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:37:02.347384> splitted in: [125, 5, 12]
2019-05-30T13:37:02.347738> (BW=125 CR=5 SF=12)
2019-05-30T13:37:02.348068> rcv timestamp (^t): 2019-05-30T13:37:02.338
2019-05-30T13:37:02.348463> 
2019-05-30T13:37:02.348836> Got first framing byte
2019-05-30T13:37:02.349252> --> got LoRa data prefix
2019-05-30T13:37:02.349603> --> DATA with_appkey: read app key sequence
2019-05-30T13:37:02.349945> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:37:02.350270> app key disabled
2019-05-30T13:37:02.350634> valid app key: accept data
2019-05-30T13:37:02.351088> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:37:02.351409> python /app/data_acq/edgeCall.py "TC/95.00" "1,18,8,78,10,6,-42" "125,5,12" "2019-05-30T13:37:02.338" "B827EB1B65FD"
2019-05-30T13:37:09.511947> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:37:09.512621> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:37:09.513163> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:37:09.513702> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:37:09.514230> CloudEdge: not uploading
2019-05-30T13:37:09.731297> --> cloud end
2019-05-30T13:37:09.731687> 
2019-05-30T13:38:04.454767> --- rxlora. dst=1 type=0x12 src=8 seq=79 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:38:04.455181> 2019-05-30T13:38:04.451884
2019-05-30T13:38:04.455455> rcv ctrl pkt info (^p): 1,18,8,79,14,6,-43
2019-05-30T13:38:04.455726> splitted in: [1, 18, 8, 79, 14, 6, -43]
2019-05-30T13:38:04.455991> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=79 len=14 SNR=6 RSSI=-43)
2019-05-30T13:38:04.456255> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:38:04.456517> splitted in: [125, 5, 12]
2019-05-30T13:38:04.456974> (BW=125 CR=5 SF=12)
2019-05-30T13:38:04.457303> rcv timestamp (^t): 2019-05-30T13:38:04.448
2019-05-30T13:38:04.457599> 
2019-05-30T13:38:04.457900> Got first framing byte
2019-05-30T13:38:04.458196> --> got LoRa data prefix
2019-05-30T13:38:04.458480> --> DATA with_appkey: read app key sequence
2019-05-30T13:38:04.458766> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:38:04.459093> app key disabled
2019-05-30T13:38:04.459429> valid app key: accept data
2019-05-30T13:38:04.459769> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:38:04.460094> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,79,10,6,-43" "125,5,12" "2019-05-30T13:38:04.448" "B827EB1B65FD"
2019-05-30T13:38:11.629662> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:38:11.630332> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:38:11.630869> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:38:11.631417> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:38:11.631958> CloudEdge: not uploading
2019-05-30T13:38:11.819927> --> cloud end
2019-05-30T13:38:11.820300> 
2019-05-30T13:38:26.687808> 2019-05-30 13:38:26.686709
2019-05-30T13:38:26.688501> post status: gw ON
2019-05-30T13:38:26.689063> post status: executing periodic tasks
2019-05-30T13:38:27.787792> no timezone support, time will be expressed only in local time
2019-05-30T13:38:27.788285> post status: start running
2019-05-30T13:38:28.900291> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:38:28.900710> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:38:28.901029> get_gps.py: invalid serial port
2019-05-30T13:38:29.052680> post status: dynamic GPS is requested
2019-05-30T13:38:29.053175> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:38:29.053534> post status get GPS: no GPS coordinates
2019-05-30T13:38:29.053841> post status: show current GPS position
2019-05-30T13:38:29.054134> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:38:29.055197> post status: exiting
2019-05-30T13:39:06.563998> --- rxlora. dst=1 type=0x12 src=8 seq=80 len=14 SNR=6 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-05-30T13:39:06.564417> 2019-05-30T13:39:06.561093
2019-05-30T13:39:06.564702> rcv ctrl pkt info (^p): 1,18,8,80,14,6,-45
2019-05-30T13:39:06.564977> splitted in: [1, 18, 8, 80, 14, 6, -45]
2019-05-30T13:39:06.565246> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=80 len=14 SNR=6 RSSI=-45)
2019-05-30T13:39:06.565514> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:39:06.565783> splitted in: [125, 5, 12]
2019-05-30T13:39:06.566053> (BW=125 CR=5 SF=12)
2019-05-30T13:39:06.566321> rcv timestamp (^t): 2019-05-30T13:39:06.557
2019-05-30T13:39:06.566679> 
2019-05-30T13:39:06.567029> Got first framing byte
2019-05-30T13:39:06.567404> --> got LoRa data prefix
2019-05-30T13:39:06.567792> --> DATA with_appkey: read app key sequence
2019-05-30T13:39:06.568173> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:39:06.568889> app key disabled
2019-05-30T13:39:06.569616> valid app key: accept data
2019-05-30T13:39:06.570114> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:39:06.570459> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,80,10,6,-45" "125,5,12" "2019-05-30T13:39:06.557" "B827EB1B65FD"
2019-05-30T13:39:13.747142> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:39:13.747838> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:39:13.748462> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:39:13.749002> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:39:13.749534> CloudEdge: not uploading
2019-05-30T13:39:13.951052> --> cloud end
2019-05-30T13:39:13.951417> 
2019-05-30T13:40:08.673295> --- rxlora. dst=1 type=0x12 src=8 seq=81 len=14 SNR=6 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:40:08.673870> 2019-05-30T13:40:08.670252
2019-05-30T13:40:08.674292> rcv ctrl pkt info (^p): 1,18,8,81,14,6,-43
2019-05-30T13:40:08.674690> splitted in: [1, 18, 8, 81, 14, 6, -43]
2019-05-30T13:40:08.675085> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=81 len=14 SNR=6 RSSI=-43)
2019-05-30T13:40:08.675558> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:40:08.675958> splitted in: [125, 5, 12]
2019-05-30T13:40:08.676426> (BW=125 CR=5 SF=12)
2019-05-30T13:40:08.676923> rcv timestamp (^t): 2019-05-30T13:40:08.666
2019-05-30T13:40:08.677464> 
2019-05-30T13:40:08.677925> Got first framing byte
2019-05-30T13:40:08.678378> --> got LoRa data prefix
2019-05-30T13:40:08.678817> --> DATA with_appkey: read app key sequence
2019-05-30T13:40:08.679319> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:40:08.679909> app key disabled
2019-05-30T13:40:08.680307> valid app key: accept data
2019-05-30T13:40:08.680778> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:40:08.681133> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,81,10,6,-43" "125,5,12" "2019-05-30T13:40:08.666" "B827EB1B65FD"
2019-05-30T13:40:15.784141> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:40:15.784546> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:40:15.784830> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:40:15.785102> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:40:15.785372> CloudEdge: not uploading
2019-05-30T13:40:15.966042> --> cloud end
2019-05-30T13:40:15.966465> 
2019-05-30T13:41:10.782166> --- rxlora. dst=1 type=0x12 src=8 seq=82 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:41:10.782629> 2019-05-30T13:41:10.781766
2019-05-30T13:41:10.782944> rcv ctrl pkt info (^p): 1,18,8,82,14,6,-41
2019-05-30T13:41:10.783244> splitted in: [1, 18, 8, 82, 14, 6, -41]
2019-05-30T13:41:10.783522> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=82 len=14 SNR=6 RSSI=-41)
2019-05-30T13:41:10.783799> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:41:10.784079> splitted in: [125, 5, 12]
2019-05-30T13:41:10.784430> (BW=125 CR=5 SF=12)
2019-05-30T13:41:10.784763> rcv timestamp (^t): 2019-05-30T13:41:10.775
2019-05-30T13:41:10.785063> 
2019-05-30T13:41:10.785418> Got first framing byte
2019-05-30T13:41:10.785724> --> got LoRa data prefix
2019-05-30T13:41:10.786004> --> DATA with_appkey: read app key sequence
2019-05-30T13:41:10.786303> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:41:10.786850> app key disabled
2019-05-30T13:41:10.787306> valid app key: accept data
2019-05-30T13:41:10.787652> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:41:10.788033> python /app/data_acq/edgeCall.py "TC/95.07" "1,18,8,82,10,6,-41" "125,5,12" "2019-05-30T13:41:10.775" "B827EB1B65FD"
2019-05-30T13:41:18.142177> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:41:18.142855> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:41:18.143402> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:41:18.143938> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:41:18.144474> CloudEdge: not uploading
2019-05-30T13:41:18.350374> --> cloud end
2019-05-30T13:41:18.350856> 
2019-05-30T13:42:12.887170> --- rxlora. dst=1 type=0x12 src=8 seq=83 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T13:42:12.887692> 2019-05-30T13:42:12.886355
2019-05-30T13:42:12.888038> rcv ctrl pkt info (^p): 1,18,8,83,14,6,-39
2019-05-30T13:42:12.888326> splitted in: [1, 18, 8, 83, 14, 6, -39]
2019-05-30T13:42:12.888607> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=83 len=14 SNR=6 RSSI=-39)
2019-05-30T13:42:12.888942> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:42:12.889215> splitted in: [125, 5, 12]
2019-05-30T13:42:12.889482> (BW=125 CR=5 SF=12)
2019-05-30T13:42:12.889817> rcv timestamp (^t): 2019-05-30T13:42:12.883
2019-05-30T13:42:12.890133> 
2019-05-30T13:42:12.890419> Got first framing byte
2019-05-30T13:42:12.890706> --> got LoRa data prefix
2019-05-30T13:42:12.890997> --> DATA with_appkey: read app key sequence
2019-05-30T13:42:12.891277> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:42:12.891555> app key disabled
2019-05-30T13:42:12.891902> valid app key: accept data
2019-05-30T13:42:12.892238> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:42:12.892658> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,83,10,6,-39" "125,5,12" "2019-05-30T13:42:12.883" "B827EB1B65FD"
2019-05-30T13:42:20.143922> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:42:20.144651> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:42:20.154428> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:42:20.155309> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:42:20.156005> CloudEdge: not uploading
2019-05-30T13:42:20.363577> --> cloud end
2019-05-30T13:42:20.363958> 
2019-05-30T13:43:14.994873> --- rxlora. dst=1 type=0x12 src=8 seq=84 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:43:14.995405> 2019-05-30T13:43:14.991938
2019-05-30T13:43:14.995735> rcv ctrl pkt info (^p): 1,18,8,84,14,7,-41
2019-05-30T13:43:14.996007> splitted in: [1, 18, 8, 84, 14, 7, -41]
2019-05-30T13:43:14.996288> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=84 len=14 SNR=7 RSSI=-41)
2019-05-30T13:43:14.996643> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:43:14.997032> splitted in: [125, 5, 12]
2019-05-30T13:43:14.997353> (BW=125 CR=5 SF=12)
2019-05-30T13:43:14.997645> rcv timestamp (^t): 2019-05-30T13:43:14.988
2019-05-30T13:43:14.997952> 
2019-05-30T13:43:14.998246> Got first framing byte
2019-05-30T13:43:14.998547> --> got LoRa data prefix
2019-05-30T13:43:14.998837> --> DATA with_appkey: read app key sequence
2019-05-30T13:43:14.999161> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:43:14.999500> app key disabled
2019-05-30T13:43:14.999846> valid app key: accept data
2019-05-30T13:43:15.000166> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:43:15.000569> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,84,10,7,-41" "125,5,12" "2019-05-30T13:43:14.988" "B827EB1B65FD"
2019-05-30T13:43:22.277145> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:43:22.277878> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:43:22.278443> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:43:22.278985> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:43:22.279526> CloudEdge: not uploading
2019-05-30T13:43:22.476909> --> cloud end
2019-05-30T13:43:22.477296> 
2019-05-30T13:44:17.098140> --- rxlora. dst=1 type=0x12 src=8 seq=85 len=14 SNR=7 RSSIpkt=-42 BW=125 CR=4/5 SF=12
2019-05-30T13:44:17.098719> 2019-05-30T13:44:17.097455
2019-05-30T13:44:17.099246> rcv ctrl pkt info (^p): 1,18,8,85,14,7,-42
2019-05-30T13:44:17.099625> splitted in: [1, 18, 8, 85, 14, 7, -42]
2019-05-30T13:44:17.100023> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=85 len=14 SNR=7 RSSI=-42)
2019-05-30T13:44:17.100466> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:44:17.100908> splitted in: [125, 5, 12]
2019-05-30T13:44:17.101248> (BW=125 CR=5 SF=12)
2019-05-30T13:44:17.101667> rcv timestamp (^t): 2019-05-30T13:44:17.094
2019-05-30T13:44:17.102011> 
2019-05-30T13:44:17.102404> Got first framing byte
2019-05-30T13:44:17.102836> --> got LoRa data prefix
2019-05-30T13:44:17.103283> --> DATA with_appkey: read app key sequence
2019-05-30T13:44:17.103734> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:44:17.104177> app key disabled
2019-05-30T13:44:17.104670> valid app key: accept data
2019-05-30T13:44:17.105087> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:44:17.105456> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,85,10,7,-42" "125,5,12" "2019-05-30T13:44:17.094" "B827EB1B65FD"
2019-05-30T13:44:24.292103> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:44:24.292844> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:44:24.293511> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:44:24.294149> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:44:24.294753> CloudEdge: not uploading
2019-05-30T13:44:24.497248> --> cloud end
2019-05-30T13:44:24.497631> 
2019-05-30T13:45:19.205733> --- rxlora. dst=1 type=0x12 src=8 seq=86 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:45:19.206223> 2019-05-30T13:45:19.202835
2019-05-30T13:45:19.206688> rcv ctrl pkt info (^p): 1,18,8,86,14,7,-40
2019-05-30T13:45:19.207065> splitted in: [1, 18, 8, 86, 14, 7, -40]
2019-05-30T13:45:19.207388> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=86 len=14 SNR=7 RSSI=-40)
2019-05-30T13:45:19.207684> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:45:19.207966> splitted in: [125, 5, 12]
2019-05-30T13:45:19.208291> (BW=125 CR=5 SF=12)
2019-05-30T13:45:19.208637> rcv timestamp (^t): 2019-05-30T13:45:19.199
2019-05-30T13:45:19.208983> 
2019-05-30T13:45:19.209319> Got first framing byte
2019-05-30T13:45:19.209650> --> got LoRa data prefix
2019-05-30T13:45:19.210017> --> DATA with_appkey: read app key sequence
2019-05-30T13:45:19.210365> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:45:19.210712> app key disabled
2019-05-30T13:45:19.211049> valid app key: accept data
2019-05-30T13:45:19.211395> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:45:19.211729> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,86,10,7,-40" "125,5,12" "2019-05-30T13:45:19.199" "B827EB1B65FD"
2019-05-30T13:45:26.636692> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:45:26.637120> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:45:26.637436> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:45:26.637767> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:45:26.638049> CloudEdge: not uploading
2019-05-30T13:45:26.811481> --> cloud end
2019-05-30T13:45:26.812051> 
2019-05-30T13:45:26.812464> Low-level gw status ON
2019-05-30T13:46:21.308325> --- rxlora. dst=1 type=0x12 src=8 seq=87 len=14 SNR=5 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T13:46:21.308775> 2019-05-30T13:46:21.307806
2019-05-30T13:46:21.309161> rcv ctrl pkt info (^p): 1,18,8,87,14,5,-39
2019-05-30T13:46:21.309490> splitted in: [1, 18, 8, 87, 14, 5, -39]
2019-05-30T13:46:21.309815> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=87 len=14 SNR=5 RSSI=-39)
2019-05-30T13:46:21.310107> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:46:21.310450> splitted in: [125, 5, 12]
2019-05-30T13:46:21.310782> (BW=125 CR=5 SF=12)
2019-05-30T13:46:21.311091> rcv timestamp (^t): 2019-05-30T13:46:21.304
2019-05-30T13:46:21.311384> 
2019-05-30T13:46:21.311739> Got first framing byte
2019-05-30T13:46:21.312042> --> got LoRa data prefix
2019-05-30T13:46:21.312355> --> DATA with_appkey: read app key sequence
2019-05-30T13:46:21.312695> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:46:21.313039> app key disabled
2019-05-30T13:46:21.313392> valid app key: accept data
2019-05-30T13:46:21.313753> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:46:21.314113> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,87,10,5,-39" "125,5,12" "2019-05-30T13:46:21.304" "B827EB1B65FD"
2019-05-30T13:46:28.444199> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:46:28.444871> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:46:28.445418> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:46:28.445964> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:46:28.446498> CloudEdge: not uploading
2019-05-30T13:46:28.646836> --> cloud end
2019-05-30T13:46:28.653490> 
2019-05-30T13:47:23.413183> --- rxlora. dst=1 type=0x12 src=8 seq=88 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T13:47:23.413934> 2019-05-30T13:47:23.412490
2019-05-30T13:47:23.414468> rcv ctrl pkt info (^p): 1,18,8,88,14,6,-39
2019-05-30T13:47:23.414867> splitted in: [1, 18, 8, 88, 14, 6, -39]
2019-05-30T13:47:23.415304> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=88 len=14 SNR=6 RSSI=-39)
2019-05-30T13:47:23.415851> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:47:23.416316> splitted in: [125, 5, 12]
2019-05-30T13:47:23.417279> (BW=125 CR=5 SF=12)
2019-05-30T13:47:23.424623> rcv timestamp (^t): 2019-05-30T13:47:23.408
2019-05-30T13:47:23.425400> 
2019-05-30T13:47:23.426197> Got first framing byte
2019-05-30T13:47:23.427274> --> got LoRa data prefix
2019-05-30T13:47:23.428827> --> DATA with_appkey: read app key sequence
2019-05-30T13:47:23.430063> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:47:23.431175> app key disabled
2019-05-30T13:47:23.432034> valid app key: accept data
2019-05-30T13:47:23.432774> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:47:23.433653> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,88,10,6,-39" "125,5,12" "2019-05-30T13:47:23.408" "B827EB1B65FD"
2019-05-30T13:47:30.651775> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:47:30.652451> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:47:30.652996> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:47:30.653537> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:47:30.654074> CloudEdge: not uploading
2019-05-30T13:47:30.863914> --> cloud end
2019-05-30T13:47:30.864278> 
2019-05-30T13:48:25.521049> --- rxlora. dst=1 type=0x12 src=8 seq=89 len=14 SNR=6 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T13:48:25.521546> 2019-05-30T13:48:25.518107
2019-05-30T13:48:25.521879> rcv ctrl pkt info (^p): 1,18,8,89,14,6,-38
2019-05-30T13:48:25.522185> splitted in: [1, 18, 8, 89, 14, 6, -38]
2019-05-30T13:48:25.522481> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=89 len=14 SNR=6 RSSI=-38)
2019-05-30T13:48:25.522811> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:48:25.523153> splitted in: [125, 5, 12]
2019-05-30T13:48:25.523501> (BW=125 CR=5 SF=12)
2019-05-30T13:48:25.523812> rcv timestamp (^t): 2019-05-30T13:48:25.514
2019-05-30T13:48:25.524151> 
2019-05-30T13:48:25.524442> Got first framing byte
2019-05-30T13:48:25.524712> --> got LoRa data prefix
2019-05-30T13:48:25.524975> --> DATA with_appkey: read app key sequence
2019-05-30T13:48:25.525239> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:48:25.525501> app key disabled
2019-05-30T13:48:25.525768> valid app key: accept data
2019-05-30T13:48:25.526030> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:48:25.526295> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,89,10,6,-38" "125,5,12" "2019-05-30T13:48:25.514" "B827EB1B65FD"
2019-05-30T13:48:29.261264> 2019-05-30 13:48:29.260046
2019-05-30T13:48:29.261967> post status: gw ON
2019-05-30T13:48:29.262527> post status: executing periodic tasks
2019-05-30T13:48:30.309533> no timezone support, time will be expressed only in local time
2019-05-30T13:48:30.309949> post status: start running
2019-05-30T13:48:31.428656> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:48:31.429206> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:48:31.429602> get_gps.py: invalid serial port
2019-05-30T13:48:31.571104> post status: dynamic GPS is requested
2019-05-30T13:48:31.571565> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:48:31.572031> post status get GPS: no GPS coordinates
2019-05-30T13:48:31.572407> post status: show current GPS position
2019-05-30T13:48:31.572779> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:48:31.573111> post status: exiting
2019-05-30T13:48:32.800825> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:48:32.801483> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:48:32.802026> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:48:32.802564> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:48:32.803096> CloudEdge: not uploading
2019-05-30T13:48:33.003120> --> cloud end
2019-05-30T13:48:33.003718> 
2019-05-30T13:49:27.625942> --- rxlora. dst=1 type=0x12 src=8 seq=90 len=14 SNR=5 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:49:27.626520> 2019-05-30T13:49:27.622915
2019-05-30T13:49:27.627144> rcv ctrl pkt info (^p): 1,18,8,90,14,5,-40
2019-05-30T13:49:27.627555> splitted in: [1, 18, 8, 90, 14, 5, -40]
2019-05-30T13:49:27.627970> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=90 len=14 SNR=5 RSSI=-40)
2019-05-30T13:49:27.628421> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:49:27.628857> splitted in: [125, 5, 12]
2019-05-30T13:49:27.629329> (BW=125 CR=5 SF=12)
2019-05-30T13:49:27.629830> rcv timestamp (^t): 2019-05-30T13:49:27.619
2019-05-30T13:49:27.630268> 
2019-05-30T13:49:27.630715> Got first framing byte
2019-05-30T13:49:27.631108> --> got LoRa data prefix
2019-05-30T13:49:27.631669> --> DATA with_appkey: read app key sequence
2019-05-30T13:49:27.632186> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:49:27.632591> app key disabled
2019-05-30T13:49:27.632989> valid app key: accept data
2019-05-30T13:49:27.633444> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:49:27.634123> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,90,10,5,-40" "125,5,12" "2019-05-30T13:49:27.619" "B827EB1B65FD"
2019-05-30T13:49:34.815983> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:49:34.816797> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:49:34.817398> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:49:34.817946> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:49:34.818482> CloudEdge: not uploading
2019-05-30T13:49:35.019394> --> cloud end
2019-05-30T13:49:35.019762> 
2019-05-30T13:50:29.729134> --- rxlora. dst=1 type=0x12 src=8 seq=91 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:50:29.729700> 2019-05-30T13:50:29.728531
2019-05-30T13:50:29.733808> rcv ctrl pkt info (^p): 1,18,8,91,14,6,-40
2019-05-30T13:50:29.734273> splitted in: [1, 18, 8, 91, 14, 6, -40]
2019-05-30T13:50:29.734684> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=91 len=14 SNR=6 RSSI=-40)
2019-05-30T13:50:29.735089> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:50:29.735470> splitted in: [125, 5, 12]
2019-05-30T13:50:29.735821> (BW=125 CR=5 SF=12)
2019-05-30T13:50:29.736183> rcv timestamp (^t): 2019-05-30T13:50:29.725
2019-05-30T13:50:29.736810> 
2019-05-30T13:50:29.737734> Got first framing byte
2019-05-30T13:50:29.738211> --> got LoRa data prefix
2019-05-30T13:50:29.738672> --> DATA with_appkey: read app key sequence
2019-05-30T13:50:29.739036> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:50:29.739347> app key disabled
2019-05-30T13:50:29.739741> valid app key: accept data
2019-05-30T13:50:29.740054> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:50:29.740389> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,91,10,6,-40" "125,5,12" "2019-05-30T13:50:29.725" "B827EB1B65FD"
2019-05-30T13:50:36.891201> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:50:36.892063> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:50:36.892648> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:50:36.893190> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:50:36.893917> CloudEdge: not uploading
2019-05-30T13:50:37.084995> --> cloud end
2019-05-30T13:50:37.085373> 
2019-05-30T13:51:31.837225> --- rxlora. dst=1 type=0x12 src=8 seq=92 len=14 SNR=8 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:51:31.837821> 2019-05-30T13:51:31.834177
2019-05-30T13:51:31.844935> rcv ctrl pkt info (^p): 1,18,8,92,14,8,-40
2019-05-30T13:51:31.845396> splitted in: [1, 18, 8, 92, 14, 8, -40]
2019-05-30T13:51:31.845743> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=92 len=14 SNR=8 RSSI=-40)
2019-05-30T13:51:31.846097> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:51:31.846422> splitted in: [125, 5, 12]
2019-05-30T13:51:31.846913> (BW=125 CR=5 SF=12)
2019-05-30T13:51:31.847236> rcv timestamp (^t): 2019-05-30T13:51:31.830
2019-05-30T13:51:31.847613> 
2019-05-30T13:51:31.847995> Got first framing byte
2019-05-30T13:51:31.848293> --> got LoRa data prefix
2019-05-30T13:51:31.848581> --> DATA with_appkey: read app key sequence
2019-05-30T13:51:31.848864> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:51:31.849145> app key disabled
2019-05-30T13:51:31.849468> valid app key: accept data
2019-05-30T13:51:31.849784> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:51:31.850058> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,92,10,8,-40" "125,5,12" "2019-05-30T13:51:31.830" "B827EB1B65FD"
2019-05-30T13:51:38.978676> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:51:38.979355> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:51:38.979894> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:51:38.980423> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:51:38.980956> CloudEdge: not uploading
2019-05-30T13:51:39.188971> --> cloud end
2019-05-30T13:51:39.189345> 
2019-05-30T13:52:33.941601> --- rxlora. dst=1 type=0x12 src=8 seq=93 len=14 SNR=6 RSSIpkt=-39 BW=125 CR=4/5 SF=12
2019-05-30T13:52:33.942071> 2019-05-30T13:52:33.941108
2019-05-30T13:52:33.942427> rcv ctrl pkt info (^p): 1,18,8,93,14,6,-39
2019-05-30T13:52:33.942766> splitted in: [1, 18, 8, 93, 14, 6, -39]
2019-05-30T13:52:33.943067> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=93 len=14 SNR=6 RSSI=-39)
2019-05-30T13:52:33.943366> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:52:33.943704> splitted in: [125, 5, 12]
2019-05-30T13:52:33.944035> (BW=125 CR=5 SF=12)
2019-05-30T13:52:33.944337> rcv timestamp (^t): 2019-05-30T13:52:33.935
2019-05-30T13:52:33.944623> 
2019-05-30T13:52:33.944990> Got first framing byte
2019-05-30T13:52:33.945302> --> got LoRa data prefix
2019-05-30T13:52:33.945592> --> DATA with_appkey: read app key sequence
2019-05-30T13:52:33.945924> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:52:33.946252> app key disabled
2019-05-30T13:52:33.946735> valid app key: accept data
2019-05-30T13:52:33.947132> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:52:33.947533> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,93,10,6,-39" "125,5,12" "2019-05-30T13:52:33.935" "B827EB1B65FD"
2019-05-30T13:52:41.181199> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:52:41.181871> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:52:41.182419> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:52:41.182961> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:52:41.183497> CloudEdge: not uploading
2019-05-30T13:52:41.381886> --> cloud end
2019-05-30T13:52:41.382525> 
2019-05-30T13:53:36.057141> --- rxlora. dst=1 type=0x12 src=8 seq=94 len=14 SNR=7 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:53:36.062822> 2019-05-30T13:53:36.050687
2019-05-30T13:53:36.063611> rcv ctrl pkt info (^p): 1,18,8,94,14,7,-41
2019-05-30T13:53:36.066349> splitted in: [1, 18, 8, 94, 14, 7, -41]
2019-05-30T13:53:36.067538> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=94 len=14 SNR=7 RSSI=-41)
2019-05-30T13:53:36.068130> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:53:36.070744> splitted in: [125, 5, 12]
2019-05-30T13:53:36.071583> (BW=125 CR=5 SF=12)
2019-05-30T13:53:36.072219> rcv timestamp (^t): 2019-05-30T13:53:36.041
2019-05-30T13:53:36.072762> 
2019-05-30T13:53:36.073294> Got first framing byte
2019-05-30T13:53:36.073816> --> got LoRa data prefix
2019-05-30T13:53:36.074341> --> DATA with_appkey: read app key sequence
2019-05-30T13:53:36.074924> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:53:36.075401> app key disabled
2019-05-30T13:53:36.075787> valid app key: accept data
2019-05-30T13:53:36.076143> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:53:36.076499> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,94,10,7,-41" "125,5,12" "2019-05-30T13:53:36.041" "B827EB1B65FD"
2019-05-30T13:53:43.547554> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:53:43.548072> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:53:43.548456> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:53:43.548857> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:53:43.549222> CloudEdge: not uploading
2019-05-30T13:53:43.769837> --> cloud end
2019-05-30T13:53:43.770249> 
2019-05-30T13:54:38.150636> --- rxlora. dst=1 type=0x12 src=8 seq=95 len=14 SNR=5 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:54:38.151092> 2019-05-30T13:54:38.150233
2019-05-30T13:54:38.151453> rcv ctrl pkt info (^p): 1,18,8,95,14,5,-41
2019-05-30T13:54:38.151769> splitted in: [1, 18, 8, 95, 14, 5, -41]
2019-05-30T13:54:38.152056> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=95 len=14 SNR=5 RSSI=-41)
2019-05-30T13:54:38.152337> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:54:38.152618> splitted in: [125, 5, 12]
2019-05-30T13:54:38.153005> (BW=125 CR=5 SF=12)
2019-05-30T13:54:38.153346> rcv timestamp (^t): 2019-05-30T13:54:38.146
2019-05-30T13:54:38.153639> 
2019-05-30T13:54:38.153995> Got first framing byte
2019-05-30T13:54:38.154305> --> got LoRa data prefix
2019-05-30T13:54:38.154590> --> DATA with_appkey: read app key sequence
2019-05-30T13:54:38.154913> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:54:38.155273> app key disabled
2019-05-30T13:54:38.155628> valid app key: accept data
2019-05-30T13:54:38.155962> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:54:38.156369> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,95,10,5,-41" "125,5,12" "2019-05-30T13:54:38.146" "B827EB1B65FD"
2019-05-30T13:54:45.426706> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:54:45.427477> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:54:45.428043> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:54:45.428610> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:54:45.429151> CloudEdge: not uploading
2019-05-30T13:54:45.625731> --> cloud end
2019-05-30T13:54:45.626208> 
2019-05-30T13:55:40.256322> --- rxlora. dst=1 type=0x12 src=8 seq=96 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:55:40.257000> 2019-05-30T13:55:40.255884
2019-05-30T13:55:40.257389> rcv ctrl pkt info (^p): 1,18,8,96,14,6,-40
2019-05-30T13:55:40.257988> splitted in: [1, 18, 8, 96, 14, 6, -40]
2019-05-30T13:55:40.258611> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=96 len=14 SNR=6 RSSI=-40)
2019-05-30T13:55:40.259092> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:55:40.259448> splitted in: [125, 5, 12]
2019-05-30T13:55:40.259770> (BW=125 CR=5 SF=12)
2019-05-30T13:55:40.260104> rcv timestamp (^t): 2019-05-30T13:55:40.252
2019-05-30T13:55:40.260421> 
2019-05-30T13:55:40.260802> Got first framing byte
2019-05-30T13:55:40.261170> --> got LoRa data prefix
2019-05-30T13:55:40.261546> --> DATA with_appkey: read app key sequence
2019-05-30T13:55:40.261930> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:55:40.262286> app key disabled
2019-05-30T13:55:40.262659> valid app key: accept data
2019-05-30T13:55:40.263036> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:55:40.263554> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,96,10,6,-40" "125,5,12" "2019-05-30T13:55:40.252" "B827EB1B65FD"
2019-05-30T13:55:47.450562> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:55:47.451244> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:55:47.451800> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:55:47.452341> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:55:47.452875> CloudEdge: not uploading
2019-05-30T13:55:47.650388> --> cloud end
2019-05-30T13:55:47.650803> 
2019-05-30T13:55:47.651076> Low-level gw status ON
2019-05-30T13:56:42.361739> --- rxlora. dst=1 type=0x12 src=8 seq=97 len=14 SNR=7 RSSIpkt=-43 BW=125 CR=4/5 SF=12
2019-05-30T13:56:42.362183> 2019-05-30T13:56:42.361347
2019-05-30T13:56:42.362511> rcv ctrl pkt info (^p): 1,18,8,97,14,7,-43
2019-05-30T13:56:42.362826> splitted in: [1, 18, 8, 97, 14, 7, -43]
2019-05-30T13:56:42.363116> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=97 len=14 SNR=7 RSSI=-43)
2019-05-30T13:56:42.363402> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:56:42.363745> splitted in: [125, 5, 12]
2019-05-30T13:56:42.364087> (BW=125 CR=5 SF=12)
2019-05-30T13:56:42.364407> rcv timestamp (^t): 2019-05-30T13:56:42.357
2019-05-30T13:56:42.364707> 
2019-05-30T13:56:42.365061> Got first framing byte
2019-05-30T13:56:42.365361> --> got LoRa data prefix
2019-05-30T13:56:42.365655> --> DATA with_appkey: read app key sequence
2019-05-30T13:56:42.365983> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:56:42.366319> app key disabled
2019-05-30T13:56:42.366823> valid app key: accept data
2019-05-30T13:56:42.367238> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:56:42.367649> python /app/data_acq/edgeCall.py "TC/95.33" "1,18,8,97,10,7,-43" "125,5,12" "2019-05-30T13:56:42.357" "B827EB1B65FD"
2019-05-30T13:56:49.528595> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:56:49.529281> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:56:49.529854> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:56:49.530390> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:56:49.530923> CloudEdge: not uploading
2019-05-30T13:56:49.715385> --> cloud end
2019-05-30T13:56:49.715825> 
2019-05-30T13:57:44.470327> --- rxlora. dst=1 type=0x12 src=8 seq=98 len=14 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T13:57:44.470797> 2019-05-30T13:57:44.467340
2019-05-30T13:57:44.471157> rcv ctrl pkt info (^p): 1,18,8,98,14,7,-40
2019-05-30T13:57:44.471455> splitted in: [1, 18, 8, 98, 14, 7, -40]
2019-05-30T13:57:44.471752> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=98 len=14 SNR=7 RSSI=-40)
2019-05-30T13:57:44.472182> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:57:44.472556> splitted in: [125, 5, 12]
2019-05-30T13:57:44.472915> (BW=125 CR=5 SF=12)
2019-05-30T13:57:44.473273> rcv timestamp (^t): 2019-05-30T13:57:44.463
2019-05-30T13:57:44.473580> 
2019-05-30T13:57:44.473848> Got first framing byte
2019-05-30T13:57:44.474117> --> got LoRa data prefix
2019-05-30T13:57:44.474386> --> DATA with_appkey: read app key sequence
2019-05-30T13:57:44.474653> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:57:44.474920> app key disabled
2019-05-30T13:57:44.475188> valid app key: accept data
2019-05-30T13:57:44.475456> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:57:44.475724> python /app/data_acq/edgeCall.py "TC/95.26" "1,18,8,98,10,7,-40" "125,5,12" "2019-05-30T13:57:44.463" "B827EB1B65FD"
2019-05-30T13:57:51.987435> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:57:51.987847> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:57:51.988121> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:57:51.988388> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:57:51.988655> CloudEdge: not uploading
2019-05-30T13:57:52.159911> --> cloud end
2019-05-30T13:57:52.160295> 
2019-05-30T13:58:31.748023> 2019-05-30 13:58:31.746771
2019-05-30T13:58:31.748709> post status: gw ON
2019-05-30T13:58:31.749299> post status: executing periodic tasks
2019-05-30T13:58:32.890336> no timezone support, time will be expressed only in local time
2019-05-30T13:58:32.890767> post status: start running
2019-05-30T13:58:34.117463> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T13:58:34.118318> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T13:58:34.119031> get_gps.py: invalid serial port
2019-05-30T13:58:34.288260> post status: dynamic GPS is requested
2019-05-30T13:58:34.290017> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T13:58:34.290676> post status get GPS: no GPS coordinates
2019-05-30T13:58:34.291238> post status: show current GPS position
2019-05-30T13:58:34.291794> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T13:58:34.292295> post status: exiting
2019-05-30T13:58:46.577997> --- rxlora. dst=1 type=0x12 src=8 seq=99 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:58:46.578573> 2019-05-30T13:58:46.574832
2019-05-30T13:58:46.578984> rcv ctrl pkt info (^p): 1,18,8,99,14,6,-41
2019-05-30T13:58:46.579464> splitted in: [1, 18, 8, 99, 14, 6, -41]
2019-05-30T13:58:46.579869> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=99 len=14 SNR=6 RSSI=-41)
2019-05-30T13:58:46.580330> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:58:46.580751> splitted in: [125, 5, 12]
2019-05-30T13:58:46.581217> (BW=125 CR=5 SF=12)
2019-05-30T13:58:46.581658> rcv timestamp (^t): 2019-05-30T13:58:46.571
2019-05-30T13:58:46.582158> 
2019-05-30T13:58:46.582562> Got first framing byte
2019-05-30T13:58:46.583014> --> got LoRa data prefix
2019-05-30T13:58:46.583395> --> DATA with_appkey: read app key sequence
2019-05-30T13:58:46.584002> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:58:46.584458> app key disabled
2019-05-30T13:58:46.584881> valid app key: accept data
2019-05-30T13:58:46.585264> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:58:46.585616> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,99,10,6,-41" "125,5,12" "2019-05-30T13:58:46.571" "B827EB1B65FD"
2019-05-30T13:58:53.767424> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:58:53.768117> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:58:53.768686> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:58:53.769234> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:58:53.769769> CloudEdge: not uploading
2019-05-30T13:58:53.957814> --> cloud end
2019-05-30T13:58:53.958175> 
2019-05-30T13:59:48.685231> --- rxlora. dst=1 type=0x12 src=8 seq=100 len=14 SNR=6 RSSIpkt=-41 BW=125 CR=4/5 SF=12
2019-05-30T13:59:48.685790> 2019-05-30T13:59:48.682163
2019-05-30T13:59:48.686237> rcv ctrl pkt info (^p): 1,18,8,100,14,6,-41
2019-05-30T13:59:48.686711> splitted in: [1, 18, 8, 100, 14, 6, -41]
2019-05-30T13:59:48.687233> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=100 len=14 SNR=6 RSSI=-41)
2019-05-30T13:59:48.687666> rcv ctrl radio info (^r): 125,5,12
2019-05-30T13:59:48.688134> splitted in: [125, 5, 12]
2019-05-30T13:59:48.688536> (BW=125 CR=5 SF=12)
2019-05-30T13:59:48.689032> rcv timestamp (^t): 2019-05-30T13:59:48.678
2019-05-30T13:59:48.689440> 
2019-05-30T13:59:48.689812> Got first framing byte
2019-05-30T13:59:48.690151> --> got LoRa data prefix
2019-05-30T13:59:48.690499> --> DATA with_appkey: read app key sequence
2019-05-30T13:59:48.690825> app key is 0x05 0x06 0x07 0x08
2019-05-30T13:59:48.691286> app key disabled
2019-05-30T13:59:48.691653> valid app key: accept data
2019-05-30T13:59:48.691964> uploading with python /app/data_acq/edgeCall.py
2019-05-30T13:59:48.692318> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,100,10,6,-41" "125,5,12" "2019-05-30T13:59:48.678" "B827EB1B65FD"
2019-05-30T13:59:55.918290> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:59:55.918969> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:59:55.919516> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:59:55.920058> Edge: server unavailable, retrying to connect soon...
2019-05-30T13:59:55.920593> CloudEdge: not uploading
2019-05-30T13:59:56.129487> --> cloud end
2019-05-30T13:59:56.129899> 
2019-05-30T14:00:50.793746> --- rxlora. dst=1 type=0x12 src=8 seq=101 len=14 SNR=6 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-05-30T14:00:50.794283> 2019-05-30T14:00:50.790313
2019-05-30T14:00:50.794625> rcv ctrl pkt info (^p): 1,18,8,101,14,6,-40
2019-05-30T14:00:50.794956> splitted in: [1, 18, 8, 101, 14, 6, -40]
2019-05-30T14:00:50.795292> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=101 len=14 SNR=6 RSSI=-40)
2019-05-30T14:00:50.795646> rcv ctrl radio info (^r): 125,5,12
2019-05-30T14:00:50.795989> splitted in: [125, 5, 12]
2019-05-30T14:00:50.796361> (BW=125 CR=5 SF=12)
2019-05-30T14:00:50.797535> rcv timestamp (^t): 2019-05-30T14:00:50.786
2019-05-30T14:00:50.798125> 
2019-05-30T14:00:50.798518> Got first framing byte
2019-05-30T14:00:50.798972> --> got LoRa data prefix
2019-05-30T14:00:50.799431> --> DATA with_appkey: read app key sequence
2019-05-30T14:00:50.799752> app key is 0x05 0x06 0x07 0x08
2019-05-30T14:00:50.800128> app key disabled
2019-05-30T14:00:50.800490> valid app key: accept data
2019-05-30T14:00:50.800775> uploading with python /app/data_acq/edgeCall.py
2019-05-30T14:00:50.801060> python /app/data_acq/edgeCall.py "TC/95.20" "1,18,8,101,10,6,-40" "125,5,12" "2019-05-30T14:00:50.786" "B827EB1B65FD"
2019-05-30T14:00:57.974367> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:00:57.975040> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:00:57.975658> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:00:57.976253> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:00:57.977009> CloudEdge: not uploading
2019-05-30T14:00:58.186826> --> cloud end
2019-05-30T14:00:58.187203> 
2019-05-30T14:01:52.896948> --- rxlora. dst=1 type=0x12 src=8 seq=102 len=14 SNR=5 RSSIpkt=-38 BW=125 CR=4/5 SF=12
2019-05-30T14:01:52.897438> 2019-05-30T14:01:52.893868
2019-05-30T14:01:52.897771> rcv ctrl pkt info (^p): 1,18,8,102,14,5,-38
2019-05-30T14:01:52.898075> splitted in: [1, 18, 8, 102, 14, 5, -38]
2019-05-30T14:01:52.898363> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=102 len=14 SNR=5 RSSI=-38)
2019-05-30T14:01:52.898696> rcv ctrl radio info (^r): 125,5,12
2019-05-30T14:01:52.899053> splitted in: [125, 5, 12]
2019-05-30T14:01:52.899403> (BW=125 CR=5 SF=12)
2019-05-30T14:01:52.899736> rcv timestamp (^t): 2019-05-30T14:01:52.890
2019-05-30T14:01:52.900137> 
2019-05-30T14:01:52.900507> Got first framing byte
2019-05-30T14:01:52.900856> --> got LoRa data prefix
2019-05-30T14:01:52.901195> --> DATA with_appkey: read app key sequence
2019-05-30T14:01:52.901553> app key is 0x05 0x06 0x07 0x08
2019-05-30T14:01:52.901876> app key disabled
2019-05-30T14:01:52.902284> valid app key: accept data
2019-05-30T14:01:52.902722> uploading with python /app/data_acq/edgeCall.py
2019-05-30T14:01:52.903030> python /app/data_acq/edgeCall.py "TC/95.13" "1,18,8,102,10,5,-38" "125,5,12" "2019-05-30T14:01:52.890" "B827EB1B65FD"
2019-05-30T14:02:00.073198> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:02:00.073879> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:02:00.074422> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:02:00.074961> Edge: server unavailable, retrying to connect soon...
2019-05-30T14:02:00.075511> CloudEdge: not uploading
2019-05-30T14:02:00.298274> --> cloud end
2019-05-30T14:02:00.298691> 
2019-05-30T14:07:47.638247> no timezone support, time will be expressed only in local time
2019-05-30T14:07:47.641233> post_processing_gw.py found an alert_conf section
2019-05-30T14:07:47.641824> Starting thread to perform periodic gw status/tasks
2019-05-30T14:07:47.642441> 2019-05-30 14:07:47.637003
2019-05-30T14:07:47.642827> post status: gw ON
2019-05-30T14:07:47.643252> post status: executing periodic tasks
2019-05-30T14:07:48.639029> 
2019-05-30T14:07:48.639424> Current working directory: /
2019-05-30T14:07:48.640037> SX1276 detected, starting.
2019-05-30T14:07:48.641155> SX1276 LF/HF calibration
2019-05-30T14:07:48.641622> ...
2019-05-30T14:07:48.642184> **********Power ON: state 0
2019-05-30T14:07:48.642529> Default sync word: 0x12
2019-05-30T14:07:48.642820> LoRa mode 2
2019-05-30T14:07:48.643163> Setting mode: state 0
2019-05-30T14:07:48.643444> Frequency 865.200000: state 0
2019-05-30T14:07:48.643718> Use PA_BOOST amplifier line
2019-05-30T14:07:48.643986> Set LoRa power dBm to 14
2019-05-30T14:07:48.644260> Power: state 0
2019-05-30T14:07:48.644534> Get Preamble Length: state 0
2019-05-30T14:07:48.644820> Preamble Length: 8
2019-05-30T14:07:48.645089> LoRa addr 1: state 0
2019-05-30T14:07:48.645357> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-30T14:07:48.645637> Low-level gw status ON
2019-05-30T14:07:48.701616> no timezone support, time will be expressed only in local time
2019-05-30T14:07:48.702207> post status: start running
2019-05-30T14:07:49.768832> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T14:07:49.769401> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T14:07:49.769917> get_gps.py: invalid serial port
2019-05-30T14:07:49.910248> post status: dynamic GPS is requested
2019-05-30T14:07:49.910671> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T14:07:49.911028> post status get GPS: no GPS coordinates
2019-05-30T14:07:49.911323> post status: show current GPS position
2019-05-30T14:07:49.911604> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T14:07:49.912033> post status: exiting
2019-05-30T14:17:50.137768> 2019-05-30 14:17:50.135481
2019-05-30T14:17:50.138296> post status: gw ON
2019-05-30T14:17:50.138713> post status: executing periodic tasks
2019-05-30T14:17:51.221628> no timezone support, time will be expressed only in local time
2019-05-30T14:17:51.222140> post status: start running
2019-05-30T14:17:52.240001> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T14:17:52.240570> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T14:17:52.241091> get_gps.py: invalid serial port
2019-05-30T14:17:52.386348> post status: dynamic GPS is requested
2019-05-30T14:17:52.386758> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T14:17:52.387112> post status get GPS: no GPS coordinates
2019-05-30T14:17:52.387419> post status: show current GPS position
2019-05-30T14:17:52.387708> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T14:17:52.387987> post status: exiting
2019-05-30T14:18:03.669179> Low-level gw status ON
2019-05-30T14:27:52.625730> 2019-05-30 14:27:52.622194
2019-05-30T14:27:52.626492> post status: gw ON
2019-05-30T14:27:52.627077> post status: executing periodic tasks
2019-05-30T14:27:53.704411> no timezone support, time will be expressed only in local time
2019-05-30T14:27:53.704829> post status: start running
2019-05-30T14:27:54.839385> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-30T14:27:54.839939> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-30T14:27:54.840448> get_gps.py: invalid serial port
2019-05-30T14:27:54.986646> post status: dynamic GPS is requested
2019-05-30T14:27:54.987058> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-30T14:27:54.987418> post status get GPS: no GPS coordinates
2019-05-30T14:27:54.987711> post status: show current GPS position
2019-05-30T14:27:54.987992> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-30T14:27:54.988270> post status: exiting
2019-05-30T14:28:19.338899> Low-level gw status ON
2019-05-31T07:52:15.695498> 2019-05-31 07:52:15.694717
2019-05-31T07:52:15.695979> post status: gw ON
2019-05-31T07:52:15.696291> post status: executing periodic tasks
2019-05-31T07:52:16.769336> no timezone support, time will be expressed only in local time
2019-05-31T07:52:16.769789> post status: start running
2019-05-31T07:52:17.843389> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T07:52:17.843853> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T07:52:17.844197> get_gps.py: invalid serial port
2019-05-31T07:52:17.983650> post status: dynamic GPS is requested
2019-05-31T07:52:17.984249> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T07:52:17.984728> post status get GPS: no GPS coordinates
2019-05-31T07:52:17.985133> post status: show current GPS position
2019-05-31T07:52:17.985472> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T07:52:17.985805> post status: exiting
2019-05-31T07:52:48.419504> Low-level gw status ON
2019-05-31T08:02:18.184832> 2019-05-31 08:02:18.183696
2019-05-31T08:02:18.185640> post status: gw ON
2019-05-31T08:02:18.186243> post status: executing periodic tasks
2019-05-31T08:02:19.279267> no timezone support, time will be expressed only in local time
2019-05-31T08:02:19.280066> post status: start running
2019-05-31T08:02:20.362261> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:02:20.362674> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:02:20.362968> get_gps.py: invalid serial port
2019-05-31T08:02:20.502019> post status: dynamic GPS is requested
2019-05-31T08:02:20.502418> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:02:20.502771> post status get GPS: no GPS coordinates
2019-05-31T08:02:20.503070> post status: show current GPS position
2019-05-31T08:02:20.503356> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:02:20.503765> post status: exiting
2019-05-31T08:03:04.099731> Low-level gw status ON
2019-05-31T08:12:20.744809> 2019-05-31 08:12:20.743694
2019-05-31T08:12:20.745550> post status: gw ON
2019-05-31T08:12:20.746128> post status: executing periodic tasks
2019-05-31T08:12:21.842663> no timezone support, time will be expressed only in local time
2019-05-31T08:12:21.843131> post status: start running
2019-05-31T08:12:22.913817> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:12:22.914423> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:12:22.914805> get_gps.py: invalid serial port
2019-05-31T08:12:23.055323> post status: dynamic GPS is requested
2019-05-31T08:12:23.055832> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:12:23.056335> post status get GPS: no GPS coordinates
2019-05-31T08:12:23.056721> post status: show current GPS position
2019-05-31T08:12:23.057100> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:12:23.057437> post status: exiting
2019-05-31T08:13:19.794296> Low-level gw status ON
2019-05-31T08:22:23.202418> 2019-05-31 08:22:23.200701
2019-05-31T08:22:23.203179> post status: gw ON
2019-05-31T08:22:23.204072> post status: executing periodic tasks
2019-05-31T08:22:24.280714> no timezone support, time will be expressed only in local time
2019-05-31T08:22:24.281142> post status: start running
2019-05-31T08:22:25.311205> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:22:25.311715> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:22:25.312100> get_gps.py: invalid serial port
2019-05-31T08:22:25.447883> post status: dynamic GPS is requested
2019-05-31T08:22:25.448297> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:22:25.448655> post status get GPS: no GPS coordinates
2019-05-31T08:22:25.449042> post status: show current GPS position
2019-05-31T08:22:25.449350> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:22:25.449636> post status: exiting
2019-05-31T08:23:35.483827> Low-level gw status ON
2019-05-31T08:32:25.694300> 2019-05-31 08:32:25.690627
2019-05-31T08:32:25.695087> post status: gw ON
2019-05-31T08:32:25.695698> post status: executing periodic tasks
2019-05-31T08:32:26.884664> no timezone support, time will be expressed only in local time
2019-05-31T08:32:26.885049> post status: start running
2019-05-31T08:32:27.927637> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:32:27.928058> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:32:27.928350> get_gps.py: invalid serial port
2019-05-31T08:32:28.066017> post status: dynamic GPS is requested
2019-05-31T08:32:28.066532> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:32:28.066856> post status get GPS: no GPS coordinates
2019-05-31T08:32:28.067155> post status: show current GPS position
2019-05-31T08:32:28.067440> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:32:28.067724> post status: exiting
2019-05-31T08:33:51.166260> Low-level gw status ON
2019-05-31T08:42:28.247030> 2019-05-31 08:42:28.244688
2019-05-31T08:42:28.248078> post status: gw ON
2019-05-31T08:42:28.248687> post status: executing periodic tasks
2019-05-31T08:42:29.351503> no timezone support, time will be expressed only in local time
2019-05-31T08:42:29.351970> post status: start running
2019-05-31T08:42:30.475295> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:42:30.475715> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:42:30.476116> get_gps.py: invalid serial port
2019-05-31T08:42:30.614364> post status: dynamic GPS is requested
2019-05-31T08:42:30.614828> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:42:30.615171> post status get GPS: no GPS coordinates
2019-05-31T08:42:30.615472> post status: show current GPS position
2019-05-31T08:42:30.617632> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:42:30.619204> post status: exiting
2019-05-31T08:44:06.847786> Low-level gw status ON
2019-05-31T08:52:30.797600> 2019-05-31 08:52:30.793973
2019-05-31T08:52:30.798371> post status: gw ON
2019-05-31T08:52:30.798999> post status: executing periodic tasks
2019-05-31T08:52:31.969805> no timezone support, time will be expressed only in local time
2019-05-31T08:52:31.970165> post status: start running
2019-05-31T08:52:33.025383> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T08:52:33.025750> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T08:52:33.026021> get_gps.py: invalid serial port
2019-05-31T08:52:33.164047> post status: dynamic GPS is requested
2019-05-31T08:52:33.164469> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T08:52:33.164824> post status get GPS: no GPS coordinates
2019-05-31T08:52:33.165126> post status: show current GPS position
2019-05-31T08:52:33.165409> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T08:52:33.165688> post status: exiting
2019-05-31T08:54:22.530603> Low-level gw status ON
2019-05-31T09:02:33.417903> 2019-05-31 09:02:33.413802
2019-05-31T09:02:33.418858> post status: gw ON
2019-05-31T09:02:33.419708> post status: executing periodic tasks
2019-05-31T09:02:34.554727> no timezone support, time will be expressed only in local time
2019-05-31T09:02:34.555125> post status: start running
2019-05-31T09:02:35.607857> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:02:35.608281> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:02:35.608568> get_gps.py: invalid serial port
2019-05-31T09:02:35.749146> post status: dynamic GPS is requested
2019-05-31T09:02:35.749741> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:02:35.750248> post status get GPS: no GPS coordinates
2019-05-31T09:02:35.750661> post status: show current GPS position
2019-05-31T09:02:35.750967> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:02:35.751263> post status: exiting
2019-05-31T09:04:38.213540> Low-level gw status ON
2019-05-31T09:12:36.016170> 2019-05-31 09:12:36.015046
2019-05-31T09:12:36.016904> post status: gw ON
2019-05-31T09:12:36.017479> post status: executing periodic tasks
2019-05-31T09:12:37.098679> no timezone support, time will be expressed only in local time
2019-05-31T09:12:37.099088> post status: start running
2019-05-31T09:12:38.108627> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:12:38.109016> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:12:38.109294> get_gps.py: invalid serial port
2019-05-31T09:12:38.244614> post status: dynamic GPS is requested
2019-05-31T09:12:38.245025> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:12:38.245371> post status get GPS: no GPS coordinates
2019-05-31T09:12:38.245667> post status: show current GPS position
2019-05-31T09:12:38.245947> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:12:38.246226> post status: exiting
2019-05-31T09:14:53.908190> Low-level gw status ON
2019-05-31T09:22:38.492911> 2019-05-31 09:22:38.490613
2019-05-31T09:22:38.493408> post status: gw ON
2019-05-31T09:22:38.494078> post status: executing periodic tasks
2019-05-31T09:22:39.536169> no timezone support, time will be expressed only in local time
2019-05-31T09:22:39.536609> post status: start running
2019-05-31T09:22:40.642934> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:22:40.643692> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:22:40.644444> get_gps.py: invalid serial port
2019-05-31T09:22:40.779198> post status: dynamic GPS is requested
2019-05-31T09:22:40.779875> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:22:40.780772> post status get GPS: no GPS coordinates
2019-05-31T09:22:40.781299> post status: show current GPS position
2019-05-31T09:22:40.781830> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:22:40.782435> post status: exiting
2019-05-31T09:25:09.592105> Low-level gw status ON
2019-05-31T09:32:40.977478> 2019-05-31 09:32:40.973719
2019-05-31T09:32:40.978287> post status: gw ON
2019-05-31T09:32:40.978900> post status: executing periodic tasks
2019-05-31T09:32:42.003775> no timezone support, time will be expressed only in local time
2019-05-31T09:32:42.004242> post status: start running
2019-05-31T09:32:43.071320> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:32:43.071932> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:32:43.072339> get_gps.py: invalid serial port
2019-05-31T09:32:43.215954> post status: dynamic GPS is requested
2019-05-31T09:32:43.216409> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:32:43.216810> post status get GPS: no GPS coordinates
2019-05-31T09:32:43.217131> post status: show current GPS position
2019-05-31T09:32:43.217428> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:32:43.217718> post status: exiting
2019-05-31T09:35:25.265422> Low-level gw status ON
2019-05-31T09:42:43.467738> 2019-05-31 09:42:43.460987
2019-05-31T09:42:43.469712> post status: gw ON
2019-05-31T09:42:43.471389> post status: executing periodic tasks
2019-05-31T09:42:44.531691> no timezone support, time will be expressed only in local time
2019-05-31T09:42:44.532168> post status: start running
2019-05-31T09:42:45.582650> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:42:45.583191> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:42:45.583755> get_gps.py: invalid serial port
2019-05-31T09:42:45.723262> post status: dynamic GPS is requested
2019-05-31T09:42:45.723929> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:42:45.724571> post status get GPS: no GPS coordinates
2019-05-31T09:42:45.725012> post status: show current GPS position
2019-05-31T09:42:45.725393> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:42:45.725728> post status: exiting
2019-05-31T09:45:40.938887> Low-level gw status ON
2019-05-31T09:52:45.928054> 2019-05-31 09:52:45.924452
2019-05-31T09:52:45.928901> post status: gw ON
2019-05-31T09:52:45.929610> post status: executing periodic tasks
2019-05-31T09:52:47.021846> no timezone support, time will be expressed only in local time
2019-05-31T09:52:47.022307> post status: start running
2019-05-31T09:52:48.062022> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T09:52:48.062568> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T09:52:48.062958> get_gps.py: invalid serial port
2019-05-31T09:52:48.198756> post status: dynamic GPS is requested
2019-05-31T09:52:48.199163> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T09:52:48.199528> post status get GPS: no GPS coordinates
2019-05-31T09:52:48.199841> post status: show current GPS position
2019-05-31T09:52:48.200130> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T09:52:48.200420> post status: exiting
2019-05-31T09:55:56.616147> Low-level gw status ON
2019-05-31T10:02:48.438568> 2019-05-31 10:02:48.434869
2019-05-31T10:02:48.439517> post status: gw ON
2019-05-31T10:02:48.440298> post status: executing periodic tasks
2019-05-31T10:02:49.521044> no timezone support, time will be expressed only in local time
2019-05-31T10:02:49.521468> post status: start running
2019-05-31T10:02:50.578756> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:02:50.579316> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:02:50.579811> get_gps.py: invalid serial port
2019-05-31T10:02:50.725153> post status: dynamic GPS is requested
2019-05-31T10:02:50.725666> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:02:50.726140> post status get GPS: no GPS coordinates
2019-05-31T10:02:50.726545> post status: show current GPS position
2019-05-31T10:02:50.726884> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:02:50.727315> post status: exiting
2019-05-31T10:06:12.296522> Low-level gw status ON
2019-05-31T10:12:50.877425> 2019-05-31 10:12:50.873699
2019-05-31T10:12:50.878412> post status: gw ON
2019-05-31T10:12:50.879201> post status: executing periodic tasks
2019-05-31T10:12:52.008654> no timezone support, time will be expressed only in local time
2019-05-31T10:12:52.009083> post status: start running
2019-05-31T10:12:53.141781> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:12:53.142218> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:12:53.142543> get_gps.py: invalid serial port
2019-05-31T10:12:53.283471> post status: dynamic GPS is requested
2019-05-31T10:12:53.284075> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:12:53.284652> post status get GPS: no GPS coordinates
2019-05-31T10:12:53.285094> post status: show current GPS position
2019-05-31T10:12:53.285507> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:12:53.286005> post status: exiting
2019-05-31T10:16:27.987906> Low-level gw status ON
2019-05-31T10:22:53.525988> 2019-05-31 10:22:53.523637
2019-05-31T10:22:53.526524> post status: gw ON
2019-05-31T10:22:53.526967> post status: executing periodic tasks
2019-05-31T10:22:54.577733> no timezone support, time will be expressed only in local time
2019-05-31T10:22:54.578157> post status: start running
2019-05-31T10:22:55.638659> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:22:55.639202> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:22:55.639594> get_gps.py: invalid serial port
2019-05-31T10:22:55.778229> post status: dynamic GPS is requested
2019-05-31T10:22:55.778732> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:22:55.779208> post status get GPS: no GPS coordinates
2019-05-31T10:22:55.779615> post status: show current GPS position
2019-05-31T10:22:55.780033> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:22:55.780435> post status: exiting
2019-05-31T10:26:43.690994> Low-level gw status ON
2019-05-31T10:32:56.010829> 2019-05-31 10:32:56.009452
2019-05-31T10:32:56.011579> post status: gw ON
2019-05-31T10:32:56.012152> post status: executing periodic tasks
2019-05-31T10:32:57.098088> no timezone support, time will be expressed only in local time
2019-05-31T10:32:57.098524> post status: start running
2019-05-31T10:32:58.159090> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:32:58.159650> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:32:58.160038> get_gps.py: invalid serial port
2019-05-31T10:32:58.304125> post status: dynamic GPS is requested
2019-05-31T10:32:58.304626> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:32:58.304944> post status get GPS: no GPS coordinates
2019-05-31T10:32:58.305234> post status: show current GPS position
2019-05-31T10:32:58.305513> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:32:58.305791> post status: exiting
2019-05-31T10:36:59.379508> Low-level gw status ON
2019-05-31T10:42:58.547632> 2019-05-31 10:42:58.546518
2019-05-31T10:42:58.548363> post status: gw ON
2019-05-31T10:42:58.548931> post status: executing periodic tasks
2019-05-31T10:42:59.608765> no timezone support, time will be expressed only in local time
2019-05-31T10:42:59.609139> post status: start running
2019-05-31T10:43:00.648938> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:43:00.649466> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:43:00.659663> get_gps.py: invalid serial port
2019-05-31T10:43:00.798670> post status: dynamic GPS is requested
2019-05-31T10:43:00.799143> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:43:00.799451> post status get GPS: no GPS coordinates
2019-05-31T10:43:00.799736> post status: show current GPS position
2019-05-31T10:43:00.800011> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:43:00.800287> post status: exiting
2019-05-31T10:47:15.064590> Low-level gw status ON
2019-05-31T10:53:00.975477> 2019-05-31 10:53:00.974422
2019-05-31T10:53:00.976284> post status: gw ON
2019-05-31T10:53:00.976892> post status: executing periodic tasks
2019-05-31T10:53:02.080267> no timezone support, time will be expressed only in local time
2019-05-31T10:53:02.080696> post status: start running
2019-05-31T10:53:03.148424> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T10:53:03.148945> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T10:53:03.149343> get_gps.py: invalid serial port
2019-05-31T10:53:03.288841> post status: dynamic GPS is requested
2019-05-31T10:53:03.289334> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T10:53:03.289780> post status get GPS: no GPS coordinates
2019-05-31T10:53:03.290193> post status: show current GPS position
2019-05-31T10:53:03.290525> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T10:53:03.290884> post status: exiting
2019-05-31T10:57:30.753239> Low-level gw status ON
2019-05-31T11:03:03.434747> 2019-05-31 11:03:03.433633
2019-05-31T11:03:03.435469> post status: gw ON
2019-05-31T11:03:03.436034> post status: executing periodic tasks
2019-05-31T11:03:04.558667> no timezone support, time will be expressed only in local time
2019-05-31T11:03:04.559144> post status: start running
2019-05-31T11:03:05.650444> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T11:03:05.651022> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T11:03:05.651433> get_gps.py: invalid serial port
2019-05-31T11:03:05.790198> post status: dynamic GPS is requested
2019-05-31T11:03:05.790620> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T11:03:05.790983> post status get GPS: no GPS coordinates
2019-05-31T11:03:05.791284> post status: show current GPS position
2019-05-31T11:03:05.791572> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T11:03:05.791854> post status: exiting
2019-05-31T11:07:46.433008> Low-level gw status ON
2019-05-31T11:13:06.035820> 2019-05-31 11:13:06.034686
2019-05-31T11:13:06.036657> post status: gw ON
2019-05-31T11:13:06.037278> post status: executing periodic tasks
2019-05-31T11:13:07.265434> no timezone support, time will be expressed only in local time
2019-05-31T11:13:07.265862> post status: start running
2019-05-31T11:13:08.351046> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T11:13:08.351708> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T11:13:08.352246> get_gps.py: invalid serial port
2019-05-31T11:13:08.488066> post status: dynamic GPS is requested
2019-05-31T11:13:08.488476> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T11:13:08.488837> post status get GPS: no GPS coordinates
2019-05-31T11:13:08.489135> post status: show current GPS position
2019-05-31T11:13:08.489420> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T11:13:08.489704> post status: exiting
2019-05-31T11:18:02.115366> Low-level gw status ON
2019-05-31T11:23:08.715894> 2019-05-31 11:23:08.715101
2019-05-31T11:23:08.716351> post status: gw ON
2019-05-31T11:23:08.716652> post status: executing periodic tasks
2019-05-31T11:23:09.797861> no timezone support, time will be expressed only in local time
2019-05-31T11:23:09.798267> post status: start running
2019-05-31T11:23:10.876950> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T11:23:10.877417> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T11:23:10.877842> get_gps.py: invalid serial port
2019-05-31T11:23:11.016828> post status: dynamic GPS is requested
2019-05-31T11:23:11.017563> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T11:23:11.017970> post status get GPS: no GPS coordinates
2019-05-31T11:23:11.018292> post status: show current GPS position
2019-05-31T11:23:11.018583> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T11:23:11.018867> post status: exiting
2019-05-31T11:28:17.788812> Low-level gw status ON
2019-05-31T11:33:11.259789> 2019-05-31 11:33:11.257282
2019-05-31T11:33:11.260370> post status: gw ON
2019-05-31T11:33:11.260718> post status: executing periodic tasks
2019-05-31T11:33:12.313749> no timezone support, time will be expressed only in local time
2019-05-31T11:33:12.314245> post status: start running
2019-05-31T11:33:13.385445> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T11:33:13.385817> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T11:33:13.386096> get_gps.py: invalid serial port
2019-05-31T11:33:13.531044> post status: dynamic GPS is requested
2019-05-31T11:33:13.531546> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T11:33:13.531875> post status get GPS: no GPS coordinates
2019-05-31T11:33:13.532171> post status: show current GPS position
2019-05-31T11:33:13.532453> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T11:33:13.532735> post status: exiting
2019-05-31T11:38:33.468066> Low-level gw status ON
2019-05-31T11:43:13.681630> 2019-05-31 11:43:13.680490
2019-05-31T11:43:13.682604> post status: gw ON
2019-05-31T11:43:13.683196> post status: executing periodic tasks
2019-05-31T11:43:14.781663> no timezone support, time will be expressed only in local time
2019-05-31T11:43:14.782349> post status: start running
2019-05-31T11:43:15.865185> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T11:43:15.865733> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T11:43:15.866125> get_gps.py: invalid serial port
2019-05-31T11:43:16.007498> post status: dynamic GPS is requested
2019-05-31T11:43:16.007936> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T11:43:16.008294> post status get GPS: no GPS coordinates
2019-05-31T11:43:16.008599> post status: show current GPS position
2019-05-31T11:43:16.008887> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T11:43:16.009173> post status: exiting
2019-05-31T13:10:48.576594> no timezone support, time will be expressed only in local time
2019-05-31T13:10:48.579549> post_processing_gw.py found an alert_conf section
2019-05-31T13:10:48.579904> Starting thread to perform periodic gw status/tasks
2019-05-31T13:10:48.580236> 2019-05-31 13:10:48.575296
2019-05-31T13:10:48.580605> post status: gw ON
2019-05-31T13:10:48.580966> post status: executing periodic tasks
2019-05-31T13:10:49.578160> 
2019-05-31T13:10:49.578644> Current working directory: /
2019-05-31T13:10:49.579184> SX1276 detected, starting.
2019-05-31T13:10:49.580336> SX1276 LF/HF calibration
2019-05-31T13:10:49.581074> ...
2019-05-31T13:10:49.581615> **********Power ON: state 0
2019-05-31T13:10:49.582007> Default sync word: 0x12
2019-05-31T13:10:49.582370> LoRa mode 2
2019-05-31T13:10:49.582688> Setting mode: state 0
2019-05-31T13:10:49.583127> Frequency 865.200000: state 0
2019-05-31T13:10:49.583439> Use PA_BOOST amplifier line
2019-05-31T13:10:49.583751> Set LoRa power dBm to 14
2019-05-31T13:10:49.584046> Power: state 0
2019-05-31T13:10:49.584338> Get Preamble Length: state 0
2019-05-31T13:10:49.584696> Preamble Length: 8
2019-05-31T13:10:49.585003> LoRa addr 1: state 0
2019-05-31T13:10:49.585326> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:10:49.585634> Low-level gw status ON
2019-05-31T13:10:49.641122> no timezone support, time will be expressed only in local time
2019-05-31T13:10:49.641696> post status: start running
2019-05-31T13:10:50.720158> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:10:50.720818> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:10:50.721311> get_gps.py: invalid serial port
2019-05-31T13:10:50.867126> post status: dynamic GPS is requested
2019-05-31T13:10:50.867675> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:10:50.868316> post status get GPS: no GPS coordinates
2019-05-31T13:10:50.868864> post status: show current GPS position
2019-05-31T13:10:50.870036> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:10:50.870960> post status: exiting
2019-05-31T13:13:58.578096> no timezone support, time will be expressed only in local time
2019-05-31T13:13:58.581119> post_processing_gw.py found an alert_conf section
2019-05-31T13:13:58.581575> Starting thread to perform periodic gw status/tasks
2019-05-31T13:13:58.582044> 2019-05-31 13:13:58.576871
2019-05-31T13:13:58.582422> post status: gw ON
2019-05-31T13:13:58.582781> post status: executing periodic tasks
2019-05-31T13:13:59.578877> 
2019-05-31T13:13:59.579321> Current working directory: /
2019-05-31T13:13:59.580006> SX1276 detected, starting.
2019-05-31T13:13:59.581136> SX1276 LF/HF calibration
2019-05-31T13:13:59.581544> ...
2019-05-31T13:13:59.581902> **********Power ON: state 0
2019-05-31T13:13:59.582228> Default sync word: 0x12
2019-05-31T13:13:59.582515> LoRa mode 2
2019-05-31T13:13:59.582843> Setting mode: state 0
2019-05-31T13:13:59.583127> Frequency 865.200000: state 0
2019-05-31T13:13:59.583408> Use PA_BOOST amplifier line
2019-05-31T13:13:59.583677> Set LoRa power dBm to 14
2019-05-31T13:13:59.583946> Power: state 0
2019-05-31T13:13:59.584213> Get Preamble Length: state 0
2019-05-31T13:13:59.584484> Preamble Length: 8
2019-05-31T13:13:59.584762> LoRa addr 1: state 0
2019-05-31T13:13:59.585036> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:13:59.585305> Low-level gw status ON
2019-05-31T13:13:59.631170> no timezone support, time will be expressed only in local time
2019-05-31T13:13:59.631614> post status: start running
2019-05-31T13:14:00.743688> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:14:00.744204> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:14:00.744585> get_gps.py: invalid serial port
2019-05-31T13:14:00.891977> post status: dynamic GPS is requested
2019-05-31T13:14:00.892409> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:14:00.892773> post status get GPS: no GPS coordinates
2019-05-31T13:14:00.893114> post status: show current GPS position
2019-05-31T13:14:00.893414> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:14:00.893698> post status: exiting
2019-05-31T13:24:32.963405> no timezone support, time will be expressed only in local time
2019-05-31T13:24:32.966279> post_processing_gw.py found an alert_conf section
2019-05-31T13:24:32.966703> Starting thread to perform periodic gw status/tasks
2019-05-31T13:24:32.967090> 2019-05-31 13:24:32.962565
2019-05-31T13:24:32.967433> post status: gw ON
2019-05-31T13:24:32.967780> post status: executing periodic tasks
2019-05-31T13:24:33.964573> 
2019-05-31T13:24:33.964994> Current working directory: /
2019-05-31T13:24:33.965593> SX1276 detected, starting.
2019-05-31T13:24:33.966724> SX1276 LF/HF calibration
2019-05-31T13:24:33.967117> ...
2019-05-31T13:24:33.967444> **********Power ON: state 0
2019-05-31T13:24:33.967750> Default sync word: 0x12
2019-05-31T13:24:33.968044> LoRa mode 2
2019-05-31T13:24:33.968327> Setting mode: state 0
2019-05-31T13:24:33.968665> Frequency 865.200000: state 0
2019-05-31T13:24:33.968939> Use PA_BOOST amplifier line
2019-05-31T13:24:33.969222> Set LoRa power dBm to 14
2019-05-31T13:24:33.969509> Power: state 0
2019-05-31T13:24:33.969787> Get Preamble Length: state 0
2019-05-31T13:24:33.970056> Preamble Length: 8
2019-05-31T13:24:33.970322> LoRa addr 1: state 0
2019-05-31T13:24:33.970876> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:24:33.971312> Low-level gw status ON
2019-05-31T13:24:34.027340> no timezone support, time will be expressed only in local time
2019-05-31T13:24:34.027793> post status: start running
2019-05-31T13:24:35.119704> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:24:35.120169> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:24:35.120630> get_gps.py: invalid serial port
2019-05-31T13:24:35.257948> post status: dynamic GPS is requested
2019-05-31T13:24:35.258401> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:24:35.258769> post status get GPS: no GPS coordinates
2019-05-31T13:24:35.259067> post status: show current GPS position
2019-05-31T13:24:35.259349> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:24:35.259634> post status: exiting
2019-05-31T13:33:32.841383> no timezone support, time will be expressed only in local time
2019-05-31T13:33:32.843397> post_processing_gw.py found an alert_conf section
2019-05-31T13:33:32.843864> Starting thread to perform periodic gw status/tasks
2019-05-31T13:33:32.844389> 2019-05-31 13:33:32.840499
2019-05-31T13:33:32.844778> post status: gw ON
2019-05-31T13:33:32.845143> post status: executing periodic tasks
2019-05-31T13:33:33.842598> 
2019-05-31T13:33:33.843077> Current working directory: /
2019-05-31T13:33:33.846234> SX1276 detected, starting.
2019-05-31T13:33:33.849357> SX1276 LF/HF calibration
2019-05-31T13:33:33.850312> ...
2019-05-31T13:33:33.850976> **********Power ON: state 0
2019-05-31T13:33:33.851485> Default sync word: 0x12
2019-05-31T13:33:33.852044> LoRa mode 2
2019-05-31T13:33:33.852704> Setting mode: state 0
2019-05-31T13:33:33.853322> Frequency 865.200000: state 0
2019-05-31T13:33:33.853856> Use PA_BOOST amplifier line
2019-05-31T13:33:33.854381> Set LoRa power dBm to 14
2019-05-31T13:33:33.855341> Power: state 0
2019-05-31T13:33:33.855693> Get Preamble Length: state 0
2019-05-31T13:33:33.855981> Preamble Length: 8
2019-05-31T13:33:33.856256> LoRa addr 1: state 0
2019-05-31T13:33:33.856525> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:33:33.856802> Low-level gw status ON
2019-05-31T13:33:33.871527> no timezone support, time will be expressed only in local time
2019-05-31T13:33:33.871958> post status: start running
2019-05-31T13:33:34.902706> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:33:34.903305> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:33:34.903721> get_gps.py: invalid serial port
2019-05-31T13:33:35.039352> post status: dynamic GPS is requested
2019-05-31T13:33:35.039805> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:33:35.040183> post status get GPS: no GPS coordinates
2019-05-31T13:33:35.040494> post status: show current GPS position
2019-05-31T13:33:35.040786> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:33:35.041080> post status: exiting
2019-05-31T13:35:13.751524> no timezone support, time will be expressed only in local time
2019-05-31T13:35:13.751942> post_processing_gw.py found an alert_conf section
2019-05-31T13:35:13.752219> Starting thread to perform periodic gw status/tasks
2019-05-31T13:35:13.753679> 2019-05-31 13:35:13.753130
2019-05-31T13:35:13.754028> post status: gw ON
2019-05-31T13:35:13.754301> post status: executing periodic tasks
2019-05-31T13:35:14.756763> 
2019-05-31T13:35:14.757138> Current working directory: /
2019-05-31T13:35:14.757483> SX1276 detected, starting.
2019-05-31T13:35:14.758256> SX1276 LF/HF calibration
2019-05-31T13:35:14.758586> ...
2019-05-31T13:35:14.758865> **********Power ON: state 0
2019-05-31T13:35:14.759210> Default sync word: 0x12
2019-05-31T13:35:14.759517> LoRa mode 2
2019-05-31T13:35:14.759797> Setting mode: state 0
2019-05-31T13:35:14.760080> Frequency 865.200000: state 0
2019-05-31T13:35:14.760358> Use PA_BOOST amplifier line
2019-05-31T13:35:14.760630> Set LoRa power dBm to 14
2019-05-31T13:35:14.760978> Power: state 0
2019-05-31T13:35:14.761259> Get Preamble Length: state 0
2019-05-31T13:35:14.761537> Preamble Length: 8
2019-05-31T13:35:14.761812> LoRa addr 1: state 0
2019-05-31T13:35:14.762086> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:35:14.762551> Low-level gw status ON
2019-05-31T13:35:14.815200> no timezone support, time will be expressed only in local time
2019-05-31T13:35:14.815696> post status: start running
2019-05-31T13:35:15.908933> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:35:15.909484> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:35:15.909885> get_gps.py: invalid serial port
2019-05-31T13:35:16.047850> post status: dynamic GPS is requested
2019-05-31T13:35:16.048244> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:35:16.048594> post status get GPS: no GPS coordinates
2019-05-31T13:35:16.048903> post status: show current GPS position
2019-05-31T13:35:16.049202> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:35:16.049492> post status: exiting
2019-05-31T13:36:51.904077> no timezone support, time will be expressed only in local time
2019-05-31T13:36:51.904597> post_processing_gw.py found an alert_conf section
2019-05-31T13:36:51.905008> Starting thread to perform periodic gw status/tasks
2019-05-31T13:36:51.906046> 2019-05-31 13:36:51.905491
2019-05-31T13:36:51.906486> post status: gw ON
2019-05-31T13:36:51.906913> post status: executing periodic tasks
2019-05-31T13:36:52.907456> 
2019-05-31T13:36:52.907869> Current working directory: /
2019-05-31T13:36:52.908515> SX1276 detected, starting.
2019-05-31T13:36:52.909634> SX1276 LF/HF calibration
2019-05-31T13:36:52.910087> ...
2019-05-31T13:36:52.910533> **********Power ON: state 0
2019-05-31T13:36:52.910958> Default sync word: 0x12
2019-05-31T13:36:52.911292> LoRa mode 2
2019-05-31T13:36:52.911589> Setting mode: state 0
2019-05-31T13:36:52.911949> Frequency 865.200000: state 0
2019-05-31T13:36:52.912244> Use PA_BOOST amplifier line
2019-05-31T13:36:52.912696> Set LoRa power dBm to 14
2019-05-31T13:36:52.913045> Power: state 0
2019-05-31T13:36:52.913344> Get Preamble Length: state 0
2019-05-31T13:36:52.913630> Preamble Length: 8
2019-05-31T13:36:52.913985> LoRa addr 1: state 0
2019-05-31T13:36:52.914320> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:36:52.914666> Low-level gw status ON
2019-05-31T13:36:53.021754> no timezone support, time will be expressed only in local time
2019-05-31T13:36:53.022298> post status: start running
2019-05-31T13:36:54.093963> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:36:54.094504> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:36:54.094912> get_gps.py: invalid serial port
2019-05-31T13:36:54.233231> post status: dynamic GPS is requested
2019-05-31T13:36:54.233654> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:36:54.234152> post status get GPS: no GPS coordinates
2019-05-31T13:36:54.234608> post status: show current GPS position
2019-05-31T13:36:54.235042> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:36:54.235448> post status: exiting
2019-05-31T13:38:08.215239> no timezone support, time will be expressed only in local time
2019-05-31T13:38:08.215649> post_processing_gw.py found an alert_conf section
2019-05-31T13:38:08.215924> Starting thread to perform periodic gw status/tasks
2019-05-31T13:38:08.217281> 2019-05-31 13:38:08.216777
2019-05-31T13:38:08.217612> post status: gw ON
2019-05-31T13:38:08.217883> post status: executing periodic tasks
2019-05-31T13:38:09.219649> 
2019-05-31T13:38:09.220104> Current working directory: /
2019-05-31T13:38:09.223323> SX1276 detected, starting.
2019-05-31T13:38:09.226127> SX1276 LF/HF calibration
2019-05-31T13:38:09.226924> ...
2019-05-31T13:38:09.227538> **********Power ON: state 0
2019-05-31T13:38:09.228044> Default sync word: 0x12
2019-05-31T13:38:09.229279> LoRa mode 2
2019-05-31T13:38:09.229632> Setting mode: state 0
2019-05-31T13:38:09.229914> Frequency 865.200000: state 0
2019-05-31T13:38:09.230196> Use PA_BOOST amplifier line
2019-05-31T13:38:09.230478> Set LoRa power dBm to 14
2019-05-31T13:38:09.230747> Power: state 0
2019-05-31T13:38:09.231011> Get Preamble Length: state 0
2019-05-31T13:38:09.231277> Preamble Length: 8
2019-05-31T13:38:09.231544> LoRa addr 1: state 0
2019-05-31T13:38:09.231822> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-05-31T13:38:09.232096> Low-level gw status ON
2019-05-31T13:38:09.241650> no timezone support, time will be expressed only in local time
2019-05-31T13:38:09.242105> post status: start running
2019-05-31T13:38:10.319277> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-05-31T13:38:10.319801> get_gps.py: no /app/logs/gateway_gps.txt file
2019-05-31T13:38:10.320155> get_gps.py: invalid serial port
2019-05-31T13:38:10.466907> post status: dynamic GPS is requested
2019-05-31T13:38:10.467308> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-05-31T13:38:10.467653> post status get GPS: no GPS coordinates
2019-05-31T13:38:10.467953> post status: show current GPS position
2019-05-31T13:38:10.468231> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-05-31T13:38:10.468507> post status: exiting
2019-06-03T13:14:23.829209> no timezone support, time will be expressed only in local time
2019-06-03T13:14:23.832322> post_processing_gw.py found an alert_conf section
2019-06-03T13:14:23.832887> Starting thread to perform periodic gw status/tasks
2019-06-03T13:14:23.833319> 2019-06-03 13:14:23.830364
2019-06-03T13:14:23.833634> post status: gw ON
2019-06-03T13:14:23.833932> post status: executing periodic tasks
2019-06-03T13:14:24.850094> 
2019-06-03T13:14:24.850546> Current working directory: /
2019-06-03T13:14:24.913871> no timezone support, time will be expressed only in local time
2019-06-03T13:14:24.914282> post status: start running
2019-06-03T13:14:26.021730> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-03T13:14:26.022246> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-03T13:14:26.022638> get_gps.py: invalid serial port
2019-06-03T13:14:26.164377> post status: dynamic GPS is requested
2019-06-03T13:14:26.164791> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-03T13:14:26.165141> post status get GPS: no GPS coordinates
2019-06-03T13:14:26.165447> post status: show current GPS position
2019-06-03T13:14:26.165739> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-03T13:14:26.166023> post status: exiting
2019-06-03T13:52:42.586370> no timezone support, time will be expressed only in local time
2019-06-03T13:52:42.586996> post_processing_gw.py found an alert_conf section
2019-06-03T13:52:42.587461> Starting thread to perform periodic gw status/tasks
2019-06-03T13:52:42.587912> 2019-06-03 13:52:42.586667
2019-06-03T13:52:42.588256> post status: gw ON
2019-06-03T13:52:42.588599> post status: executing periodic tasks
2019-06-03T13:52:43.588702> 
2019-06-03T13:52:43.589109> Current working directory: /
2019-06-03T13:52:43.664573> no timezone support, time will be expressed only in local time
2019-06-03T13:52:43.664985> post status: start running
2019-06-03T13:52:44.704691> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-03T13:52:44.705238> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-03T13:52:44.705647> get_gps.py: invalid serial port
2019-06-03T13:52:44.841926> post status: dynamic GPS is requested
2019-06-03T13:52:44.842336> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-03T13:52:44.842701> post status get GPS: no GPS coordinates
2019-06-03T13:52:44.843016> post status: show current GPS position
2019-06-03T13:52:44.843315> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-03T13:52:44.843608> post status: exiting
2019-06-03T13:54:33.774265> no timezone support, time will be expressed only in local time
2019-06-03T13:54:33.774916> post_processing_gw.py found an alert_conf section
2019-06-03T13:54:33.775305> Starting thread to perform periodic gw status/tasks
2019-06-03T13:54:33.775677> 2019-06-03 13:54:33.774381
2019-06-03T13:54:33.776003> post status: gw ON
2019-06-03T13:54:33.776301> post status: executing periodic tasks
2019-06-03T13:54:34.776680> 
2019-06-03T13:54:34.777130> Current working directory: /
2019-06-03T13:54:34.789910> no timezone support, time will be expressed only in local time
2019-06-03T13:54:34.790362> post status: start running
2019-06-03T13:54:35.911598> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-03T13:54:35.913005> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-03T13:54:35.914203> get_gps.py: invalid serial port
2019-06-03T13:54:36.051147> post status: dynamic GPS is requested
2019-06-03T13:54:36.051700> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-03T13:54:36.052180> post status get GPS: no GPS coordinates
2019-06-03T13:54:36.052527> post status: show current GPS position
2019-06-03T13:54:36.052917> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-03T13:54:36.053230> post status: exiting
2019-06-03T14:02:46.189431> no timezone support, time will be expressed only in local time
2019-06-03T14:02:46.190140> post_processing_gw.py found an alert_conf section
2019-06-03T14:02:46.190590> Starting thread to perform periodic gw status/tasks
2019-06-03T14:02:46.191003> 2019-06-03 14:02:46.190147
2019-06-03T14:02:46.191299> post status: gw ON
2019-06-03T14:02:46.191579> post status: executing periodic tasks
2019-06-03T14:02:47.192150> 
2019-06-03T14:02:47.192538> Current working directory: /
2019-06-03T14:02:47.255301> no timezone support, time will be expressed only in local time
2019-06-03T14:02:47.255725> post status: start running
2019-06-03T14:02:48.328290> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-03T14:02:48.328836> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-03T14:02:48.329305> get_gps.py: invalid serial port
2019-06-03T14:02:48.467011> post status: dynamic GPS is requested
2019-06-03T14:02:48.467431> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-03T14:02:48.467817> post status get GPS: no GPS coordinates
2019-06-03T14:02:48.468143> post status: show current GPS position
2019-06-03T14:02:48.468438> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-03T14:02:48.468725> post status: exiting
2019-06-04T09:49:00.837391> no timezone support, time will be expressed only in local time
2019-06-04T09:49:00.839239> post_processing_gw.py found an alert_conf section
2019-06-04T09:49:00.839654> Starting thread to perform periodic gw status/tasks
2019-06-04T09:49:00.840093> 2019-06-04 09:49:00.836118
2019-06-04T09:49:00.840446> post status: gw ON
2019-06-04T09:49:00.840800> post status: executing periodic tasks
2019-06-04T09:49:01.838118> 
2019-06-04T09:49:01.838486> Current working directory: /
2019-06-04T09:49:01.925032> no timezone support, time will be expressed only in local time
2019-06-04T09:49:01.925557> post status: start running
2019-06-04T09:49:03.011995> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-04T09:49:03.012636> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-04T09:49:03.013159> get_gps.py: invalid serial port
2019-06-04T09:49:03.154368> post status: dynamic GPS is requested
2019-06-04T09:49:03.154783> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-04T09:49:03.155432> post status get GPS: no GPS coordinates
2019-06-04T09:49:03.155800> post status: show current GPS position
2019-06-04T09:49:03.156108> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-04T09:49:03.156416> post status: exiting
2019-06-04T10:01:46.012223> no timezone support, time will be expressed only in local time
2019-06-04T10:01:46.012748> post_processing_gw.py found an alert_conf section
2019-06-04T10:01:46.013109> Starting thread to perform periodic gw status/tasks
2019-06-04T10:01:46.013545> 2019-06-04 10:01:46.012462
2019-06-04T10:01:46.013830> post status: gw ON
2019-06-04T10:01:46.014108> post status: executing periodic tasks
2019-06-04T10:01:47.014465> 
2019-06-04T10:01:47.014997> Current working directory: /
2019-06-04T10:01:47.133989> no timezone support, time will be expressed only in local time
2019-06-04T10:01:47.134418> post status: start running
2019-06-04T10:01:48.218394> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-04T10:01:48.219028> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-04T10:01:48.219462> get_gps.py: invalid serial port
2019-06-04T10:01:48.363755> post status: dynamic GPS is requested
2019-06-04T10:01:48.364161> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-04T10:01:48.364522> post status get GPS: no GPS coordinates
2019-06-04T10:01:48.364955> post status: show current GPS position
2019-06-04T10:01:48.365311> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-04T10:01:48.365614> post status: exiting
2019-06-04T10:11:48.605609> 2019-06-04 10:11:48.604897
2019-06-04T10:11:48.606075> post status: gw ON
2019-06-04T10:11:48.606381> post status: executing periodic tasks
2019-06-04T10:11:49.656315> no timezone support, time will be expressed only in local time
2019-06-04T10:11:49.656752> post status: start running
2019-06-04T10:11:50.739320> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-04T10:11:50.739957> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-04T10:11:50.740480> get_gps.py: invalid serial port
2019-06-04T10:11:50.882130> post status: dynamic GPS is requested
2019-06-04T10:11:50.882549> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-04T10:11:50.882915> post status get GPS: no GPS coordinates
2019-06-04T10:11:50.883226> post status: show current GPS position
2019-06-04T10:11:50.883521> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-04T10:11:50.883810> post status: exiting
2019-06-04T14:46:41.169807> no timezone support, time will be expressed only in local time
2019-06-04T14:46:41.171321> post_processing_gw.py found an alert_conf section
2019-06-04T14:46:41.171720> Starting thread to perform periodic gw status/tasks
2019-06-04T14:46:41.172098> 2019-06-04 14:46:41.167582
2019-06-04T14:46:41.172418> post status: gw ON
2019-06-04T14:46:41.172751> post status: executing periodic tasks
2019-06-04T14:46:42.169638> 
2019-06-04T14:46:42.170033> Current working directory: /
2019-06-04T14:46:42.257878> no timezone support, time will be expressed only in local time
2019-06-04T14:46:42.258250> post status: start running
2019-06-04T14:46:43.347711> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-04T14:46:43.348207> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-04T14:46:43.348638> get_gps.py: invalid serial port
2019-06-04T14:46:43.500078> post status: dynamic GPS is requested
2019-06-04T14:46:43.500494> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-04T14:46:43.500832> post status get GPS: no GPS coordinates
2019-06-04T14:46:43.501120> post status: show current GPS position
2019-06-04T14:46:43.501426> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-04T14:46:43.501725> post status: exiting
2019-06-04T14:56:43.730263> 2019-06-04 14:56:43.729512
2019-06-04T14:56:43.730687> post status: gw ON
2019-06-04T14:56:43.730991> post status: executing periodic tasks
2019-06-04T14:56:44.966025> no timezone support, time will be expressed only in local time
2019-06-04T14:56:44.966472> post status: start running
2019-06-04T14:56:46.186422> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-04T14:56:46.187123> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-04T14:56:46.187723> get_gps.py: invalid serial port
2019-06-04T14:56:46.329363> post status: dynamic GPS is requested
2019-06-04T14:56:46.330014> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-04T14:56:46.330544> post status get GPS: no GPS coordinates
2019-06-04T14:56:46.330874> post status: show current GPS position
2019-06-04T14:56:46.331171> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-04T14:56:46.331472> post status: exiting
2019-06-05T09:43:52.220035> no timezone support, time will be expressed only in local time
2019-06-05T09:43:52.220552> post_processing_gw.py found an alert_conf section
2019-06-05T09:43:52.220872> Starting thread to perform periodic gw status/tasks
2019-06-05T09:43:52.222386> 2019-06-05 09:43:52.221775
2019-06-05T09:43:52.222751> post status: gw ON
2019-06-05T09:43:52.223033> post status: executing periodic tasks
2019-06-05T09:43:53.238033> 
2019-06-05T09:43:53.238486> Current working directory: /
2019-06-05T09:43:53.374243> no timezone support, time will be expressed only in local time
2019-06-05T09:43:53.374653> post status: start running
2019-06-05T09:43:54.488188> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T09:43:54.489162> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T09:43:54.489972> get_gps.py: invalid serial port
2019-06-05T09:43:54.638300> post status: dynamic GPS is requested
2019-06-05T09:43:54.638705> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T09:43:54.639042> post status get GPS: no GPS coordinates
2019-06-05T09:43:54.639348> post status: show current GPS position
2019-06-05T09:43:54.639643> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T09:43:54.639956> post status: exiting
2019-06-05T09:53:54.921234> 2019-06-05 09:53:54.917676
2019-06-05T09:53:54.921771> post status: gw ON
2019-06-05T09:53:54.922165> post status: executing periodic tasks
2019-06-05T09:53:56.176573> no timezone support, time will be expressed only in local time
2019-06-05T09:53:56.176991> post status: start running
2019-06-05T09:53:57.354089> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T09:53:57.354541> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T09:53:57.354931> get_gps.py: invalid serial port
2019-06-05T09:53:57.506091> post status: dynamic GPS is requested
2019-06-05T09:53:57.506492> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T09:53:57.506827> post status get GPS: no GPS coordinates
2019-06-05T09:53:57.507123> post status: show current GPS position
2019-06-05T09:53:57.507417> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T09:53:57.507817> post status: exiting
2019-06-05T10:03:57.773726> 2019-06-05 10:03:57.769411
2019-06-05T10:03:57.774291> post status: gw ON
2019-06-05T10:03:57.774619> post status: executing periodic tasks
2019-06-05T10:03:58.801315> no timezone support, time will be expressed only in local time
2019-06-05T10:03:58.801728> post status: start running
2019-06-05T10:03:59.869522> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:03:59.870304> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:03:59.870990> get_gps.py: invalid serial port
2019-06-05T10:04:00.014362> post status: dynamic GPS is requested
2019-06-05T10:04:00.014798> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:04:00.015161> post status get GPS: no GPS coordinates
2019-06-05T10:04:00.015462> post status: show current GPS position
2019-06-05T10:04:00.015746> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:04:00.016025> post status: exiting
2019-06-05T10:14:00.318275> 2019-06-05 10:14:00.317550
2019-06-05T10:14:00.318824> post status: gw ON
2019-06-05T10:14:00.319189> post status: executing periodic tasks
2019-06-05T10:14:01.388017> no timezone support, time will be expressed only in local time
2019-06-05T10:14:01.388390> post status: start running
2019-06-05T10:14:02.478725> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:14:02.479239> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:14:02.479639> get_gps.py: invalid serial port
2019-06-05T10:14:02.628188> post status: dynamic GPS is requested
2019-06-05T10:14:02.628574> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:14:02.628849> post status get GPS: no GPS coordinates
2019-06-05T10:14:02.629114> post status: show current GPS position
2019-06-05T10:14:02.629383> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:14:02.629714> post status: exiting
2019-06-05T10:24:02.861123> 2019-06-05 10:24:02.860125
2019-06-05T10:24:02.861599> post status: gw ON
2019-06-05T10:24:02.861934> post status: executing periodic tasks
2019-06-05T10:24:03.948417> no timezone support, time will be expressed only in local time
2019-06-05T10:24:03.948835> post status: start running
2019-06-05T10:24:05.081883> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:24:05.082649> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:24:05.083280> get_gps.py: invalid serial port
2019-06-05T10:24:05.224034> post status: dynamic GPS is requested
2019-06-05T10:24:05.224564> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:24:05.225017> post status get GPS: no GPS coordinates
2019-06-05T10:24:05.225352> post status: show current GPS position
2019-06-05T10:24:05.225655> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:24:05.225949> post status: exiting
2019-06-05T10:34:05.508282> 2019-06-05 10:34:05.507580
2019-06-05T10:34:05.508714> post status: gw ON
2019-06-05T10:34:05.509011> post status: executing periodic tasks
2019-06-05T10:34:06.699938> no timezone support, time will be expressed only in local time
2019-06-05T10:34:06.700363> post status: start running
2019-06-05T10:34:07.742040> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:34:07.742587> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:34:07.742997> get_gps.py: invalid serial port
2019-06-05T10:34:07.886121> post status: dynamic GPS is requested
2019-06-05T10:34:07.886545> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:34:07.886918> post status get GPS: no GPS coordinates
2019-06-05T10:34:07.887228> post status: show current GPS position
2019-06-05T10:34:07.888127> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:34:07.889907> post status: exiting
2019-06-05T10:44:08.155803> 2019-06-05 10:44:08.155093
2019-06-05T10:44:08.156262> post status: gw ON
2019-06-05T10:44:08.156572> post status: executing periodic tasks
2019-06-05T10:44:09.221727> no timezone support, time will be expressed only in local time
2019-06-05T10:44:09.222089> post status: start running
2019-06-05T10:44:10.425547> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:44:10.425921> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:44:10.426196> get_gps.py: invalid serial port
2019-06-05T10:44:10.578113> post status: dynamic GPS is requested
2019-06-05T10:44:10.578491> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:44:10.578768> post status get GPS: no GPS coordinates
2019-06-05T10:44:10.579035> post status: show current GPS position
2019-06-05T10:44:10.579305> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:44:10.579578> post status: exiting
2019-06-05T10:54:10.848539> 2019-06-05 10:54:10.847728
2019-06-05T10:54:10.849052> post status: gw ON
2019-06-05T10:54:10.849453> post status: executing periodic tasks
2019-06-05T10:54:12.039815> no timezone support, time will be expressed only in local time
2019-06-05T10:54:12.040340> post status: start running
2019-06-05T10:54:13.124269> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T10:54:13.124925> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T10:54:13.125474> get_gps.py: invalid serial port
2019-06-05T10:54:13.266588> post status: dynamic GPS is requested
2019-06-05T10:54:13.267012> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T10:54:13.267381> post status get GPS: no GPS coordinates
2019-06-05T10:54:13.268432> post status: show current GPS position
2019-06-05T10:54:13.269260> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T10:54:13.269812> post status: exiting
2019-06-05T11:04:13.858282> 2019-06-05 11:04:13.857583
2019-06-05T11:04:13.858731> post status: gw ON
2019-06-05T11:04:13.859145> post status: executing periodic tasks
2019-06-05T11:04:14.903671> no timezone support, time will be expressed only in local time
2019-06-05T11:04:14.904047> post status: start running
2019-06-05T11:04:16.184940> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T11:04:16.268430> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T11:04:16.268825> get_gps.py: invalid serial port
2019-06-05T11:04:16.339754> post status: dynamic GPS is requested
2019-06-05T11:04:16.340427> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T11:04:16.343684> post status get GPS: no GPS coordinates
2019-06-05T11:04:16.344297> post status: show current GPS position
2019-06-05T11:04:16.344847> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T11:04:16.345777> post status: exiting
2019-06-05T11:14:16.618378> 2019-06-05 11:14:16.617617
2019-06-05T11:14:16.618879> post status: gw ON
2019-06-05T11:14:16.619241> post status: executing periodic tasks
2019-06-05T11:14:17.752550> no timezone support, time will be expressed only in local time
2019-06-05T11:14:17.752987> post status: start running
2019-06-05T11:14:18.796553> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T11:14:18.797308> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T11:14:18.797987> get_gps.py: invalid serial port
2019-06-05T11:14:18.935066> post status: dynamic GPS is requested
2019-06-05T11:14:18.935477> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T11:14:18.935852> post status get GPS: no GPS coordinates
2019-06-05T11:14:18.936172> post status: show current GPS position
2019-06-05T11:14:18.936470> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T11:14:18.936771> post status: exiting
2019-06-05T11:24:19.195739> 2019-06-05 11:24:19.195010
2019-06-05T11:24:19.196274> post status: gw ON
2019-06-05T11:24:19.196635> post status: executing periodic tasks
2019-06-05T11:24:20.333393> no timezone support, time will be expressed only in local time
2019-06-05T11:24:20.334093> post status: start running
2019-06-05T11:24:21.440801> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T11:24:21.441470> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T11:24:21.441988> get_gps.py: invalid serial port
2019-06-05T11:24:21.582010> post status: dynamic GPS is requested
2019-06-05T11:24:21.582425> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T11:24:21.582795> post status get GPS: no GPS coordinates
2019-06-05T11:24:21.583104> post status: show current GPS position
2019-06-05T11:24:21.583406> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T11:24:21.583707> post status: exiting
2019-06-05T11:34:22.069073> 2019-06-05 11:34:22.068262
2019-06-05T11:34:22.069660> post status: gw ON
2019-06-05T11:34:22.070144> post status: executing periodic tasks
2019-06-05T11:34:23.166990> no timezone support, time will be expressed only in local time
2019-06-05T11:34:23.245756> post status: start running
2019-06-05T11:34:24.325724> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T11:34:24.326271> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T11:34:24.326681> get_gps.py: invalid serial port
2019-06-05T11:34:24.468498> post status: dynamic GPS is requested
2019-06-05T11:34:24.469020> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T11:34:24.469514> post status get GPS: no GPS coordinates
2019-06-05T11:34:24.469922> post status: show current GPS position
2019-06-05T11:34:24.470271> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T11:34:24.470754> post status: exiting
2019-06-05T11:44:24.618371> 2019-06-05 11:44:24.617624
2019-06-05T11:44:24.618827> post status: gw ON
2019-06-05T11:44:24.619130> post status: executing periodic tasks
2019-06-05T11:44:25.891364> no timezone support, time will be expressed only in local time
2019-06-05T11:44:25.891791> post status: start running
2019-06-05T11:44:26.977401> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T11:44:26.978145> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T11:44:26.978589> get_gps.py: invalid serial port
2019-06-05T11:44:27.128539> post status: dynamic GPS is requested
2019-06-05T11:44:27.128922> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T11:44:27.129197> post status get GPS: no GPS coordinates
2019-06-05T11:44:27.129464> post status: show current GPS position
2019-06-05T11:44:27.129733> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T11:44:27.130001> post status: exiting
2019-06-05T12:50:34.991984> no timezone support, time will be expressed only in local time
2019-06-05T12:50:34.992553> post_processing_gw.py found an alert_conf section
2019-06-05T12:50:34.992941> Starting thread to perform periodic gw status/tasks
2019-06-05T12:50:34.993306> 2019-06-05 12:50:34.992101
2019-06-05T12:50:34.993590> post status: gw ON
2019-06-05T12:50:34.993871> post status: executing periodic tasks
2019-06-05T12:50:35.994108> 
2019-06-05T12:50:35.994646> Current working directory: /
2019-06-05T12:50:36.081967> no timezone support, time will be expressed only in local time
2019-06-05T12:50:36.082413> post status: start running
2019-06-05T12:50:37.164964> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T12:50:37.165422> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T12:50:37.165797> get_gps.py: invalid serial port
2019-06-05T12:50:37.313932> post status: dynamic GPS is requested
2019-06-05T12:50:37.314357> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T12:50:37.314757> post status get GPS: no GPS coordinates
2019-06-05T12:50:37.315097> post status: show current GPS position
2019-06-05T12:50:37.315399> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T12:50:37.315703> post status: exiting
2019-06-05T13:01:34.171556> no timezone support, time will be expressed only in local time
2019-06-05T13:01:34.172174> post_processing_gw.py found an alert_conf section
2019-06-05T13:01:34.172613> Starting thread to perform periodic gw status/tasks
2019-06-05T13:01:34.172996> 2019-06-05 13:01:34.171718
2019-06-05T13:01:34.173279> post status: gw ON
2019-06-05T13:01:34.173555> post status: executing periodic tasks
2019-06-05T13:01:35.173713> 
2019-06-05T13:01:35.174103> Current working directory: /
2019-06-05T13:01:35.223543> no timezone support, time will be expressed only in local time
2019-06-05T13:01:35.223971> post status: start running
2019-06-05T13:01:36.338572> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:01:36.339090> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:01:36.339489> get_gps.py: invalid serial port
2019-06-05T13:01:36.491174> post status: dynamic GPS is requested
2019-06-05T13:01:36.491577> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:01:36.491939> post status get GPS: no GPS coordinates
2019-06-05T13:01:36.492246> post status: show current GPS position
2019-06-05T13:01:36.492543> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:01:36.492835> post status: exiting
2019-06-05T13:02:48.394679> no timezone support, time will be expressed only in local time
2019-06-05T13:02:48.395087> post_processing_gw.py found an alert_conf section
2019-06-05T13:02:48.395362> Starting thread to perform periodic gw status/tasks
2019-06-05T13:02:48.396804> 2019-06-05 13:02:48.396270
2019-06-05T13:02:48.397141> post status: gw ON
2019-06-05T13:02:48.397409> post status: executing periodic tasks
2019-06-05T13:02:49.401772> 
2019-06-05T13:02:49.402163> Current working directory: /
2019-06-05T13:02:49.402481> SX1276 detected, starting.
2019-06-05T13:02:49.402768> SX1276 LF/HF calibration
2019-06-05T13:02:49.403051> ...
2019-06-05T13:02:49.403341> **********Power ON: state 0
2019-06-05T13:02:49.403621> Default sync word: 0x12
2019-06-05T13:02:49.403895> LoRa mode 2
2019-06-05T13:02:49.404164> Setting mode: state 0
2019-06-05T13:02:49.404447> Frequency 865.200000: state 0
2019-06-05T13:02:49.404736> Use PA_BOOST amplifier line
2019-06-05T13:02:49.405027> Set LoRa power dBm to 14
2019-06-05T13:02:49.405704> Power: state 0
2019-06-05T13:02:49.406091> Get Preamble Length: state 0
2019-06-05T13:02:49.406376> Preamble Length: 8
2019-06-05T13:02:49.406653> LoRa addr 1: state 0
2019-06-05T13:02:49.406931> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-05T13:02:49.407206> Low-level gw status ON
2019-06-05T13:02:49.421116> no timezone support, time will be expressed only in local time
2019-06-05T13:02:49.421545> post status: start running
2019-06-05T13:02:50.517987> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:02:50.518660> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:02:50.519162> get_gps.py: invalid serial port
2019-06-05T13:02:50.657429> post status: dynamic GPS is requested
2019-06-05T13:02:50.658068> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:02:50.658613> post status get GPS: no GPS coordinates
2019-06-05T13:02:50.659018> post status: show current GPS position
2019-06-05T13:02:50.659373> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:02:50.659707> post status: exiting
2019-06-05T13:12:50.900883> 2019-06-05 13:12:50.900082
2019-06-05T13:12:50.901389> post status: gw ON
2019-06-05T13:12:50.901724> post status: executing periodic tasks
2019-06-05T13:12:52.088613> no timezone support, time will be expressed only in local time
2019-06-05T13:12:52.089113> post status: start running
2019-06-05T13:12:53.164397> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:12:53.164819> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:12:53.165109> get_gps.py: invalid serial port
2019-06-05T13:12:53.306114> post status: dynamic GPS is requested
2019-06-05T13:12:53.306524> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:12:53.306872> post status get GPS: no GPS coordinates
2019-06-05T13:12:53.307176> post status: show current GPS position
2019-06-05T13:12:53.307465> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:12:53.307909> post status: exiting
2019-06-05T13:13:04.357629> Low-level gw status ON
2019-06-05T13:22:53.548414> 2019-06-05 13:22:53.547591
2019-06-05T13:22:53.548931> post status: gw ON
2019-06-05T13:22:53.549246> post status: executing periodic tasks
2019-06-05T13:22:54.666192> no timezone support, time will be expressed only in local time
2019-06-05T13:22:54.666605> post status: start running
2019-06-05T13:22:55.753483> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:22:55.754053> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:22:55.754451> get_gps.py: invalid serial port
2019-06-05T13:22:55.895232> post status: dynamic GPS is requested
2019-06-05T13:22:55.895740> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:22:55.896249> post status get GPS: no GPS coordinates
2019-06-05T13:22:55.896638> post status: show current GPS position
2019-06-05T13:22:55.897020> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:22:55.897730> post status: exiting
2019-06-05T13:23:20.039372> Low-level gw status ON
2019-06-05T13:32:56.138737> 2019-06-05 13:32:56.137958
2019-06-05T13:32:56.139204> post status: gw ON
2019-06-05T13:32:56.139528> post status: executing periodic tasks
2019-06-05T13:32:57.302382> no timezone support, time will be expressed only in local time
2019-06-05T13:32:57.302899> post status: start running
2019-06-05T13:32:58.393497> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:32:58.394017> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:32:58.394418> get_gps.py: invalid serial port
2019-06-05T13:32:58.533635> post status: dynamic GPS is requested
2019-06-05T13:32:58.534153> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:32:58.534597> post status get GPS: no GPS coordinates
2019-06-05T13:32:58.535021> post status: show current GPS position
2019-06-05T13:32:58.535364> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:32:58.535733> post status: exiting
2019-06-05T13:33:35.727225> Low-level gw status ON
2019-06-05T13:42:58.778374> 2019-06-05 13:42:58.777585
2019-06-05T13:42:58.778836> post status: gw ON
2019-06-05T13:42:58.779138> post status: executing periodic tasks
2019-06-05T13:42:59.912261> no timezone support, time will be expressed only in local time
2019-06-05T13:42:59.912678> post status: start running
2019-06-05T13:43:01.036216> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:43:01.036776> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:43:01.037169> get_gps.py: invalid serial port
2019-06-05T13:43:01.177333> post status: dynamic GPS is requested
2019-06-05T13:43:01.177972> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:43:01.178416> post status get GPS: no GPS coordinates
2019-06-05T13:43:01.178722> post status: show current GPS position
2019-06-05T13:43:01.179004> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:43:01.179293> post status: exiting
2019-06-05T13:43:51.410055> Low-level gw status ON
2019-06-05T13:53:01.409548> 2019-06-05 13:53:01.408361
2019-06-05T13:53:01.410448> post status: gw ON
2019-06-05T13:53:01.411179> post status: executing periodic tasks
2019-06-05T13:53:02.577968> no timezone support, time will be expressed only in local time
2019-06-05T13:53:02.578490> post status: start running
2019-06-05T13:53:03.690678> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T13:53:03.691525> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T13:53:03.692222> get_gps.py: invalid serial port
2019-06-05T13:53:03.861930> post status: dynamic GPS is requested
2019-06-05T13:53:03.862403> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T13:53:03.862831> post status get GPS: no GPS coordinates
2019-06-05T13:53:03.863193> post status: show current GPS position
2019-06-05T13:53:03.863519> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T13:53:03.863832> post status: exiting
2019-06-05T13:54:07.087620> Low-level gw status ON
2019-06-05T14:03:04.124284> 2019-06-05 14:03:04.123157
2019-06-05T14:03:04.125099> post status: gw ON
2019-06-05T14:03:04.125855> post status: executing periodic tasks
2019-06-05T14:03:05.337977> no timezone support, time will be expressed only in local time
2019-06-05T14:03:05.338583> post status: start running
2019-06-05T14:03:06.438151> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:03:06.438911> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:03:06.439583> get_gps.py: invalid serial port
2019-06-05T14:03:06.579287> post status: dynamic GPS is requested
2019-06-05T14:03:06.579766> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:03:06.580315> post status get GPS: no GPS coordinates
2019-06-05T14:03:06.580729> post status: show current GPS position
2019-06-05T14:03:06.581098> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:03:06.581457> post status: exiting
2019-06-05T14:04:22.769609> Low-level gw status ON
2019-06-05T14:13:06.725987> 2019-06-05 14:13:06.725178
2019-06-05T14:13:06.726610> post status: gw ON
2019-06-05T14:13:06.727035> post status: executing periodic tasks
2019-06-05T14:13:07.856976> no timezone support, time will be expressed only in local time
2019-06-05T14:13:07.857390> post status: start running
2019-06-05T14:13:08.968316> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:13:08.968833> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:13:08.969225> get_gps.py: invalid serial port
2019-06-05T14:13:09.111037> post status: dynamic GPS is requested
2019-06-05T14:13:09.111517> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:13:09.111991> post status get GPS: no GPS coordinates
2019-06-05T14:13:09.112368> post status: show current GPS position
2019-06-05T14:13:09.112718> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:13:09.113036> post status: exiting
2019-06-05T14:14:38.452351> Low-level gw status ON
2019-06-05T14:23:09.318896> 2019-06-05 14:23:09.317645
2019-06-05T14:23:09.319689> post status: gw ON
2019-06-05T14:23:09.320287> post status: executing periodic tasks
2019-06-05T14:23:10.433707> no timezone support, time will be expressed only in local time
2019-06-05T14:23:10.434100> post status: start running
2019-06-05T14:23:11.575741> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:23:11.576342> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:23:11.576896> get_gps.py: invalid serial port
2019-06-05T14:23:11.719243> post status: dynamic GPS is requested
2019-06-05T14:23:11.719627> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:23:11.719934> post status get GPS: no GPS coordinates
2019-06-05T14:23:11.720259> post status: show current GPS position
2019-06-05T14:23:11.720578> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:23:11.721394> post status: exiting
2019-06-05T14:24:54.131703> Low-level gw status ON
2019-06-05T14:33:11.968001> 2019-06-05 14:33:11.965339
2019-06-05T14:33:11.968584> post status: gw ON
2019-06-05T14:33:11.969018> post status: executing periodic tasks
2019-06-05T14:33:13.071238> no timezone support, time will be expressed only in local time
2019-06-05T14:33:13.071709> post status: start running
2019-06-05T14:33:14.295589> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:33:14.296085> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:33:14.296494> get_gps.py: invalid serial port
2019-06-05T14:33:14.440577> post status: dynamic GPS is requested
2019-06-05T14:33:14.440993> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:33:14.441354> post status get GPS: no GPS coordinates
2019-06-05T14:33:14.441667> post status: show current GPS position
2019-06-05T14:33:14.441961> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:33:14.442253> post status: exiting
2019-06-05T14:35:09.812759> Low-level gw status ON
2019-06-05T14:43:14.599913> 2019-06-05 14:43:14.599085
2019-06-05T14:43:14.600461> post status: gw ON
2019-06-05T14:43:14.600839> post status: executing periodic tasks
2019-06-05T14:43:15.846528> no timezone support, time will be expressed only in local time
2019-06-05T14:43:15.847406> post status: start running
2019-06-05T14:43:16.945782> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:43:16.946370> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:43:16.946781> get_gps.py: invalid serial port
2019-06-05T14:43:17.089540> post status: dynamic GPS is requested
2019-06-05T14:43:17.089957> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:43:17.090318> post status get GPS: no GPS coordinates
2019-06-05T14:43:17.090627> post status: show current GPS position
2019-06-05T14:43:17.090987> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:43:17.091290> post status: exiting
2019-06-05T14:45:25.495681> Low-level gw status ON
2019-06-05T14:58:41.105027> no timezone support, time will be expressed only in local time
2019-06-05T14:58:41.105621> post_processing_gw.py found an alert_conf section
2019-06-05T14:58:41.106068> Starting thread to perform periodic gw status/tasks
2019-06-05T14:58:41.107020> 2019-06-05 14:58:41.106318
2019-06-05T14:58:41.107491> post status: gw ON
2019-06-05T14:58:41.108267> post status: executing periodic tasks
2019-06-05T14:58:42.108387> 
2019-06-05T14:58:42.108763> Current working directory: /
2019-06-05T14:58:42.109325> SX1276 detected, starting.
2019-06-05T14:58:42.110339> SX1276 LF/HF calibration
2019-06-05T14:58:42.110678> ...
2019-06-05T14:58:42.110952> **********Power ON: state 0
2019-06-05T14:58:42.111240> Default sync word: 0x12
2019-06-05T14:58:42.111599> LoRa mode 2
2019-06-05T14:58:42.111882> Setting mode: state 0
2019-06-05T14:58:42.112161> Frequency 865.200000: state 0
2019-06-05T14:58:42.112449> Use PA_BOOST amplifier line
2019-06-05T14:58:42.112736> Set LoRa power dBm to 14
2019-06-05T14:58:42.113018> Power: state 0
2019-06-05T14:58:42.113305> Get Preamble Length: state 0
2019-06-05T14:58:42.113598> Preamble Length: 8
2019-06-05T14:58:42.113884> LoRa addr 1: state 0
2019-06-05T14:58:42.114164> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-05T14:58:42.114457> Low-level gw status ON
2019-06-05T14:58:42.171430> no timezone support, time will be expressed only in local time
2019-06-05T14:58:42.171852> post status: start running
2019-06-05T14:58:43.229350> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T14:58:43.229893> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T14:58:43.230322> get_gps.py: invalid serial port
2019-06-05T14:58:43.366221> post status: dynamic GPS is requested
2019-06-05T14:58:43.366723> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T14:58:43.367257> post status get GPS: no GPS coordinates
2019-06-05T14:58:43.367861> post status: show current GPS position
2019-06-05T14:58:43.368312> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T14:58:43.368726> post status: exiting
2019-06-05T15:08:43.611157> 2019-06-05 15:08:43.607971
2019-06-05T15:08:43.613167> post status: gw ON
2019-06-05T15:08:43.614766> post status: executing periodic tasks
2019-06-05T15:08:44.827439> no timezone support, time will be expressed only in local time
2019-06-05T15:08:44.828001> post status: start running
2019-06-05T15:08:46.006486> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-05T15:08:46.007044> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-05T15:08:46.007443> get_gps.py: invalid serial port
2019-06-05T15:08:46.186985> post status: dynamic GPS is requested
2019-06-05T15:08:46.187830> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-05T15:08:46.188785> post status get GPS: no GPS coordinates
2019-06-05T15:08:46.189416> post status: show current GPS position
2019-06-05T15:08:46.190094> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-05T15:08:46.190820> post status: exiting
2019-06-05T15:08:57.181463> Low-level gw status ON
2019-06-06T08:02:08.386437> no timezone support, time will be expressed only in local time
2019-06-06T08:02:08.470459> post_processing_gw.py found an alert_conf section
2019-06-06T08:02:08.470865> Starting thread to perform periodic gw status/tasks
2019-06-06T08:02:08.471233> 2019-06-06 08:02:08.381533
2019-06-06T08:02:08.471534> post status: gw ON
2019-06-06T08:02:08.471853> post status: executing periodic tasks
2019-06-06T08:02:09.383435> 
2019-06-06T08:02:09.383897> Current working directory: /
2019-06-06T08:02:09.384354> SX1276 detected, starting.
2019-06-06T08:02:09.385675> SX1276 LF/HF calibration
2019-06-06T08:02:09.386387> ...
2019-06-06T08:02:09.386813> **********Power ON: state 0
2019-06-06T08:02:09.387179> Default sync word: 0x12
2019-06-06T08:02:09.387501> LoRa mode 2
2019-06-06T08:02:09.387793> Setting mode: state 0
2019-06-06T08:02:09.388151> Frequency 865.200000: state 0
2019-06-06T08:02:09.388468> Use PA_BOOST amplifier line
2019-06-06T08:02:09.388765> Set LoRa power dBm to 14
2019-06-06T08:02:09.389056> Power: state 0
2019-06-06T08:02:09.389353> Get Preamble Length: state 0
2019-06-06T08:02:09.389662> Preamble Length: 8
2019-06-06T08:02:09.390036> LoRa addr 1: state 0
2019-06-06T08:02:09.390327> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:02:09.390611> Low-level gw status ON
2019-06-06T08:02:09.642247> no timezone support, time will be expressed only in local time
2019-06-06T08:02:09.642714> post status: start running
2019-06-06T08:02:10.749281> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:02:10.749673> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:02:10.749948> get_gps.py: invalid serial port
2019-06-06T08:02:10.893263> post status: dynamic GPS is requested
2019-06-06T08:02:10.893742> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:02:10.894236> post status get GPS: no GPS coordinates
2019-06-06T08:02:10.894623> post status: show current GPS position
2019-06-06T08:02:10.895000> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:02:10.895421> post status: exiting
2019-06-06T08:12:11.138136> 2019-06-06 08:12:11.136930
2019-06-06T08:12:11.138958> post status: gw ON
2019-06-06T08:12:11.139614> post status: executing periodic tasks
2019-06-06T08:12:12.303493> no timezone support, time will be expressed only in local time
2019-06-06T08:12:12.304111> post status: start running
2019-06-06T08:12:13.437959> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:12:13.438467> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:12:13.438831> get_gps.py: invalid serial port
2019-06-06T08:12:13.590619> post status: dynamic GPS is requested
2019-06-06T08:12:13.591068> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:12:13.591492> post status get GPS: no GPS coordinates
2019-06-06T08:12:13.591842> post status: show current GPS position
2019-06-06T08:12:13.592158> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:12:13.592470> post status: exiting
2019-06-06T08:12:22.694243> Low-level gw status ON
2019-06-06T08:21:35.141216> no timezone support, time will be expressed only in local time
2019-06-06T08:21:35.141853> post_processing_gw.py found an alert_conf section
2019-06-06T08:21:35.142291> Starting thread to perform periodic gw status/tasks
2019-06-06T08:21:35.142722> 2019-06-06 08:21:35.141356
2019-06-06T08:21:35.143065> post status: gw ON
2019-06-06T08:21:35.143455> post status: executing periodic tasks
2019-06-06T08:21:36.143342> 
2019-06-06T08:21:36.143776> Current working directory: /
2019-06-06T08:21:36.144385> SX1276 detected, starting.
2019-06-06T08:21:36.145447> SX1276 LF/HF calibration
2019-06-06T08:21:36.145970> ...
2019-06-06T08:21:36.146329> **********Power ON: state 0
2019-06-06T08:21:36.146629> Default sync word: 0x12
2019-06-06T08:21:36.146910> LoRa mode 2
2019-06-06T08:21:36.147254> Setting mode: state 0
2019-06-06T08:21:36.147542> Frequency 865.200000: state 0
2019-06-06T08:21:36.147837> Use PA_BOOST amplifier line
2019-06-06T08:21:36.148123> Set LoRa power dBm to 14
2019-06-06T08:21:36.148402> Power: state 0
2019-06-06T08:21:36.148678> Get Preamble Length: state 0
2019-06-06T08:21:36.148969> Preamble Length: 8
2019-06-06T08:21:36.149271> LoRa addr 1: state 0
2019-06-06T08:21:36.149554> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:21:36.149836> Low-level gw status ON
2019-06-06T08:21:36.281757> no timezone support, time will be expressed only in local time
2019-06-06T08:21:36.282195> post status: start running
2019-06-06T08:21:37.298326> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:21:37.299193> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:21:37.299664> get_gps.py: invalid serial port
2019-06-06T08:21:37.435127> post status: dynamic GPS is requested
2019-06-06T08:21:37.435583> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:21:37.436165> post status get GPS: no GPS coordinates
2019-06-06T08:21:37.436550> post status: show current GPS position
2019-06-06T08:21:37.436859> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:21:37.437204> post status: exiting
2019-06-06T08:26:29.616437> no timezone support, time will be expressed only in local time
2019-06-06T08:26:29.617014> post_processing_gw.py found an alert_conf section
2019-06-06T08:26:29.617384> Starting thread to perform periodic gw status/tasks
2019-06-06T08:26:29.618002> 2019-06-06 08:26:29.616413
2019-06-06T08:26:29.618427> post status: gw ON
2019-06-06T08:26:29.618887> post status: executing periodic tasks
2019-06-06T08:26:30.618626> 
2019-06-06T08:26:30.619118> Current working directory: /
2019-06-06T08:26:30.620206> SX1276 detected, starting.
2019-06-06T08:26:30.621286> SX1276 LF/HF calibration
2019-06-06T08:26:30.621909> ...
2019-06-06T08:26:30.622259> **********Power ON: state 0
2019-06-06T08:26:30.622574> Default sync word: 0x12
2019-06-06T08:26:30.622869> LoRa mode 2
2019-06-06T08:26:30.623238> Setting mode: state 0
2019-06-06T08:26:30.623540> Frequency 865.200000: state 0
2019-06-06T08:26:30.623829> Use PA_BOOST amplifier line
2019-06-06T08:26:30.624116> Set LoRa power dBm to 14
2019-06-06T08:26:30.624408> Power: state 0
2019-06-06T08:26:30.624701> Get Preamble Length: state 0
2019-06-06T08:26:30.624983> Preamble Length: 8
2019-06-06T08:26:30.625264> LoRa addr 1: state 0
2019-06-06T08:26:30.625556> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:26:30.626102> Low-level gw status ON
2019-06-06T08:26:30.735520> no timezone support, time will be expressed only in local time
2019-06-06T08:26:30.736334> post status: start running
2019-06-06T08:26:31.897402> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:26:31.898371> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:26:31.899271> get_gps.py: invalid serial port
2019-06-06T08:26:32.071089> post status: dynamic GPS is requested
2019-06-06T08:26:32.071959> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:26:32.072915> post status get GPS: no GPS coordinates
2019-06-06T08:26:32.073629> post status: show current GPS position
2019-06-06T08:26:32.074339> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:26:32.075058> post status: exiting
2019-06-06T08:41:50.032234> no timezone support, time will be expressed only in local time
2019-06-06T08:41:50.032815> post_processing_gw.py found an alert_conf section
2019-06-06T08:41:50.033200> Starting thread to perform periodic gw status/tasks
2019-06-06T08:41:50.033565> 2019-06-06 08:41:50.032363
2019-06-06T08:41:50.033850> post status: gw ON
2019-06-06T08:41:50.034129> post status: executing periodic tasks
2019-06-06T08:41:51.033863> 
2019-06-06T08:41:51.034294> Current working directory: /app
2019-06-06T08:41:51.034850> SX1276 detected, starting.
2019-06-06T08:41:51.036068> SX1276 LF/HF calibration
2019-06-06T08:41:51.036501> ...
2019-06-06T08:41:51.036829> **********Power ON: state 0
2019-06-06T08:41:51.037225> Default sync word: 0x12
2019-06-06T08:41:51.037574> LoRa mode 2
2019-06-06T08:41:51.037958> Setting mode: state 0
2019-06-06T08:41:51.038317> Frequency 865.200000: state 0
2019-06-06T08:41:51.038625> Use PA_BOOST amplifier line
2019-06-06T08:41:51.038957> Set LoRa power dBm to 14
2019-06-06T08:41:51.039241> Power: state 0
2019-06-06T08:41:51.039531> Get Preamble Length: state 0
2019-06-06T08:41:51.039832> Preamble Length: 8
2019-06-06T08:41:51.040132> LoRa addr 1: state 0
2019-06-06T08:41:51.040481> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:41:51.040768> Low-level gw status ON
2019-06-06T08:41:51.090527> no timezone support, time will be expressed only in local time
2019-06-06T08:41:51.091035> post status: start running
2019-06-06T08:41:52.138858> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:41:52.139277> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:41:52.139582> get_gps.py: invalid serial port
2019-06-06T08:41:52.280470> post status: dynamic GPS is requested
2019-06-06T08:41:52.280947> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:41:52.281326> post status get GPS: no GPS coordinates
2019-06-06T08:41:52.281629> post status: show current GPS position
2019-06-06T08:41:52.281912> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:41:52.282196> post status: exiting
2019-06-06T08:44:39.949185> no timezone support, time will be expressed only in local time
2019-06-06T08:44:39.949754> post_processing_gw.py found an alert_conf section
2019-06-06T08:44:39.966584> Starting thread to perform periodic gw status/tasks
2019-06-06T08:44:39.967020> 2019-06-06 08:44:39.949309
2019-06-06T08:44:39.967294> post status: gw ON
2019-06-06T08:44:39.967560> post status: executing periodic tasks
2019-06-06T08:44:40.951307> 
2019-06-06T08:44:40.951709> Current working directory: /app
2019-06-06T08:44:40.952294> SX1276 detected, starting.
2019-06-06T08:44:40.953442> SX1276 LF/HF calibration
2019-06-06T08:44:40.953941> ...
2019-06-06T08:44:40.954269> **********Power ON: state 0
2019-06-06T08:44:40.954583> Default sync word: 0x12
2019-06-06T08:44:40.954869> LoRa mode 2
2019-06-06T08:44:40.955143> Setting mode: state 0
2019-06-06T08:44:40.955412> Frequency 865.200000: state 0
2019-06-06T08:44:40.955847> Use PA_BOOST amplifier line
2019-06-06T08:44:40.956189> Set LoRa power dBm to 14
2019-06-06T08:44:40.956481> Power: state 0
2019-06-06T08:44:40.956761> Get Preamble Length: state 0
2019-06-06T08:44:40.957032> Preamble Length: 8
2019-06-06T08:44:40.957309> LoRa addr 1: state 0
2019-06-06T08:44:40.957583> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:44:40.957863> Low-level gw status ON
2019-06-06T08:44:41.027955> no timezone support, time will be expressed only in local time
2019-06-06T08:44:41.028422> post status: start running
2019-06-06T08:44:42.091001> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:44:42.091436> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:44:42.091798> get_gps.py: invalid serial port
2019-06-06T08:44:42.232099> post status: dynamic GPS is requested
2019-06-06T08:44:42.232503> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:44:42.232849> post status get GPS: no GPS coordinates
2019-06-06T08:44:42.233140> post status: show current GPS position
2019-06-06T08:44:42.233427> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:44:42.233708> post status: exiting
2019-06-06T08:51:23.232002> no timezone support, time will be expressed only in local time
2019-06-06T08:51:23.232566> post_processing_gw.py found an alert_conf section
2019-06-06T08:51:23.232928> Starting thread to perform periodic gw status/tasks
2019-06-06T08:51:23.233294> 2019-06-06 08:51:23.232142
2019-06-06T08:51:23.233583> post status: gw ON
2019-06-06T08:51:23.233871> post status: executing periodic tasks
2019-06-06T08:51:24.234266> 
2019-06-06T08:51:24.234772> Current working directory: /app
2019-06-06T08:51:24.235311> SX1276 detected, starting.
2019-06-06T08:51:24.236574> SX1276 LF/HF calibration
2019-06-06T08:51:24.237198> ...
2019-06-06T08:51:24.237704> **********Power ON: state 0
2019-06-06T08:51:24.238123> Default sync word: 0x12
2019-06-06T08:51:24.238570> LoRa mode 2
2019-06-06T08:51:24.239131> Setting mode: state 0
2019-06-06T08:51:24.239624> Frequency 865.200000: state 0
2019-06-06T08:51:24.240013> Use PA_BOOST amplifier line
2019-06-06T08:51:24.240462> Set LoRa power dBm to 14
2019-06-06T08:51:24.240829> Power: state 0
2019-06-06T08:51:24.241164> Get Preamble Length: state 0
2019-06-06T08:51:24.241503> Preamble Length: 8
2019-06-06T08:51:24.241854> LoRa addr 1: state 0
2019-06-06T08:51:24.242177> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:51:24.242502> Low-level gw status ON
2019-06-06T08:51:24.440869> no timezone support, time will be expressed only in local time
2019-06-06T08:51:24.441298> post status: start running
2019-06-06T08:51:25.526998> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:51:25.527621> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:51:25.528011> get_gps.py: invalid serial port
2019-06-06T08:51:25.668866> post status: dynamic GPS is requested
2019-06-06T08:51:25.669277> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:51:25.669625> post status get GPS: no GPS coordinates
2019-06-06T08:51:25.669925> post status: show current GPS position
2019-06-06T08:51:25.670442> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:51:25.670753> post status: exiting
2019-06-06T08:59:17.921859> no timezone support, time will be expressed only in local time
2019-06-06T08:59:17.922387> post_processing_gw.py found an alert_conf section
2019-06-06T08:59:17.922767> Starting thread to perform periodic gw status/tasks
2019-06-06T08:59:17.923149> 2019-06-06 08:59:17.922131
2019-06-06T08:59:17.923447> post status: gw ON
2019-06-06T08:59:17.923733> post status: executing periodic tasks
2019-06-06T08:59:18.924135> 
2019-06-06T08:59:18.924520> Current working directory: /app
2019-06-06T08:59:18.925084> SX1276 detected, starting.
2019-06-06T08:59:18.926606> SX1276 LF/HF calibration
2019-06-06T08:59:18.927218> ...
2019-06-06T08:59:18.927703> **********Power ON: state 0
2019-06-06T08:59:18.928529> Default sync word: 0x12
2019-06-06T08:59:18.929150> LoRa mode 2
2019-06-06T08:59:18.929462> Setting mode: state 0
2019-06-06T08:59:18.929743> Frequency 865.200000: state 0
2019-06-06T08:59:18.930021> Use PA_BOOST amplifier line
2019-06-06T08:59:18.930307> Set LoRa power dBm to 14
2019-06-06T08:59:18.930588> Power: state 0
2019-06-06T08:59:18.930864> Get Preamble Length: state 0
2019-06-06T08:59:18.931143> Preamble Length: 8
2019-06-06T08:59:18.931432> LoRa addr 1: state 0
2019-06-06T08:59:18.931720> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T08:59:18.932012> Low-level gw status ON
2019-06-06T08:59:18.977523> no timezone support, time will be expressed only in local time
2019-06-06T08:59:18.978108> post status: start running
2019-06-06T08:59:20.037377> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T08:59:20.037914> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T08:59:20.038310> get_gps.py: invalid serial port
2019-06-06T08:59:20.177764> post status: dynamic GPS is requested
2019-06-06T08:59:20.178366> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T08:59:20.178809> post status get GPS: no GPS coordinates
2019-06-06T08:59:20.179145> post status: show current GPS position
2019-06-06T08:59:20.179466> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T08:59:20.179766> post status: exiting
2019-06-06T09:09:20.423686> 2019-06-06 09:09:20.422561
2019-06-06T09:09:20.424537> post status: gw ON
2019-06-06T09:09:20.425472> post status: executing periodic tasks
2019-06-06T09:09:21.618399> no timezone support, time will be expressed only in local time
2019-06-06T09:09:21.618908> post status: start running
2019-06-06T09:09:22.722191> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:09:22.722950> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:09:22.723970> get_gps.py: invalid serial port
2019-06-06T09:09:22.865506> post status: dynamic GPS is requested
2019-06-06T09:09:22.866345> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:09:22.867426> post status get GPS: no GPS coordinates
2019-06-06T09:09:22.868421> post status: show current GPS position
2019-06-06T09:09:22.869554> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:09:22.870890> post status: exiting
2019-06-06T09:09:33.902145> Low-level gw status ON
2019-06-06T09:10:47.533322> Receive error 5
2019-06-06T09:10:49.010103> Receive error 1
2019-06-06T09:10:49.538005> Receive error 5
2019-06-06T09:10:50.382881> Receive error 5
2019-06-06T09:10:50.898629> Receive error 1
2019-06-06T09:10:51.419734> Receive error 1
2019-06-06T09:10:53.771018> Receive error 1
2019-06-06T09:10:54.290016> Receive error 1
2019-06-06T09:10:54.809474> Receive error 1
2019-06-06T09:10:55.330783> Receive error 1
2019-06-06T09:10:55.590886> Receive error 1
2019-06-06T09:10:55.850850> Receive error 1
2019-06-06T09:10:56.110701> Receive error 1
2019-06-06T09:10:56.370647> Receive error 1
2019-06-06T09:10:56.631284> Receive error 1
2019-06-06T09:10:56.891352> Receive error 1
2019-06-06T09:10:57.157816> Receive error 1
2019-06-06T09:10:57.675049> Receive error 1
2019-06-06T09:10:57.935407> Receive error 1
2019-06-06T09:10:58.195576> Receive error 1
2019-06-06T09:10:58.455831> Receive error 1
2019-06-06T09:11:00.087133> Receive error 5
2019-06-06T09:11:01.053550> Receive error 1
2019-06-06T09:11:02.813692> Receive error 5
2019-06-06T09:11:03.593289> Receive error 1
2019-06-06T09:11:03.874904> Receive error 5
2019-06-06T09:11:04.903297> Receive error 1
2019-06-06T09:11:05.461133> Receive error 5
2019-06-06T09:11:06.250297> Receive error 5
2019-06-06T09:11:06.523867> Receive error 1
2019-06-06T09:11:07.288627> Receive error 5
2019-06-06T09:11:07.810983> Receive error 1
2019-06-06T09:11:10.223451> Receive error 4
2019-06-06T09:11:10.512163> Receive error 5
2019-06-06T09:11:11.047818> Receive error 1
2019-06-06T09:11:11.568897> Receive error 1
2019-06-06T09:11:12.126685> Receive error 5
2019-06-06T09:11:12.423406> Receive error 5
2019-06-06T09:11:12.687521> Receive error 1
2019-06-06T09:11:13.220970> Receive error 1
2019-06-06T09:11:13.480973> Receive error 1
2019-06-06T09:11:14.544416> Receive error 5
2019-06-06T09:11:15.062082> Receive error 1
2019-06-06T09:11:15.580726> Receive error 1
2019-06-06T09:11:16.630165> Receive error 5
2019-06-06T09:11:17.444554> Receive error 5
2019-06-06T09:11:17.974957> Receive error 5
2019-06-06T09:11:18.498039> Receive error 1
2019-06-06T09:11:19.016636> Receive error 1
2019-06-06T09:11:19.017035> Low-level gw status ON
2019-06-06T09:11:19.777486> Receive error 1
2019-06-06T09:11:20.658348> Receive error 4
2019-06-06T09:11:20.930002> Receive error 1
2019-06-06T09:11:26.950734> Receive error 5
2019-06-06T09:11:27.567190> Receive error 5
2019-06-06T09:11:28.239849> Receive error 1
2019-06-06T09:11:29.909086> Receive error 5
2019-06-06T09:11:30.698229> Receive error 5
2019-06-06T09:11:55.179544> no timezone support, time will be expressed only in local time
2019-06-06T09:11:55.180138> post_processing_gw.py found an alert_conf section
2019-06-06T09:11:55.180534> Starting thread to perform periodic gw status/tasks
2019-06-06T09:11:55.180901> 2019-06-06 09:11:55.179709
2019-06-06T09:11:55.181185> post status: gw ON
2019-06-06T09:11:55.181466> post status: executing periodic tasks
2019-06-06T09:11:56.181702> 
2019-06-06T09:11:56.182086> Current working directory: /app
2019-06-06T09:11:56.182605> SX1276 detected, starting.
2019-06-06T09:11:56.183675> SX1276 LF/HF calibration
2019-06-06T09:11:56.184029> ...
2019-06-06T09:11:56.184320> **********Power ON: state 0
2019-06-06T09:11:56.184638> Default sync word: 0x12
2019-06-06T09:11:56.185010> LoRa mode 2
2019-06-06T09:11:56.185295> Setting mode: state 0
2019-06-06T09:11:56.185570> Frequency 865.200000: state 0
2019-06-06T09:11:56.185999> Use PA_BOOST amplifier line
2019-06-06T09:11:56.186311> Set LoRa power dBm to 14
2019-06-06T09:11:56.186602> Power: state 0
2019-06-06T09:11:56.186892> Get Preamble Length: state 0
2019-06-06T09:11:56.187170> Preamble Length: 8
2019-06-06T09:11:56.187453> LoRa addr 1: state 0
2019-06-06T09:11:56.187737> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T09:11:56.188038> Low-level gw status ON
2019-06-06T09:11:56.250465> no timezone support, time will be expressed only in local time
2019-06-06T09:11:56.250987> post status: start running
2019-06-06T09:11:57.331153> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:11:57.331652> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:11:57.332038> get_gps.py: invalid serial port
2019-06-06T09:11:57.506581> post status: dynamic GPS is requested
2019-06-06T09:11:57.507341> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:11:57.507974> post status get GPS: no GPS coordinates
2019-06-06T09:11:57.508512> post status: show current GPS position
2019-06-06T09:11:57.509195> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:11:57.510063> post status: exiting
2019-06-06T09:12:42.511751> Receive error 5
2019-06-06T09:12:55.796256> Receive error 1
2019-06-06T09:12:56.063787> Receive error 1
2019-06-06T09:12:56.324022> Receive error 1
2019-06-06T09:12:56.584685> Receive error 1
2019-06-06T09:12:56.845274> Receive error 1
2019-06-06T09:12:57.105325> Receive error 1
2019-06-06T09:12:57.365531> Receive error 1
2019-06-06T09:12:57.625826> Receive error 1
2019-06-06T09:12:57.886900> Receive error 1
2019-06-06T09:12:58.147355> Receive error 1
2019-06-06T09:12:58.407857> Receive error 1
2019-06-06T09:12:58.668304> Receive error 1
2019-06-06T09:12:58.929081> Receive error 1
2019-06-06T09:12:59.189777> Receive error 1
2019-06-06T09:12:59.449492> Receive error 1
2019-06-06T09:12:59.709470> Receive error 1
2019-06-06T09:12:59.969897> Receive error 1
2019-06-06T09:13:00.229936> Receive error 1
2019-06-06T09:13:00.489997> Receive error 1
2019-06-06T09:13:00.750031> Receive error 1
2019-06-06T09:13:01.010125> Receive error 1
2019-06-06T09:13:01.270706> Receive error 1
2019-06-06T09:13:01.530725> Receive error 1
2019-06-06T09:13:01.790973> Receive error 1
2019-06-06T09:13:02.051903> Receive error 1
2019-06-06T09:13:02.312831> Receive error 1
2019-06-06T09:13:02.573907> Receive error 1
2019-06-06T09:13:02.834592> Receive error 1
2019-06-06T09:13:03.094704> Receive error 1
2019-06-06T09:13:03.354885> Receive error 1
2019-06-06T09:13:03.615131> Receive error 1
2019-06-06T09:13:03.875085> Receive error 1
2019-06-06T09:13:04.135619> Receive error 1
2019-06-06T09:13:04.396284> Receive error 1
2019-06-06T09:13:04.656875> Receive error 1
2019-06-06T09:13:04.917352> Receive error 1
2019-06-06T09:13:05.178369> Receive error 1
2019-06-06T09:13:05.438980> Receive error 1
2019-06-06T09:13:05.699391> Receive error 1
2019-06-06T09:13:05.959931> Receive error 1
2019-06-06T09:13:06.220205> Receive error 1
2019-06-06T09:13:06.480316> Receive error 1
2019-06-06T09:13:06.740529> Receive error 1
2019-06-06T09:13:07.000223> Receive error 1
2019-06-06T09:13:07.260225> Receive error 1
2019-06-06T09:13:07.520142> Receive error 1
2019-06-06T09:13:07.780612> Receive error 1
2019-06-06T09:13:08.040804> Receive error 1
2019-06-06T09:13:08.300908> Receive error 1
2019-06-06T09:13:08.561018> Receive error 1
2019-06-06T09:13:08.821119> Receive error 1
2019-06-06T09:13:09.081183> Receive error 1
2019-06-06T09:13:09.341462> Receive error 1
2019-06-06T09:13:09.342728> Low-level gw status ON
2019-06-06T09:13:09.606002> Receive error 1
2019-06-06T09:13:09.865929> Receive error 1
2019-06-06T09:13:10.125823> Receive error 1
2019-06-06T09:13:10.386508> Receive error 1
2019-06-06T09:13:10.646353> Receive error 1
2019-06-06T09:13:10.906325> Receive error 1
2019-06-06T09:13:11.166255> Receive error 1
2019-06-06T09:13:11.426192> Receive error 1
2019-06-06T09:13:11.686158> Receive error 1
2019-06-06T09:13:11.946598> Receive error 1
2019-06-06T09:13:12.206757> Receive error 1
2019-06-06T09:13:12.466901> Receive error 1
2019-06-06T09:13:12.726950> Receive error 1
2019-06-06T09:13:12.987025> Receive error 1
2019-06-06T09:13:13.246532> Receive error 1
2019-06-06T09:13:13.506574> Receive error 1
2019-06-06T09:13:13.766543> Receive error 1
2019-06-06T09:13:14.027123> Receive error 1
2019-06-06T09:13:14.287254> Receive error 1
2019-06-06T09:13:14.547356> Receive error 1
2019-06-06T09:13:14.807477> Receive error 1
2019-06-06T09:13:15.067626> Receive error 1
2019-06-06T09:13:15.327630> Receive error 1
2019-06-06T09:13:15.587788> Receive error 1
2019-06-06T09:13:15.848012> Receive error 1
2019-06-06T09:13:16.109145> Receive error 1
2019-06-06T09:13:16.368512> Receive error 1
2019-06-06T09:13:16.628693> Receive error 1
2019-06-06T09:13:16.889228> Receive error 1
2019-06-06T09:13:17.150981> Receive error 1
2019-06-06T09:13:17.410958> Receive error 1
2019-06-06T09:13:17.671117> Receive error 1
2019-06-06T09:13:17.931254> Receive error 1
2019-06-06T09:13:18.191443> Receive error 1
2019-06-06T09:13:18.451529> Receive error 1
2019-06-06T09:13:18.711636> Receive error 1
2019-06-06T09:13:18.971708> Receive error 1
2019-06-06T09:13:19.231845> Receive error 1
2019-06-06T09:13:19.491581> Receive error 1
2019-06-06T09:13:19.751536> Receive error 1
2019-06-06T09:13:20.011808> Receive error 1
2019-06-06T09:13:20.274919> Receive error 1
2019-06-06T09:13:20.535029> Receive error 1
2019-06-06T09:13:20.795694> Receive error 1
2019-06-06T09:16:11.851666> no timezone support, time will be expressed only in local time
2019-06-06T09:16:11.852262> post_processing_gw.py found an alert_conf section
2019-06-06T09:16:11.852668> Starting thread to perform periodic gw status/tasks
2019-06-06T09:16:11.853075> 2019-06-06 09:16:11.851920
2019-06-06T09:16:11.853418> post status: gw ON
2019-06-06T09:16:11.853747> post status: executing periodic tasks
2019-06-06T09:16:12.853955> 
2019-06-06T09:16:12.854408> Current working directory: /app
2019-06-06T09:16:12.854905> SX1276 detected, starting.
2019-06-06T09:16:12.856228> SX1276 LF/HF calibration
2019-06-06T09:16:12.856741> ...
2019-06-06T09:16:12.857113> **********Power ON: state 0
2019-06-06T09:16:12.857437> Default sync word: 0x12
2019-06-06T09:16:12.857733> LoRa mode 2
2019-06-06T09:16:12.858034> Setting mode: state 0
2019-06-06T09:16:12.858342> Frequency 865.200000: state 0
2019-06-06T09:16:12.858705> Use PA_BOOST amplifier line
2019-06-06T09:16:12.858995> Set LoRa power dBm to 14
2019-06-06T09:16:12.859281> Power: state 0
2019-06-06T09:16:12.859578> Get Preamble Length: state 0
2019-06-06T09:16:12.859873> Preamble Length: 8
2019-06-06T09:16:12.860161> LoRa addr 1: state 0
2019-06-06T09:16:12.860443> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T09:16:12.860729> Low-level gw status ON
2019-06-06T09:16:12.938313> no timezone support, time will be expressed only in local time
2019-06-06T09:16:12.938755> post status: start running
2019-06-06T09:16:14.148423> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:16:14.149368> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:16:14.150362> get_gps.py: invalid serial port
2019-06-06T09:16:14.300142> post status: dynamic GPS is requested
2019-06-06T09:16:14.300671> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:16:14.301108> post status get GPS: no GPS coordinates
2019-06-06T09:16:14.301455> post status: show current GPS position
2019-06-06T09:16:14.301813> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:16:14.302168> post status: exiting
2019-06-06T09:17:04.666678> Receive error 1
2019-06-06T09:17:05.465425> Receive error 1
2019-06-06T09:17:06.618615> Receive error 1
2019-06-06T09:17:06.980081> Receive error 1
2019-06-06T09:17:07.794990> Receive error 5
2019-06-06T09:17:10.228464> Receive error 5
2019-06-06T09:17:10.495973> Receive error 1
2019-06-06T09:17:11.296783> Receive error 5
2019-06-06T09:17:12.690965> Receive error 4
2019-06-06T09:17:13.208654> Receive error 1
2019-06-06T09:17:13.471796> Receive error 1
2019-06-06T09:18:30.945572> no timezone support, time will be expressed only in local time
2019-06-06T09:18:30.948171> post_processing_gw.py found an alert_conf section
2019-06-06T09:18:30.948700> Starting thread to perform periodic gw status/tasks
2019-06-06T09:18:30.949151> 2019-06-06 09:18:30.944249
2019-06-06T09:18:30.949507> post status: gw ON
2019-06-06T09:18:30.949838> post status: executing periodic tasks
2019-06-06T09:18:31.946401> 
2019-06-06T09:18:31.946929> Current working directory: /app
2019-06-06T09:18:31.947472> SX1276 detected, starting.
2019-06-06T09:18:31.949955> SX1276 LF/HF calibration
2019-06-06T09:18:31.950517> ...
2019-06-06T09:18:31.951047> **********Power ON: state 0
2019-06-06T09:18:31.951479> Default sync word: 0x12
2019-06-06T09:18:31.951925> LoRa mode 2
2019-06-06T09:18:31.952422> Setting mode: state 0
2019-06-06T09:18:31.952876> Frequency 865.200000: state 0
2019-06-06T09:18:31.953261> Use PA_BOOST amplifier line
2019-06-06T09:18:31.953677> Set LoRa power dBm to 14
2019-06-06T09:18:31.954053> Power: state 0
2019-06-06T09:18:31.954536> Get Preamble Length: state 0
2019-06-06T09:18:31.954996> Preamble Length: 8
2019-06-06T09:18:31.955465> LoRa addr 1: state 0
2019-06-06T09:18:31.955862> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T09:18:31.956464> Low-level gw status ON
2019-06-06T09:18:32.106542> no timezone support, time will be expressed only in local time
2019-06-06T09:18:32.107637> post status: start running
2019-06-06T09:18:33.285927> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:18:33.286396> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:18:33.286756> get_gps.py: invalid serial port
2019-06-06T09:18:33.431531> post status: dynamic GPS is requested
2019-06-06T09:18:33.431998> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:18:33.432383> post status get GPS: no GPS coordinates
2019-06-06T09:18:33.432700> post status: show current GPS position
2019-06-06T09:18:33.432993> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:18:33.433276> post status: exiting
2019-06-06T09:28:33.663725> 2019-06-06 09:28:33.662649
2019-06-06T09:28:33.664490> post status: gw ON
2019-06-06T09:28:33.665058> post status: executing periodic tasks
2019-06-06T09:28:34.741609> no timezone support, time will be expressed only in local time
2019-06-06T09:28:34.742078> post status: start running
2019-06-06T09:28:35.882737> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:28:35.883258> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:28:35.883667> get_gps.py: invalid serial port
2019-06-06T09:28:36.025759> post status: dynamic GPS is requested
2019-06-06T09:28:36.026166> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:28:36.026526> post status get GPS: no GPS coordinates
2019-06-06T09:28:36.026847> post status: show current GPS position
2019-06-06T09:28:36.027136> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:28:36.027413> post status: exiting
2019-06-06T09:28:47.015314> Low-level gw status ON
2019-06-06T09:38:36.256348> 2019-06-06 09:38:36.255236
2019-06-06T09:38:36.257080> post status: gw ON
2019-06-06T09:38:36.257677> post status: executing periodic tasks
2019-06-06T09:38:37.317843> no timezone support, time will be expressed only in local time
2019-06-06T09:38:37.318307> post status: start running
2019-06-06T09:38:38.394437> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:38:38.395131> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:38:38.395664> get_gps.py: invalid serial port
2019-06-06T09:38:38.536734> post status: dynamic GPS is requested
2019-06-06T09:38:38.537151> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:38:38.537667> post status get GPS: no GPS coordinates
2019-06-06T09:38:38.538013> post status: show current GPS position
2019-06-06T09:38:38.538308> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:38:38.538914> post status: exiting
2019-06-06T09:39:02.682560> Low-level gw status ON
2019-06-06T09:47:47.786786> Receive error 1
2019-06-06T09:47:48.897458> Receive error 1
2019-06-06T09:47:49.420966> Receive error 1
2019-06-06T09:48:06.137968> Receive error 2
2019-06-06T09:48:06.138391> Resetting radio module
2019-06-06T09:48:06.139023> SX1276 detected, starting.
2019-06-06T09:48:06.139995> SX1276 LF/HF calibration
2019-06-06T09:48:06.140322> ...
2019-06-06T09:48:06.140609> ...
2019-06-06T09:48:06.140929> ...
2019-06-06T09:48:06.141200> ...
2019-06-06T09:48:06.141473> Setting power ON: state 0
2019-06-06T09:48:06.141741> LoRa mode 2
2019-06-06T09:48:06.142021> Setting mode: state 1
2019-06-06T09:48:06.142285> Frequency 865.200000: state 1
2019-06-06T09:48:06.142607> Use PA_BOOST amplifier line
2019-06-06T09:48:06.142930> Set LoRa power dBm to 14
2019-06-06T09:48:06.143194> Power: state 1
2019-06-06T09:48:06.143455> Get Preamble Length: state 0
2019-06-06T09:48:06.143715> Preamble Length: 0
2019-06-06T09:48:06.143977> Bad Preamble Length: set back to 8^$Get Preamble Length: state 0
2019-06-06T09:48:06.144241> Preamble Length: 0
2019-06-06T09:48:06.144501> LoRa addr 1: state 0
2019-06-06T09:48:06.144762> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T09:48:06.145027> Low-level gw status ON
2019-06-06T09:48:06.398108> Receive error 1
2019-06-06T09:48:06.658282> Receive error 1
2019-06-06T09:48:06.918372> Receive error 1
2019-06-06T09:48:07.178351> Receive error 1
2019-06-06T09:48:07.439755> Receive error 1
2019-06-06T09:48:07.700915> Receive error 1
2019-06-06T09:48:07.961018> Receive error 1
2019-06-06T09:48:08.221764> Receive error 1
2019-06-06T09:48:08.481078> Receive error 1
2019-06-06T09:48:08.741639> Receive error 1
2019-06-06T09:48:09.005997> Receive error 1
2019-06-06T09:48:09.264173> Receive error 1
2019-06-06T09:48:09.521457> Receive error 1
2019-06-06T09:48:09.784093> Receive error 1
2019-06-06T09:48:10.041239> Receive error 1
2019-06-06T09:48:10.309053> Receive error 1
2019-06-06T09:48:10.561065> Receive error 1
2019-06-06T09:48:10.821001> Receive error 1
2019-06-06T09:48:11.080904> Receive error 1
2019-06-06T09:48:11.340768> Receive error 1
2019-06-06T09:48:11.600706> Receive error 1
2019-06-06T09:48:11.860624> Receive error 1
2019-06-06T09:48:12.120489> Receive error 1
2019-06-06T09:48:12.380442> Receive error 1
2019-06-06T09:48:12.640352> Receive error 1
2019-06-06T09:48:12.900323> Receive error 1
2019-06-06T09:48:13.160243> Receive error 1
2019-06-06T09:48:13.420191> Receive error 1
2019-06-06T09:48:13.680210> Receive error 1
2019-06-06T09:48:13.940895> Receive error 1
2019-06-06T09:48:14.200269> Receive error 1
2019-06-06T09:48:14.460150> Receive error 1
2019-06-06T09:48:14.720029> Receive error 1
2019-06-06T09:48:14.979911> Receive error 1
2019-06-06T09:48:15.239821> Receive error 1
2019-06-06T09:48:15.499754> Receive error 1
2019-06-06T09:48:15.759641> Receive error 1
2019-06-06T09:48:16.020329> Receive error 1
2019-06-06T09:48:16.279683> Receive error 1
2019-06-06T09:48:16.539562> Receive error 1
2019-06-06T09:48:16.799525> Receive error 1
2019-06-06T09:48:17.059463> Receive error 1
2019-06-06T09:48:17.319386> Receive error 1
2019-06-06T09:48:17.579485> Receive error 1
2019-06-06T09:48:17.839310> Receive error 1
2019-06-06T09:48:18.099288> Receive error 1
2019-06-06T09:48:18.359286> Receive error 1
2019-06-06T09:48:18.619108> Receive error 1
2019-06-06T09:48:18.879009> Receive error 1
2019-06-06T09:48:19.139103> Receive error 1
2019-06-06T09:48:19.399491> Receive error 1
2019-06-06T09:48:19.659039> Receive error 1
2019-06-06T09:48:19.918963> Receive error 1
2019-06-06T09:48:20.178936> Receive error 1
2019-06-06T09:48:20.438911> Receive error 1
2019-06-06T09:48:20.698798> Receive error 1
2019-06-06T09:48:20.958702> Receive error 1
2019-06-06T09:48:21.218606> Receive error 1
2019-06-06T09:48:21.478558> Receive error 1
2019-06-06T09:48:21.738683> Receive error 1
2019-06-06T09:48:21.739067> Low-level gw status ON
2019-06-06T09:48:21.998560> Receive error 1
2019-06-06T09:48:22.258454> Receive error 1
2019-06-06T09:48:22.518358> Receive error 1
2019-06-06T09:48:22.778250> Receive error 1
2019-06-06T09:48:23.038186> Receive error 1
2019-06-06T09:48:23.298088> Receive error 1
2019-06-06T09:48:23.558029> Receive error 1
2019-06-06T09:48:23.817954> Receive error 1
2019-06-06T09:48:24.077902> Receive error 1
2019-06-06T09:48:24.337789> Receive error 1
2019-06-06T09:48:24.602523> Receive error 1
2019-06-06T09:48:24.857841> Receive error 1
2019-06-06T09:48:25.118138> Receive error 1
2019-06-06T09:48:25.377736> Receive error 1
2019-06-06T09:48:25.637571> Receive error 1
2019-06-06T09:48:25.897545> Receive error 1
2019-06-06T09:48:26.157487> Receive error 1
2019-06-06T09:48:26.417405> Receive error 1
2019-06-06T09:48:26.677504> Receive error 1
2019-06-06T09:48:26.937258> Receive error 1
2019-06-06T09:48:27.197167> Receive error 1
2019-06-06T09:48:27.457970> Receive error 1
2019-06-06T09:48:27.717500> Receive error 1
2019-06-06T09:48:27.977163> Receive error 1
2019-06-06T09:48:28.237096> Receive error 1
2019-06-06T09:48:28.497007> Receive error 1
2019-06-06T09:48:28.756847> Receive error 1
2019-06-06T09:48:29.016829> Receive error 1
2019-06-06T09:48:29.276755> Receive error 1
2019-06-06T09:48:29.536766> Receive error 1
2019-06-06T09:48:29.796681> Receive error 1
2019-06-06T09:48:30.056589> Receive error 1
2019-06-06T09:48:30.316505> Receive error 1
2019-06-06T09:48:30.576681> Receive error 1
2019-06-06T09:48:30.836471> Receive error 1
2019-06-06T09:48:31.096550> Receive error 1
2019-06-06T09:48:31.356459> Receive error 1
2019-06-06T09:48:31.616371> Receive error 1
2019-06-06T09:48:31.876236> Receive error 1
2019-06-06T09:48:32.136184> Receive error 1
2019-06-06T09:48:32.396110> Receive error 1
2019-06-06T09:48:32.656629> Receive error 1
2019-06-06T09:48:32.916032> Receive error 1
2019-06-06T09:48:33.175982> Receive error 1
2019-06-06T09:48:33.435858> Receive error 1
2019-06-06T09:48:33.695769> Receive error 1
2019-06-06T09:48:33.955669> Receive error 1
2019-06-06T09:48:34.215868> Receive error 1
2019-06-06T09:48:34.475765> Receive error 1
2019-06-06T09:48:34.735671> Receive error 1
2019-06-06T09:48:34.995639> Receive error 1
2019-06-06T09:48:35.255541> Receive error 1
2019-06-06T09:48:35.515461> Receive error 1
2019-06-06T09:48:35.775433> Receive error 1
2019-06-06T09:48:36.035498> Receive error 1
2019-06-06T09:48:36.295529> Receive error 1
2019-06-06T09:48:36.555441> Receive error 1
2019-06-06T09:48:36.815379> Receive error 1
2019-06-06T09:48:37.075283> Receive error 1
2019-06-06T09:48:37.335274> Receive error 1
2019-06-06T09:48:37.335633> Low-level gw status ON
2019-06-06T09:48:37.595154> Receive error 1
2019-06-06T09:48:37.855058> Receive error 1
2019-06-06T09:48:38.114951> Receive error 1
2019-06-06T09:48:38.374864> Receive error 1
2019-06-06T09:48:38.634776> Receive error 1
2019-06-06T09:48:38.779960> 2019-06-06 09:48:38.779127
2019-06-06T09:48:38.780392> post status: gw ON
2019-06-06T09:48:38.780691> post status: executing periodic tasks
2019-06-06T09:48:38.894882> Receive error 1
2019-06-06T09:48:39.154790> Receive error 1
2019-06-06T09:48:39.414686> Receive error 1
2019-06-06T09:48:39.674620> Receive error 1
2019-06-06T09:48:39.830244> no timezone support, time will be expressed only in local time
2019-06-06T09:48:39.830602> post status: start running
2019-06-06T09:48:39.934603> Receive error 1
2019-06-06T09:48:40.194686> Receive error 1
2019-06-06T09:48:40.454974> Receive error 1
2019-06-06T09:48:40.714868> Receive error 1
2019-06-06T09:48:40.865506> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:48:40.865967> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:48:40.866389> get_gps.py: invalid serial port
2019-06-06T09:48:40.975129> Receive error 1
2019-06-06T09:48:41.027083> post status: dynamic GPS is requested
2019-06-06T09:48:41.027491> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:48:41.027777> post status get GPS: no GPS coordinates
2019-06-06T09:48:41.028052> post status: show current GPS position
2019-06-06T09:48:41.028323> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:48:41.028642> post status: exiting
2019-06-06T09:48:41.235115> Receive error 1
2019-06-06T09:48:41.495294> Receive error 1
2019-06-06T09:48:41.755171> Receive error 1
2019-06-06T09:48:42.015306> Receive error 1
2019-06-06T09:48:42.275296> Receive error 1
2019-06-06T09:48:42.535222> Receive error 1
2019-06-06T09:48:42.795105> Receive error 1
2019-06-06T09:48:43.055052> Receive error 1
2019-06-06T09:48:43.314929> Receive error 1
2019-06-06T09:48:43.574841> Receive error 1
2019-06-06T09:48:43.834804> Receive error 1
2019-06-06T09:48:44.094715> Receive error 1
2019-06-06T09:48:44.354656> Receive error 1
2019-06-06T09:48:44.614633> Receive error 1
2019-06-06T09:48:44.874627> Receive error 1
2019-06-06T09:48:45.134510> Receive error 1
2019-06-06T09:48:45.394430> Receive error 1
2019-06-06T09:48:45.654424> Receive error 1
2019-06-06T09:48:45.914353> Receive error 1
2019-06-06T09:48:46.174219> Receive error 1
2019-06-06T09:48:46.434264> Receive error 1
2019-06-06T09:48:46.694109> Receive error 1
2019-06-06T09:48:46.954213> Receive error 1
2019-06-06T09:48:47.219325> Receive error 1
2019-06-06T09:48:47.479488> Receive error 1
2019-06-06T09:48:47.739432> Receive error 1
2019-06-06T09:48:47.999467> Receive error 1
2019-06-06T09:48:48.259321> Receive error 1
2019-06-06T09:48:48.519344> Receive error 1
2019-06-06T09:48:48.779381> Receive error 1
2019-06-06T09:48:49.039528> Receive error 1
2019-06-06T09:48:49.299450> Receive error 1
2019-06-06T09:48:49.559423> Receive error 1
2019-06-06T09:48:49.819350> Receive error 1
2019-06-06T09:48:50.079340> Receive error 1
2019-06-06T09:48:50.339152> Receive error 1
2019-06-06T09:48:50.599148> Receive error 1
2019-06-06T09:48:50.859078> Receive error 1
2019-06-06T09:48:51.118995> Receive error 1
2019-06-06T09:48:51.378926> Receive error 1
2019-06-06T09:48:51.638909> Receive error 1
2019-06-06T09:48:51.898855> Receive error 1
2019-06-06T09:48:52.158933> Receive error 1
2019-06-06T09:48:52.418834> Receive error 1
2019-06-06T09:48:52.678876> Receive error 1
2019-06-06T09:48:52.939080> Receive error 1
2019-06-06T09:48:52.939689> Low-level gw status ON
2019-06-06T09:48:53.199023> Receive error 1
2019-06-06T09:48:53.458938> Receive error 1
2019-06-06T09:48:53.718831> Receive error 1
2019-06-06T09:48:53.978785> Receive error 1
2019-06-06T09:48:54.238694> Receive error 1
2019-06-06T09:48:54.498702> Receive error 1
2019-06-06T09:48:54.758569> Receive error 1
2019-06-06T09:48:55.018422> Receive error 1
2019-06-06T09:48:55.278322> Receive error 1
2019-06-06T09:48:55.538261> Receive error 1
2019-06-06T09:48:55.798215> Receive error 1
2019-06-06T09:48:56.059003> Receive error 1
2019-06-06T09:48:56.318300> Receive error 1
2019-06-06T09:48:56.578197> Receive error 1
2019-06-06T09:48:56.838209> Receive error 1
2019-06-06T09:48:57.098138> Receive error 1
2019-06-06T09:48:57.358057> Receive error 1
2019-06-06T09:48:57.617964> Receive error 1
2019-06-06T09:48:57.877880> Receive error 1
2019-06-06T09:48:58.137947> Receive error 1
2019-06-06T09:48:58.397849> Receive error 1
2019-06-06T09:48:58.657909> Receive error 1
2019-06-06T09:48:58.917817> Receive error 1
2019-06-06T09:48:59.177743> Receive error 1
2019-06-06T09:48:59.437723> Receive error 1
2019-06-06T09:48:59.697615> Receive error 1
2019-06-06T09:48:59.957585> Receive error 1
2019-06-06T09:49:00.217436> Receive error 1
2019-06-06T09:49:00.477400> Receive error 1
2019-06-06T09:49:00.737318> Receive error 1
2019-06-06T09:49:00.997252> Receive error 1
2019-06-06T09:49:01.257171> Receive error 1
2019-06-06T09:49:02.122077> Receive error 1
2019-06-06T09:49:03.102255> Receive error 1
2019-06-06T09:49:03.631656> Receive error 1
2019-06-06T09:49:05.023433> Receive error 5
2019-06-06T09:49:05.509909> Receive error 5
2019-06-06T09:49:16.036405> Receive error 1
2019-06-06T09:49:27.124487> Receive error 1
2019-06-06T09:49:28.177091> Receive error 1
2019-06-06T09:49:30.894773> Receive error 1
2019-06-06T09:49:31.410418> Receive error 1
2019-06-06T09:49:31.944098> Receive error 1
2019-06-06T09:49:32.205517> Receive error 1
2019-06-06T09:49:32.467961> Receive error 1
2019-06-06T09:49:32.729246> Receive error 1
2019-06-06T09:49:32.991508> Receive error 1
2019-06-06T09:49:33.270244> Receive error 1
2019-06-06T09:49:33.787789> Receive error 1
2019-06-06T09:49:34.055239> Receive error 1
2019-06-06T09:49:34.316325> Receive error 1
2019-06-06T09:49:34.579806> Receive error 1
2019-06-06T09:49:34.849416> Receive error 1
2019-06-06T09:49:35.366275> Receive error 1
2019-06-06T09:49:36.673993> Receive error 1
2019-06-06T09:49:36.938907> Receive error 1
2019-06-06T09:49:36.939643> Low-level gw status ON
2019-06-06T09:49:37.474133> Receive error 5
2019-06-06T09:49:37.760474> Receive error 5
2019-06-06T09:49:38.762450> Receive error 5
2019-06-06T09:49:39.677418> Receive error 1
2019-06-06T09:49:39.939864> Receive error 1
2019-06-06T09:49:40.207200> Receive error 1
2019-06-06T09:49:40.977994> Receive error 1
2019-06-06T09:49:42.311757> Receive error 1
2019-06-06T09:49:43.034012> Receive error 5
2019-06-06T09:49:43.294371> Receive error 1
2019-06-06T09:49:43.566258> Receive error 5
2019-06-06T09:49:55.548298> Receive error 1
2019-06-06T09:49:55.819314> Receive error 1
2019-06-06T09:50:07.165034> Receive error 1
2019-06-06T09:50:10.348985> Receive error 5
2019-06-06T09:50:10.937293> Receive error 1
2019-06-06T09:50:11.210946> Receive error 1
2019-06-06T09:50:11.477698> Receive error 1
2019-06-06T09:50:11.738937> Receive error 1
2019-06-06T09:50:12.008829> Receive error 1
2019-06-06T09:50:12.791979> Receive error 1
2019-06-06T09:50:13.605473> Receive error 1
2019-06-06T09:50:14.910542> Receive error 1
2019-06-06T09:50:15.427951> Receive error 1
2019-06-06T09:50:17.027869> Receive error 5
2019-06-06T09:50:17.668724> Receive error 5
2019-06-06T09:50:18.438729> Receive error 1
2019-06-06T09:50:18.703334> Receive error 1
2019-06-06T09:50:19.486024> Receive error 1
2019-06-06T09:50:19.746132> Receive error 1
2019-06-06T09:50:20.031520> Receive error 5
2019-06-06T09:50:20.650287> Receive error 4
2019-06-06T09:50:21.183132> Receive error 1
2019-06-06T09:50:21.708328> Receive error 1
2019-06-06T09:50:21.972570> Receive error 1
2019-06-06T09:50:22.235583> Receive error 1
2019-06-06T09:50:22.760652> Receive error 1
2019-06-06T09:50:23.287984> Receive error 1
2019-06-06T09:50:23.810868> Receive error 1
2019-06-06T09:50:24.329380> Receive error 1
2019-06-06T09:50:24.602301> Receive error 5
2019-06-06T09:50:25.128418> Receive error 5
2019-06-06T09:50:25.668215> Receive error 5
2019-06-06T09:50:26.212460> Receive error 5
2019-06-06T09:50:26.755494> Receive error 5
2019-06-06T09:50:27.029510> Receive error 1
2019-06-06T09:50:27.551312> Receive error 1
2019-06-06T09:50:28.071618> Receive error 1
2019-06-06T09:50:28.516134> Receive error 1
2019-06-06T09:50:28.785945> Receive error 1
2019-06-06T09:50:28.786368> Low-level gw status ON
2019-06-06T09:50:29.057044> Receive error 1
2019-06-06T09:50:29.324833> Receive error 1
2019-06-06T09:50:29.586175> Receive error 1
2019-06-06T09:50:29.856137> Receive error 1
2019-06-06T09:50:30.124671> Receive error 1
2019-06-06T09:50:30.398058> Receive error 1
2019-06-06T09:50:30.665531> Receive error 1
2019-06-06T09:50:30.931164> Receive error 1
2019-06-06T09:50:31.193432> Receive error 1
2019-06-06T09:50:31.453381> Receive error 1
2019-06-06T09:50:31.713782> Receive error 1
2019-06-06T09:50:31.974403> Receive error 1
2019-06-06T09:50:32.235211> Receive error 1
2019-06-06T09:50:32.495824> Receive error 1
2019-06-06T09:50:32.761470> Receive error 1
2019-06-06T09:50:33.030974> Receive error 1
2019-06-06T09:50:33.298407> Receive error 1
2019-06-06T09:50:33.570445> Receive error 1
2019-06-06T09:50:33.845708> Receive error 1
2019-06-06T09:50:34.105610> Receive error 1
2019-06-06T09:50:34.365677> Receive error 1
2019-06-06T09:50:34.625598> Receive error 1
2019-06-06T09:50:34.887656> Receive error 1
2019-06-06T09:50:35.159460> Receive error 1
2019-06-06T09:50:35.432169> Receive error 1
2019-06-06T09:50:35.703819> Receive error 1
2019-06-06T09:50:35.975301> Receive error 1
2019-06-06T09:50:36.247474> Receive error 1
2019-06-06T09:50:36.507434> Receive error 1
2019-06-06T09:50:36.767325> Receive error 1
2019-06-06T09:50:37.029532> Receive error 1
2019-06-06T09:50:37.299050> Receive error 1
2019-06-06T09:50:37.572848> Receive error 1
2019-06-06T09:50:37.843447> Receive error 1
2019-06-06T09:50:38.112968> Receive error 1
2019-06-06T09:50:39.418091> Receive error 1
2019-06-06T09:50:39.938906> Receive error 1
2019-06-06T09:50:46.696074> Receive error 1
2019-06-06T09:50:47.214707> Receive error 1
2019-06-06T09:50:47.476237> Receive error 1
2019-06-06T09:50:47.737700> Receive error 1
2019-06-06T09:50:48.253195> Receive error 1
2019-06-06T09:50:48.514112> Receive error 1
2019-06-06T09:50:48.775438> Receive error 1
2019-06-06T09:50:49.037080> Receive error 1
2019-06-06T09:50:49.298833> Receive error 1
2019-06-06T09:50:49.559980> Receive error 1
2019-06-06T09:50:49.823793> Receive error 1
2019-06-06T09:50:50.198745> Receive error 5
2019-06-06T09:50:50.461223> Receive error 1
2019-06-06T09:50:50.981951> Receive error 1
2019-06-06T09:50:51.527747> Receive error 5
2019-06-06T09:50:52.050386> Receive error 1
2019-06-06T09:50:52.848113> Receive error 1
2019-06-06T09:50:53.112737> Receive error 1
2019-06-06T09:50:53.644529> Receive error 1
2019-06-06T09:50:53.915674> Receive error 5
2019-06-06T09:50:53.916313> Low-level gw status ON
2019-06-06T09:50:54.463287> Receive error 1
2019-06-06T09:50:55.237620> Receive error 1
2019-06-06T09:50:55.499667> Receive error 1
2019-06-06T09:50:55.770328> Receive error 1
2019-06-06T09:50:56.304945> Receive error 1
2019-06-06T09:50:57.925314> Receive error 4
2019-06-06T09:50:58.187794> Receive error 1
2019-06-06T09:50:58.453463> Receive error 1
2019-06-06T09:50:58.724743> Receive error 1
2019-06-06T09:50:59.494683> Receive error 1
2019-06-06T09:51:00.019231> Receive error 1
2019-06-06T09:51:00.537760> Receive error 1
2019-06-06T09:51:01.606037> Receive error 5
2019-06-06T09:51:01.871374> Receive error 1
2019-06-06T09:51:02.136713> Receive error 1
2019-06-06T09:51:02.396764> Receive error 1
2019-06-06T09:51:02.656662> Receive error 1
2019-06-06T09:51:02.916586> Receive error 1
2019-06-06T09:51:03.176536> Receive error 1
2019-06-06T09:51:03.436460> Receive error 1
2019-06-06T09:51:03.696374> Receive error 1
2019-06-06T09:51:03.956789> Receive error 1
2019-06-06T09:51:04.216430> Receive error 1
2019-06-06T09:51:04.476349> Receive error 1
2019-06-06T09:51:04.736434> Receive error 1
2019-06-06T09:51:04.996353> Receive error 1
2019-06-06T09:51:05.256371> Receive error 1
2019-06-06T09:51:05.516265> Receive error 1
2019-06-06T09:51:05.776174> Receive error 1
2019-06-06T09:51:06.036071> Receive error 1
2019-06-06T09:51:06.553596> Receive error 1
2019-06-06T09:51:07.074440> Receive error 1
2019-06-06T09:51:08.126121> Receive error 1
2019-06-06T09:51:08.387133> Receive error 1
2019-06-06T09:51:13.075160> Receive error 1
2019-06-06T09:51:13.337565> Receive error 1
2019-06-06T09:51:13.857602> Receive error 1
2019-06-06T09:51:14.119618> Receive error 1
2019-06-06T09:51:14.380961> Receive error 1
2019-06-06T09:51:14.642496> Receive error 1
2019-06-06T09:51:14.902500> Receive error 1
2019-06-06T09:51:15.162569> Receive error 1
2019-06-06T09:51:15.422780> Receive error 1
2019-06-06T09:51:15.683391> Receive error 1
2019-06-06T09:51:15.943873> Receive error 1
2019-06-06T09:51:16.204012> Receive error 1
2019-06-06T09:51:16.464224> Receive error 1
2019-06-06T09:51:16.724838> Receive error 1
2019-06-06T09:51:16.985367> Receive error 1
2019-06-06T09:51:17.245960> Receive error 1
2019-06-06T09:51:17.506516> Receive error 1
2019-06-06T09:51:17.766992> Receive error 1
2019-06-06T09:51:18.027411> Receive error 1
2019-06-06T09:51:18.287780> Receive error 1
2019-06-06T09:51:18.549128> Receive error 1
2019-06-06T09:51:18.810738> Receive error 1
2019-06-06T09:51:19.070728> Receive error 1
2019-06-06T09:51:19.330717> Receive error 1
2019-06-06T09:51:19.331134> Low-level gw status ON
2019-06-06T09:51:19.590630> Receive error 1
2019-06-06T09:51:19.850943> Receive error 1
2019-06-06T09:51:20.111010> Receive error 1
2019-06-06T09:51:20.371209> Receive error 1
2019-06-06T09:51:20.631254> Receive error 1
2019-06-06T09:51:20.890958> Receive error 1
2019-06-06T09:51:21.151379> Receive error 1
2019-06-06T09:51:21.411848> Receive error 1
2019-06-06T09:51:21.674390> Receive error 1
2019-06-06T09:51:21.934896> Receive error 1
2019-06-06T09:51:22.194885> Receive error 1
2019-06-06T09:51:22.454717> Receive error 1
2019-06-06T09:51:22.714598> Receive error 1
2019-06-06T09:51:22.974464> Receive error 1
2019-06-06T09:51:23.234749> Receive error 1
2019-06-06T09:51:23.494934> Receive error 1
2019-06-06T09:51:23.755089> Receive error 1
2019-06-06T09:51:24.015020> Receive error 1
2019-06-06T09:51:24.275209> Receive error 1
2019-06-06T09:51:24.535512> Receive error 1
2019-06-06T09:51:24.795686> Receive error 1
2019-06-06T09:51:25.055693> Receive error 1
2019-06-06T09:51:25.315687> Receive error 1
2019-06-06T09:51:25.576536> Receive error 1
2019-06-06T09:51:25.836698> Receive error 1
2019-06-06T09:51:26.096709> Receive error 1
2019-06-06T09:51:26.356707> Receive error 1
2019-06-06T09:51:26.616916> Receive error 1
2019-06-06T09:51:26.877001> Receive error 1
2019-06-06T09:51:27.137483> Receive error 1
2019-06-06T09:51:27.397276> Receive error 1
2019-06-06T09:51:27.657492> Receive error 1
2019-06-06T09:51:27.917353> Receive error 1
2019-06-06T09:51:28.177367> Receive error 1
2019-06-06T09:51:28.437201> Receive error 1
2019-06-06T09:51:28.697974> Receive error 1
2019-06-06T09:51:28.957755> Receive error 1
2019-06-06T09:51:29.217936> Receive error 1
2019-06-06T09:51:29.477485> Receive error 1
2019-06-06T09:51:29.737973> Receive error 1
2019-06-06T09:51:29.997890> Receive error 1
2019-06-06T09:51:30.258104> Receive error 1
2019-06-06T09:51:30.518068> Receive error 1
2019-06-06T09:51:30.778242> Receive error 1
2019-06-06T09:51:31.038286> Receive error 1
2019-06-06T09:51:31.298849> Receive error 1
2019-06-06T09:51:31.559290> Receive error 1
2019-06-06T09:51:31.819611> Receive error 1
2019-06-06T09:51:32.079848> Receive error 1
2019-06-06T09:51:32.340466> Receive error 1
2019-06-06T09:51:32.600882> Receive error 1
2019-06-06T09:51:32.861435> Receive error 1
2019-06-06T09:51:33.122092> Receive error 1
2019-06-06T09:51:33.382391> Receive error 1
2019-06-06T09:51:33.642770> Receive error 1
2019-06-06T09:51:33.902622> Receive error 1
2019-06-06T09:51:34.166885> Receive error 1
2019-06-06T09:51:34.426676> Receive error 1
2019-06-06T09:51:34.686589> Receive error 1
2019-06-06T09:51:34.947407> Receive error 1
2019-06-06T09:51:34.948120> Low-level gw status ON
2019-06-06T09:51:35.208239> Receive error 1
2019-06-06T09:51:35.468296> Receive error 1
2019-06-06T09:51:35.728429> Receive error 1
2019-06-06T09:51:35.988366> Receive error 1
2019-06-06T09:51:36.248322> Receive error 1
2019-06-06T09:51:36.508850> Receive error 1
2019-06-06T09:51:36.770688> Receive error 1
2019-06-06T09:51:37.029660> Receive error 1
2019-06-06T09:51:37.289537> Receive error 1
2019-06-06T09:51:37.549620> Receive error 1
2019-06-06T09:51:37.809741> Receive error 1
2019-06-06T09:51:38.069956> Receive error 1
2019-06-06T09:51:38.329902> Receive error 1
2019-06-06T09:51:38.589948> Receive error 1
2019-06-06T09:51:38.850024> Receive error 1
2019-06-06T09:51:39.110135> Receive error 1
2019-06-06T09:51:39.370368> Receive error 1
2019-06-06T09:51:39.630976> Receive error 1
2019-06-06T09:51:39.891028> Receive error 1
2019-06-06T09:51:40.151105> Receive error 1
2019-06-06T09:51:40.411155> Receive error 1
2019-06-06T09:51:40.671464> Receive error 1
2019-06-06T09:51:40.935268> Receive error 1
2019-06-06T09:51:41.195248> Receive error 1
2019-06-06T09:51:41.455170> Receive error 1
2019-06-06T09:51:41.715123> Receive error 1
2019-06-06T09:51:41.975024> Receive error 1
2019-06-06T09:51:42.235476> Receive error 1
2019-06-06T09:51:42.496010> Receive error 1
2019-06-06T09:51:42.756641> Receive error 1
2019-06-06T09:51:43.016738> Receive error 1
2019-06-06T09:51:43.276890> Receive error 1
2019-06-06T09:51:43.536983> Receive error 1
2019-06-06T09:51:43.797073> Receive error 1
2019-06-06T09:51:44.057164> Receive error 1
2019-06-06T09:51:44.318362> Receive error 1
2019-06-06T09:51:44.578469> Receive error 1
2019-06-06T09:51:44.838688> Receive error 1
2019-06-06T09:51:45.098702> Receive error 1
2019-06-06T09:51:45.358984> Receive error 1
2019-06-06T09:51:45.619029> Receive error 1
2019-06-06T09:51:45.879162> Receive error 1
2019-06-06T09:51:46.139197> Receive error 1
2019-06-06T09:51:46.398771> Receive error 1
2019-06-06T09:51:46.659186> Receive error 1
2019-06-06T09:51:46.919054> Receive error 1
2019-06-06T09:51:47.179093> Receive error 1
2019-06-06T09:51:47.438947> Receive error 1
2019-06-06T09:51:47.698885> Receive error 1
2019-06-06T09:51:47.959327> Receive error 1
2019-06-06T09:51:48.218877> Receive error 1
2019-06-06T09:51:48.478802> Receive error 1
2019-06-06T09:51:48.738806> Receive error 1
2019-06-06T09:51:48.999294> Receive error 1
2019-06-06T09:51:49.260607> Receive error 1
2019-06-06T09:51:49.519618> Receive error 1
2019-06-06T09:51:49.779842> Receive error 1
2019-06-06T09:51:50.039801> Receive error 1
2019-06-06T09:51:50.299837> Receive error 1
2019-06-06T09:51:50.560066> Receive error 1
2019-06-06T09:51:50.560780> Low-level gw status ON
2019-06-06T09:51:50.820032> Receive error 1
2019-06-06T09:51:51.080165> Receive error 1
2019-06-06T09:51:51.340204> Receive error 1
2019-06-06T09:51:51.600383> Receive error 1
2019-06-06T09:51:51.860498> Receive error 1
2019-06-06T09:51:52.120671> Receive error 1
2019-06-06T09:51:52.380275> Receive error 1
2019-06-06T09:51:52.640296> Receive error 1
2019-06-06T09:51:52.900746> Receive error 1
2019-06-06T09:51:53.160925> Receive error 1
2019-06-06T09:51:53.420907> Receive error 1
2019-06-06T09:51:53.681009> Receive error 1
2019-06-06T09:51:53.951140> Receive error 1
2019-06-06T09:51:54.210966> Receive error 1
2019-06-06T09:51:54.470894> Receive error 1
2019-06-06T09:51:54.730837> Receive error 1
2019-06-06T09:51:54.991356> Receive error 1
2019-06-06T09:51:55.251460> Receive error 1
2019-06-06T09:51:55.511559> Receive error 1
2019-06-06T09:51:55.771624> Receive error 1
2019-06-06T09:51:56.031254> Receive error 1
2019-06-06T09:51:56.291348> Receive error 1
2019-06-06T09:51:56.551288> Receive error 1
2019-06-06T09:51:56.811744> Receive error 1
2019-06-06T09:51:57.071913> Receive error 1
2019-06-06T09:51:57.331923> Receive error 1
2019-06-06T09:51:57.592165> Receive error 1
2019-06-06T09:51:57.855322> Receive error 1
2019-06-06T09:51:58.115689> Receive error 1
2019-06-06T09:51:58.375593> Receive error 1
2019-06-06T09:51:58.636050> Receive error 1
2019-06-06T09:51:58.896355> Receive error 1
2019-06-06T09:51:59.155956> Receive error 1
2019-06-06T09:51:59.415868> Receive error 1
2019-06-06T09:51:59.675824> Receive error 1
2019-06-06T09:51:59.936293> Receive error 1
2019-06-06T09:52:00.196471> Receive error 1
2019-06-06T09:52:00.456926> Receive error 1
2019-06-06T09:52:00.717046> Receive error 1
2019-06-06T09:52:00.976662> Receive error 1
2019-06-06T09:52:01.236657> Receive error 1
2019-06-06T09:52:01.496575> Receive error 1
2019-06-06T09:52:01.757021> Receive error 1
2019-06-06T09:52:02.017113> Receive error 1
2019-06-06T09:52:02.277153> Receive error 1
2019-06-06T09:52:02.537293> Receive error 1
2019-06-06T09:52:02.797338> Receive error 1
2019-06-06T09:52:03.057463> Receive error 1
2019-06-06T09:52:03.317759> Receive error 1
2019-06-06T09:52:03.577551> Receive error 1
2019-06-06T09:52:03.837531> Receive error 1
2019-06-06T09:52:04.097942> Receive error 1
2019-06-06T09:52:04.358026> Receive error 1
2019-06-06T09:52:04.618078> Receive error 1
2019-06-06T09:52:04.878171> Receive error 1
2019-06-06T09:52:05.137769> Receive error 1
2019-06-06T09:52:05.397778> Receive error 1
2019-06-06T09:52:05.657738> Receive error 1
2019-06-06T09:52:05.918193> Receive error 1
2019-06-06T09:52:06.178429> Receive error 1
2019-06-06T09:52:06.179460> Low-level gw status ON
2019-06-06T09:52:06.438638> Receive error 1
2019-06-06T09:52:06.698670> Receive error 1
2019-06-06T09:52:06.958760> Receive error 1
2019-06-06T09:52:07.219203> Receive error 1
2019-06-06T09:52:07.479014> Receive error 1
2019-06-06T09:52:07.739663> Receive error 1
2019-06-06T09:52:08.000159> Receive error 1
2019-06-06T09:52:08.260192> Receive error 1
2019-06-06T09:52:08.520116> Receive error 1
2019-06-06T09:52:08.780045> Receive error 1
2019-06-06T09:52:09.040279> Receive error 1
2019-06-06T09:52:09.300714> Receive error 1
2019-06-06T09:52:09.560737> Receive error 1
2019-06-06T09:52:09.821130> Receive error 1
2019-06-06T09:52:10.081864> Receive error 1
2019-06-06T09:52:10.341528> Receive error 1
2019-06-06T09:52:10.602351> Receive error 1
2019-06-06T09:52:10.863032> Receive error 1
2019-06-06T09:52:11.123482> Receive error 1
2019-06-06T09:52:11.384141> Receive error 1
2019-06-06T09:52:11.644772> Receive error 1
2019-06-06T09:52:11.905351> Receive error 1
2019-06-06T09:52:12.165865> Receive error 1
2019-06-06T09:52:12.426398> Receive error 1
2019-06-06T09:52:12.686953> Receive error 1
2019-06-06T09:52:12.947501> Receive error 1
2019-06-06T09:52:13.207516> Receive error 1
2019-06-06T09:52:13.467436> Receive error 1
2019-06-06T09:52:13.727820> Receive error 1
2019-06-06T09:52:13.988286> Receive error 1
2019-06-06T09:52:14.248964> Receive error 1
2019-06-06T09:52:14.509906> Receive error 1
2019-06-06T09:52:14.771269> Receive error 1
2019-06-06T09:52:15.031063> Receive error 1
2019-06-06T09:52:15.291459> Receive error 1
2019-06-06T09:52:15.551709> Receive error 1
2019-06-06T09:52:15.812219> Receive error 1
2019-06-06T09:52:16.072654> Receive error 1
2019-06-06T09:52:16.334195> Receive error 1
2019-06-06T09:52:16.595706> Receive error 1
2019-06-06T09:52:16.857293> Receive error 1
2019-06-06T09:52:17.117948> Receive error 1
2019-06-06T09:52:17.377992> Receive error 1
2019-06-06T09:52:17.638295> Receive error 1
2019-06-06T09:52:17.898462> Receive error 1
2019-06-06T09:52:18.159206> Receive error 1
2019-06-06T09:52:18.419810> Receive error 1
2019-06-06T09:52:18.680029> Receive error 1
2019-06-06T09:52:18.939938> Receive error 1
2019-06-06T09:52:19.199997> Receive error 1
2019-06-06T09:52:19.460293> Receive error 1
2019-06-06T09:52:19.719967> Receive error 1
2019-06-06T09:52:19.980173> Receive error 1
2019-06-06T09:52:20.241297> Receive error 1
2019-06-06T09:52:20.501615> Receive error 1
2019-06-06T09:52:20.762021> Receive error 1
2019-06-06T09:52:21.022312> Receive error 1
2019-06-06T09:52:21.282521> Receive error 1
2019-06-06T09:52:21.542816> Receive error 1
2019-06-06T09:52:21.803672> Receive error 1
2019-06-06T09:52:21.804498> Low-level gw status ON
2019-06-06T09:52:22.064204> Receive error 1
2019-06-06T09:52:22.324841> Receive error 1
2019-06-06T09:52:22.584850> Receive error 1
2019-06-06T09:52:22.845112> Receive error 1
2019-06-06T09:52:23.105329> Receive error 1
2019-06-06T09:52:23.365985> Receive error 1
2019-06-06T09:52:23.626625> Receive error 1
2019-06-06T09:52:23.886704> Receive error 1
2019-06-06T09:52:24.146806> Receive error 1
2019-06-06T09:52:24.407316> Receive error 1
2019-06-06T09:52:24.666942> Receive error 1
2019-06-06T09:52:24.926851> Receive error 1
2019-06-06T09:52:25.187035> Receive error 1
2019-06-06T09:52:25.447489> Receive error 1
2019-06-06T09:52:25.707875> Receive error 1
2019-06-06T09:52:25.967907> Receive error 1
2019-06-06T09:52:26.231641> Receive error 1
2019-06-06T09:52:26.491074> Receive error 1
2019-06-06T09:52:26.751237> Receive error 1
2019-06-06T09:52:27.011753> Receive error 1
2019-06-06T09:52:27.273312> Receive error 1
2019-06-06T09:52:27.533432> Receive error 1
2019-06-06T09:52:27.793576> Receive error 1
2019-06-06T09:52:28.053859> Receive error 1
2019-06-06T09:52:28.313990> Receive error 1
2019-06-06T09:52:28.574246> Receive error 1
2019-06-06T09:52:28.834397> Receive error 1
2019-06-06T09:52:29.094498> Receive error 1
2019-06-06T09:52:29.354627> Receive error 1
2019-06-06T09:52:29.614734> Receive error 1
2019-06-06T09:52:29.874359> Receive error 1
2019-06-06T09:52:30.134351> Receive error 1
2019-06-06T09:52:30.394689> Receive error 1
2019-06-06T09:52:30.654965> Receive error 1
2019-06-06T09:52:30.914922> Receive error 1
2019-06-06T09:52:31.176436> Receive error 1
2019-06-06T09:52:31.437086> Receive error 1
2019-06-06T09:52:31.696848> Receive error 1
2019-06-06T09:52:31.956904> Receive error 1
2019-06-06T09:52:32.216799> Receive error 1
2019-06-06T09:52:32.476906> Receive error 1
2019-06-06T09:52:32.736794> Receive error 1
2019-06-06T09:52:32.997242> Receive error 1
2019-06-06T09:52:33.257490> Receive error 1
2019-06-06T09:52:33.518106> Receive error 1
2019-06-06T09:52:33.778564> Receive error 1
2019-06-06T09:52:34.039227> Receive error 1
2019-06-06T09:52:34.299827> Receive error 1
2019-06-06T09:52:34.560365> Receive error 1
2019-06-06T09:52:34.820874> Receive error 1
2019-06-06T09:52:35.092212> Receive error 1
2019-06-06T09:52:35.352702> Receive error 1
2019-06-06T09:52:35.613385> Receive error 1
2019-06-06T09:52:35.874159> Receive error 1
2019-06-06T09:52:36.134785> Receive error 1
2019-06-06T09:52:36.395347> Receive error 1
2019-06-06T09:52:36.655892> Receive error 1
2019-06-06T09:52:36.916290> Receive error 1
2019-06-06T09:52:37.176557> Receive error 1
2019-06-06T09:52:37.437707> Receive error 1
2019-06-06T09:52:37.438309> Low-level gw status ON
2019-06-06T09:52:37.698103> Receive error 1
2019-06-06T09:52:37.958291> Receive error 1
2019-06-06T09:52:38.219001> Receive error 1
2019-06-06T09:52:38.478977> Receive error 1
2019-06-06T09:52:38.739409> Receive error 1
2019-06-06T09:52:39.000449> Receive error 1
2019-06-06T09:52:39.262174> Receive error 1
2019-06-06T09:52:39.523774> Receive error 1
2019-06-06T09:52:39.785310> Receive error 1
2019-06-06T09:52:40.047432> Receive error 1
2019-06-06T09:52:40.309318> Receive error 1
2019-06-06T09:52:40.570728> Receive error 1
2019-06-06T09:52:40.831321> Receive error 1
2019-06-06T09:52:41.091852> Receive error 1
2019-06-06T09:52:41.352690> Receive error 1
2019-06-06T09:52:41.613551> Receive error 1
2019-06-06T09:52:41.874136> Receive error 1
2019-06-06T09:52:42.134660> Receive error 1
2019-06-06T09:52:42.395204> Receive error 1
2019-06-06T09:52:42.655784> Receive error 1
2019-06-06T09:52:42.916120> Receive error 1
2019-06-06T09:52:43.176527> Receive error 1
2019-06-06T09:52:43.437208> Receive error 1
2019-06-06T09:52:43.698332> Receive error 1
2019-06-06T09:52:43.958008> Receive error 1
2019-06-06T09:52:44.218446> Receive error 1
2019-06-06T09:52:44.478680> Receive error 1
2019-06-06T09:52:44.738838> Receive error 1
2019-06-06T09:52:44.998942> Receive error 1
2019-06-06T09:52:45.263265> Receive error 1
2019-06-06T09:52:45.520997> Receive error 1
2019-06-06T09:52:45.781153> Receive error 1
2019-06-06T09:52:46.041175> Receive error 1
2019-06-06T09:52:46.304450> Receive error 1
2019-06-06T09:52:46.561556> Receive error 1
2019-06-06T09:52:46.821771> Receive error 1
2019-06-06T09:52:47.081964> Receive error 1
2019-06-06T09:52:47.342018> Receive error 1
2019-06-06T09:52:47.601787> Receive error 1
2019-06-06T09:52:47.861698> Receive error 1
2019-06-06T09:52:48.122187> Receive error 1
2019-06-06T09:52:48.381943> Receive error 1
2019-06-06T09:52:48.642260> Receive error 1
2019-06-06T09:52:48.902231> Receive error 1
2019-06-06T09:52:49.162160> Receive error 1
2019-06-06T09:52:49.422088> Receive error 1
2019-06-06T09:52:49.682533> Receive error 1
2019-06-06T09:52:49.942672> Receive error 1
2019-06-06T09:52:50.202746> Receive error 1
2019-06-06T09:52:50.462753> Receive error 1
2019-06-06T09:52:50.722422> Receive error 1
2019-06-06T09:52:50.982390> Receive error 1
2019-06-06T09:52:51.242911> Receive error 1
2019-06-06T09:52:51.502929> Receive error 1
2019-06-06T09:52:51.763070> Receive error 1
2019-06-06T09:52:52.023196> Receive error 1
2019-06-06T09:52:52.283445> Receive error 1
2019-06-06T09:52:52.543260> Receive error 1
2019-06-06T09:52:52.803213> Receive error 1
2019-06-06T09:52:53.063758> Receive error 1
2019-06-06T09:52:53.064395> Low-level gw status ON
2019-06-06T09:52:53.323771> Receive error 1
2019-06-06T09:52:53.583821> Receive error 1
2019-06-06T09:52:53.844300> Receive error 1
2019-06-06T09:52:54.103797> Receive error 1
2019-06-06T09:52:54.364084> Receive error 1
2019-06-06T09:52:54.624656> Receive error 1
2019-06-06T09:52:54.884731> Receive error 1
2019-06-06T09:52:55.145064> Receive error 1
2019-06-06T09:52:55.405169> Receive error 1
2019-06-06T09:52:55.665141> Receive error 1
2019-06-06T09:52:55.925320> Receive error 1
2019-06-06T09:52:56.185478> Receive error 1
2019-06-06T09:52:56.445573> Receive error 1
2019-06-06T09:52:56.705704> Receive error 1
2019-06-06T09:52:56.965460> Receive error 1
2019-06-06T09:52:57.225425> Receive error 1
2019-06-06T09:52:57.485828> Receive error 1
2019-06-06T09:52:57.745867> Receive error 1
2019-06-06T09:52:58.006020> Receive error 1
2019-06-06T09:52:58.266250> Receive error 1
2019-06-06T09:52:58.526295> Receive error 1
2019-06-06T09:52:58.786402> Receive error 1
2019-06-06T09:52:59.046403> Receive error 1
2019-06-06T09:52:59.306391> Receive error 1
2019-06-06T09:52:59.566884> Receive error 1
2019-06-06T09:52:59.827136> Receive error 1
2019-06-06T09:53:00.087106> Receive error 1
2019-06-06T09:53:00.347038> Receive error 1
2019-06-06T09:53:00.607544> Receive error 1
2019-06-06T09:53:00.867296> Receive error 1
2019-06-06T09:53:01.127213> Receive error 1
2019-06-06T09:53:01.387664> Receive error 1
2019-06-06T09:53:01.647786> Receive error 1
2019-06-06T09:53:01.907851> Receive error 1
2019-06-06T09:53:02.168822> Receive error 1
2019-06-06T09:53:02.428407> Receive error 1
2019-06-06T09:53:02.688343> Receive error 1
2019-06-06T09:53:02.948276> Receive error 1
2019-06-06T09:53:03.208886> Receive error 1
2019-06-06T09:53:03.469041> Receive error 1
2019-06-06T09:53:03.728618> Receive error 1
2019-06-06T09:53:03.988466> Receive error 1
2019-06-06T09:53:04.249000> Receive error 1
2019-06-06T09:53:04.509100> Receive error 1
2019-06-06T09:53:04.769298> Receive error 1
2019-06-06T09:53:05.029074> Receive error 1
2019-06-06T09:53:05.290351> Receive error 1
2019-06-06T09:53:05.550269> Receive error 1
2019-06-06T09:53:05.810649> Receive error 1
2019-06-06T09:53:06.070746> Receive error 1
2019-06-06T09:53:06.330783> Receive error 1
2019-06-06T09:53:06.590895> Receive error 1
2019-06-06T09:53:06.851042> Receive error 1
2019-06-06T09:53:07.110646> Receive error 1
2019-06-06T09:53:07.370610> Receive error 1
2019-06-06T09:53:07.630556> Receive error 1
2019-06-06T09:53:07.891032> Receive error 1
2019-06-06T09:53:08.150613> Receive error 1
2019-06-06T09:53:08.410596> Receive error 1
2019-06-06T09:53:08.670654> Receive error 1
2019-06-06T09:53:08.671144> Low-level gw status ON
2019-06-06T09:53:08.931116> Receive error 1
2019-06-06T09:53:09.191310> Receive error 1
2019-06-06T09:53:09.451340> Receive error 1
2019-06-06T09:53:09.711443> Receive error 1
2019-06-06T09:53:09.971511> Receive error 1
2019-06-06T09:53:10.231732> Receive error 1
2019-06-06T09:53:10.492000> Receive error 1
2019-06-06T09:53:10.752387> Receive error 1
2019-06-06T09:53:11.015166> Receive error 1
2019-06-06T09:53:11.275105> Receive error 1
2019-06-06T09:53:11.535520> Receive error 1
2019-06-06T09:53:11.795181> Receive error 1
2019-06-06T09:53:12.055085> Receive error 1
2019-06-06T09:53:12.315078> Receive error 1
2019-06-06T09:53:12.575514> Receive error 1
2019-06-06T09:53:12.835760> Receive error 1
2019-06-06T09:53:13.095823> Receive error 1
2019-06-06T09:53:13.356498> Receive error 1
2019-06-06T09:53:13.616497> Receive error 1
2019-06-06T09:53:13.876657> Receive error 1
2019-06-06T09:53:14.136697> Receive error 1
2019-06-06T09:53:14.396799> Receive error 1
2019-06-06T09:53:14.656916> Receive error 1
2019-06-06T09:53:14.916989> Receive error 1
2019-06-06T09:53:15.177053> Receive error 1
2019-06-06T09:53:15.437109> Receive error 1
2019-06-06T09:53:15.697215> Receive error 1
2019-06-06T09:53:15.957686> Receive error 1
2019-06-06T09:53:16.217382> Receive error 1
2019-06-06T09:53:16.477870> Receive error 1
2019-06-06T09:53:16.738160> Receive error 1
2019-06-06T09:53:16.998117> Receive error 1
2019-06-06T09:53:17.258128> Receive error 1
2019-06-06T09:53:17.518637> Receive error 1
2019-06-06T09:53:17.778170> Receive error 1
2019-06-06T09:53:18.038169> Receive error 1
2019-06-06T09:53:18.298155> Receive error 1
2019-06-06T09:53:18.558814> Receive error 1
2019-06-06T09:53:18.818774> Receive error 1
2019-06-06T09:53:19.078988> Receive error 1
2019-06-06T09:53:19.339103> Receive error 1
2019-06-06T09:53:19.599170> Receive error 1
2019-06-06T09:53:19.859262> Receive error 1
2019-06-06T09:53:20.119312> Receive error 1
2019-06-06T09:53:20.379384> Receive error 1
2019-06-06T09:53:20.639585> Receive error 1
2019-06-06T09:53:20.899643> Receive error 1
2019-06-06T09:53:21.159663> Receive error 1
2019-06-06T09:53:21.419759> Receive error 1
2019-06-06T09:53:21.679791> Receive error 1
2019-06-06T09:53:21.939962> Receive error 1
2019-06-06T09:53:22.200831> Receive error 1
2019-06-06T09:53:22.461188> Receive error 1
2019-06-06T09:53:22.721560> Receive error 1
2019-06-06T09:53:22.982161> Receive error 1
2019-06-06T09:53:23.242671> Receive error 1
2019-06-06T09:53:23.503253> Receive error 1
2019-06-06T09:53:23.763726> Receive error 1
2019-06-06T09:53:24.024408> Receive error 1
2019-06-06T09:53:24.285110> Receive error 1
2019-06-06T09:53:24.285735> Low-level gw status ON
2019-06-06T09:53:24.546326> Receive error 1
2019-06-06T09:53:24.806590> Receive error 1
2019-06-06T09:53:25.066489> Receive error 1
2019-06-06T09:53:25.326889> Receive error 1
2019-06-06T09:53:25.587438> Receive error 1
2019-06-06T09:53:25.847937> Receive error 1
2019-06-06T09:53:26.108418> Receive error 1
2019-06-06T09:53:26.368673> Receive error 1
2019-06-06T09:53:26.628641> Receive error 1
2019-06-06T09:53:26.888728> Receive error 1
2019-06-06T09:53:27.149086> Receive error 1
2019-06-06T09:53:27.410004> Receive error 1
2019-06-06T09:53:27.670304> Receive error 1
2019-06-06T09:53:27.930314> Receive error 1
2019-06-06T09:53:28.190274> Receive error 1
2019-06-06T09:53:28.450646> Receive error 1
2019-06-06T09:53:28.710699> Receive error 1
2019-06-06T09:53:28.970628> Receive error 1
2019-06-06T09:53:29.231749> Receive error 1
2019-06-06T09:53:29.491314> Receive error 1
2019-06-06T09:53:29.751781> Receive error 1
2019-06-06T09:53:30.012277> Receive error 1
2019-06-06T09:53:30.272349> Receive error 1
2019-06-06T09:53:30.535603> Receive error 1
2019-06-06T09:53:30.795554> Receive error 1
2019-06-06T09:53:31.056130> Receive error 1
2019-06-06T09:53:31.316083> Receive error 1
2019-06-06T09:53:31.576118> Receive error 1
2019-06-06T09:53:31.836189> Receive error 1
2019-06-06T09:53:32.096663> Receive error 1
2019-06-06T09:53:32.356700> Receive error 1
2019-06-06T09:53:32.617322> Receive error 1
2019-06-06T09:53:32.879829> Receive error 1
2019-06-06T09:53:33.143022> Receive error 1
2019-06-06T09:53:33.400038> Receive error 1
2019-06-06T09:53:33.660072> Receive error 1
2019-06-06T09:53:33.920006> Receive error 1
2019-06-06T09:53:34.179995> Receive error 1
2019-06-06T09:53:34.439980> Receive error 1
2019-06-06T09:53:34.700428> Receive error 1
2019-06-06T09:53:34.960415> Receive error 1
2019-06-06T09:53:35.220587> Receive error 1
2019-06-06T09:53:35.480691> Receive error 1
2019-06-06T09:53:35.740867> Receive error 1
2019-06-06T09:53:36.001283> Receive error 1
2019-06-06T09:53:36.261896> Receive error 1
2019-06-06T09:53:36.522037> Receive error 1
2019-06-06T09:53:36.782290> Receive error 1
2019-06-06T09:53:37.042721> Receive error 1
2019-06-06T09:53:37.303392> Receive error 1
2019-06-06T09:53:37.563979> Receive error 1
2019-06-06T09:53:37.824531> Receive error 1
2019-06-06T09:53:38.084958> Receive error 1
2019-06-06T09:53:38.345523> Receive error 1
2019-06-06T09:53:38.606439> Receive error 1
2019-06-06T09:53:38.866506> Receive error 1
2019-06-06T09:53:39.126399> Receive error 1
2019-06-06T09:53:39.386541> Receive error 1
2019-06-06T09:53:39.646993> Receive error 1
2019-06-06T09:53:39.907413> Receive error 1
2019-06-06T09:53:39.908060> Low-level gw status ON
2019-06-06T09:53:40.167339> Receive error 1
2019-06-06T09:53:40.427535> Receive error 1
2019-06-06T09:53:40.687615> Receive error 1
2019-06-06T09:53:40.947767> Receive error 1
2019-06-06T09:53:41.208173> Receive error 1
2019-06-06T09:53:41.468070> Receive error 1
2019-06-06T09:53:41.728194> Receive error 1
2019-06-06T09:53:41.987764> Receive error 1
2019-06-06T09:53:42.247663> Receive error 1
2019-06-06T09:53:42.507767> Receive error 1
2019-06-06T09:53:42.768201> Receive error 1
2019-06-06T09:53:43.028269> Receive error 1
2019-06-06T09:53:43.288725> Receive error 1
2019-06-06T09:53:43.548921> Receive error 1
2019-06-06T09:53:43.809682> Receive error 1
2019-06-06T09:53:44.069152> Receive error 1
2019-06-06T09:53:44.329449> Receive error 1
2019-06-06T09:53:44.589894> Receive error 1
2019-06-06T09:53:44.849324> Receive error 1
2019-06-06T09:53:45.109344> Receive error 1
2019-06-06T09:53:45.369817> Receive error 1
2019-06-06T09:53:45.630106> Receive error 1
2019-06-06T09:53:45.889554> Receive error 1
2019-06-06T09:53:46.149477> Receive error 1
2019-06-06T09:53:46.409391> Receive error 1
2019-06-06T09:53:46.669877> Receive error 1
2019-06-06T09:53:46.930150> Receive error 1
2019-06-06T09:53:47.190199> Receive error 1
2019-06-06T09:53:47.450298> Receive error 1
2019-06-06T09:53:47.710510> Receive error 1
2019-06-06T09:53:47.970460> Receive error 1
2019-06-06T09:53:48.230620> Receive error 1
2019-06-06T09:53:48.490869> Receive error 1
2019-06-06T09:53:48.750850> Receive error 1
2019-06-06T09:53:49.010972> Receive error 1
2019-06-06T09:53:49.271084> Receive error 1
2019-06-06T09:53:49.531212> Receive error 1
2019-06-06T09:53:49.791323> Receive error 1
2019-06-06T09:53:50.051510> Receive error 1
2019-06-06T09:53:50.317080> Receive error 1
2019-06-06T09:53:50.577024> Receive error 1
2019-06-06T09:53:50.837557> Receive error 1
2019-06-06T09:53:51.097597> Receive error 1
2019-06-06T09:53:51.357798> Receive error 1
2019-06-06T09:53:51.617895> Receive error 1
2019-06-06T09:53:51.878476> Receive error 1
2019-06-06T09:53:52.138070> Receive error 1
2019-06-06T09:53:52.398145> Receive error 1
2019-06-06T09:53:52.658391> Receive error 1
2019-06-06T09:53:52.918580> Receive error 1
2019-06-06T09:53:53.178777> Receive error 1
2019-06-06T09:53:53.439461> Receive error 1
2019-06-06T09:53:53.699734> Receive error 1
2019-06-06T09:53:53.959855> Receive error 1
2019-06-06T09:53:54.219973> Receive error 1
2019-06-06T09:53:54.479596> Receive error 1
2019-06-06T09:53:54.739546> Receive error 1
2019-06-06T09:53:55.000024> Receive error 1
2019-06-06T09:53:55.260158> Receive error 1
2019-06-06T09:53:55.519945> Receive error 1
2019-06-06T09:53:55.520429> Low-level gw status ON
2019-06-06T09:53:55.779979> Receive error 1
2019-06-06T09:53:56.040650> Receive error 1
2019-06-06T09:53:56.300188> Receive error 1
2019-06-06T09:53:56.560129> Receive error 1
2019-06-06T09:53:56.820072> Receive error 1
2019-06-06T09:53:57.080624> Receive error 1
2019-06-06T09:53:57.340659> Receive error 1
2019-06-06T09:53:57.600706> Receive error 1
2019-06-06T09:53:57.860883> Receive error 1
2019-06-06T09:53:58.121743> Receive error 1
2019-06-06T09:53:58.381214> Receive error 1
2019-06-06T09:53:58.641348> Receive error 1
2019-06-06T09:53:58.902186> Receive error 1
2019-06-06T09:53:59.161577> Receive error 1
2019-06-06T09:53:59.421631> Receive error 1
2019-06-06T09:53:59.681732> Receive error 1
2019-06-06T09:53:59.941894> Receive error 1
2019-06-06T09:54:00.202066> Receive error 1
2019-06-06T09:54:00.462107> Receive error 1
2019-06-06T09:54:00.722250> Receive error 1
2019-06-06T09:54:00.982332> Receive error 1
2019-06-06T09:54:01.243736> Receive error 1
2019-06-06T09:54:01.503829> Receive error 1
2019-06-06T09:54:01.763741> Receive error 1
2019-06-06T09:54:02.024195> Receive error 1
2019-06-06T09:54:02.284315> Receive error 1
2019-06-06T09:54:02.544496> Receive error 1
2019-06-06T09:54:02.804564> Receive error 1
2019-06-06T09:54:03.064672> Receive error 1
2019-06-06T09:54:03.324826> Receive error 1
2019-06-06T09:54:03.584889> Receive error 1
2019-06-06T09:54:03.844991> Receive error 1
2019-06-06T09:54:04.105853> Receive error 1
2019-06-06T09:54:04.365381> Receive error 1
2019-06-06T09:54:04.625559> Receive error 1
2019-06-06T09:54:04.885655> Receive error 1
2019-06-06T09:54:05.145762> Receive error 1
2019-06-06T09:54:05.405841> Receive error 1
2019-06-06T09:54:05.665961> Receive error 1
2019-06-06T09:54:05.926081> Receive error 1
2019-06-06T09:54:06.186113> Receive error 1
2019-06-06T09:54:06.446202> Receive error 1
2019-06-06T09:54:06.705790> Receive error 1
2019-06-06T09:54:06.965782> Receive error 1
2019-06-06T09:54:07.225817> Receive error 1
2019-06-06T09:54:07.485797> Receive error 1
2019-06-06T09:54:07.745746> Receive error 1
2019-06-06T09:54:08.005839> Receive error 1
2019-06-06T09:54:08.265782> Receive error 1
2019-06-06T09:54:08.525699> Receive error 1
2019-06-06T09:54:08.785645> Receive error 1
2019-06-06T09:54:09.046081> Receive error 1
2019-06-06T09:54:09.306173> Receive error 1
2019-06-06T09:54:09.566263> Receive error 1
2019-06-06T09:54:09.825883> Receive error 1
2019-06-06T09:54:10.085851> Receive error 1
2019-06-06T09:54:10.345814> Receive error 1
2019-06-06T09:54:10.606220> Receive error 1
2019-06-06T09:54:10.866333> Receive error 1
2019-06-06T09:54:11.126493> Receive error 1
2019-06-06T09:54:11.127209> Low-level gw status ON
2019-06-06T09:54:11.386638> Receive error 1
2019-06-06T09:54:11.646753> Receive error 1
2019-06-06T09:54:11.906803> Receive error 1
2019-06-06T09:54:12.167010> Receive error 1
2019-06-06T09:54:12.426636> Receive error 1
2019-06-06T09:54:12.686822> Receive error 1
2019-06-06T09:54:12.946847> Receive error 1
2019-06-06T09:54:13.206803> Receive error 1
2019-06-06T09:54:13.466738> Receive error 1
2019-06-06T09:54:13.726665> Receive error 1
2019-06-06T09:54:13.987176> Receive error 1
2019-06-06T09:54:14.247300> Receive error 1
2019-06-06T09:54:14.507382> Receive error 1
2019-06-06T09:54:14.767477> Receive error 1
2019-06-06T09:54:15.027582> Receive error 1
2019-06-06T09:54:15.287842> Receive error 1
2019-06-06T09:54:15.547856> Receive error 1
2019-06-06T09:54:15.807965> Receive error 1
2019-06-06T09:54:16.068224> Receive error 1
2019-06-06T09:54:16.328203> Receive error 1
2019-06-06T09:54:16.588269> Receive error 1
2019-06-06T09:54:16.848398> Receive error 1
2019-06-06T09:54:17.108594> Receive error 1
2019-06-06T09:54:17.368789> Receive error 1
2019-06-06T09:54:17.629704> Receive error 1
2019-06-06T09:54:17.889750> Receive error 1
2019-06-06T09:54:18.150253> Receive error 1
2019-06-06T09:54:18.411200> Receive error 1
2019-06-06T09:54:18.671108> Receive error 1
2019-06-06T09:54:18.931477> Receive error 1
2019-06-06T09:54:19.191730> Receive error 1
2019-06-06T09:54:19.452114> Receive error 1
2019-06-06T09:54:19.712333> Receive error 1
2019-06-06T09:54:19.972768> Receive error 1
2019-06-06T09:54:20.232942> Receive error 1
2019-06-06T09:54:20.493019> Receive error 1
2019-06-06T09:54:20.753007> Receive error 1
2019-06-06T09:54:21.013118> Receive error 1
2019-06-06T09:54:21.273234> Receive error 1
2019-06-06T09:54:21.533190> Receive error 1
2019-06-06T09:54:21.793814> Receive error 1
2019-06-06T09:54:22.054389> Receive error 1
2019-06-06T09:54:22.314888> Receive error 1
2019-06-06T09:54:22.575615> Receive error 1
2019-06-06T09:54:22.835880> Receive error 1
2019-06-06T09:54:23.095802> Receive error 1
2019-06-06T09:54:23.356166> Receive error 1
2019-06-06T09:54:23.616937> Receive error 1
2019-06-06T09:54:23.876654> Receive error 1
2019-06-06T09:54:24.136913> Receive error 1
2019-06-06T09:54:24.396799> Receive error 1
2019-06-06T09:54:24.656636> Receive error 1
2019-06-06T09:54:24.916633> Receive error 1
2019-06-06T09:54:25.177050> Receive error 1
2019-06-06T09:54:25.437694> Receive error 1
2019-06-06T09:54:25.698170> Receive error 1
2019-06-06T09:54:25.958925> Receive error 1
2019-06-06T09:54:26.218905> Receive error 1
2019-06-06T09:54:26.478857> Receive error 1
2019-06-06T09:54:26.738889> Receive error 1
2019-06-06T09:54:26.739264> Low-level gw status ON
2019-06-06T09:54:26.999742> Receive error 1
2019-06-06T09:54:27.260210> Receive error 1
2019-06-06T09:54:27.520692> Receive error 1
2019-06-06T09:54:27.781215> Receive error 1
2019-06-06T09:54:28.041275> Receive error 1
2019-06-06T09:54:28.301210> Receive error 1
2019-06-06T09:54:28.561596> Receive error 1
2019-06-06T09:54:28.822137> Receive error 1
2019-06-06T09:54:29.082637> Receive error 1
2019-06-06T09:54:29.342752> Receive error 1
2019-06-06T09:54:29.602718> Receive error 1
2019-06-06T09:54:29.862831> Receive error 1
2019-06-06T09:54:30.122806> Receive error 1
2019-06-06T09:54:30.382743> Receive error 1
2019-06-06T09:54:30.642828> Receive error 1
2019-06-06T09:54:30.903208> Receive error 1
2019-06-06T09:54:31.163687> Receive error 1
2019-06-06T09:54:31.424237> Receive error 1
2019-06-06T09:54:31.684454> Receive error 1
2019-06-06T09:54:31.944584> Receive error 1
2019-06-06T09:54:32.205236> Receive error 1
2019-06-06T09:54:32.465306> Receive error 1
2019-06-06T09:54:32.725441> Receive error 1
2019-06-06T09:54:32.985572> Receive error 1
2019-06-06T09:54:33.247088> Receive error 1
2019-06-06T09:54:33.507123> Receive error 1
2019-06-06T09:54:33.767680> Receive error 1
2019-06-06T09:54:34.027237> Receive error 1
2019-06-06T09:54:34.287452> Receive error 1
2019-06-06T09:54:34.547893> Receive error 1
2019-06-06T09:54:34.808116> Receive error 1
2019-06-06T09:54:35.067801> Receive error 1
2019-06-06T09:54:35.329466> Receive error 1
2019-06-06T09:54:35.589311> Receive error 1
2019-06-06T09:54:35.849621> Receive error 1
2019-06-06T09:54:36.109694> Receive error 1
2019-06-06T09:54:36.369541> Receive error 1
2019-06-06T09:54:36.629484> Receive error 1
2019-06-06T09:54:36.889800> Receive error 1
2019-06-06T09:54:37.149840> Receive error 1
2019-06-06T09:54:37.410077> Receive error 1
2019-06-06T09:54:37.670117> Receive error 1
2019-06-06T09:54:37.930288> Receive error 1
2019-06-06T09:54:38.189956> Receive error 1
2019-06-06T09:54:38.449961> Receive error 1
2019-06-06T09:54:38.709913> Receive error 1
2019-06-06T09:54:38.970341> Receive error 1
2019-06-06T09:54:39.230344> Receive error 1
2019-06-06T09:54:39.491049> Receive error 1
2019-06-06T09:54:39.751619> Receive error 1
2019-06-06T09:54:40.011987> Receive error 1
2019-06-06T09:54:40.272382> Receive error 1
2019-06-06T09:54:40.532536> Receive error 1
2019-06-06T09:54:40.792916> Receive error 1
2019-06-06T09:54:41.052959> Receive error 1
2019-06-06T09:54:41.312831> Receive error 1
2019-06-06T09:54:41.572838> Receive error 1
2019-06-06T09:54:41.832847> Receive error 1
2019-06-06T09:54:42.093324> Receive error 1
2019-06-06T09:54:42.353542> Receive error 1
2019-06-06T09:54:42.354547> Low-level gw status ON
2019-06-06T09:54:42.613645> Receive error 1
2019-06-06T09:54:42.873701> Receive error 1
2019-06-06T09:54:43.133750> Receive error 1
2019-06-06T09:54:43.393766> Receive error 1
2019-06-06T09:54:43.653341> Receive error 1
2019-06-06T09:54:43.913577> Receive error 1
2019-06-06T09:54:44.174298> Receive error 1
2019-06-06T09:54:44.434852> Receive error 1
2019-06-06T09:54:44.695445> Receive error 1
2019-06-06T09:54:44.955952> Receive error 1
2019-06-06T09:54:45.216585> Receive error 1
2019-06-06T09:54:45.476983> Receive error 1
2019-06-06T09:54:45.737794> Receive error 1
2019-06-06T09:54:45.997536> Receive error 1
2019-06-06T09:54:46.258113> Receive error 1
2019-06-06T09:54:46.518928> Receive error 1
2019-06-06T09:54:46.779171> Receive error 1
2019-06-06T09:54:47.039340> Receive error 1
2019-06-06T09:54:47.299574> Receive error 1
2019-06-06T09:54:47.560391> Receive error 1
2019-06-06T09:54:47.820498> Receive error 1
2019-06-06T09:54:48.080583> Receive error 1
2019-06-06T09:54:48.340695> Receive error 1
2019-06-06T09:54:48.600732> Receive error 1
2019-06-06T09:54:48.861075> Receive error 1
2019-06-06T09:54:49.121395> Receive error 1
2019-06-06T09:54:49.381820> Receive error 1
2019-06-06T09:54:49.641931> Receive error 1
2019-06-06T09:54:49.902717> Receive error 1
2019-06-06T09:54:50.163250> Receive error 1
2019-06-06T09:54:50.423755> Receive error 1
2019-06-06T09:54:50.684134> Receive error 1
2019-06-06T09:54:50.944653> Receive error 1
2019-06-06T09:54:51.205162> Receive error 1
2019-06-06T09:54:51.465666> Receive error 1
2019-06-06T09:54:51.726491> Receive error 1
2019-06-06T09:54:51.987901> Receive error 1
2019-06-06T09:54:52.249103> Receive error 1
2019-06-06T09:54:52.510699> Receive error 1
2019-06-06T09:54:52.771179> Receive error 1
2019-06-06T09:54:53.031726> Receive error 1
2019-06-06T09:54:53.292283> Receive error 1
2019-06-06T09:54:53.552805> Receive error 1
2019-06-06T09:54:53.812853> Receive error 1
2019-06-06T09:54:54.073359> Receive error 1
2019-06-06T09:54:54.333867> Receive error 1
2019-06-06T09:54:54.594371> Receive error 1
2019-06-06T09:54:54.854960> Receive error 1
2019-06-06T09:54:55.115491> Receive error 1
2019-06-06T09:54:55.376001> Receive error 1
2019-06-06T09:54:55.636512> Receive error 1
2019-06-06T09:54:55.896961> Receive error 1
2019-06-06T09:54:56.157673> Receive error 1
2019-06-06T09:54:56.418193> Receive error 1
2019-06-06T09:54:56.687474> Receive error 1
2019-06-06T09:54:56.947959> Receive error 1
2019-06-06T09:54:57.208073> Receive error 1
2019-06-06T09:54:57.468730> Receive error 1
2019-06-06T09:54:57.729412> Receive error 1
2019-06-06T09:54:57.989018> Receive error 1
2019-06-06T09:54:57.989442> Low-level gw status ON
2019-06-06T09:54:58.249472> Receive error 1
2019-06-06T09:54:58.509792> Receive error 1
2019-06-06T09:54:58.770709> Receive error 1
2019-06-06T09:54:59.030800> Receive error 1
2019-06-06T09:54:59.291069> Receive error 1
2019-06-06T09:54:59.551385> Receive error 1
2019-06-06T09:54:59.812076> Receive error 1
2019-06-06T09:55:00.072604> Receive error 1
2019-06-06T09:55:00.333438> Receive error 1
2019-06-06T09:55:00.593993> Receive error 1
2019-06-06T09:55:00.854678> Receive error 1
2019-06-06T09:55:01.115771> Receive error 1
2019-06-06T09:55:01.376808> Receive error 1
2019-06-06T09:55:01.637339> Receive error 1
2019-06-06T09:55:01.897828> Receive error 1
2019-06-06T09:55:02.158282> Receive error 1
2019-06-06T09:55:02.418964> Receive error 1
2019-06-06T09:55:02.679498> Receive error 1
2019-06-06T09:55:02.939818> Receive error 1
2019-06-06T09:55:03.200165> Receive error 1
2019-06-06T09:55:03.460822> Receive error 1
2019-06-06T09:55:03.720914> Receive error 1
2019-06-06T09:55:03.981007> Receive error 1
2019-06-06T09:55:04.243925> Receive error 1
2019-06-06T09:55:04.503770> Receive error 1
2019-06-06T09:55:04.763882> Receive error 1
2019-06-06T09:55:05.023993> Receive error 1
2019-06-06T09:55:05.284794> Receive error 1
2019-06-06T09:55:05.544936> Receive error 1
2019-06-06T09:55:05.805055> Receive error 1
2019-06-06T09:55:06.065076> Receive error 1
2019-06-06T09:55:06.325307> Receive error 1
2019-06-06T09:55:06.585279> Receive error 1
2019-06-06T09:55:06.845371> Receive error 1
2019-06-06T09:55:07.105581> Receive error 1
2019-06-06T09:55:07.365604> Receive error 1
2019-06-06T09:55:07.625847> Receive error 1
2019-06-06T09:55:07.886116> Receive error 1
2019-06-06T09:55:08.146411> Receive error 1
2019-06-06T09:55:08.406796> Receive error 1
2019-06-06T09:55:08.666379> Receive error 1
2019-06-06T09:55:08.926412> Receive error 1
2019-06-06T09:55:09.186986> Receive error 1
2019-06-06T09:55:09.447078> Receive error 1
2019-06-06T09:55:09.707235> Receive error 1
2019-06-06T09:55:09.967348> Receive error 1
2019-06-06T09:55:10.227403> Receive error 1
2019-06-06T09:55:10.487480> Receive error 1
2019-06-06T09:55:10.747665> Receive error 1
2019-06-06T09:55:11.007987> Receive error 1
2019-06-06T09:55:11.267925> Receive error 1
2019-06-06T09:55:11.527829> Receive error 1
2019-06-06T09:55:11.788318> Receive error 1
2019-06-06T09:55:12.048530> Receive error 1
2019-06-06T09:55:12.308417> Receive error 1
2019-06-06T09:55:12.568607> Receive error 1
2019-06-06T09:55:12.829735> Receive error 1
2019-06-06T09:55:13.089854> Receive error 1
2019-06-06T09:55:13.350232> Receive error 1
2019-06-06T09:55:13.610257> Receive error 1
2019-06-06T09:55:13.610747> Low-level gw status ON
2019-06-06T09:55:13.870736> Receive error 1
2019-06-06T09:55:14.130601> Receive error 1
2019-06-06T09:55:14.390557> Receive error 1
2019-06-06T09:55:14.650712> Receive error 1
2019-06-06T09:55:14.910657> Receive error 1
2019-06-06T09:55:15.170582> Receive error 1
2019-06-06T09:55:15.430740> Receive error 1
2019-06-06T09:55:15.691010> Receive error 1
2019-06-06T09:55:15.951487> Receive error 1
2019-06-06T09:55:16.211932> Receive error 1
2019-06-06T09:55:16.472400> Receive error 1
2019-06-06T09:55:16.732894> Receive error 1
2019-06-06T09:55:16.993413> Receive error 1
2019-06-06T09:55:17.254032> Receive error 1
2019-06-06T09:55:17.514505> Receive error 1
2019-06-06T09:55:17.774825> Receive error 1
2019-06-06T09:55:18.035089> Receive error 1
2019-06-06T09:55:18.295330> Receive error 1
2019-06-06T09:55:18.556050> Receive error 1
2019-06-06T09:55:18.816564> Receive error 1
2019-06-06T09:55:19.077187> Receive error 1
2019-06-06T09:55:19.337307> Receive error 1
2019-06-06T09:55:19.599109> Receive error 1
2019-06-06T09:55:19.858974> Receive error 1
2019-06-06T09:55:20.118990> Receive error 1
2019-06-06T09:55:20.383637> Receive error 1
2019-06-06T09:55:20.644125> Receive error 1
2019-06-06T09:55:20.904254> Receive error 1
2019-06-06T09:55:21.164447> Receive error 1
2019-06-06T09:55:21.430606> Receive error 1
2019-06-06T09:55:21.690996> Receive error 1
2019-06-06T09:55:21.951084> Receive error 1
2019-06-06T09:55:22.211191> Receive error 1
2019-06-06T09:55:22.471297> Receive error 1
2019-06-06T09:55:22.731705> Receive error 1
2019-06-06T09:55:22.991633> Receive error 1
2019-06-06T09:55:23.251912> Receive error 1
2019-06-06T09:55:23.512077> Receive error 1
2019-06-06T09:55:23.772284> Receive error 1
2019-06-06T09:55:24.033292> Receive error 1
2019-06-06T09:55:24.292948> Receive error 1
2019-06-06T09:55:24.552888> Receive error 1
2019-06-06T09:55:24.813289> Receive error 1
2019-06-06T09:55:25.073390> Receive error 1
2019-06-06T09:55:25.333679> Receive error 1
2019-06-06T09:55:25.593757> Receive error 1
2019-06-06T09:55:25.853735> Receive error 1
2019-06-06T09:55:26.114090> Receive error 1
2019-06-06T09:55:26.375128> Receive error 1
2019-06-06T09:55:26.634331> Receive error 1
2019-06-06T09:55:26.894511> Receive error 1
2019-06-06T09:55:27.154791> Receive error 1
2019-06-06T09:55:27.414703> Receive error 1
2019-06-06T09:55:27.674840> Receive error 1
2019-06-06T09:55:27.934926> Receive error 1
2019-06-06T09:55:28.195308> Receive error 1
2019-06-06T09:55:28.455223> Receive error 1
2019-06-06T09:55:28.715162> Receive error 1
2019-06-06T09:55:28.975735> Receive error 1
2019-06-06T09:55:29.235743> Receive error 1
2019-06-06T09:55:29.236469> Low-level gw status ON
2019-06-06T09:55:29.496962> Receive error 1
2019-06-06T09:55:29.757047> Receive error 1
2019-06-06T09:55:30.017141> Receive error 1
2019-06-06T09:55:30.277135> Receive error 1
2019-06-06T09:55:30.537413> Receive error 1
2019-06-06T09:55:30.797680> Receive error 1
2019-06-06T09:55:31.057204> Receive error 1
2019-06-06T09:55:31.321337> Receive error 1
2019-06-06T09:55:31.581071> Receive error 1
2019-06-06T09:55:31.840904> Receive error 1
2019-06-06T09:55:32.101020> Receive error 1
2019-06-06T09:55:32.361324> Receive error 1
2019-06-06T09:55:32.621831> Receive error 1
2019-06-06T09:55:32.882372> Receive error 1
2019-06-06T09:55:33.142883> Receive error 1
2019-06-06T09:55:33.403949> Receive error 1
2019-06-06T09:55:33.664799> Receive error 1
2019-06-06T09:55:33.925277> Receive error 1
2019-06-06T09:55:34.185761> Receive error 1
2019-06-06T09:55:34.446242> Receive error 1
2019-06-06T09:55:34.706803> Receive error 1
2019-06-06T09:55:34.966882> Receive error 1
2019-06-06T09:55:35.226956> Receive error 1
2019-06-06T09:55:35.487189> Receive error 1
2019-06-06T09:55:35.747267> Receive error 1
2019-06-06T09:55:36.007390> Receive error 1
2019-06-06T09:55:36.267482> Receive error 1
2019-06-06T09:55:36.527626> Receive error 1
2019-06-06T09:55:36.787404> Receive error 1
2019-06-06T09:55:37.047423> Receive error 1
2019-06-06T09:55:37.308284> Receive error 1
2019-06-06T09:55:37.568397> Receive error 1
2019-06-06T09:55:37.828587> Receive error 1
2019-06-06T09:55:38.088714> Receive error 1
2019-06-06T09:55:38.348791> Receive error 1
2019-06-06T09:55:38.609085> Receive error 1
2019-06-06T09:55:38.869148> Receive error 1
2019-06-06T09:55:39.129333> Receive error 1
2019-06-06T09:55:39.389426> Receive error 1
2019-06-06T09:55:39.649445> Receive error 1
2019-06-06T09:55:39.909631> Receive error 1
2019-06-06T09:55:40.169674> Receive error 1
2019-06-06T09:55:40.429824> Receive error 1
2019-06-06T09:55:40.689520> Receive error 1
2019-06-06T09:55:40.949412> Receive error 1
2019-06-06T09:55:41.209467> Receive error 1
2019-06-06T09:55:41.470816> Receive error 1
2019-06-06T09:55:41.730369> Receive error 1
2019-06-06T09:55:41.990683> Receive error 1
2019-06-06T09:55:42.250256> Receive error 1
2019-06-06T09:55:42.510829> Receive error 1
2019-06-06T09:55:42.770841> Receive error 1
2019-06-06T09:55:43.030759> Receive error 1
2019-06-06T09:55:43.290716> Receive error 1
2019-06-06T09:55:43.550674> Receive error 1
2019-06-06T09:55:43.810804> Receive error 1
2019-06-06T09:55:44.070705> Receive error 1
2019-06-06T09:55:44.330692> Receive error 1
2019-06-06T09:55:44.591139> Receive error 1
2019-06-06T09:55:44.851481> Receive error 1
2019-06-06T09:55:44.852257> Low-level gw status ON
2019-06-06T09:55:45.111439> Receive error 1
2019-06-06T09:55:45.371543> Receive error 1
2019-06-06T09:55:45.631619> Receive error 1
2019-06-06T09:55:45.891251> Receive error 1
2019-06-06T09:55:46.151162> Receive error 1
2019-06-06T09:55:46.411195> Receive error 1
2019-06-06T09:55:46.671600> Receive error 1
2019-06-06T09:55:46.931803> Receive error 1
2019-06-06T09:55:47.191827> Receive error 1
2019-06-06T09:55:47.452021> Receive error 1
2019-06-06T09:55:47.712144> Receive error 1
2019-06-06T09:55:47.971831> Receive error 1
2019-06-06T09:55:48.238238> Receive error 1
2019-06-06T09:55:48.492910> Receive error 1
2019-06-06T09:55:48.752873> Receive error 1
2019-06-06T09:55:49.012813> Receive error 1
2019-06-06T09:55:49.273339> Receive error 1
2019-06-06T09:55:49.533513> Receive error 1
2019-06-06T09:55:49.793732> Receive error 1
2019-06-06T09:55:50.053467> Receive error 1
2019-06-06T09:55:50.313359> Receive error 1
2019-06-06T09:55:50.573598> Receive error 1
2019-06-06T09:55:50.834314> Receive error 1
2019-06-06T09:55:51.094724> Receive error 1
2019-06-06T09:55:51.355311> Receive error 1
2019-06-06T09:55:51.615813> Receive error 1
2019-06-06T09:55:51.875954> Receive error 1
2019-06-06T09:55:52.136197> Receive error 1
2019-06-06T09:55:52.396434> Receive error 1
2019-06-06T09:55:52.657067> Receive error 1
2019-06-06T09:55:52.917564> Receive error 1
2019-06-06T09:55:53.177988> Receive error 1
2019-06-06T09:55:53.438413> Receive error 1
2019-06-06T09:55:53.699017> Receive error 1
2019-06-06T09:55:53.959230> Receive error 1
2019-06-06T09:55:54.219483> Receive error 1
2019-06-06T09:55:54.479721> Receive error 1
2019-06-06T09:55:54.739959> Receive error 1
2019-06-06T09:55:55.000611> Receive error 1
2019-06-06T09:55:55.261127> Receive error 1
2019-06-06T09:55:55.521696> Receive error 1
2019-06-06T09:55:55.782196> Receive error 1
2019-06-06T09:55:56.042760> Receive error 1
2019-06-06T09:55:56.303274> Receive error 1
2019-06-06T09:55:56.563851> Receive error 1
2019-06-06T09:55:56.824381> Receive error 1
2019-06-06T09:55:57.084953> Receive error 1
2019-06-06T09:55:57.344580> Receive error 1
2019-06-06T09:55:57.604722> Receive error 1
2019-06-06T09:55:57.865295> Receive error 1
2019-06-06T09:55:58.125877> Receive error 1
2019-06-06T09:55:58.396017> Receive error 1
2019-06-06T09:55:58.656614> Receive error 1
2019-06-06T09:55:58.917170> Receive error 1
2019-06-06T09:55:59.177406> Receive error 1
2019-06-06T09:55:59.441346> Receive error 1
2019-06-06T09:55:59.701777> Receive error 1
2019-06-06T09:55:59.961806> Receive error 1
2019-06-06T09:56:00.221730> Receive error 1
2019-06-06T09:56:00.481760> Receive error 1
2019-06-06T09:56:00.482133> Low-level gw status ON
2019-06-06T09:56:00.742548> Receive error 1
2019-06-06T09:56:01.002908> Receive error 1
2019-06-06T09:56:01.263003> Receive error 1
2019-06-06T09:56:01.523079> Receive error 1
2019-06-06T09:56:01.783581> Receive error 1
2019-06-06T09:56:02.044149> Receive error 1
2019-06-06T09:56:02.304781> Receive error 1
2019-06-06T09:56:02.565859> Receive error 1
2019-06-06T09:56:02.826014> Receive error 1
2019-06-06T09:56:03.086652> Receive error 1
2019-06-06T09:56:03.347191> Receive error 1
2019-06-06T09:56:03.608090> Receive error 1
2019-06-06T09:56:03.868817> Receive error 1
2019-06-06T09:56:04.130405> Receive error 1
2019-06-06T09:56:04.391952> Receive error 1
2019-06-06T09:56:04.653097> Receive error 1
2019-06-06T09:56:04.914051> Receive error 1
2019-06-06T09:56:05.175532> Receive error 1
2019-06-06T09:56:05.436768> Receive error 1
2019-06-06T09:56:05.697716> Receive error 1
2019-06-06T09:56:05.957746> Receive error 1
2019-06-06T09:56:06.218116> Receive error 1
2019-06-06T09:56:06.478695> Receive error 1
2019-06-06T09:56:06.739299> Receive error 1
2019-06-06T09:56:07.001236> Receive error 1
2019-06-06T09:56:07.263068> Receive error 1
2019-06-06T09:56:07.523223> Receive error 1
2019-06-06T09:56:07.783318> Receive error 1
2019-06-06T09:56:08.043390> Receive error 1
2019-06-06T09:56:08.303495> Receive error 1
2019-06-06T09:56:08.563764> Receive error 1
2019-06-06T09:56:08.823807> Receive error 1
2019-06-06T09:56:09.083965> Receive error 1
2019-06-06T09:56:09.344018> Receive error 1
2019-06-06T09:56:09.604154> Receive error 1
2019-06-06T09:56:09.864227> Receive error 1
2019-06-06T09:56:10.124415> Receive error 1
2019-06-06T09:56:10.384601> Receive error 1
2019-06-06T09:56:10.644362> Receive error 1
2019-06-06T09:56:10.905070> Receive error 1
2019-06-06T09:56:11.164537> Receive error 1
2019-06-06T09:56:11.424524> Receive error 1
2019-06-06T09:56:11.684474> Receive error 1
2019-06-06T09:56:11.944937> Receive error 1
2019-06-06T09:56:12.204972> Receive error 1
2019-06-06T09:56:12.465103> Receive error 1
2019-06-06T09:56:12.725262> Receive error 1
2019-06-06T09:56:12.985340> Receive error 1
2019-06-06T09:56:13.244943> Receive error 1
2019-06-06T09:56:13.504881> Receive error 1
2019-06-06T09:56:13.766118> Receive error 1
2019-06-06T09:56:14.026592> Receive error 1
2019-06-06T09:56:14.286609> Receive error 1
2019-06-06T09:56:14.546831> Receive error 1
2019-06-06T09:56:14.806844> Receive error 1
2019-06-06T09:56:15.066961> Receive error 1
2019-06-06T09:56:15.327194> Receive error 1
2019-06-06T09:56:15.587210> Receive error 1
2019-06-06T09:56:15.846777> Receive error 1
2019-06-06T09:56:16.112344> Receive error 1
2019-06-06T09:56:16.113302> Low-level gw status ON
2019-06-06T09:56:16.371505> Receive error 1
2019-06-06T09:56:16.631475> Receive error 1
2019-06-06T09:56:16.891370> Receive error 1
2019-06-06T09:56:17.151884> Receive error 1
2019-06-06T09:56:17.412011> Receive error 1
2019-06-06T09:56:17.672204> Receive error 1
2019-06-06T09:56:17.932226> Receive error 1
2019-06-06T09:56:18.192658> Receive error 1
2019-06-06T09:56:18.453690> Receive error 1
2019-06-06T09:56:18.712468> Receive error 1
2019-06-06T09:56:18.972310> Receive error 1
2019-06-06T09:56:19.232971> Receive error 1
2019-06-06T09:56:19.493067> Receive error 1
2019-06-06T09:56:19.753177> Receive error 1
2019-06-06T09:56:20.012839> Receive error 1
2019-06-06T09:56:20.273075> Receive error 1
2019-06-06T09:56:20.532822> Receive error 1
2019-06-06T09:56:20.794315> Receive error 1
2019-06-06T09:56:21.054052> Receive error 1
2019-06-06T09:56:21.314250> Receive error 1
2019-06-06T09:56:21.574519> Receive error 1
2019-06-06T09:56:21.834120> Receive error 1
2019-06-06T09:56:22.094193> Receive error 1
2019-06-06T09:56:22.358144> Receive error 1
2019-06-06T09:56:22.618154> Receive error 1
2019-06-06T09:56:22.878050> Receive error 1
2019-06-06T09:56:23.138439> Receive error 1
2019-06-06T09:56:23.398661> Receive error 1
2019-06-06T09:56:23.658937> Receive error 1
2019-06-06T09:56:23.919243> Receive error 1
2019-06-06T09:56:24.179361> Receive error 1
2019-06-06T09:56:24.438942> Receive error 1
2019-06-06T09:56:24.698921> Receive error 1
2019-06-06T09:56:24.960062> Receive error 1
2019-06-06T09:56:25.219505> Receive error 1
2019-06-06T09:56:25.479404> Receive error 1
2019-06-06T09:56:25.739371> Receive error 1
2019-06-06T09:56:25.999765> Receive error 1
2019-06-06T09:56:26.259880> Receive error 1
2019-06-06T09:56:26.520205> Receive error 1
2019-06-06T09:56:26.780254> Receive error 1
2019-06-06T09:56:27.040474> Receive error 1
2019-06-06T09:56:27.300102> Receive error 1
2019-06-06T09:56:27.560153> Receive error 1
2019-06-06T09:56:27.820258> Receive error 1
2019-06-06T09:56:28.081898> Receive error 1
2019-06-06T09:56:28.341844> Receive error 1
2019-06-06T09:56:28.601911> Receive error 1
2019-06-06T09:56:28.862468> Receive error 1
2019-06-06T09:56:29.122521> Receive error 1
2019-06-06T09:56:29.382137> Receive error 1
2019-06-06T09:56:29.642320> Receive error 1
2019-06-06T09:56:29.902292> Receive error 1
2019-06-06T09:56:30.164207> Receive error 1
2019-06-06T09:56:30.424675> Receive error 1
2019-06-06T09:56:30.684812> Receive error 1
2019-06-06T09:56:30.944891> Receive error 1
2019-06-06T09:56:31.205103> Receive error 1
2019-06-06T09:56:31.465175> Receive error 1
2019-06-06T09:56:31.725803> Receive error 1
2019-06-06T09:56:31.726443> Low-level gw status ON
2019-06-06T09:56:31.986888> Receive error 1
2019-06-06T09:56:32.247409> Receive error 1
2019-06-06T09:56:32.507472> Receive error 1
2019-06-06T09:56:32.767441> Receive error 1
2019-06-06T09:56:33.027512> Receive error 1
2019-06-06T09:56:33.287989> Receive error 1
2019-06-06T09:56:33.548117> Receive error 1
2019-06-06T09:56:33.808071> Receive error 1
2019-06-06T09:56:34.068435> Receive error 1
2019-06-06T09:56:34.328967> Receive error 1
2019-06-06T09:56:34.589175> Receive error 1
2019-06-06T09:56:34.849789> Receive error 1
2019-06-06T09:56:35.111150> Receive error 1
2019-06-06T09:56:35.371739> Receive error 1
2019-06-06T09:56:35.632253> Receive error 1
2019-06-06T09:56:35.892783> Receive error 1
2019-06-06T09:56:36.153389> Receive error 1
2019-06-06T09:56:36.413419> Receive error 1
2019-06-06T09:56:36.673989> Receive error 1
2019-06-06T09:56:36.934413> Receive error 1
2019-06-06T09:56:37.194983> Receive error 1
2019-06-06T09:56:37.455491> Receive error 1
2019-06-06T09:56:37.716037> Receive error 1
2019-06-06T09:56:37.976632> Receive error 1
2019-06-06T09:56:38.237164> Receive error 1
2019-06-06T09:56:38.497980> Receive error 1
2019-06-06T09:56:38.758232> Receive error 1
2019-06-06T09:56:39.018709> Receive error 1
2019-06-06T09:56:39.279423> Receive error 1
2019-06-06T09:56:39.539977> Receive error 1
2019-06-06T09:56:39.800510> Receive error 1
2019-06-06T09:56:40.061004> Receive error 1
2019-06-06T09:56:40.321511> Receive error 1
2019-06-06T09:56:40.582185> Receive error 1
2019-06-06T09:56:40.842297> Receive error 1
2019-06-06T09:56:41.102583> Receive error 1
2019-06-06T09:56:41.362833> Receive error 1
2019-06-06T09:56:41.623472> Receive error 1
2019-06-06T09:56:41.883957> Receive error 1
2019-06-06T09:56:42.144464> Receive error 1
2019-06-06T09:56:42.404993> Receive error 1
2019-06-06T09:56:42.665581> Receive error 1
2019-06-06T09:56:42.925660> Receive error 1
2019-06-06T09:56:43.185909> Receive error 1
2019-06-06T09:56:43.446138> Receive error 1
2019-06-06T09:56:43.706847> Receive error 1
2019-06-06T09:56:43.966993> Receive error 1
2019-06-06T09:56:44.227235> Receive error 1
2019-06-06T09:56:44.487667> Receive error 1
2019-06-06T09:56:44.748666> Receive error 1
2019-06-06T09:56:45.009322> Receive error 1
2019-06-06T09:56:45.269911> Receive error 1
2019-06-06T09:56:45.530545> Receive error 1
2019-06-06T09:56:45.791077> Receive error 1
2019-06-06T09:56:46.051681> Receive error 1
2019-06-06T09:56:46.312244> Receive error 1
2019-06-06T09:56:46.573029> Receive error 1
2019-06-06T09:56:46.833514> Receive error 1
2019-06-06T09:56:47.094104> Receive error 1
2019-06-06T09:56:47.354979> Receive error 1
2019-06-06T09:56:47.355795> Low-level gw status ON
2019-06-06T09:56:47.615581> Receive error 1
2019-06-06T09:56:47.875697> Receive error 1
2019-06-06T09:56:48.135755> Receive error 1
2019-06-06T09:56:48.395901> Receive error 1
2019-06-06T09:56:48.656110> Receive error 1
2019-06-06T09:56:48.916343> Receive error 1
2019-06-06T09:56:49.176460> Receive error 1
2019-06-06T09:56:49.437070> Receive error 1
2019-06-06T09:56:49.697437> Receive error 1
2019-06-06T09:56:49.957573> Receive error 1
2019-06-06T09:56:50.218298> Receive error 1
2019-06-06T09:56:50.478382> Receive error 1
2019-06-06T09:56:50.739167> Receive error 1
2019-06-06T09:56:50.999690> Receive error 1
2019-06-06T09:56:51.261296> Receive error 1
2019-06-06T09:56:51.522494> Receive error 1
2019-06-06T09:56:51.782989> Receive error 1
2019-06-06T09:56:52.043962> Receive error 1
2019-06-06T09:56:52.304280> Receive error 1
2019-06-06T09:56:52.564802> Receive error 1
2019-06-06T09:56:52.825265> Receive error 1
2019-06-06T09:56:53.085769> Receive error 1
2019-06-06T09:56:53.345993> Receive error 1
2019-06-06T09:56:53.606214> Receive error 1
2019-06-06T09:56:53.866425> Receive error 1
2019-06-06T09:56:54.127429> Receive error 1
2019-06-06T09:56:54.387194> Receive error 1
2019-06-06T09:56:54.647472> Receive error 1
2019-06-06T09:56:54.907693> Receive error 1
2019-06-06T09:56:55.167967> Receive error 1
2019-06-06T09:56:55.430980> Receive error 1
2019-06-06T09:56:55.691742> Receive error 1
2019-06-06T09:56:55.952362> Receive error 1
2019-06-06T09:56:56.212913> Receive error 1
2019-06-06T09:56:56.473064> Receive error 1
2019-06-06T09:56:56.733053> Receive error 1
2019-06-06T09:56:56.992960> Receive error 1
2019-06-06T09:56:57.253443> Receive error 1
2019-06-06T09:56:57.513108> Receive error 1
2019-06-06T09:56:57.773120> Receive error 1
2019-06-06T09:56:58.033107> Receive error 1
2019-06-06T09:56:58.293695> Receive error 1
2019-06-06T09:56:58.554228> Receive error 1
2019-06-06T09:56:58.814392> Receive error 1
2019-06-06T09:56:59.074479> Receive error 1
2019-06-06T09:56:59.334509> Receive error 1
2019-06-06T09:56:59.594557> Receive error 1
2019-06-06T09:56:59.854856> Receive error 1
2019-06-06T09:57:00.115188> Receive error 1
2019-06-06T09:57:00.375222> Receive error 1
2019-06-06T09:57:00.635563> Receive error 1
2019-06-06T09:57:00.895094> Receive error 1
2019-06-06T09:57:01.155335> Receive error 1
2019-06-06T09:57:01.416179> Receive error 1
2019-06-06T09:57:01.676701> Receive error 1
2019-06-06T09:57:01.937490> Receive error 1
2019-06-06T09:57:02.197584> Receive error 1
2019-06-06T09:57:02.457786> Receive error 1
2019-06-06T09:57:02.717926> Receive error 1
2019-06-06T09:57:02.978136> Receive error 1
2019-06-06T09:57:02.979092> Low-level gw status ON
2019-06-06T09:57:03.237621> Receive error 1
2019-06-06T09:57:03.497557> Receive error 1
2019-06-06T09:57:03.760649> Receive error 1
2019-06-06T09:57:04.019191> Receive error 1
2019-06-06T09:57:04.279274> Receive error 1
2019-06-06T09:57:04.539435> Receive error 1
2019-06-06T09:57:04.799561> Receive error 1
2019-06-06T09:57:05.059705> Receive error 1
2019-06-06T09:57:05.319769> Receive error 1
2019-06-06T09:57:05.580113> Receive error 1
2019-06-06T09:57:05.839406> Receive error 1
2019-06-06T09:57:06.099394> Receive error 1
2019-06-06T09:57:06.359471> Receive error 1
2019-06-06T09:57:06.620191> Receive error 1
2019-06-06T09:57:06.879990> Receive error 1
2019-06-06T09:57:07.139903> Receive error 1
2019-06-06T09:57:07.400325> Receive error 1
2019-06-06T09:57:07.660468> Receive error 1
2019-06-06T09:57:07.919995> Receive error 1
2019-06-06T09:57:08.180002> Receive error 1
2019-06-06T09:57:08.439945> Receive error 1
2019-06-06T09:57:08.700395> Receive error 1
2019-06-06T09:57:08.960504> Receive error 1
2019-06-06T09:57:09.222927> Receive error 1
2019-06-06T09:57:09.483032> Receive error 1
2019-06-06T09:57:09.743116> Receive error 1
2019-06-06T09:57:10.003172> Receive error 1
2019-06-06T09:57:10.263410> Receive error 1
2019-06-06T09:57:10.523464> Receive error 1
2019-06-06T09:57:10.783574> Receive error 1
2019-06-06T09:57:11.043232> Receive error 1
2019-06-06T09:57:11.303358> Receive error 1
2019-06-06T09:57:11.563296> Receive error 1
2019-06-06T09:57:11.823963> Receive error 1
2019-06-06T09:57:12.084355> Receive error 1
2019-06-06T09:57:12.344152> Receive error 1
2019-06-06T09:57:12.604841> Receive error 1
2019-06-06T09:57:12.864866> Receive error 1
2019-06-06T09:57:13.124936> Receive error 1
2019-06-06T09:57:13.385100> Receive error 1
2019-06-06T09:57:13.645226> Receive error 1
2019-06-06T09:57:13.905401> Receive error 1
2019-06-06T09:57:14.165531> Receive error 1
2019-06-06T09:57:14.425596> Receive error 1
2019-06-06T09:57:14.685762> Receive error 1
2019-06-06T09:57:14.945844> Receive error 1
2019-06-06T09:57:15.206128> Receive error 1
2019-06-06T09:57:15.466202> Receive error 1
2019-06-06T09:57:15.726316> Receive error 1
2019-06-06T09:57:15.986380> Receive error 1
2019-06-06T09:57:16.246424> Receive error 1
2019-06-06T09:57:16.506651> Receive error 1
2019-06-06T09:57:16.766739> Receive error 1
2019-06-06T09:57:17.026839> Receive error 1
2019-06-06T09:57:17.286916> Receive error 1
2019-06-06T09:57:17.546557> Receive error 1
2019-06-06T09:57:17.806917> Receive error 1
2019-06-06T09:57:18.066850> Receive error 1
2019-06-06T09:57:18.327347> Receive error 1
2019-06-06T09:57:18.587701> Receive error 1
2019-06-06T09:57:18.588346> Low-level gw status ON
2019-06-06T09:57:18.847741> Receive error 1
2019-06-06T09:57:19.107910> Receive error 1
2019-06-06T09:57:19.367927> Receive error 1
2019-06-06T09:57:19.628074> Receive error 1
2019-06-06T09:57:19.895683> Receive error 1
2019-06-06T09:57:20.155643> Receive error 1
2019-06-06T09:57:20.416097> Receive error 1
2019-06-06T09:57:20.676217> Receive error 1
2019-06-06T09:57:20.936272> Receive error 1
2019-06-06T09:57:21.196528> Receive error 1
2019-06-06T09:57:21.456038> Receive error 1
2019-06-06T09:57:21.716001> Receive error 1
2019-06-06T09:57:21.976082> Receive error 1
2019-06-06T09:57:22.236714> Receive error 1
2019-06-06T09:57:22.496734> Receive error 1
2019-06-06T09:57:22.756793> Receive error 1
2019-06-06T09:57:23.017017> Receive error 1
2019-06-06T09:57:23.276687> Receive error 1
2019-06-06T09:57:23.542116> Receive error 1
2019-06-06T09:57:23.802776> Receive error 1
2019-06-06T09:57:24.062838> Receive error 1
2019-06-06T09:57:24.322972> Receive error 1
2019-06-06T09:57:24.582967> Receive error 1
2019-06-06T09:57:24.843134> Receive error 1
2019-06-06T09:57:25.111866> Receive error 1
2019-06-06T09:57:25.371647> Receive error 1
2019-06-06T09:57:25.631558> Receive error 1
2019-06-06T09:57:25.891498> Receive error 1
2019-06-06T09:57:26.152927> Receive error 1
2019-06-06T09:57:26.413507> Receive error 1
2019-06-06T09:57:26.673063> Receive error 1
2019-06-06T09:57:26.933052> Receive error 1
2019-06-06T09:57:27.192999> Receive error 1
2019-06-06T09:57:27.453433> Receive error 1
2019-06-06T09:57:27.713543> Receive error 1
2019-06-06T09:57:27.973587> Receive error 1
2019-06-06T09:57:28.233743> Receive error 1
2019-06-06T09:57:28.493842> Receive error 1
2019-06-06T09:57:28.753698> Receive error 1
2019-06-06T09:57:29.013670> Receive error 1
2019-06-06T09:57:29.273587> Receive error 1
2019-06-06T09:57:29.534073> Receive error 1
2019-06-06T09:57:29.793652> Receive error 1
2019-06-06T09:57:30.053604> Receive error 1
2019-06-06T09:57:30.313556> Receive error 1
2019-06-06T09:57:30.573976> Receive error 1
2019-06-06T09:57:30.834163> Receive error 1
2019-06-06T09:57:31.094243> Receive error 1
2019-06-06T09:57:31.354474> Receive error 1
2019-06-06T09:57:31.614625> Receive error 1
2019-06-06T09:57:31.881672> Receive error 1
2019-06-06T09:57:32.144506> Receive error 1
2019-06-06T09:57:32.404650> Receive error 1
2019-06-06T09:57:32.664850> Receive error 1
2019-06-06T09:57:32.925246> Receive error 1
2019-06-06T09:57:33.185346> Receive error 1
2019-06-06T09:57:33.445279> Receive error 1
2019-06-06T09:57:33.705244> Receive error 1
2019-06-06T09:57:33.965701> Receive error 1
2019-06-06T09:57:34.225796> Receive error 1
2019-06-06T09:57:34.226291> Low-level gw status ON
2019-06-06T09:57:34.485724> Receive error 1
2019-06-06T09:57:34.745710> Receive error 1
2019-06-06T09:57:35.005695> Receive error 1
2019-06-06T09:57:35.265651> Receive error 1
2019-06-06T09:57:35.525584> Receive error 1
2019-06-06T09:57:35.785958> Receive error 1
2019-06-06T09:57:36.046540> Receive error 1
2019-06-06T09:57:36.306944> Receive error 1
2019-06-06T09:57:36.567517> Receive error 1
2019-06-06T09:57:36.828004> Receive error 1
2019-06-06T09:57:37.088470> Receive error 1
2019-06-06T09:57:37.349265> Receive error 1
2019-06-06T09:57:37.609431> Receive error 1
2019-06-06T09:57:37.869466> Receive error 1
2019-06-06T09:57:38.129584> Receive error 1
2019-06-06T09:57:38.389521> Receive error 1
2019-06-06T09:57:38.649724> Receive error 1
2019-06-06T09:57:38.909775> Receive error 1
2019-06-06T09:57:39.169890> Receive error 1
2019-06-06T09:57:39.429983> Receive error 1
2019-06-06T09:57:39.690075> Receive error 1
2019-06-06T09:57:39.950310> Receive error 1
2019-06-06T09:57:40.210326> Receive error 1
2019-06-06T09:57:40.470511> Receive error 1
2019-06-06T09:57:40.730972> Receive error 1
2019-06-06T09:57:40.991296> Receive error 1
2019-06-06T09:57:41.251314> Receive error 1
2019-06-06T09:57:41.511402> Receive error 1
2019-06-06T09:57:41.771454> Receive error 1
2019-06-06T09:57:42.031760> Receive error 1
2019-06-06T09:57:42.291785> Receive error 1
2019-06-06T09:57:42.551894> Receive error 1
2019-06-06T09:57:42.812022> Receive error 1
2019-06-06T09:57:43.072071> Receive error 1
2019-06-06T09:57:43.332303> Receive error 1
2019-06-06T09:57:43.592395> Receive error 1
2019-06-06T09:57:43.852509> Receive error 1
2019-06-06T09:57:44.112605> Receive error 1
2019-06-06T09:57:44.372700> Receive error 1
2019-06-06T09:57:44.632907> Receive error 1
2019-06-06T09:57:44.893172> Receive error 1
2019-06-06T09:57:45.153354> Receive error 1
2019-06-06T09:57:45.413408> Receive error 1
2019-06-06T09:57:45.683060> Receive error 1
2019-06-06T09:57:45.943329> Receive error 1
2019-06-06T09:57:46.203522> Receive error 1
2019-06-06T09:57:46.463541> Receive error 1
2019-06-06T09:57:46.723499> Receive error 1
2019-06-06T09:57:46.983914> Receive error 1
2019-06-06T09:57:47.244028> Receive error 1
2019-06-06T09:57:47.503623> Receive error 1
2019-06-06T09:57:47.763518> Receive error 1
2019-06-06T09:57:48.023476> Receive error 1
2019-06-06T09:57:48.283982> Receive error 1
2019-06-06T09:57:48.543992> Receive error 1
2019-06-06T09:57:48.804225> Receive error 1
2019-06-06T09:57:49.064182> Receive error 1
2019-06-06T09:57:49.324280> Receive error 1
2019-06-06T09:57:49.584441> Receive error 1
2019-06-06T09:57:49.844671> Receive error 1
2019-06-06T09:57:49.845304> Low-level gw status ON
2019-06-06T09:57:50.104341> Receive error 1
2019-06-06T09:57:50.364230> Receive error 1
2019-06-06T09:57:50.624159> Receive error 1
2019-06-06T09:57:50.884598> Receive error 1
2019-06-06T09:57:51.144844> Receive error 1
2019-06-06T09:57:51.404597> Receive error 1
2019-06-06T09:57:51.665123> Receive error 1
2019-06-06T09:57:51.925146> Receive error 1
2019-06-06T09:57:52.186979> Receive error 1
2019-06-06T09:57:52.445394> Receive error 1
2019-06-06T09:57:52.705361> Receive error 1
2019-06-06T09:57:52.965234> Receive error 1
2019-06-06T09:57:53.225777> Receive error 1
2019-06-06T09:57:53.485841> Receive error 1
2019-06-06T09:57:53.745921> Receive error 1
2019-06-06T09:57:54.005550> Receive error 1
2019-06-06T09:57:54.265538> Receive error 1
2019-06-06T09:57:54.525491> Receive error 1
2019-06-06T09:57:54.785930> Receive error 1
2019-06-06T09:57:55.046044> Receive error 1
2019-06-06T09:57:55.306136> Receive error 1
2019-06-06T09:57:55.566247> Receive error 1
2019-06-06T09:57:55.826355> Receive error 1
2019-06-06T09:57:56.086418> Receive error 1
2019-06-06T09:57:56.346798> Receive error 1
2019-06-06T09:57:56.606886> Receive error 1
2019-06-06T09:57:56.866708> Receive error 1
2019-06-06T09:57:57.126797> Receive error 1
2019-06-06T09:57:57.389234> Receive error 1
2019-06-06T09:57:57.649175> Receive error 1
2019-06-06T09:57:57.909177> Receive error 1
2019-06-06T09:57:58.169672> Receive error 1
2019-06-06T09:57:58.429987> Receive error 1
2019-06-06T09:57:58.689542> Receive error 1
2019-06-06T09:57:58.949491> Receive error 1
2019-06-06T09:57:59.209439> Receive error 1
2019-06-06T09:57:59.469902> Receive error 1
2019-06-06T09:57:59.730329> Receive error 1
2019-06-06T09:57:59.989885> Receive error 1
2019-06-06T09:58:00.249861> Receive error 1
2019-06-06T09:58:00.509908> Receive error 1
2019-06-06T09:58:00.770397> Receive error 1
2019-06-06T09:58:01.030596> Receive error 1
2019-06-06T09:58:01.290658> Receive error 1
2019-06-06T09:58:01.550783> Receive error 1
2019-06-06T09:58:01.811105> Receive error 1
2019-06-06T09:58:02.071316> Receive error 1
2019-06-06T09:58:02.331372> Receive error 1
2019-06-06T09:58:02.591244> Receive error 1
2019-06-06T09:58:02.851301> Receive error 1
2019-06-06T09:58:03.111237> Receive error 1
2019-06-06T09:58:03.371684> Receive error 1
2019-06-06T09:58:03.631733> Receive error 1
2019-06-06T09:58:03.891848> Receive error 1
2019-06-06T09:58:04.151935> Receive error 1
2019-06-06T09:58:04.412071> Receive error 1
2019-06-06T09:58:04.672278> Receive error 1
2019-06-06T09:58:04.932508> Receive error 1
2019-06-06T09:58:05.193998> Receive error 1
2019-06-06T09:58:05.453992> Receive error 1
2019-06-06T09:58:05.454863> Low-level gw status ON
2019-06-06T09:58:05.713972> Receive error 1
2019-06-06T09:58:05.974037> Receive error 1
2019-06-06T09:58:06.234180> Receive error 1
2019-06-06T09:58:06.494274> Receive error 1
2019-06-06T09:58:06.754498> Receive error 1
2019-06-06T09:58:07.014587> Receive error 1
2019-06-06T09:58:07.274303> Receive error 1
2019-06-06T09:58:07.534221> Receive error 1
2019-06-06T09:58:07.794141> Receive error 1
2019-06-06T09:58:08.054653> Receive error 1
2019-06-06T09:58:08.314411> Receive error 1
2019-06-06T09:58:08.574572> Receive error 1
2019-06-06T09:58:08.835180> Receive error 1
2019-06-06T09:58:09.095263> Receive error 1
2019-06-06T09:58:09.355309> Receive error 1
2019-06-06T09:58:09.615830> Receive error 1
2019-06-06T09:58:09.875881> Receive error 1
2019-06-06T09:58:10.136019> Receive error 1
2019-06-06T09:58:10.396052> Receive error 1
2019-06-06T09:58:10.656623> Receive error 1
2019-06-06T09:58:10.917158> Receive error 1
2019-06-06T09:58:11.177752> Receive error 1
2019-06-06T09:58:11.438327> Receive error 1
2019-06-06T09:58:11.699065> Receive error 1
2019-06-06T09:58:11.959195> Receive error 1
2019-06-06T09:58:12.219472> Receive error 1
2019-06-06T09:58:12.479290> Receive error 1
2019-06-06T09:58:12.739215> Receive error 1
2019-06-06T09:58:12.999179> Receive error 1
2019-06-06T09:58:13.259654> Receive error 1
2019-06-06T09:58:13.519727> Receive error 1
2019-06-06T09:58:13.779567> Receive error 1
2019-06-06T09:58:14.039483> Receive error 1
2019-06-06T09:58:14.299496> Receive error 1
2019-06-06T09:58:14.559937> Receive error 1
2019-06-06T09:58:14.820030> Receive error 1
2019-06-06T09:58:15.080160> Receive error 1
2019-06-06T09:58:15.340241> Receive error 1
2019-06-06T09:58:15.600554> Receive error 1
2019-06-06T09:58:15.860522> Receive error 1
2019-06-06T09:58:16.120644> Receive error 1
2019-06-06T09:58:16.380783> Receive error 1
2019-06-06T09:58:16.640868> Receive error 1
2019-06-06T09:58:16.900962> Receive error 1
2019-06-06T09:58:17.161217> Receive error 1
2019-06-06T09:58:17.421287> Receive error 1
2019-06-06T09:58:17.681392> Receive error 1
2019-06-06T09:58:17.941399> Receive error 1
2019-06-06T09:58:18.201601> Receive error 1
2019-06-06T09:58:18.461750> Receive error 1
2019-06-06T09:58:18.721844> Receive error 1
2019-06-06T09:58:18.981904> Receive error 1
2019-06-06T09:58:19.242173> Receive error 1
2019-06-06T09:58:19.505256> Receive error 1
2019-06-06T09:58:19.765923> Receive error 1
2019-06-06T09:58:20.025822> Receive error 1
2019-06-06T09:58:20.285770> Receive error 1
2019-06-06T09:58:20.545677> Receive error 1
2019-06-06T09:58:20.805638> Receive error 1
2019-06-06T09:58:21.066203> Receive error 1
2019-06-06T09:58:21.067042> Low-level gw status ON
2019-06-06T09:58:21.326183> Receive error 1
2019-06-06T09:58:21.586314> Receive error 1
2019-06-06T09:58:21.845972> Receive error 1
2019-06-06T09:58:22.105925> Receive error 1
2019-06-06T09:58:22.366386> Receive error 1
2019-06-06T09:58:22.626385> Receive error 1
2019-06-06T09:58:22.886635> Receive error 1
2019-06-06T09:58:23.146208> Receive error 1
2019-06-06T09:58:23.406153> Receive error 1
2019-06-06T09:58:23.666463> Receive error 1
2019-06-06T09:58:23.926271> Receive error 1
2019-06-06T09:58:24.188682> Receive error 1
2019-06-06T09:58:24.448623> Receive error 1
2019-06-06T09:58:24.709042> Receive error 1
2019-06-06T09:58:24.968798> Receive error 1
2019-06-06T09:58:25.235523> Receive error 1
2019-06-06T09:58:25.495298> Receive error 1
2019-06-06T09:58:25.755434> Receive error 1
2019-06-06T09:58:26.015395> Receive error 1
2019-06-06T09:58:26.275958> Receive error 1
2019-06-06T09:58:26.536428> Receive error 1
2019-06-06T09:58:26.796681> Receive error 1
2019-06-06T09:58:27.056862> Receive error 1
2019-06-06T09:58:27.317079> Receive error 1
2019-06-06T09:58:27.577157> Receive error 1
2019-06-06T09:58:27.837108> Receive error 1
2019-06-06T09:58:28.097825> Receive error 1
2019-06-06T09:58:28.358608> Receive error 1
2019-06-06T09:58:28.618977> Receive error 1
2019-06-06T09:58:28.878909> Receive error 1
2019-06-06T09:58:29.139361> Receive error 1
2019-06-06T09:58:29.399901> Receive error 1
2019-06-06T09:58:29.660171> Receive error 1
2019-06-06T09:58:29.920125> Receive error 1
2019-06-06T09:58:30.180651> Receive error 1
2019-06-06T09:58:30.441194> Receive error 1
2019-06-06T09:58:30.701278> Receive error 1
2019-06-06T09:58:30.966069> Receive error 1
2019-06-06T09:58:31.226536> Receive error 1
2019-06-06T09:58:31.486969> Receive error 1
2019-06-06T09:58:31.747589> Receive error 1
2019-06-06T09:58:32.007777> Receive error 1
2019-06-06T09:58:32.267868> Receive error 1
2019-06-06T09:58:32.527978> Receive error 1
2019-06-06T09:58:32.788094> Receive error 1
2019-06-06T09:58:33.048138> Receive error 1
2019-06-06T09:58:33.308302> Receive error 1
2019-06-06T09:58:33.568348> Receive error 1
2019-06-06T09:58:33.828574> Receive error 1
2019-06-06T09:58:34.088689> Receive error 1
2019-06-06T09:58:34.348802> Receive error 1
2019-06-06T09:58:34.608996> Receive error 1
2019-06-06T09:58:34.869266> Receive error 1
2019-06-06T09:58:35.129619> Receive error 1
2019-06-06T09:58:35.390212> Receive error 1
2019-06-06T09:58:35.651106> Receive error 1
2019-06-06T09:58:35.910884> Receive error 1
2019-06-06T09:58:36.179555> Receive error 1
2019-06-06T09:58:36.438935> Receive error 1
2019-06-06T09:58:36.699038> Receive error 1
2019-06-06T09:58:36.699695> Low-level gw status ON
2019-06-06T09:58:36.959522> Receive error 1
2019-06-06T09:58:37.219182> Receive error 1
2019-06-06T09:58:37.479052> Receive error 1
2019-06-06T09:58:37.739003> Receive error 1
2019-06-06T09:58:37.999458> Receive error 1
2019-06-06T09:58:38.259508> Receive error 1
2019-06-06T09:58:38.519707> Receive error 1
2019-06-06T09:58:38.779762> Receive error 1
2019-06-06T09:58:39.039837> Receive error 1
2019-06-06T09:58:39.299842> Receive error 1
2019-06-06T09:58:39.560065> Receive error 1
2019-06-06T09:58:39.820157> Receive error 1
2019-06-06T09:58:40.080221> Receive error 1
2019-06-06T09:58:40.340304> Receive error 1
2019-06-06T09:58:40.600414> Receive error 1
2019-06-06T09:58:40.860511> Receive error 1
2019-06-06T09:58:41.130712> Receive error 1
2019-06-06T09:58:41.259925> 2019-06-06 09:58:41.258641
2019-06-06T09:58:41.260640> post status: gw ON
2019-06-06T09:58:41.261215> post status: executing periodic tasks
2019-06-06T09:58:41.390268> Receive error 1
2019-06-06T09:58:41.650293> Receive error 1
2019-06-06T09:58:41.910225> Receive error 1
2019-06-06T09:58:42.170660> Receive error 1
2019-06-06T09:58:42.431107> Receive error 1
2019-06-06T09:58:42.455249> no timezone support, time will be expressed only in local time
2019-06-06T09:58:42.455665> post status: start running
2019-06-06T09:58:42.691205> Receive error 1
2019-06-06T09:58:42.951177> Receive error 1
2019-06-06T09:58:43.211231> Receive error 1
2019-06-06T09:58:43.471531> Receive error 1
2019-06-06T09:58:43.501601> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T09:58:43.502128> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T09:58:43.502509> get_gps.py: invalid serial port
2019-06-06T09:58:43.649417> post status: dynamic GPS is requested
2019-06-06T09:58:43.649889> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T09:58:43.650204> post status get GPS: no GPS coordinates
2019-06-06T09:58:43.650502> post status: show current GPS position
2019-06-06T09:58:43.650799> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T09:58:43.651087> post status: exiting
2019-06-06T09:58:43.731865> Receive error 1
2019-06-06T09:58:43.991838> Receive error 1
2019-06-06T09:58:44.251789> Receive error 1
2019-06-06T09:58:44.511696> Receive error 1
2019-06-06T09:58:44.771696> Receive error 1
2019-06-06T09:58:45.032195> Receive error 1
2019-06-06T09:58:45.292314> Receive error 1
2019-06-06T09:58:45.552727> Receive error 1
2019-06-06T09:58:45.812110> Receive error 1
2019-06-06T09:58:46.072149> Receive error 1
2019-06-06T09:58:46.332239> Receive error 1
2019-06-06T09:58:46.592722> Receive error 1
2019-06-06T09:58:46.852806> Receive error 1
2019-06-06T09:58:47.112930> Receive error 1
2019-06-06T09:58:47.373241> Receive error 1
2019-06-06T09:58:47.633290> Receive error 1
2019-06-06T09:58:47.893222> Receive error 1
2019-06-06T09:58:48.153647> Receive error 1
2019-06-06T09:58:48.413745> Receive error 1
2019-06-06T09:58:48.673936> Receive error 1
2019-06-06T09:58:48.934038> Receive error 1
2019-06-06T09:58:49.194097> Receive error 1
2019-06-06T09:58:49.454306> Receive error 1
2019-06-06T09:58:49.714501> Receive error 1
2019-06-06T09:58:49.974868> Receive error 1
2019-06-06T09:58:50.234560> Receive error 1
2019-06-06T09:58:50.494714> Receive error 1
2019-06-06T09:58:50.756012> Receive error 1
2019-06-06T09:58:51.016495> Receive error 1
2019-06-06T09:58:51.276720> Receive error 1
2019-06-06T09:58:51.536772> Receive error 1
2019-06-06T09:58:51.796879> Receive error 1
2019-06-06T09:58:52.056961> Receive error 1
2019-06-06T09:58:52.317225> Receive error 1
2019-06-06T09:58:52.317921> Low-level gw status ON
2019-06-06T09:58:52.576698> Receive error 1
2019-06-06T09:58:52.836696> Receive error 1
2019-06-06T09:58:53.097353> Receive error 1
2019-06-06T09:58:53.357031> Receive error 1
2019-06-06T09:58:53.617106> Receive error 1
2019-06-06T09:58:53.878073> Receive error 1
2019-06-06T09:58:54.138224> Receive error 1
2019-06-06T09:58:54.398327> Receive error 1
2019-06-06T09:58:54.658431> Receive error 1
2019-06-06T09:58:54.918591> Receive error 1
2019-06-06T09:58:55.178921> Receive error 1
2019-06-06T09:58:55.438924> Receive error 1
2019-06-06T09:58:55.699200> Receive error 1
2019-06-06T09:58:55.958729> Receive error 1
2019-06-06T09:58:56.218686> Receive error 1
2019-06-06T09:58:56.478633> Receive error 1
2019-06-06T09:58:56.739188> Receive error 1
2019-06-06T09:58:56.999215> Receive error 1
2019-06-06T09:58:57.259388> Receive error 1
2019-06-06T09:58:57.519402> Receive error 1
2019-06-06T09:58:57.779527> Receive error 1
2019-06-06T09:58:58.039598> Receive error 1
2019-06-06T09:58:58.299688> Receive error 1
2019-06-06T09:58:58.559867> Receive error 1
2019-06-06T09:58:58.820203> Receive error 1
2019-06-06T09:58:59.079672> Receive error 1
2019-06-06T09:58:59.340027> Receive error 1
2019-06-06T09:58:59.600133> Receive error 1
2019-06-06T09:58:59.860233> Receive error 1
2019-06-06T09:59:00.120381> Receive error 1
2019-06-06T09:59:00.380938> Receive error 1
2019-06-06T09:59:00.640907> Receive error 1
2019-06-06T09:59:00.902855> Receive error 1
2019-06-06T09:59:01.162960> Receive error 1
2019-06-06T09:59:01.423050> Receive error 1
2019-06-06T09:59:01.684301> Receive error 1
2019-06-06T09:59:01.944231> Receive error 1
2019-06-06T09:59:02.203877> Receive error 1
2019-06-06T09:59:02.463949> Receive error 1
2019-06-06T09:59:02.723846> Receive error 1
2019-06-06T09:59:02.984211> Receive error 1
2019-06-06T09:59:03.244331> Receive error 1
2019-06-06T09:59:03.504686> Receive error 1
2019-06-06T09:59:03.764428> Receive error 1
2019-06-06T09:59:04.024501> Receive error 1
2019-06-06T09:59:04.285170> Receive error 1
2019-06-06T09:59:04.545045> Receive error 1
2019-06-06T09:59:04.805213> Receive error 1
2019-06-06T09:59:05.065833> Receive error 1
2019-06-06T09:59:05.325912> Receive error 1
2019-06-06T09:59:05.586028> Receive error 1
2019-06-06T09:59:05.846182> Receive error 1
2019-06-06T09:59:06.106232> Receive error 1
2019-06-06T09:59:06.366683> Receive error 1
2019-06-06T09:59:06.626907> Receive error 1
2019-06-06T09:59:06.887115> Receive error 1
2019-06-06T09:59:07.147167> Receive error 1
2019-06-06T09:59:07.407284> Receive error 1
2019-06-06T09:59:07.667452> Receive error 1
2019-06-06T09:59:07.927663> Receive error 1
2019-06-06T09:59:07.928359> Low-level gw status ON
2019-06-06T09:59:08.187790> Receive error 1
2019-06-06T09:59:08.447848> Receive error 1
2019-06-06T09:59:08.707917> Receive error 1
2019-06-06T09:59:08.968011> Receive error 1
2019-06-06T09:59:09.228138> Receive error 1
2019-06-06T09:59:09.488237> Receive error 1
2019-06-06T09:59:09.747877> Receive error 1
2019-06-06T09:59:10.007860> Receive error 1
2019-06-06T09:59:10.267936> Receive error 1
2019-06-06T09:59:10.528117> Receive error 1
2019-06-06T09:59:10.788092> Receive error 1
2019-06-06T09:59:11.048073> Receive error 1
2019-06-06T09:59:11.308603> Receive error 1
2019-06-06T09:59:11.568900> Receive error 1
2019-06-06T09:59:11.828744> Receive error 1
2019-06-06T09:59:12.088999> Receive error 1
2019-06-06T09:59:12.349010> Receive error 1
2019-06-06T09:59:12.609124> Receive error 1
2019-06-06T09:59:12.869380> Receive error 1
2019-06-06T09:59:13.129423> Receive error 1
2019-06-06T09:59:13.389404> Receive error 1
2019-06-06T09:59:13.649578> Receive error 1
2019-06-06T09:59:13.909674> Receive error 1
2019-06-06T09:59:14.170016> Receive error 1
2019-06-06T09:59:14.430161> Receive error 1
2019-06-06T09:59:14.690327> Receive error 1
2019-06-06T09:59:14.950312> Receive error 1
2019-06-06T09:59:15.210459> Receive error 1
2019-06-06T09:59:15.470114> Receive error 1
2019-06-06T09:59:15.730113> Receive error 1
2019-06-06T09:59:15.990159> Receive error 1
2019-06-06T09:59:16.250258> Receive error 1
2019-06-06T09:59:16.510186> Receive error 1
2019-06-06T09:59:16.770612> Receive error 1
2019-06-06T09:59:17.031215> Receive error 1
2019-06-06T09:59:17.292264> Receive error 1
2019-06-06T09:59:17.552787> Receive error 1
2019-06-06T09:59:17.813314> Receive error 1
2019-06-06T09:59:18.073787> Receive error 1
2019-06-06T09:59:18.334350> Receive error 1
2019-06-06T09:59:18.594534> Receive error 1
2019-06-06T09:59:18.855069> Receive error 1
2019-06-06T09:59:19.115622> Receive error 1
2019-06-06T09:59:19.375215> Receive error 1
2019-06-06T09:59:19.635339> Receive error 1
2019-06-06T09:59:19.895180> Receive error 1
2019-06-06T09:59:20.155614> Receive error 1
2019-06-06T09:59:20.416000> Receive error 1
2019-06-06T09:59:20.677100> Receive error 1
2019-06-06T09:59:20.937177> Receive error 1
2019-06-06T09:59:21.197047> Receive error 1
2019-06-06T09:59:21.457120> Receive error 1
2019-06-06T09:59:21.716949> Receive error 1
2019-06-06T09:59:21.977633> Receive error 1
2019-06-06T09:59:22.238277> Receive error 1
2019-06-06T09:59:22.499137> Receive error 1
2019-06-06T09:59:22.759955> Receive error 1
2019-06-06T09:59:23.020452> Receive error 1
2019-06-06T09:59:23.280986> Receive error 1
2019-06-06T09:59:23.541499> Receive error 1
2019-06-06T09:59:23.542203> Low-level gw status ON
2019-06-06T09:59:23.802301> Receive error 1
2019-06-06T09:59:24.062857> Receive error 1
2019-06-06T09:59:24.323335> Receive error 1
2019-06-06T09:59:24.583856> Receive error 1
2019-06-06T09:59:24.844414> Receive error 1
2019-06-06T09:59:25.105001> Receive error 1
2019-06-06T09:59:25.365488> Receive error 1
2019-06-06T09:59:25.626013> Receive error 1
2019-06-06T09:59:25.886223> Receive error 1
2019-06-06T09:59:26.153549> Receive error 1
2019-06-06T09:59:26.413882> Receive error 1
2019-06-06T09:59:26.674446> Receive error 1
2019-06-06T09:59:26.934722> Receive error 1
2019-06-06T09:59:27.195054> Receive error 1
2019-06-06T09:59:27.455748> Receive error 1
2019-06-06T09:59:27.716308> Receive error 1
2019-06-06T09:59:27.976328> Receive error 1
2019-06-06T09:59:28.236619> Receive error 1
2019-06-06T09:59:28.496920> Receive error 1
2019-06-06T09:59:28.757811> Receive error 1
2019-06-06T09:59:29.018368> Receive error 1
2019-06-06T09:59:29.278816> Receive error 1
2019-06-06T09:59:29.538838> Receive error 1
2019-06-06T09:59:29.799319> Receive error 1
2019-06-06T09:59:30.059426> Receive error 1
2019-06-06T09:59:30.319653> Receive error 1
2019-06-06T09:59:30.579737> Receive error 1
2019-06-06T09:59:30.840400> Receive error 1
2019-06-06T09:59:31.100086> Receive error 1
2019-06-06T09:59:31.360343> Receive error 1
2019-06-06T09:59:31.620060> Receive error 1
2019-06-06T09:59:31.879995> Receive error 1
2019-06-06T09:59:32.139905> Receive error 1
2019-06-06T09:59:32.400119> Receive error 1
2019-06-06T09:59:32.660262> Receive error 1
2019-06-06T09:59:32.920239> Receive error 1
2019-06-06T09:59:33.180498> Receive error 1
2019-06-06T09:59:33.440741> Receive error 1
2019-06-06T09:59:33.700895> Receive error 1
2019-06-06T09:59:33.961178> Receive error 1
2019-06-06T09:59:34.221108> Receive error 1
2019-06-06T09:59:34.482858> Receive error 1
2019-06-06T09:59:34.742328> Receive error 1
2019-06-06T09:59:35.002400> Receive error 1
2019-06-06T09:59:35.262424> Receive error 1
2019-06-06T09:59:35.522731> Receive error 1
2019-06-06T09:59:35.782730> Receive error 1
2019-06-06T09:59:36.042820> Receive error 1
2019-06-06T09:59:36.302456> Receive error 1
2019-06-06T09:59:36.562525> Receive error 1
2019-06-06T09:59:36.822485> Receive error 1
2019-06-06T09:59:37.082923> Receive error 1
2019-06-06T09:59:37.342927> Receive error 1
2019-06-06T09:59:37.603588> Receive error 1
2019-06-06T09:59:37.864187> Receive error 1
2019-06-06T09:59:38.124741> Receive error 1
2019-06-06T09:59:38.384828> Receive error 1
2019-06-06T09:59:38.645644> Receive error 1
2019-06-06T09:59:38.906131> Receive error 1
2019-06-06T09:59:39.166274> Receive error 1
2019-06-06T09:59:39.166696> Low-level gw status ON
2019-06-06T09:59:39.426123> Receive error 1
2019-06-06T09:59:39.686072> Receive error 1
2019-06-06T09:59:39.946545> Receive error 1
2019-06-06T09:59:40.206707> Receive error 1
2019-06-06T09:59:40.466236> Receive error 1
2019-06-06T09:59:40.726285> Receive error 1
2019-06-06T09:59:40.986207> Receive error 1
2019-06-06T09:59:41.246633> Receive error 1
2019-06-06T09:59:41.506555> Receive error 1
2019-06-06T09:59:41.768758> Receive error 1
2019-06-06T09:59:42.028774> Receive error 1
2019-06-06T09:59:42.289591> Receive error 1
2019-06-06T09:59:42.549634> Receive error 1
2019-06-06T09:59:42.809776> Receive error 1
2019-06-06T09:59:43.069920> Receive error 1
2019-06-06T09:59:43.329535> Receive error 1
2019-06-06T09:59:43.589512> Receive error 1
2019-06-06T09:59:43.850921> Receive error 1
2019-06-06T09:59:44.110217> Receive error 1
2019-06-06T09:59:44.370262> Receive error 1
2019-06-06T09:59:44.630710> Receive error 1
2019-06-06T09:59:44.890834> Receive error 1
2019-06-06T09:59:45.151058> Receive error 1
2019-06-06T09:59:45.411182> Receive error 1
2019-06-06T09:59:45.671222> Receive error 1
2019-06-06T09:59:45.931517> Receive error 1
2019-06-06T09:59:46.192632> Receive error 1
2019-06-06T09:59:46.452771> Receive error 1
2019-06-06T09:59:46.712822> Receive error 1
2019-06-06T09:59:46.973014> Receive error 1
2019-06-06T09:59:47.233126> Receive error 1
2019-06-06T09:59:47.493206> Receive error 1
2019-06-06T09:59:47.753308> Receive error 1
2019-06-06T09:59:48.013404> Receive error 1
2019-06-06T09:59:48.273556> Receive error 1
2019-06-06T09:59:48.533639> Receive error 1
2019-06-06T09:59:48.793661> Receive error 1
2019-06-06T09:59:49.053829> Receive error 1
2019-06-06T09:59:49.313728> Receive error 1
2019-06-06T09:59:49.574038> Receive error 1
2019-06-06T09:59:49.833905> Receive error 1
2019-06-06T09:59:50.093932> Receive error 1
2019-06-06T09:59:50.353916> Receive error 1
2019-06-06T09:59:50.614374> Receive error 1
2019-06-06T09:59:50.874471> Receive error 1
2019-06-06T09:59:51.135481> Receive error 1
2019-06-06T09:59:51.396059> Receive error 1
2019-06-06T09:59:51.656568> Receive error 1
2019-06-06T09:59:51.916712> Receive error 1
2019-06-06T09:59:52.176710> Receive error 1
2019-06-06T09:59:52.436637> Receive error 1
2019-06-06T09:59:52.697046> Receive error 1
2019-06-06T09:59:52.957359> Receive error 1
2019-06-06T09:59:53.217731> Receive error 1
2019-06-06T09:59:53.477854> Receive error 1
2019-06-06T09:59:53.738033> Receive error 1
2019-06-06T09:59:53.998151> Receive error 1
2019-06-06T09:59:54.259787> Receive error 1
2019-06-06T09:59:54.520155> Receive error 1
2019-06-06T09:59:54.780518> Receive error 1
2019-06-06T09:59:54.780885> Low-level gw status ON
2019-06-06T09:59:55.041192> Receive error 1
2019-06-06T09:59:55.300814> Receive error 1
2019-06-06T09:59:55.560694> Receive error 1
2019-06-06T09:59:55.820725> Receive error 1
2019-06-06T09:59:56.080579> Receive error 1
2019-06-06T09:59:56.341271> Receive error 1
2019-06-06T09:59:56.601293> Receive error 1
2019-06-06T09:59:56.861379> Receive error 1
2019-06-06T09:59:57.121436> Receive error 1
2019-06-06T09:59:57.381522> Receive error 1
2019-06-06T09:59:57.641634> Receive error 1
2019-06-06T09:59:57.901871> Receive error 1
2019-06-06T09:59:58.163529> Receive error 1
2019-06-06T09:59:58.423557> Receive error 1
2019-06-06T09:59:58.683663> Receive error 1
2019-06-06T09:59:58.943788> Receive error 1
2019-06-06T09:59:59.203793> Receive error 1
2019-06-06T09:59:59.463911> Receive error 1
2019-06-06T09:59:59.724912> Receive error 1
2019-06-06T09:59:59.984011> Receive error 1
2019-06-06T10:00:00.243923> Receive error 1
2019-06-06T10:00:00.504179> Receive error 1
2019-06-06T10:00:00.764046> Receive error 1
2019-06-06T10:00:01.023995> Receive error 1
2019-06-06T10:00:01.284452> Receive error 1
2019-06-06T10:00:01.544785> Receive error 1
2019-06-06T10:00:01.804985> Receive error 1
2019-06-06T10:00:02.065076> Receive error 1
2019-06-06T10:00:02.325179> Receive error 1
2019-06-06T10:00:02.585349> Receive error 1
2019-06-06T10:00:02.845401> Receive error 1
2019-06-06T10:00:03.105586> Receive error 1
2019-06-06T10:00:03.365229> Receive error 1
2019-06-06T10:00:03.625140> Receive error 1
2019-06-06T10:00:03.885454> Receive error 1
2019-06-06T10:00:04.145748> Receive error 1
2019-06-06T10:00:04.405863> Receive error 1
2019-06-06T10:00:04.665935> Receive error 1
2019-06-06T10:00:04.925999> Receive error 1
2019-06-06T10:00:05.186189> Receive error 1
2019-06-06T10:00:05.445744> Receive error 1
2019-06-06T10:00:05.705712> Receive error 1
2019-06-06T10:00:05.966187> Receive error 1
2019-06-06T10:00:06.226175> Receive error 1
2019-06-06T10:00:06.486118> Receive error 1
2019-06-06T10:00:06.746181> Receive error 1
2019-06-06T10:00:07.006659> Receive error 1
2019-06-06T10:00:07.266194> Receive error 1
2019-06-06T10:00:07.526155> Receive error 1
2019-06-06T10:00:07.786124> Receive error 1
2019-06-06T10:00:08.046642> Receive error 1
2019-06-06T10:00:08.306728> Receive error 1
2019-06-06T10:00:08.566768> Receive error 1
2019-06-06T10:00:08.826982> Receive error 1
2019-06-06T10:00:09.086995> Receive error 1
2019-06-06T10:00:09.347167> Receive error 1
2019-06-06T10:00:09.607176> Receive error 1
2019-06-06T10:00:09.867423> Receive error 1
2019-06-06T10:00:10.127484> Receive error 1
2019-06-06T10:00:10.387961> Receive error 1
2019-06-06T10:00:10.388796> Low-level gw status ON
2019-06-06T10:00:10.647922> Receive error 1
2019-06-06T10:00:10.908063> Receive error 1
2019-06-06T10:00:11.168295> Receive error 1
2019-06-06T10:00:11.428403> Receive error 1
2019-06-06T10:00:11.687954> Receive error 1
2019-06-06T10:00:11.948707> Receive error 1
2019-06-06T10:00:12.208545> Receive error 1
2019-06-06T10:00:12.469032> Receive error 1
2019-06-06T10:00:12.729129> Receive error 1
2019-06-06T10:00:12.989191> Receive error 1
2019-06-06T10:00:13.249500> Receive error 1
2019-06-06T10:00:13.509034> Receive error 1
2019-06-06T10:00:13.769091> Receive error 1
2019-06-06T10:00:14.029538> Receive error 1
2019-06-06T10:00:14.289585> Receive error 1
2019-06-06T10:00:14.549733> Receive error 1
2019-06-06T10:00:14.809887> Receive error 1
2019-06-06T10:00:15.069926> Receive error 1
2019-06-06T10:00:15.329909> Receive error 1
2019-06-06T10:00:15.589804> Receive error 1
2019-06-06T10:00:15.850308> Receive error 1
2019-06-06T10:00:16.111028> Receive error 1
2019-06-06T10:00:16.371582> Receive error 1
2019-06-06T10:00:16.634046> Receive error 1
2019-06-06T10:00:16.894351> Receive error 1
2019-06-06T10:00:17.154660> Receive error 1
2019-06-06T10:00:17.414840> Receive error 1
2019-06-06T10:00:17.675028> Receive error 1
2019-06-06T10:00:17.934875> Receive error 1
2019-06-06T10:00:18.194805> Receive error 1
2019-06-06T10:00:18.454764> Receive error 1
2019-06-06T10:00:18.715249> Receive error 1
2019-06-06T10:00:18.975301> Receive error 1
2019-06-06T10:00:19.235867> Receive error 1
2019-06-06T10:00:19.496376> Receive error 1
2019-06-06T10:00:19.756531> Receive error 1
2019-06-06T10:00:20.016815> Receive error 1
2019-06-06T10:00:20.277091> Receive error 1
2019-06-06T10:00:20.537722> Receive error 1
2019-06-06T10:00:20.798243> Receive error 1
2019-06-06T10:00:21.059009> Receive error 1
2019-06-06T10:00:21.319527> Receive error 1
2019-06-06T10:00:21.580277> Receive error 1
2019-06-06T10:00:21.840519> Receive error 1
2019-06-06T10:00:22.101180> Receive error 1
2019-06-06T10:00:22.361586> Receive error 1
2019-06-06T10:00:22.622150> Receive error 1
2019-06-06T10:00:22.882375> Receive error 1
2019-06-06T10:00:23.142715> Receive error 1
2019-06-06T10:00:23.403376> Receive error 1
2019-06-06T10:00:23.663633> Receive error 1
2019-06-06T10:00:23.923897> Receive error 1
2019-06-06T10:00:24.184541> Receive error 1
2019-06-06T10:00:24.445079> Receive error 1
2019-06-06T10:00:24.705572> Receive error 1
2019-06-06T10:00:24.966063> Receive error 1
2019-06-06T10:00:25.226244> Receive error 1
2019-06-06T10:00:25.486504> Receive error 1
2019-06-06T10:00:25.746742> Receive error 1
2019-06-06T10:00:26.007472> Receive error 1
2019-06-06T10:00:26.008269> Low-level gw status ON
2019-06-06T10:00:26.268205> Receive error 1
2019-06-06T10:00:26.528803> Receive error 1
2019-06-06T10:00:26.789939> Receive error 1
2019-06-06T10:00:27.050680> Receive error 1
2019-06-06T10:00:27.311221> Receive error 1
2019-06-06T10:00:27.572197> Receive error 1
2019-06-06T10:00:27.832827> Receive error 1
2019-06-06T10:00:28.093305> Receive error 1
2019-06-06T10:00:28.356509> Receive error 1
2019-06-06T10:00:28.619784> Receive error 1
2019-06-06T10:00:28.879973> Receive error 1
2019-06-06T10:00:29.139837> Receive error 1
2019-06-06T10:00:29.400189> Receive error 1
2019-06-06T10:00:29.660269> Receive error 1
2019-06-06T10:00:29.920350> Receive error 1
2019-06-06T10:00:30.180785> Receive error 1
2019-06-06T10:00:30.446889> Receive error 1
2019-06-06T10:00:30.707029> Receive error 1
2019-06-06T10:00:30.966825> Receive error 1
2019-06-06T10:00:31.226674> Receive error 1
2019-06-06T10:00:31.486848> Receive error 1
2019-06-06T10:00:31.747196> Receive error 1
2019-06-06T10:00:32.007404> Receive error 1
2019-06-06T10:00:32.267618> Receive error 1
2019-06-06T10:00:32.527856> Receive error 1
2019-06-06T10:00:32.787957> Receive error 1
2019-06-06T10:00:33.048118> Receive error 1
2019-06-06T10:00:33.312637> Receive error 1
2019-06-06T10:00:33.580224> Receive error 1
2019-06-06T10:00:33.840177> Receive error 1
2019-06-06T10:00:34.100574> Receive error 1
2019-06-06T10:00:34.360282> Receive error 1
2019-06-06T10:00:34.620815> Receive error 1
2019-06-06T10:00:34.880782> Receive error 1
2019-06-06T10:00:35.140677> Receive error 1
2019-06-06T10:00:35.400644> Receive error 1
2019-06-06T10:00:35.661049> Receive error 1
2019-06-06T10:00:35.921189> Receive error 1
2019-06-06T10:00:36.181353> Receive error 1
2019-06-06T10:00:36.441348> Receive error 1
2019-06-06T10:00:36.701830> Receive error 1
2019-06-06T10:00:36.962300> Receive error 1
2019-06-06T10:00:37.222770> Receive error 1
2019-06-06T10:00:37.483243> Receive error 1
2019-06-06T10:00:37.743740> Receive error 1
2019-06-06T10:00:38.004512> Receive error 1
2019-06-06T10:00:38.265209> Receive error 1
2019-06-06T10:00:38.525696> Receive error 1
2019-06-06T10:00:38.786207> Receive error 1
2019-06-06T10:00:39.046695> Receive error 1
2019-06-06T10:00:39.307763> Receive error 1
2019-06-06T10:00:39.567709> Receive error 1
2019-06-06T10:00:39.827900> Receive error 1
2019-06-06T10:00:40.091517> Receive error 1
2019-06-06T10:00:40.349228> Receive error 1
2019-06-06T10:00:40.609261> Receive error 1
2019-06-06T10:00:40.869552> Receive error 1
2019-06-06T10:00:41.129893> Receive error 1
2019-06-06T10:00:41.389789> Receive error 1
2019-06-06T10:00:41.649965> Receive error 1
2019-06-06T10:00:41.650658> Low-level gw status ON
2019-06-06T10:00:41.910083> Receive error 1
2019-06-06T10:00:42.170651> Receive error 1
2019-06-06T10:00:42.430587> Receive error 1
2019-06-06T10:00:42.690672> Receive error 1
2019-06-06T10:00:42.950785> Receive error 1
2019-06-06T10:00:43.210888> Receive error 1
2019-06-06T10:00:43.470993> Receive error 1
2019-06-06T10:00:43.731035> Receive error 1
2019-06-06T10:00:43.991374> Receive error 1
2019-06-06T10:00:44.251274> Receive error 1
2019-06-06T10:00:44.511640> Receive error 1
2019-06-06T10:00:44.772129> Receive error 1
2019-06-06T10:00:45.032466> Receive error 1
2019-06-06T10:00:45.292854> Receive error 1
2019-06-06T10:00:45.553500> Receive error 1
2019-06-06T10:00:45.818834> Receive error 1
2019-06-06T10:00:46.078833> Receive error 1
2019-06-06T10:00:46.338794> Receive error 1
2019-06-06T10:00:46.599268> Receive error 1
2019-06-06T10:00:46.859354> Receive error 1
2019-06-06T10:00:47.119566> Receive error 1
2019-06-06T10:00:47.379840> Receive error 1
2019-06-06T10:00:47.639662> Receive error 1
2019-06-06T10:00:47.899855> Receive error 1
2019-06-06T10:00:48.160058> Receive error 1
2019-06-06T10:00:48.420127> Receive error 1
2019-06-06T10:00:48.680350> Receive error 1
2019-06-06T10:00:48.940419> Receive error 1
2019-06-06T10:00:49.200699> Receive error 1
2019-06-06T10:00:49.460918> Receive error 1
2019-06-06T10:00:49.721032> Receive error 1
2019-06-06T10:00:49.981301> Receive error 1
2019-06-06T10:00:50.241566> Receive error 1
2019-06-06T10:00:50.501692> Receive error 1
2019-06-06T10:00:50.761742> Receive error 1
2019-06-06T10:00:51.021641> Receive error 1
2019-06-06T10:00:51.281704> Receive error 1
2019-06-06T10:00:51.541947> Receive error 1
2019-06-06T10:00:51.802669> Receive error 1
2019-06-06T10:00:52.063401> Receive error 1
2019-06-06T10:00:52.324062> Receive error 1
2019-06-06T10:00:52.584537> Receive error 1
2019-06-06T10:00:52.845080> Receive error 1
2019-06-06T10:00:53.105603> Receive error 1
2019-06-06T10:00:53.366131> Receive error 1
2019-06-06T10:00:53.626717> Receive error 1
2019-06-06T10:00:53.887156> Receive error 1
2019-06-06T10:00:54.148465> Receive error 1
2019-06-06T10:00:54.408402> Receive error 1
2019-06-06T10:00:54.669017> Receive error 1
2019-06-06T10:00:54.929497> Receive error 1
2019-06-06T10:00:55.189936> Receive error 1
2019-06-06T10:00:55.450514> Receive error 1
2019-06-06T10:00:55.711043> Receive error 1
2019-06-06T10:00:55.971849> Receive error 1
2019-06-06T10:00:56.233595> Receive error 1
2019-06-06T10:00:56.493303> Receive error 1
2019-06-06T10:00:56.753368> Receive error 1
2019-06-06T10:00:57.013871> Receive error 1
2019-06-06T10:00:57.273713> Receive error 1
2019-06-06T10:00:57.274089> Low-level gw status ON
2019-06-06T10:00:57.533891> Receive error 1
2019-06-06T10:00:57.794347> Receive error 1
2019-06-06T10:00:58.055018> Receive error 1
2019-06-06T10:00:58.315100> Receive error 1
2019-06-06T10:00:58.575453> Receive error 1
2019-06-06T10:00:58.835504> Receive error 1
2019-06-06T10:00:59.095940> Receive error 1
2019-06-06T10:00:59.356068> Receive error 1
2019-06-06T10:00:59.616227> Receive error 1
2019-06-06T10:00:59.876432> Receive error 1
2019-06-06T10:01:00.136506> Receive error 1
2019-06-06T10:01:00.396560> Receive error 1
2019-06-06T10:01:00.656642> Receive error 1
2019-06-06T10:01:00.918131> Receive error 1
2019-06-06T10:01:01.177249> Receive error 1
2019-06-06T10:01:01.437318> Receive error 1
2019-06-06T10:01:01.697789> Receive error 1
2019-06-06T10:01:01.958342> Receive error 1
2019-06-06T10:01:02.218464> Receive error 1
2019-06-06T10:01:02.478898> Receive error 1
2019-06-06T10:01:02.739412> Receive error 1
2019-06-06T10:01:02.999759> Receive error 1
2019-06-06T10:01:03.260279> Receive error 1
2019-06-06T10:01:03.520803> Receive error 1
2019-06-06T10:01:03.781408> Receive error 1
2019-06-06T10:01:04.041957> Receive error 1
2019-06-06T10:01:04.302615> Receive error 1
2019-06-06T10:01:04.563259> Receive error 1
2019-06-06T10:01:04.823839> Receive error 1
2019-06-06T10:01:05.084503> Receive error 1
2019-06-06T10:01:05.345001> Receive error 1
2019-06-06T10:01:05.605575> Receive error 1
2019-06-06T10:01:05.866158> Receive error 1
2019-06-06T10:01:06.126683> Receive error 1
2019-06-06T10:01:06.387230> Receive error 1
2019-06-06T10:01:06.647871> Receive error 1
2019-06-06T10:01:06.907949> Receive error 1
2019-06-06T10:01:07.168010> Receive error 1
2019-06-06T10:01:07.428113> Receive error 1
2019-06-06T10:01:07.687734> Receive error 1
2019-06-06T10:01:07.947813> Receive error 1
2019-06-06T10:01:08.207801> Receive error 1
2019-06-06T10:01:08.467738> Receive error 1
2019-06-06T10:01:08.727830> Receive error 1
2019-06-06T10:01:08.987774> Receive error 1
2019-06-06T10:01:09.248201> Receive error 1
2019-06-06T10:01:09.508930> Receive error 1
2019-06-06T10:01:09.769587> Receive error 1
2019-06-06T10:01:10.030015> Receive error 1
2019-06-06T10:01:10.290135> Receive error 1
2019-06-06T10:01:10.550242> Receive error 1
2019-06-06T10:01:10.810752> Receive error 1
2019-06-06T10:01:11.071667> Receive error 1
2019-06-06T10:01:11.332333> Receive error 1
2019-06-06T10:01:11.592967> Receive error 1
2019-06-06T10:01:11.853311> Receive error 1
2019-06-06T10:01:12.113577> Receive error 1
2019-06-06T10:01:12.373975> Receive error 1
2019-06-06T10:01:12.634452> Receive error 1
2019-06-06T10:01:12.894555> Receive error 1
2019-06-06T10:01:12.895190> Low-level gw status ON
2019-06-06T10:01:13.155033> Receive error 1
2019-06-06T10:01:13.414845> Receive error 1
2019-06-06T10:01:13.674778> Receive error 1
2019-06-06T10:01:13.934750> Receive error 1
2019-06-06T10:01:14.194710> Receive error 1
2019-06-06T10:01:14.454673> Receive error 1
2019-06-06T10:01:14.715038> Receive error 1
2019-06-06T10:01:14.975028> Receive error 1
2019-06-06T10:01:15.235526> Receive error 1
2019-06-06T10:01:15.496052> Receive error 1
2019-06-06T10:01:15.756549> Receive error 1
2019-06-06T10:01:16.016979> Receive error 1
2019-06-06T10:01:16.278220> Receive error 1
2019-06-06T10:01:16.537960> Receive error 1
2019-06-06T10:01:16.798315> Receive error 1
2019-06-06T10:01:17.059010> Receive error 1
2019-06-06T10:01:17.319497> Receive error 1
2019-06-06T10:01:17.579977> Receive error 1
2019-06-06T10:01:17.840500> Receive error 1
2019-06-06T10:01:18.101038> Receive error 1
2019-06-06T10:01:18.361528> Receive error 1
2019-06-06T10:01:18.622345> Receive error 1
2019-06-06T10:01:18.882517> Receive error 1
2019-06-06T10:01:19.144643> Receive error 1
2019-06-06T10:01:19.405046> Receive error 1
2019-06-06T10:01:19.665424> Receive error 1
2019-06-06T10:01:19.925946> Receive error 1
2019-06-06T10:01:20.186492> Receive error 1
2019-06-06T10:01:20.447010> Receive error 1
2019-06-06T10:01:20.707635> Receive error 1
2019-06-06T10:01:20.968203> Receive error 1
2019-06-06T10:01:21.229238> Receive error 1
2019-06-06T10:01:21.489506> Receive error 1
2019-06-06T10:01:21.750075> Receive error 1
2019-06-06T10:01:22.010571> Receive error 1
2019-06-06T10:01:22.271072> Receive error 1
2019-06-06T10:01:22.531641> Receive error 1
2019-06-06T10:01:22.792177> Receive error 1
2019-06-06T10:01:23.052642> Receive error 1
2019-06-06T10:01:23.313170> Receive error 1
2019-06-06T10:01:23.573348> Receive error 1
2019-06-06T10:01:23.833693> Receive error 1
2019-06-06T10:01:24.093869> Receive error 1
2019-06-06T10:01:24.358988> Receive error 1
2019-06-06T10:01:24.619189> Receive error 1
2019-06-06T10:01:24.879552> Receive error 1
2019-06-06T10:01:25.140368> Receive error 1
2019-06-06T10:01:25.400921> Receive error 1
2019-06-06T10:01:25.661438> Receive error 1
2019-06-06T10:01:25.922154> Receive error 1
2019-06-06T10:01:26.182690> Receive error 1
2019-06-06T10:01:26.443222> Receive error 1
2019-06-06T10:01:26.703911> Receive error 1
2019-06-06T10:01:26.964391> Receive error 1
2019-06-06T10:01:27.225018> Receive error 1
2019-06-06T10:01:27.485128> Receive error 1
2019-06-06T10:01:27.745374> Receive error 1
2019-06-06T10:01:28.005618> Receive error 1
2019-06-06T10:01:28.266291> Receive error 1
2019-06-06T10:01:28.527026> Receive error 1
2019-06-06T10:01:28.527701> Low-level gw status ON
2019-06-06T10:01:28.788157> Receive error 1
2019-06-06T10:01:29.048812> Receive error 1
2019-06-06T10:01:29.309484> Receive error 1
2019-06-06T10:01:29.569922> Receive error 1
2019-06-06T10:01:29.830444> Receive error 1
2019-06-06T10:01:30.090706> Receive error 1
2019-06-06T10:01:30.351244> Receive error 1
2019-06-06T10:01:30.611567> Receive error 1
2019-06-06T10:01:30.871814> Receive error 1
2019-06-06T10:01:31.132082> Receive error 1
2019-06-06T10:01:31.392332> Receive error 1
2019-06-06T10:01:31.652795> Receive error 1
2019-06-06T10:01:31.913180> Receive error 1
2019-06-06T10:01:32.173091> Receive error 1
2019-06-06T10:01:32.433152> Receive error 1
2019-06-06T10:01:32.693343> Receive error 1
2019-06-06T10:01:32.953537> Receive error 1
2019-06-06T10:01:33.213562> Receive error 1
2019-06-06T10:01:33.473694> Receive error 1
2019-06-06T10:01:33.733789> Receive error 1
2019-06-06T10:01:33.993938> Receive error 1
2019-06-06T10:01:34.254065> Receive error 1
2019-06-06T10:01:34.514136> Receive error 1
2019-06-06T10:01:34.773783> Receive error 1
2019-06-06T10:01:35.033725> Receive error 1
2019-06-06T10:01:35.293633> Receive error 1
2019-06-06T10:01:35.554087> Receive error 1
2019-06-06T10:01:35.813730> Receive error 1
2019-06-06T10:01:36.076097> Receive error 1
2019-06-06T10:01:36.336231> Receive error 1
2019-06-06T10:01:36.596423> Receive error 1
2019-06-06T10:01:36.856358> Receive error 1
2019-06-06T10:01:37.116290> Receive error 1
2019-06-06T10:01:37.376657> Receive error 1
2019-06-06T10:01:37.637131> Receive error 1
2019-06-06T10:01:37.897863> Receive error 1
2019-06-06T10:01:38.158377> Receive error 1
2019-06-06T10:01:38.418996> Receive error 1
2019-06-06T10:01:38.679271> Receive error 1
2019-06-06T10:01:38.939772> Receive error 1
2019-06-06T10:01:39.200291> Receive error 1
2019-06-06T10:01:39.460987> Receive error 1
2019-06-06T10:01:39.721690> Receive error 1
2019-06-06T10:01:39.982271> Receive error 1
2019-06-06T10:01:40.242922> Receive error 1
2019-06-06T10:01:40.503470> Receive error 1
2019-06-06T10:01:40.764018> Receive error 1
2019-06-06T10:01:41.024497> Receive error 1
2019-06-06T10:01:41.285198> Receive error 1
2019-06-06T10:01:41.545323> Receive error 1
2019-06-06T10:01:41.805683> Receive error 1
2019-06-06T10:01:42.066277> Receive error 1
2019-06-06T10:01:42.326929> Receive error 1
2019-06-06T10:01:42.587552> Receive error 1
2019-06-06T10:01:42.847657> Receive error 1
2019-06-06T10:01:43.107758> Receive error 1
2019-06-06T10:01:43.367880> Receive error 1
2019-06-06T10:01:43.627925> Receive error 1
2019-06-06T10:01:43.888099> Receive error 1
2019-06-06T10:01:44.147736> Receive error 1
2019-06-06T10:01:44.148172> Low-level gw status ON
2019-06-06T10:01:44.407629> Receive error 1
2019-06-06T10:01:44.667724> Receive error 1
2019-06-06T10:01:44.928307> Receive error 1
2019-06-06T10:01:45.188404> Receive error 1
2019-06-06T10:01:45.448459> Receive error 1
2019-06-06T10:01:45.708674> Receive error 1
2019-06-06T10:01:45.968761> Receive error 1
2019-06-06T10:01:46.228415> Receive error 1
2019-06-06T10:01:46.488369> Receive error 1
2019-06-06T10:01:46.748249> Receive error 1
2019-06-06T10:01:47.008343> Receive error 1
2019-06-06T10:01:47.270250> Receive error 1
2019-06-06T10:01:47.530194> Receive error 1
2019-06-06T10:01:47.790687> Receive error 1
2019-06-06T10:01:48.050822> Receive error 1
2019-06-06T10:01:48.310377> Receive error 1
2019-06-06T10:01:48.571663> Receive error 1
2019-06-06T10:01:48.831396> Receive error 1
2019-06-06T10:01:49.091901> Receive error 1
2019-06-06T10:01:49.351981> Receive error 1
2019-06-06T10:01:49.612246> Receive error 1
2019-06-06T10:01:49.872394> Receive error 1
2019-06-06T10:01:50.132932> Receive error 1
2019-06-06T10:01:50.393127> Receive error 1
2019-06-06T10:01:50.653452> Receive error 1
2019-06-06T10:01:50.914662> Receive error 1
2019-06-06T10:01:51.173824> Receive error 1
2019-06-06T10:01:51.433905> Receive error 1
2019-06-06T10:01:51.693974> Receive error 1
2019-06-06T10:01:51.954093> Receive error 1
2019-06-06T10:01:52.214794> Receive error 1
2019-06-06T10:01:52.474615> Receive error 1
2019-06-06T10:01:52.734197> Receive error 1
2019-06-06T10:01:52.994392> Receive error 1
2019-06-06T10:01:53.254382> Receive error 1
2019-06-06T10:01:53.514874> Receive error 1
2019-06-06T10:01:53.774908> Receive error 1
2019-06-06T10:01:54.035455> Receive error 1
2019-06-06T10:01:54.295583> Receive error 1
2019-06-06T10:01:54.555674> Receive error 1
2019-06-06T10:01:54.815742> Receive error 1
2019-06-06T10:01:55.075940> Receive error 1
2019-06-06T10:01:55.335994> Receive error 1
2019-06-06T10:01:55.596614> Receive error 1
2019-06-06T10:01:55.856666> Receive error 1
2019-06-06T10:01:56.116798> Receive error 1
2019-06-06T10:01:56.376893> Receive error 1
2019-06-06T10:01:56.637144> Receive error 1
2019-06-06T10:01:56.897365> Receive error 1
2019-06-06T10:01:57.157502> Receive error 1
2019-06-06T10:01:57.417803> Receive error 1
2019-06-06T10:01:57.678084> Receive error 1
2019-06-06T10:01:57.938830> Receive error 1
2019-06-06T10:01:58.199353> Receive error 1
2019-06-06T10:01:58.459854> Receive error 1
2019-06-06T10:01:58.720266> Receive error 1
2019-06-06T10:01:58.981184> Receive error 1
2019-06-06T10:01:59.241296> Receive error 1
2019-06-06T10:01:59.501792> Receive error 1
2019-06-06T10:01:59.762054> Receive error 1
2019-06-06T10:01:59.762523> Low-level gw status ON
2019-06-06T10:02:00.023259> Receive error 1
2019-06-06T10:02:00.284136> Receive error 1
2019-06-06T10:02:00.544586> Receive error 1
2019-06-06T10:02:00.805228> Receive error 1
2019-06-06T10:02:01.065820> Receive error 1
2019-06-06T10:02:01.326346> Receive error 1
2019-06-06T10:02:01.587383> Receive error 1
2019-06-06T10:02:01.847609> Receive error 1
2019-06-06T10:02:02.108362> Receive error 1
2019-06-06T10:02:02.369337> Receive error 1
2019-06-06T10:02:02.630173> Receive error 1
2019-06-06T10:02:02.890363> Receive error 1
2019-06-06T10:02:03.150808> Receive error 1
2019-06-06T10:02:03.411493> Receive error 1
2019-06-06T10:02:03.672077> Receive error 1
2019-06-06T10:02:03.932222> Receive error 1
2019-06-06T10:02:04.192550> Receive error 1
2019-06-06T10:02:04.453007> Receive error 1
2019-06-06T10:02:04.713221> Receive error 1
2019-06-06T10:02:04.973620> Receive error 1
2019-06-06T10:02:05.233857> Receive error 1
2019-06-06T10:02:05.494531> Receive error 1
2019-06-06T10:02:05.755204> Receive error 1
2019-06-06T10:02:06.015735> Receive error 1
2019-06-06T10:02:06.276247> Receive error 1
2019-06-06T10:02:06.537000> Receive error 1
2019-06-06T10:02:06.797707> Receive error 1
2019-06-06T10:02:07.058257> Receive error 1
2019-06-06T10:02:07.318921> Receive error 1
2019-06-06T10:02:07.579587> Receive error 1
2019-06-06T10:02:07.840254> Receive error 1
2019-06-06T10:02:08.100911> Receive error 1
2019-06-06T10:02:08.363765> Receive error 1
2019-06-06T10:02:08.624848> Receive error 1
2019-06-06T10:02:08.885057> Receive error 1
2019-06-06T10:02:09.145540> Receive error 1
2019-06-06T10:02:09.405614> Receive error 1
2019-06-06T10:02:09.665426> Receive error 1
2019-06-06T10:02:09.925529> Receive error 1
2019-06-06T10:02:10.185754> Receive error 1
2019-06-06T10:02:10.446372> Receive error 1
2019-06-06T10:02:10.706863> Receive error 1
2019-06-06T10:02:10.967363> Receive error 1
2019-06-06T10:02:11.227460> Receive error 1
2019-06-06T10:02:11.487488> Receive error 1
2019-06-06T10:02:11.747422> Receive error 1
2019-06-06T10:02:12.007796> Receive error 1
2019-06-06T10:02:12.268397> Receive error 1
2019-06-06T10:02:12.530886> Receive error 1
2019-06-06T10:02:13.051708> Receive error 1
2019-06-06T10:02:13.828471> Receive error 1
2019-06-06T10:02:14.111875> Receive error 5
2019-06-06T10:02:14.376387> Receive error 1
2019-06-06T10:02:15.213025> Receive error 5
2019-06-06T10:02:15.486804> Receive error 1
2019-06-06T10:02:16.809575> Receive error 5
2019-06-06T10:02:27.070614> Receive error 5
2019-06-06T10:02:27.869398> Receive error 1
2019-06-06T10:02:28.907420> Low-level gw status ON
2019-06-06T10:02:30.749626> Receive error 1
2019-06-06T10:02:31.269916> Receive error 1
2019-06-06T10:02:32.069511> Receive error 1
2019-06-06T10:02:32.338846> Receive error 1
2019-06-06T10:02:33.800932> Receive error 1
2019-06-06T10:02:34.455048> Receive error 5
2019-06-06T10:02:34.993157> Receive error 5
2019-06-06T10:02:35.258454> Receive error 1
2019-06-06T10:02:36.050927> Receive error 1
2019-06-06T10:02:36.310919> Receive error 1
2019-06-06T10:02:36.852227> Receive error 5
2019-06-06T10:02:37.369400> Receive error 1
2019-06-06T10:02:37.629686> Receive error 1
2019-06-06T10:02:37.889573> Receive error 1
2019-06-06T10:02:38.151167> Receive error 1
2019-06-06T10:02:38.412813> Receive error 1
2019-06-06T10:02:38.674454> Receive error 1
2019-06-06T10:02:38.936270> Receive error 1
2019-06-06T10:02:39.198459> Receive error 1
2019-06-06T10:02:39.459097> Receive error 1
2019-06-06T10:02:39.719338> Receive error 1
2019-06-06T10:02:39.979115> Receive error 1
2019-06-06T10:02:40.239711> Receive error 1
2019-06-06T10:02:40.499999> Receive error 1
2019-06-06T10:02:40.760223> Receive error 1
2019-06-06T10:02:41.022055> Receive error 1
2019-06-06T10:02:41.790777> Receive error 1
2019-06-06T10:02:42.309402> Receive error 1
2019-06-06T10:02:42.574018> Receive error 1
2019-06-06T10:02:42.834302> Receive error 1
2019-06-06T10:02:43.095040> Receive error 1
2019-06-06T10:02:43.355280> Receive error 1
2019-06-06T10:02:43.615681> Receive error 1
2019-06-06T10:02:43.875930> Receive error 1
2019-06-06T10:02:44.136199> Receive error 1
2019-06-06T10:02:44.396454> Receive error 1
2019-06-06T10:02:44.657101> Receive error 1
2019-06-06T10:02:44.919837> Receive error 1
2019-06-06T10:02:45.180981> Receive error 1
2019-06-06T10:02:45.441185> Receive error 1
2019-06-06T10:02:45.701807> Receive error 1
2019-06-06T10:02:45.962250> Receive error 1
2019-06-06T10:02:46.222839> Receive error 1
2019-06-06T10:02:46.483397> Receive error 1
2019-06-06T10:02:46.743885> Receive error 1
2019-06-06T10:02:47.004349> Receive error 1
2019-06-06T10:02:47.264863> Receive error 1
2019-06-06T10:02:47.525347> Receive error 1
2019-06-06T10:02:47.786003> Receive error 1
2019-06-06T10:02:48.302748> Receive error 1
2019-06-06T10:02:48.562680> Receive error 1
2019-06-06T10:02:48.824090> Receive error 1
2019-06-06T10:02:50.121717> Receive error 1
2019-06-06T10:02:50.641620> Receive error 1
2019-06-06T10:02:51.158753> Receive error 1
2019-06-06T10:02:51.692956> Receive error 1
2019-06-06T10:02:51.694124> Low-level gw status ON
2019-06-06T10:02:51.955643> Receive error 1
2019-06-06T10:02:52.217200> Receive error 1
2019-06-06T10:02:52.478450> Receive error 1
2019-06-06T10:02:52.739425> Receive error 1
2019-06-06T10:02:53.000186> Receive error 1
2019-06-06T10:02:53.262480> Receive error 1
2019-06-06T10:02:53.522889> Receive error 1
2019-06-06T10:02:54.304236> Receive error 1
2019-06-06T10:02:54.826429> Receive error 1
2019-06-06T10:02:55.086428> Receive error 1
2019-06-06T10:02:55.346603> Receive error 1
2019-06-06T10:02:55.607032> Receive error 1
2019-06-06T10:02:55.867530> Receive error 1
2019-06-06T10:02:56.128125> Receive error 1
2019-06-06T10:02:56.388781> Receive error 1
2019-06-06T10:02:56.648986> Receive error 1
2019-06-06T10:02:56.909561> Receive error 1
2019-06-06T10:02:57.170159> Receive error 1
2019-06-06T10:02:57.430664> Receive error 1
2019-06-06T10:02:57.691248> Receive error 1
2019-06-06T10:02:57.951355> Receive error 1
2019-06-06T10:02:58.211503> Receive error 1
2019-06-06T10:02:58.471579> Receive error 1
2019-06-06T10:02:58.731727> Receive error 1
2019-06-06T10:02:58.991829> Receive error 1
2019-06-06T10:02:59.251892> Receive error 1
2019-06-06T10:02:59.512022> Receive error 1
2019-06-06T10:02:59.772997> Receive error 1
2019-06-06T10:03:00.032400> Receive error 1
2019-06-06T10:03:00.293218> Receive error 1
2019-06-06T10:03:00.553472> Receive error 1
2019-06-06T10:03:00.813450> Receive error 1
2019-06-06T10:03:01.073375> Receive error 1
2019-06-06T10:03:01.333313> Receive error 1
2019-06-06T10:03:01.593731> Receive error 1
2019-06-06T10:03:01.855326> Receive error 1
2019-06-06T10:03:02.115576> Receive error 1
2019-06-06T10:03:02.375751> Receive error 1
2019-06-06T10:03:02.637869> Receive error 1
2019-06-06T10:03:03.157556> Receive error 1
2019-06-06T10:03:03.670883> Receive error 1
2019-06-06T10:03:04.188783> Receive error 1
2019-06-06T10:03:04.449096> Receive error 1
2019-06-06T10:03:04.709530> Receive error 1
2019-06-06T10:03:04.969715> Receive error 1
2019-06-06T10:03:05.230009> Receive error 1
2019-06-06T10:03:05.489543> Receive error 1
2019-06-06T10:03:05.749528> Receive error 1
2019-06-06T10:03:06.009718> Receive error 1
2019-06-06T10:03:06.269820> Receive error 1
2019-06-06T10:03:06.529747> Receive error 1
2019-06-06T10:03:06.789800> Receive error 1
2019-06-06T10:03:07.050191> Receive error 1
2019-06-06T10:03:07.310408> Receive error 1
2019-06-06T10:03:07.570820> Receive error 1
2019-06-06T10:03:07.830694> Receive error 1
2019-06-06T10:03:08.092870> Receive error 1
2019-06-06T10:03:08.610536> Receive error 1
2019-06-06T10:03:08.874906> Receive error 1
2019-06-06T10:03:11.481699> Receive error 1
2019-06-06T10:03:11.482311> Low-level gw status ON
2019-06-06T10:03:11.742239> Receive error 1
2019-06-06T10:03:12.002696> Receive error 1
2019-06-06T10:03:12.263304> Receive error 1
2019-06-06T10:03:12.523842> Receive error 1
2019-06-06T10:03:12.784289> Receive error 1
2019-06-06T10:03:13.044757> Receive error 1
2019-06-06T10:03:13.305707> Receive error 1
2019-06-06T10:03:13.566463> Receive error 1
2019-06-06T10:03:13.827026> Receive error 1
2019-06-06T10:03:14.087209> Receive error 1
2019-06-06T10:03:14.347167> Receive error 1
2019-06-06T10:03:14.607614> Receive error 1
2019-06-06T10:03:14.868065> Receive error 1
2019-06-06T10:03:15.128954> Receive error 1
2019-06-06T10:03:15.389107> Receive error 1
2019-06-06T10:03:15.649130> Receive error 1
2019-06-06T10:03:15.909189> Receive error 1
2019-06-06T10:03:16.169647> Receive error 1
2019-06-06T10:03:16.430203> Receive error 1
2019-06-06T10:03:16.690320> Receive error 1
2019-06-06T10:03:16.950593> Receive error 1
2019-06-06T10:03:17.211021> Receive error 1
2019-06-06T10:03:17.477358> Receive error 1
2019-06-06T10:03:17.737326> Receive error 1
2019-06-06T10:03:17.997168> Receive error 1
2019-06-06T10:03:18.257593> Receive error 1
2019-06-06T10:03:18.517660> Receive error 1
2019-06-06T10:03:18.777698> Receive error 1
2019-06-06T10:03:19.037699> Receive error 1
2019-06-06T10:03:19.297946> Receive error 1
2019-06-06T10:03:19.557999> Receive error 1
2019-06-06T10:03:19.818123> Receive error 1
2019-06-06T10:03:20.078101> Receive error 1
2019-06-06T10:03:20.337852> Receive error 1
2019-06-06T10:03:20.597763> Receive error 1
2019-06-06T10:03:20.859067> Receive error 1
2019-06-06T10:03:21.119063> Receive error 1
2019-06-06T10:03:21.379318> Receive error 1
2019-06-06T10:03:21.639217> Receive error 1
2019-06-06T10:03:21.899300> Receive error 1
2019-06-06T10:03:22.158906> Receive error 1
2019-06-06T10:03:22.419017> Receive error 1
2019-06-06T10:03:22.679361> Receive error 1
2019-06-06T10:03:22.939562> Receive error 1
2019-06-06T10:03:23.199529> Receive error 1
2019-06-06T10:03:23.462554> Receive error 1
2019-06-06T10:03:23.723878> Receive error 1
2019-06-06T10:03:23.984528> Receive error 1
2019-06-06T10:03:24.244925> Receive error 1
2019-06-06T10:03:24.505542> Receive error 1
2019-06-06T10:03:24.766107> Receive error 1
2019-06-06T10:03:25.025682> Receive error 1
2019-06-06T10:03:25.285603> Receive error 1
2019-06-06T10:03:25.545519> Receive error 1
2019-06-06T10:03:25.805940> Receive error 1
2019-06-06T10:03:26.066029> Receive error 1
2019-06-06T10:03:26.585459> Receive error 1
2019-06-06T10:03:26.845363> Receive error 1
2019-06-06T10:03:27.105274> Receive error 1
2019-06-06T10:03:27.365223> Receive error 1
2019-06-06T10:03:27.365602> Low-level gw status ON
2019-06-06T10:03:27.625320> Receive error 1
2019-06-06T10:03:27.885314> Receive error 1
2019-06-06T10:03:28.145879> Receive error 1
2019-06-06T10:03:28.406440> Receive error 1
2019-06-06T10:03:28.926286> Receive error 1
2019-06-06T10:03:29.438337> Receive error 1
2019-06-06T10:03:29.699611> Receive error 1
2019-06-06T10:03:29.965202> Receive error 1
2019-06-06T10:03:39.849313> Receive error 1
2019-06-06T10:03:43.231060> Receive error 1
2019-06-06T10:03:43.491188> Receive error 1
2019-06-06T10:03:43.751473> Receive error 1
2019-06-06T10:03:44.013019> Receive error 1
2019-06-06T10:03:44.274223> Receive error 1
2019-06-06T10:03:44.534184> Receive error 1
2019-06-06T10:03:44.795011> Receive error 1
2019-06-06T10:03:45.054862> Receive error 1
2019-06-06T10:03:45.314913> Receive error 1
2019-06-06T10:03:45.574992> Receive error 1
2019-06-06T10:03:45.835471> Receive error 1
2019-06-06T10:03:46.095421> Receive error 1
2019-06-06T10:03:46.355933> Receive error 1
2019-06-06T10:03:46.616796> Receive error 1
2019-06-06T10:03:46.878016> Receive error 1
2019-06-06T10:03:49.999392> Receive error 1
2019-06-06T10:03:50.261465> Receive error 1
2019-06-06T10:03:50.521936> Receive error 1
2019-06-06T10:03:50.782203> Receive error 1
2019-06-06T10:03:51.042096> Receive error 1
2019-06-06T10:03:51.302150> Receive error 1
2019-06-06T10:03:51.562758> Receive error 1
2019-06-06T10:03:51.823277> Receive error 1
2019-06-06T10:03:52.083371> Receive error 1
2019-06-06T10:03:52.344193> Receive error 1
2019-06-06T10:03:52.603486> Receive error 1
2019-06-06T10:03:52.863618> Receive error 1
2019-06-06T10:03:53.123618> Receive error 1
2019-06-06T10:03:53.383788> Receive error 1
2019-06-06T10:03:53.644158> Receive error 1
2019-06-06T10:03:53.904359> Receive error 1
2019-06-06T10:03:54.164453> Receive error 1
2019-06-06T10:03:54.425091> Receive error 1
2019-06-06T10:03:54.684607> Receive error 1
2019-06-06T10:03:54.944795> Receive error 1
2019-06-06T10:03:55.204967> Receive error 1
2019-06-06T10:03:55.464968> Receive error 1
2019-06-06T10:03:55.725017> Receive error 1
2019-06-06T10:03:55.984698> Receive error 1
2019-06-06T10:03:56.244830> Receive error 1
2019-06-06T10:03:56.504856> Receive error 1
2019-06-06T10:03:56.764863> Receive error 1
2019-06-06T10:03:57.024783> Receive error 1
2019-06-06T10:03:57.285453> Receive error 1
2019-06-06T10:03:57.548703> Receive error 1
2019-06-06T10:03:57.809486> Receive error 1
2019-06-06T10:03:58.069537> Receive error 1
2019-06-06T10:03:58.329622> Receive error 1
2019-06-06T10:03:58.589772> Receive error 1
2019-06-06T10:03:58.849801> Receive error 1
2019-06-06T10:03:59.109911> Receive error 1
2019-06-06T10:03:59.110659> Low-level gw status ON
2019-06-06T10:03:59.370063> Receive error 1
2019-06-06T10:03:59.630225> Receive error 1
2019-06-06T10:03:59.890288> Receive error 1
2019-06-06T10:04:00.150354> Receive error 1
2019-06-06T10:04:00.410544> Receive error 1
2019-06-06T10:04:00.672208> Receive error 1
2019-06-06T10:04:01.195467> Receive error 1
2019-06-06T10:04:01.713961> Receive error 1
2019-06-06T10:04:01.974037> Receive error 1
2019-06-06T10:04:02.233994> Receive error 1
2019-06-06T10:04:02.493881> Receive error 1
2019-06-06T10:04:02.753851> Receive error 1
2019-06-06T10:04:03.013988> Receive error 1
2019-06-06T10:04:03.273823> Receive error 1
2019-06-06T10:04:03.533767> Receive error 1
2019-06-06T10:04:03.793698> Receive error 1
2019-06-06T10:04:04.053596> Receive error 1
2019-06-06T10:04:04.313539> Receive error 1
2019-06-06T10:04:04.573461> Receive error 1
2019-06-06T10:04:04.833440> Receive error 1
2019-06-06T10:04:05.093361> Receive error 1
2019-06-06T10:04:05.353298> Receive error 1
2019-06-06T10:04:05.613184> Receive error 1
2019-06-06T10:04:05.873088> Receive error 1
2019-06-06T10:04:06.133112> Receive error 1
2019-06-06T10:04:06.392837> Receive error 1
2019-06-06T10:04:06.652848> Receive error 1
2019-06-06T10:04:06.912717> Receive error 1
2019-06-06T10:04:07.172656> Receive error 1
2019-06-06T10:04:07.433216> Receive error 1
2019-06-06T10:04:07.692899> Receive error 1
2019-06-06T10:04:07.952725> Receive error 1
2019-06-06T10:04:08.212668> Receive error 1
2019-06-06T10:04:08.472479> Receive error 1
2019-06-06T10:04:08.732491> Receive error 1
2019-06-06T10:04:08.992382> Receive error 1
2019-06-06T10:04:09.252349> Receive error 1
2019-06-06T10:04:09.512252> Receive error 1
2019-06-06T10:04:09.772189> Receive error 1
2019-06-06T10:04:10.032390> Receive error 1
2019-06-06T10:04:10.292098> Receive error 1
2019-06-06T10:04:10.552118> Receive error 1
2019-06-06T10:04:10.811972> Receive error 1
2019-06-06T10:04:11.071873> Receive error 1
2019-06-06T10:04:11.331806> Receive error 1
2019-06-06T10:04:11.592285> Receive error 1
2019-06-06T10:04:11.851659> Receive error 1
2019-06-06T10:04:12.111553> Receive error 1
2019-06-06T10:04:12.371482> Receive error 1
2019-06-06T10:04:12.631341> Receive error 1
2019-06-06T10:04:12.891315> Receive error 1
2019-06-06T10:04:13.151246> Receive error 1
2019-06-06T10:04:13.411387> Receive error 1
2019-06-06T10:04:13.671168> Receive error 1
2019-06-06T10:04:13.931047> Receive error 1
2019-06-06T10:04:14.190968> Receive error 1
2019-06-06T10:04:14.452866> Receive error 1
2019-06-06T10:04:14.710942> Receive error 1
2019-06-06T10:04:14.970864> Receive error 1
2019-06-06T10:04:15.230791> Receive error 1
2019-06-06T10:04:15.231154> Low-level gw status ON
2019-06-06T10:04:15.490685> Receive error 1
2019-06-06T10:04:15.750544> Receive error 1
2019-06-06T10:04:16.010463> Receive error 1
2019-06-06T10:04:16.270380> Receive error 1
2019-06-06T10:04:16.530254> Receive error 1
2019-06-06T10:04:16.790139> Receive error 1
2019-06-06T10:04:17.050076> Receive error 1
2019-06-06T10:04:17.309999> Receive error 1
2019-06-06T10:04:17.831978> Receive error 1
2019-06-06T10:04:19.645069> Receive error 1
2019-06-06T10:04:19.910912> Receive error 1
2019-06-06T10:04:20.428417> Receive error 1
2019-06-06T10:04:20.690621> Receive error 1
2019-06-06T10:04:20.954958> Receive error 1
2019-06-06T10:04:21.214658> Receive error 1
2019-06-06T10:04:21.475346> Receive error 1
2019-06-06T10:04:21.735833> Receive error 1
2019-06-06T10:04:21.996390> Receive error 1
2019-06-06T10:04:22.257707> Receive error 1
2019-06-06T10:04:22.517398> Receive error 1
2019-06-06T10:04:22.777372> Receive error 1
2019-06-06T10:04:23.037671> Receive error 1
2019-06-06T10:04:23.298131> Receive error 1
2019-06-06T10:04:23.575344> Receive error 1
2019-06-06T10:04:23.835264> Receive error 1
2019-06-06T10:04:24.095681> Receive error 1
2019-06-06T10:04:24.355358> Receive error 1
2019-06-06T10:04:24.615367> Receive error 1
2019-06-06T10:04:24.875302> Receive error 1
2019-06-06T10:04:25.135678> Receive error 1
2019-06-06T10:04:25.395767> Receive error 1
2019-06-06T10:04:25.655857> Receive error 1
2019-06-06T10:04:25.915911> Receive error 1
2019-06-06T10:04:26.176575> Receive error 1
2019-06-06T10:04:26.437125> Receive error 1
2019-06-06T10:04:26.697611> Receive error 1
2019-06-06T10:04:26.958024> Receive error 1
2019-06-06T10:04:27.218153> Receive error 1
2019-06-06T10:04:27.478389> Receive error 1
2019-06-06T10:04:27.740081> Receive error 1
2019-06-06T10:04:28.000087> Receive error 1
2019-06-06T10:04:28.259889> Receive error 1
2019-06-06T10:04:28.519893> Receive error 1
2019-06-06T10:04:28.780408> Receive error 1
2019-06-06T10:04:29.040838> Receive error 1
2019-06-06T10:04:29.301464> Receive error 1
2019-06-06T10:04:29.562199> Receive error 1
2019-06-06T10:04:29.822589> Receive error 1
2019-06-06T10:04:30.082628> Receive error 1
2019-06-06T10:04:30.346894> Receive error 1
2019-06-06T10:04:30.607277> Receive error 1
2019-06-06T10:04:30.867841> Receive error 1
2019-06-06T10:04:31.128381> Receive error 1
2019-06-06T10:04:31.389356> Receive error 1
2019-06-06T10:04:31.649977> Receive error 1
2019-06-06T10:04:31.910466> Receive error 1
2019-06-06T10:04:32.170961> Receive error 1
2019-06-06T10:04:32.431041> Receive error 1
2019-06-06T10:04:32.690986> Receive error 1
2019-06-06T10:04:32.951545> Receive error 1
2019-06-06T10:04:32.952180> Low-level gw status ON
2019-06-06T10:04:33.211590> Receive error 1
2019-06-06T10:04:33.471810> Receive error 1
2019-06-06T10:04:33.731893> Receive error 1
2019-06-06T10:04:33.992074> Receive error 1
2019-06-06T10:04:34.252078> Receive error 1
2019-06-06T10:04:34.512277> Receive error 1
2019-06-06T10:04:34.772413> Receive error 1
2019-06-06T10:04:35.032418> Receive error 1
2019-06-06T10:04:35.295650> Receive error 1
2019-06-06T10:04:35.556549> Receive error 1
2019-06-06T10:04:35.816143> Receive error 1
2019-06-06T10:04:36.076107> Receive error 1
2019-06-06T10:04:36.336468> Receive error 1
2019-06-06T10:04:36.596927> Receive error 1
2019-06-06T10:04:36.857018> Receive error 1
2019-06-06T10:04:37.117733> Receive error 1
2019-06-06T10:04:37.378070> Receive error 1
2019-06-06T10:04:37.638269> Receive error 1
2019-06-06T10:04:37.898406> Receive error 1
2019-06-06T10:04:38.158577> Receive error 1
2019-06-06T10:04:38.418750> Receive error 1
2019-06-06T10:04:38.679280> Receive error 1
2019-06-06T10:04:38.939598> Receive error 1
2019-06-06T10:04:39.199167> Receive error 1
2019-06-06T10:04:39.459204> Receive error 1
2019-06-06T10:04:39.719328> Receive error 1
2019-06-06T10:04:39.979423> Receive error 1
2019-06-06T10:04:40.239524> Receive error 1
2019-06-06T10:04:40.499670> Receive error 1
2019-06-06T10:04:40.759869> Receive error 1
2019-06-06T10:04:41.019757> Receive error 1
2019-06-06T10:04:41.280314> Receive error 1
2019-06-06T10:04:41.547207> Receive error 1
2019-06-06T10:04:41.807718> Receive error 1
2019-06-06T10:04:42.069351> Receive error 1
2019-06-06T10:04:42.329895> Receive error 1
2019-06-06T10:04:42.590342> Receive error 1
2019-06-06T10:04:42.850315> Receive error 1
2019-06-06T10:04:43.110273> Receive error 1
2019-06-06T10:04:43.370741> Receive error 1
2019-06-06T10:04:43.631171> Receive error 1
2019-06-06T10:04:43.891652> Receive error 1
2019-06-06T10:04:44.152241> Receive error 1
2019-06-06T10:04:44.412823> Receive error 1
2019-06-06T10:04:44.673363> Receive error 1
2019-06-06T10:04:44.933877> Receive error 1
2019-06-06T10:04:45.194145> Receive error 1
2019-06-06T10:04:45.455649> Receive error 1
2019-06-06T10:04:45.715725> Receive error 1
2019-06-06T10:04:45.975811> Receive error 1
2019-06-06T10:04:46.236017> Receive error 1
2019-06-06T10:04:46.495882> Receive error 1
2019-06-06T10:04:46.763304> Receive error 1
2019-06-06T10:04:47.023238> Receive error 1
2019-06-06T10:04:47.283173> Receive error 1
2019-06-06T10:04:47.543092> Receive error 1
2019-06-06T10:04:47.803023> Receive error 1
2019-06-06T10:04:48.063641> Receive error 1
2019-06-06T10:04:48.324151> Receive error 1
2019-06-06T10:04:48.584751> Receive error 1
2019-06-06T10:04:48.585544> Low-level gw status ON
2019-06-06T10:04:48.845474> Receive error 1
2019-06-06T10:04:49.108377> Receive error 1
2019-06-06T10:04:49.368987> Receive error 1
2019-06-06T10:04:49.629438> Receive error 1
2019-06-06T10:04:49.889986> Receive error 1
2019-06-06T10:04:50.150489> Receive error 1
2019-06-06T10:04:50.411119> Receive error 1
2019-06-06T10:04:50.671596> Receive error 1
2019-06-06T10:04:50.932023> Receive error 1
2019-06-06T10:04:51.192562> Receive error 1
2019-06-06T10:04:51.453092> Receive error 1
2019-06-06T10:04:51.713597> Receive error 1
2019-06-06T10:04:51.974229> Receive error 1
2019-06-06T10:04:52.235501> Receive error 1
2019-06-06T10:04:52.495604> Receive error 1
2019-06-06T10:04:52.756655> Receive error 1
2019-06-06T10:04:53.018104> Receive error 1
2019-06-06T10:04:53.278705> Receive error 1
2019-06-06T10:04:53.539125> Receive error 1
2019-06-06T10:04:53.799722> Receive error 1
2019-06-06T10:04:54.060064> Receive error 1
2019-06-06T10:04:54.320366> Receive error 1
2019-06-06T10:04:54.580457> Receive error 1
2019-06-06T10:04:54.840599> Receive error 1
2019-06-06T10:04:55.100561> Receive error 1
2019-06-06T10:04:55.361082> Receive error 1
2019-06-06T10:04:55.621554> Receive error 1
2019-06-06T10:04:55.882315> Receive error 1
2019-06-06T10:04:56.150501> Receive error 1
2019-06-06T10:04:56.410362> Receive error 1
2019-06-06T10:04:56.670907> Receive error 1
2019-06-06T10:04:56.931387> Receive error 1
2019-06-06T10:04:57.191869> Receive error 1
2019-06-06T10:04:57.452088> Receive error 1
2019-06-06T10:04:57.712235> Receive error 1
2019-06-06T10:04:57.971864> Receive error 1
2019-06-06T10:04:58.231980> Receive error 1
2019-06-06T10:04:58.492144> Receive error 1
2019-06-06T10:04:58.752058> Receive error 1
2019-06-06T10:04:59.012243> Receive error 1
2019-06-06T10:04:59.272963> Receive error 1
2019-06-06T10:04:59.533056> Receive error 1
2019-06-06T10:04:59.793246> Receive error 1
2019-06-06T10:05:00.053547> Receive error 1
2019-06-06T10:05:00.313112> Receive error 1
2019-06-06T10:05:00.573097> Receive error 1
2019-06-06T10:05:00.833109> Receive error 1
2019-06-06T10:05:01.093426> Receive error 1
2019-06-06T10:05:01.353111> Receive error 1
2019-06-06T10:05:01.612911> Receive error 1
2019-06-06T10:05:01.872880> Receive error 1
2019-06-06T10:05:02.133171> Receive error 1
2019-06-06T10:05:02.393738> Receive error 1
2019-06-06T10:05:02.653740> Receive error 1
2019-06-06T10:05:02.914529> Receive error 1
2019-06-06T10:05:03.174620> Receive error 1
2019-06-06T10:05:03.435328> Receive error 1
2019-06-06T10:05:03.695300> Receive error 1
2019-06-06T10:05:03.955211> Receive error 1
2019-06-06T10:05:04.215562> Receive error 1
2019-06-06T10:05:04.216308> Low-level gw status ON
2019-06-06T10:05:04.475710> Receive error 1
2019-06-06T10:05:04.735768> Receive error 1
2019-06-06T10:05:04.995813> Receive error 1
2019-06-06T10:05:05.256152> Receive error 1
2019-06-06T10:05:05.516207> Receive error 1
2019-06-06T10:05:05.776700> Receive error 1
2019-06-06T10:05:06.037284> Receive error 1
2019-06-06T10:05:06.297990> Receive error 1
2019-06-06T10:05:06.558149> Receive error 1
2019-06-06T10:05:06.820009> Receive error 1
2019-06-06T10:05:07.080270> Receive error 1
2019-06-06T10:05:07.341009> Receive error 1
2019-06-06T10:05:07.601762> Receive error 1
2019-06-06T10:05:07.862210> Receive error 1
2019-06-06T10:05:08.122788> Receive error 1
2019-06-06T10:05:08.383260> Receive error 1
2019-06-06T10:05:08.643816> Receive error 1
2019-06-06T10:05:08.904426> Receive error 1
2019-06-06T10:05:09.167406> Receive error 1
2019-06-06T10:05:09.427542> Receive error 1
2019-06-06T10:05:09.687458> Receive error 1
2019-06-06T10:05:09.947878> Receive error 1
2019-06-06T10:05:10.208916> Receive error 1
2019-06-06T10:05:10.469617> Receive error 1
2019-06-06T10:05:10.729705> Receive error 1
2019-06-06T10:05:10.995092> Receive error 1
2019-06-06T10:05:11.249863> Receive error 1
2019-06-06T10:05:11.510839> Receive error 1
2019-06-06T10:05:11.771462> Receive error 1
2019-06-06T10:05:12.032014> Receive error 1
2019-06-06T10:05:12.292148> Receive error 1
2019-06-06T10:05:12.552391> Receive error 1
2019-06-06T10:05:12.812913> Receive error 1
2019-06-06T10:05:13.073503> Receive error 1
2019-06-06T10:05:13.333597> Receive error 1
2019-06-06T10:05:13.593539> Receive error 1
2019-06-06T10:05:13.853487> Receive error 1
2019-06-06T10:05:14.113871> Receive error 1
2019-06-06T10:05:14.374389> Receive error 1
2019-06-06T10:05:14.634684> Receive error 1
2019-06-06T10:05:14.903462> Receive error 1
2019-06-06T10:05:15.163483> Receive error 1
2019-06-06T10:05:15.423838> Receive error 1
2019-06-06T10:05:15.684387> Receive error 1
2019-06-06T10:05:15.944857> Receive error 1
2019-06-06T10:05:16.206457> Receive error 1
2019-06-06T10:05:16.468028> Receive error 1
2019-06-06T10:05:16.728637> Receive error 1
2019-06-06T10:05:16.989457> Receive error 1
2019-06-06T10:05:17.250010> Receive error 1
2019-06-06T10:05:17.510572> Receive error 1
2019-06-06T10:05:17.771206> Receive error 1
2019-06-06T10:05:18.031741> Receive error 1
2019-06-06T10:05:18.292274> Receive error 1
2019-06-06T10:05:18.552899> Receive error 1
2019-06-06T10:05:18.813474> Receive error 1
2019-06-06T10:05:19.074048> Receive error 1
2019-06-06T10:05:19.334579> Receive error 1
2019-06-06T10:05:19.595165> Receive error 1
2019-06-06T10:05:19.855864> Receive error 1
2019-06-06T10:05:19.856499> Low-level gw status ON
2019-06-06T10:05:20.115858> Receive error 1
2019-06-06T10:05:20.375615> Receive error 1
2019-06-06T10:05:20.635613> Receive error 1
2019-06-06T10:05:20.896495> Receive error 1
2019-06-06T10:05:21.156202> Receive error 1
2019-06-06T10:05:21.416115> Receive error 1
2019-06-06T10:05:21.676076> Receive error 1
2019-06-06T10:05:21.936549> Receive error 1
2019-06-06T10:05:22.196690> Receive error 1
2019-06-06T10:05:22.456840> Receive error 1
2019-06-06T10:05:22.716975> Receive error 1
2019-06-06T10:05:22.977049> Receive error 1
2019-06-06T10:05:23.237128> Receive error 1
2019-06-06T10:05:23.497242> Receive error 1
2019-06-06T10:05:23.757327> Receive error 1
2019-06-06T10:05:24.017332> Receive error 1
2019-06-06T10:05:24.277514> Receive error 1
2019-06-06T10:05:24.537561> Receive error 1
2019-06-06T10:05:24.797813> Receive error 1
2019-06-06T10:05:25.057889> Receive error 1
2019-06-06T10:05:25.317955> Receive error 1
2019-06-06T10:05:25.578078> Receive error 1
2019-06-06T10:05:25.837769> Receive error 1
2019-06-06T10:05:26.097915> Receive error 1
2019-06-06T10:05:26.357774> Receive error 1
2019-06-06T10:05:26.618190> Receive error 1
2019-06-06T10:05:26.877805> Receive error 1
2019-06-06T10:05:27.137730> Receive error 1
2019-06-06T10:05:27.398257> Receive error 1
2019-06-06T10:05:27.658379> Receive error 1
2019-06-06T10:05:27.918448> Receive error 1
2019-06-06T10:05:28.178662> Receive error 1
2019-06-06T10:05:28.438815> Receive error 1
2019-06-06T10:05:28.699094> Receive error 1
2019-06-06T10:05:28.959046> Receive error 1
2019-06-06T10:05:29.219186> Receive error 1
2019-06-06T10:05:29.479627> Receive error 1
2019-06-06T10:05:29.740433> Receive error 1
2019-06-06T10:05:30.000503> Receive error 1
2019-06-06T10:05:30.260650> Receive error 1
2019-06-06T10:05:30.520726> Receive error 1
2019-06-06T10:05:30.781003> Receive error 1
2019-06-06T10:05:31.041432> Receive error 1
2019-06-06T10:05:31.301411> Receive error 1
2019-06-06T10:05:31.561213> Receive error 1
2019-06-06T10:05:31.821296> Receive error 1
2019-06-06T10:05:32.081263> Receive error 1
2019-06-06T10:05:32.341626> Receive error 1
2019-06-06T10:05:32.602220> Receive error 1
2019-06-06T10:05:32.862852> Receive error 1
2019-06-06T10:05:33.123169> Receive error 1
2019-06-06T10:05:33.383102> Receive error 1
2019-06-06T10:05:33.643030> Receive error 1
2019-06-06T10:05:33.903536> Receive error 1
2019-06-06T10:05:34.164013> Receive error 1
2019-06-06T10:05:34.424485> Receive error 1
2019-06-06T10:05:34.684571> Receive error 1
2019-06-06T10:05:34.944562> Receive error 1
2019-06-06T10:05:35.204563> Receive error 1
2019-06-06T10:05:35.465157> Receive error 1
2019-06-06T10:05:35.465820> Low-level gw status ON
2019-06-06T10:05:35.725316> Receive error 1
2019-06-06T10:05:35.985816> Receive error 1
2019-06-06T10:05:36.246356> Receive error 1
2019-06-06T10:05:36.506464> Receive error 1
2019-06-06T10:05:36.766647> Receive error 1
2019-06-06T10:05:37.026436> Receive error 1
2019-06-06T10:05:37.286305> Receive error 1
2019-06-06T10:05:37.546859> Receive error 1
2019-06-06T10:05:37.813283> Receive error 1
2019-06-06T10:05:38.073247> Receive error 1
2019-06-06T10:05:38.333713> Receive error 1
2019-06-06T10:05:38.593750> Receive error 1
2019-06-06T10:05:38.853460> Receive error 1
2019-06-06T10:05:39.113336> Receive error 1
2019-06-06T10:05:39.373350> Receive error 1
2019-06-06T10:05:39.633771> Receive error 1
2019-06-06T10:05:39.893848> Receive error 1
2019-06-06T10:05:40.153947> Receive error 1
2019-06-06T10:05:40.416358> Receive error 1
2019-06-06T10:05:40.676608> Receive error 1
2019-06-06T10:05:40.936409> Receive error 1
2019-06-06T10:05:41.196355> Receive error 1
2019-06-06T10:05:41.456286> Receive error 1
2019-06-06T10:05:41.716726> Receive error 1
2019-06-06T10:05:41.976900> Receive error 1
2019-06-06T10:05:42.237415> Receive error 1
2019-06-06T10:05:42.497925> Receive error 1
2019-06-06T10:05:42.757984> Receive error 1
2019-06-06T10:05:43.017999> Receive error 1
2019-06-06T10:05:43.278936> Receive error 1
2019-06-06T10:05:43.539265> Receive error 1
2019-06-06T10:05:43.799319> Receive error 1
2019-06-06T10:05:44.059250> Receive error 1
2019-06-06T10:05:44.319650> Receive error 1
2019-06-06T10:05:44.581591> Receive error 1
2019-06-06T10:05:44.841600> Receive error 1
2019-06-06T10:05:45.102115> Receive error 1
2019-06-06T10:05:45.362886> Receive error 1
2019-06-06T10:05:45.622953> Receive error 1
2019-06-06T10:05:45.883511> Receive error 1
2019-06-06T10:05:46.145826> Receive error 1
2019-06-06T10:05:46.406383> Receive error 1
2019-06-06T10:05:46.666514> Receive error 1
2019-06-06T10:05:46.926710> Receive error 1
2019-06-06T10:05:47.186820> Receive error 1
2019-06-06T10:05:47.446974> Receive error 1
2019-06-06T10:05:47.706485> Receive error 1
2019-06-06T10:05:47.966432> Receive error 1
2019-06-06T10:05:48.226395> Receive error 1
2019-06-06T10:05:48.486372> Receive error 1
2019-06-06T10:05:48.746500> Receive error 1
2019-06-06T10:05:49.006461> Receive error 1
2019-06-06T10:05:49.266988> Receive error 1
2019-06-06T10:05:49.527046> Receive error 1
2019-06-06T10:05:49.787301> Receive error 1
2019-06-06T10:05:50.048083> Receive error 1
2019-06-06T10:05:50.308075> Receive error 1
2019-06-06T10:05:50.568147> Receive error 1
2019-06-06T10:05:50.828306> Receive error 1
2019-06-06T10:05:51.088711> Receive error 1
2019-06-06T10:05:51.089387> Low-level gw status ON
2019-06-06T10:05:51.348122> Receive error 1
2019-06-06T10:05:51.608208> Receive error 1
2019-06-06T10:05:51.868232> Receive error 1
2019-06-06T10:05:52.129142> Receive error 1
2019-06-06T10:05:52.389159> Receive error 1
2019-06-06T10:05:52.649229> Receive error 1
2019-06-06T10:05:52.909332> Receive error 1
2019-06-06T10:05:53.168976> Receive error 1
2019-06-06T10:05:53.428781> Receive error 1
2019-06-06T10:05:53.689279> Receive error 1
2019-06-06T10:05:53.949372> Receive error 1
2019-06-06T10:05:54.209356> Receive error 1
2019-06-06T10:05:54.470084> Receive error 1
2019-06-06T10:05:54.729826> Receive error 1
2019-06-06T10:05:54.990278> Receive error 1
2019-06-06T10:05:55.250258> Receive error 1
2019-06-06T10:05:55.510460> Receive error 1
2019-06-06T10:05:55.770540> Receive error 1
2019-06-06T10:05:56.030634> Receive error 1
2019-06-06T10:05:56.290651> Receive error 1
2019-06-06T10:05:56.550843> Receive error 1
2019-06-06T10:05:56.810979> Receive error 1
2019-06-06T10:05:57.071107> Receive error 1
2019-06-06T10:05:57.330701> Receive error 1
2019-06-06T10:05:57.590754> Receive error 1
2019-06-06T10:05:57.850663> Receive error 1
2019-06-06T10:05:58.111099> Receive error 1
2019-06-06T10:05:58.371150> Receive error 1
2019-06-06T10:05:58.631546> Receive error 1
2019-06-06T10:05:58.891642> Receive error 1
2019-06-06T10:05:59.151692> Receive error 1
2019-06-06T10:05:59.411725> Receive error 1
2019-06-06T10:05:59.671934> Receive error 1
2019-06-06T10:05:59.932006> Receive error 1
2019-06-06T10:06:00.192271> Receive error 1
2019-06-06T10:06:00.452400> Receive error 1
2019-06-06T10:06:00.712460> Receive error 1
2019-06-06T10:06:00.972307> Receive error 1
2019-06-06T10:06:01.232717> Receive error 1
2019-06-06T10:06:01.492792> Receive error 1
2019-06-06T10:06:01.753005> Receive error 1
2019-06-06T10:06:02.013175> Receive error 1
2019-06-06T10:06:02.273177> Receive error 1
2019-06-06T10:06:02.532761> Receive error 1
2019-06-06T10:06:02.792780> Receive error 1
2019-06-06T10:06:03.052735> Receive error 1
2019-06-06T10:06:03.313185> Receive error 1
2019-06-06T10:06:03.573237> Receive error 1
2019-06-06T10:06:03.833457> Receive error 1
2019-06-06T10:06:04.093547> Receive error 1
2019-06-06T10:06:04.358585> Receive error 1
2019-06-06T10:06:04.623339> Receive error 1
2019-06-06T10:06:04.883988> Receive error 1
2019-06-06T10:06:05.144322> Receive error 1
2019-06-06T10:06:05.405214> Receive error 1
2019-06-06T10:06:05.664689> Receive error 1
2019-06-06T10:06:05.924760> Receive error 1
2019-06-06T10:06:06.185431> Receive error 1
2019-06-06T10:06:06.445630> Receive error 1
2019-06-06T10:06:06.705798> Receive error 1
2019-06-06T10:06:06.706444> Low-level gw status ON
2019-06-06T10:06:06.965849> Receive error 1
2019-06-06T10:06:07.225913> Receive error 1
2019-06-06T10:06:07.486048> Receive error 1
2019-06-06T10:06:07.746102> Receive error 1
2019-06-06T10:06:08.006339> Receive error 1
2019-06-06T10:06:08.266557> Receive error 1
2019-06-06T10:06:08.527750> Receive error 1
2019-06-06T10:06:08.787229> Receive error 1
2019-06-06T10:06:09.047321> Receive error 1
2019-06-06T10:06:09.307578> Receive error 1
2019-06-06T10:06:09.567627> Receive error 1
2019-06-06T10:06:09.827716> Receive error 1
2019-06-06T10:06:10.087370> Receive error 1
2019-06-06T10:06:10.347330> Receive error 1
2019-06-06T10:06:10.607271> Receive error 1
2019-06-06T10:06:10.867677> Receive error 1
2019-06-06T10:06:11.127300> Receive error 1
2019-06-06T10:06:11.387373> Receive error 1
2019-06-06T10:06:11.647727> Receive error 1
2019-06-06T10:06:11.908170> Receive error 1
2019-06-06T10:06:12.168416> Receive error 1
2019-06-06T10:06:12.428647> Receive error 1
2019-06-06T10:06:12.688702> Receive error 1
2019-06-06T10:06:12.948838> Receive error 1
2019-06-06T10:06:13.209105> Receive error 1
2019-06-06T10:06:13.469161> Receive error 1
2019-06-06T10:06:13.729389> Receive error 1
2019-06-06T10:06:13.989968> Receive error 1
2019-06-06T10:06:14.250156> Receive error 1
2019-06-06T10:06:14.510607> Receive error 1
2019-06-06T10:06:14.770529> Receive error 1
2019-06-06T10:06:15.030581> Receive error 1
2019-06-06T10:06:15.290782> Receive error 1
2019-06-06T10:06:15.550842> Receive error 1
2019-06-06T10:06:15.810998> Receive error 1
2019-06-06T10:06:16.077881> Receive error 1
2019-06-06T10:06:16.333491> Receive error 1
2019-06-06T10:06:16.593654> Receive error 1
2019-06-06T10:06:16.853396> Receive error 1
2019-06-06T10:06:17.113823> Receive error 1
2019-06-06T10:06:17.374158> Receive error 1
2019-06-06T10:06:17.633976> Receive error 1
2019-06-06T10:06:17.893919> Receive error 1
2019-06-06T10:06:18.154414> Receive error 1
2019-06-06T10:06:18.414590> Receive error 1
2019-06-06T10:06:18.674685> Receive error 1
2019-06-06T10:06:18.934907> Receive error 1
2019-06-06T10:06:19.194938> Receive error 1
2019-06-06T10:06:19.455039> Receive error 1
2019-06-06T10:06:19.715800> Receive error 1
2019-06-06T10:06:19.975431> Receive error 1
2019-06-06T10:06:20.235638> Receive error 1
2019-06-06T10:06:20.495698> Receive error 1
2019-06-06T10:06:20.756518> Receive error 1
2019-06-06T10:06:21.016168> Receive error 1
2019-06-06T10:06:21.276196> Receive error 1
2019-06-06T10:06:21.537381> Receive error 1
2019-06-06T10:06:21.799056> Receive error 1
2019-06-06T10:06:22.058414> Receive error 1
2019-06-06T10:06:22.318125> Receive error 1
2019-06-06T10:06:22.318716> Low-level gw status ON
2019-06-06T10:06:22.578342> Receive error 1
2019-06-06T10:06:22.838108> Receive error 1
2019-06-06T10:06:23.098170> Receive error 1
2019-06-06T10:06:23.358026> Receive error 1
2019-06-06T10:06:23.617952> Receive error 1
2019-06-06T10:06:23.878459> Receive error 1
2019-06-06T10:06:24.138644> Receive error 1
2019-06-06T10:06:24.398739> Receive error 1
2019-06-06T10:06:24.658981> Receive error 1
2019-06-06T10:06:24.919049> Receive error 1
2019-06-06T10:06:25.179410> Receive error 1
2019-06-06T10:06:25.439023> Receive error 1
2019-06-06T10:06:25.698949> Receive error 1
2019-06-06T10:06:25.959368> Receive error 1
2019-06-06T10:06:26.219272> Receive error 1
2019-06-06T10:06:26.479348> Receive error 1
2019-06-06T10:06:26.740454> Receive error 1
2019-06-06T10:06:26.999575> Receive error 1
2019-06-06T10:06:27.259722> Receive error 1
2019-06-06T10:06:27.519776> Receive error 1
2019-06-06T10:06:27.780005> Receive error 1
2019-06-06T10:06:28.040380> Receive error 1
2019-06-06T10:06:28.300671> Receive error 1
2019-06-06T10:06:28.561149> Receive error 1
2019-06-06T10:06:28.821246> Receive error 1
2019-06-06T10:06:29.081277> Receive error 1
2019-06-06T10:06:29.341397> Receive error 1
2019-06-06T10:06:29.601962> Receive error 1
2019-06-06T10:06:29.862092> Receive error 1
2019-06-06T10:06:30.122625> Receive error 1
2019-06-06T10:06:30.384237> Receive error 1
2019-06-06T10:06:30.646142> Receive error 1
2019-06-06T10:06:30.906798> Receive error 1
2019-06-06T10:06:31.167276> Receive error 1
2019-06-06T10:06:31.427853> Receive error 1
2019-06-06T10:06:31.688031> Receive error 1
2019-06-06T10:06:31.950880> Receive error 1
2019-06-06T10:06:32.211337> Receive error 1
2019-06-06T10:06:32.472023> Receive error 1
2019-06-06T10:06:32.732136> Receive error 1
2019-06-06T10:06:32.992642> Receive error 1
2019-06-06T10:06:33.253679> Receive error 1
2019-06-06T10:06:33.513994> Receive error 1
2019-06-06T10:06:33.775657> Receive error 1
2019-06-06T10:06:34.036311> Receive error 1
2019-06-06T10:06:34.296977> Receive error 1
2019-06-06T10:06:34.557553> Receive error 1
2019-06-06T10:06:34.818079> Receive error 1
2019-06-06T10:06:35.078795> Receive error 1
2019-06-06T10:06:35.339290> Receive error 1
2019-06-06T10:06:35.602715> Receive error 1
2019-06-06T10:06:35.864220> Receive error 1
2019-06-06T10:06:36.124670> Receive error 1
2019-06-06T10:06:36.385187> Receive error 1
2019-06-06T10:06:36.645558> Receive error 1
2019-06-06T10:06:36.905715> Receive error 1
2019-06-06T10:06:37.165773> Receive error 1
2019-06-06T10:06:37.426772> Receive error 1
2019-06-06T10:06:37.688129> Receive error 1
2019-06-06T10:06:37.948347> Receive error 1
2019-06-06T10:06:37.949185> Low-level gw status ON
2019-06-06T10:06:38.208371> Receive error 1
2019-06-06T10:06:38.468768> Receive error 1
2019-06-06T10:06:38.728722> Receive error 1
2019-06-06T10:06:38.988215> Receive error 1
2019-06-06T10:06:39.249182> Receive error 1
2019-06-06T10:06:39.509182> Receive error 1
2019-06-06T10:06:39.769691> Receive error 1
2019-06-06T10:06:40.029799> Receive error 1
2019-06-06T10:06:40.289884> Receive error 1
2019-06-06T10:06:40.549944> Receive error 1
2019-06-06T10:06:40.810338> Receive error 1
2019-06-06T10:06:41.070529> Receive error 1
2019-06-06T10:06:41.330676> Receive error 1
2019-06-06T10:06:41.590697> Receive error 1
2019-06-06T10:06:41.850814> Receive error 1
2019-06-06T10:06:42.110919> Receive error 1
2019-06-06T10:06:42.371269> Receive error 1
2019-06-06T10:06:42.631410> Receive error 1
2019-06-06T10:06:42.892576> Receive error 1
2019-06-06T10:06:43.152262> Receive error 1
2019-06-06T10:06:43.412450> Receive error 1
2019-06-06T10:06:43.672564> Receive error 1
2019-06-06T10:06:43.932444> Receive error 1
2019-06-06T10:06:44.192876> Receive error 1
2019-06-06T10:06:44.453298> Receive error 1
2019-06-06T10:06:44.714223> Receive error 1
2019-06-06T10:06:44.974477> Receive error 1
2019-06-06T10:06:45.234564> Receive error 1
2019-06-06T10:06:45.494671> Receive error 1
2019-06-06T10:06:45.754627> Receive error 1
2019-06-06T10:06:46.014512> Receive error 1
2019-06-06T10:06:46.275022> Receive error 1
2019-06-06T10:06:46.535111> Receive error 1
2019-06-06T10:06:46.795230> Receive error 1
2019-06-06T10:06:47.056516> Receive error 1
2019-06-06T10:06:47.316813> Receive error 1
2019-06-06T10:06:47.577012> Receive error 1
2019-06-06T10:06:47.837126> Receive error 1
2019-06-06T10:06:48.097287> Receive error 1
2019-06-06T10:06:48.362978> Receive error 1
2019-06-06T10:06:48.619008> Receive error 1
2019-06-06T10:06:48.879067> Receive error 1
2019-06-06T10:06:49.139639> Receive error 1
2019-06-06T10:06:49.399298> Receive error 1
2019-06-06T10:06:49.659458> Receive error 1
2019-06-06T10:06:49.919473> Receive error 1
2019-06-06T10:06:50.179644> Receive error 1
2019-06-06T10:06:50.439808> Receive error 1
2019-06-06T10:06:50.699543> Receive error 1
2019-06-06T10:06:50.959585> Receive error 1
2019-06-06T10:06:51.221398> Receive error 1
2019-06-06T10:06:51.481341> Receive error 1
2019-06-06T10:06:51.741417> Receive error 1
2019-06-06T10:06:52.001549> Receive error 1
2019-06-06T10:06:52.261723> Receive error 1
2019-06-06T10:06:52.521781> Receive error 1
2019-06-06T10:06:52.781934> Receive error 1
2019-06-06T10:06:53.042083> Receive error 1
2019-06-06T10:06:53.302260> Receive error 1
2019-06-06T10:06:53.562518> Receive error 1
2019-06-06T10:06:53.563192> Low-level gw status ON
2019-06-06T10:06:53.824323> Receive error 1
2019-06-06T10:06:54.083596> Receive error 1
2019-06-06T10:06:54.343315> Receive error 1
2019-06-06T10:06:54.603513> Receive error 1
2019-06-06T10:06:54.863580> Receive error 1
2019-06-06T10:06:55.123880> Receive error 1
2019-06-06T10:06:55.384082> Receive error 1
2019-06-06T10:06:55.644278> Receive error 1
2019-06-06T10:06:55.903974> Receive error 1
2019-06-06T10:06:56.164706> Receive error 1
2019-06-06T10:06:56.425155> Receive error 1
2019-06-06T10:06:56.684921> Receive error 1
2019-06-06T10:06:56.945587> Receive error 1
2019-06-06T10:06:57.204829> Receive error 1
2019-06-06T10:06:57.465367> Receive error 1
2019-06-06T10:06:57.725461> Receive error 1
2019-06-06T10:06:57.985688> Receive error 1
2019-06-06T10:06:58.245869> Receive error 1
2019-06-06T10:06:58.506071> Receive error 1
2019-06-06T10:06:58.766222> Receive error 1
2019-06-06T10:06:59.026269> Receive error 1
2019-06-06T10:06:59.286360> Receive error 1
2019-06-06T10:06:59.546416> Receive error 1
2019-06-06T10:06:59.806723> Receive error 1
2019-06-06T10:07:00.066172> Receive error 1
2019-06-06T10:07:00.326394> Receive error 1
2019-06-06T10:07:00.587086> Receive error 1
2019-06-06T10:07:00.847602> Receive error 1
2019-06-06T10:07:01.108127> Receive error 1
2019-06-06T10:07:01.368877> Receive error 1
2019-06-06T10:07:01.629420> Receive error 1
2019-06-06T10:07:01.889549> Receive error 1
2019-06-06T10:07:02.150141> Receive error 1
2019-06-06T10:07:02.410287> Receive error 1
2019-06-06T10:07:02.670907> Receive error 1
2019-06-06T10:07:02.931529> Receive error 1
2019-06-06T10:07:03.192112> Receive error 1
2019-06-06T10:07:03.452587> Receive error 1
2019-06-06T10:07:03.713106> Receive error 1
2019-06-06T10:07:03.973889> Receive error 1
2019-06-06T10:07:04.234608> Receive error 1
2019-06-06T10:07:04.495146> Receive error 1
2019-06-06T10:07:04.755791> Receive error 1
2019-06-06T10:07:05.016285> Receive error 1
2019-06-06T10:07:05.276865> Receive error 1
2019-06-06T10:07:05.537460> Receive error 1
2019-06-06T10:07:05.798034> Receive error 1
2019-06-06T10:07:06.058116> Receive error 1
2019-06-06T10:07:06.318346> Receive error 1
2019-06-06T10:07:06.578601> Receive error 1
2019-06-06T10:07:06.839349> Receive error 1
2019-06-06T10:07:07.099809> Receive error 1
2019-06-06T10:07:07.359900> Receive error 1
2019-06-06T10:07:07.620306> Receive error 1
2019-06-06T10:07:07.880300> Receive error 1
2019-06-06T10:07:08.140900> Receive error 1
2019-06-06T10:07:08.401022> Receive error 1
2019-06-06T10:07:08.662939> Receive error 1
2019-06-06T10:07:08.922448> Receive error 1
2019-06-06T10:07:09.188714> Receive error 1
2019-06-06T10:07:09.189150> Low-level gw status ON
2019-06-06T10:07:09.448692> Receive error 1
2019-06-06T10:07:09.709130> Receive error 1
2019-06-06T10:07:09.969236> Receive error 1
2019-06-06T10:07:10.228822> Receive error 1
2019-06-06T10:07:10.488776> Receive error 1
2019-06-06T10:07:10.748697> Receive error 1
2019-06-06T10:07:11.009164> Receive error 1
2019-06-06T10:07:11.269289> Receive error 1
2019-06-06T10:07:11.529450> Receive error 1
2019-06-06T10:07:11.789398> Receive error 1
2019-06-06T10:07:12.049620> Receive error 1
2019-06-06T10:07:12.309261> Receive error 1
2019-06-06T10:07:12.569547> Receive error 1
2019-06-06T10:07:12.829197> Receive error 1
2019-06-06T10:07:13.089416> Receive error 1
2019-06-06T10:07:13.349350> Receive error 1
2019-06-06T10:07:13.609187> Receive error 1
2019-06-06T10:07:13.869819> Receive error 1
2019-06-06T10:07:14.130393> Receive error 1
2019-06-06T10:07:14.390058> Receive error 1
2019-06-06T10:07:14.651232> Receive error 1
2019-06-06T10:07:14.910368> Receive error 1
2019-06-06T10:07:15.170737> Receive error 1
2019-06-06T10:07:15.431039> Receive error 1
2019-06-06T10:07:15.691073> Receive error 1
2019-06-06T10:07:15.951203> Receive error 1
2019-06-06T10:07:16.211282> Receive error 1
2019-06-06T10:07:16.471423> Receive error 1
2019-06-06T10:07:16.731609> Receive error 1
2019-06-06T10:07:16.992232> Receive error 1
2019-06-06T10:07:17.253073> Receive error 1
2019-06-06T10:07:17.513791> Receive error 1
2019-06-06T10:07:17.774396> Receive error 1
2019-06-06T10:07:18.034919> Receive error 1
2019-06-06T10:07:18.295509> Receive error 1
2019-06-06T10:07:18.555803> Receive error 1
2019-06-06T10:07:18.816117> Receive error 1
2019-06-06T10:07:19.076569> Receive error 1
2019-06-06T10:07:19.337381> Receive error 1
2019-06-06T10:07:19.597836> Receive error 1
2019-06-06T10:07:19.858398> Receive error 1
2019-06-06T10:07:20.118999> Receive error 1
2019-06-06T10:07:20.380879> Receive error 1
2019-06-06T10:07:20.641319> Receive error 1
2019-06-06T10:07:20.901236> Receive error 1
2019-06-06T10:07:21.161370> Receive error 1
2019-06-06T10:07:21.421888> Receive error 1
2019-06-06T10:07:21.682362> Receive error 1
2019-06-06T10:07:21.942871> Receive error 1
2019-06-06T10:07:22.203339> Receive error 1
2019-06-06T10:07:22.463905> Receive error 1
2019-06-06T10:07:22.724260> Receive error 1
2019-06-06T10:07:22.984733> Receive error 1
2019-06-06T10:07:23.244996> Receive error 1
2019-06-06T10:07:23.505168> Receive error 1
2019-06-06T10:07:23.765163> Receive error 1
2019-06-06T10:07:24.025272> Receive error 1
2019-06-06T10:07:24.285443> Receive error 1
2019-06-06T10:07:24.545561> Receive error 1
2019-06-06T10:07:24.806110> Receive error 1
2019-06-06T10:07:24.806619> Low-level gw status ON
2019-06-06T10:07:25.066299> Receive error 1
2019-06-06T10:07:25.327228> Receive error 1
2019-06-06T10:07:25.587704> Receive error 1
2019-06-06T10:07:25.848249> Receive error 1
2019-06-06T10:07:26.109504> Receive error 1
2019-06-06T10:07:26.369608> Receive error 1
2019-06-06T10:07:26.630202> Receive error 1
2019-06-06T10:07:26.890294> Receive error 1
2019-06-06T10:07:27.150389> Receive error 1
2019-06-06T10:07:27.410462> Receive error 1
2019-06-06T10:07:27.670522> Receive error 1
2019-06-06T10:07:27.930284> Receive error 1
2019-06-06T10:07:28.190200> Receive error 1
2019-06-06T10:07:28.450127> Receive error 1
2019-06-06T10:07:28.710579> Receive error 1
2019-06-06T10:07:28.970178> Receive error 1
2019-06-06T10:07:29.230102> Receive error 1
2019-06-06T10:07:29.490107> Receive error 1
2019-06-06T10:07:29.750526> Receive error 1
2019-06-06T10:07:30.012116> Receive error 1
2019-06-06T10:07:30.272363> Receive error 1
2019-06-06T10:07:30.532347> Receive error 1
2019-06-06T10:07:30.792316> Receive error 1
2019-06-06T10:07:31.052584> Receive error 1
2019-06-06T10:07:31.312521> Receive error 1
2019-06-06T10:07:31.572906> Receive error 1
2019-06-06T10:07:31.833089> Receive error 1
2019-06-06T10:07:32.093599> Receive error 1
2019-06-06T10:07:32.354063> Receive error 1
2019-06-06T10:07:32.614439> Receive error 1
2019-06-06T10:07:32.875870> Receive error 1
2019-06-06T10:07:33.136134> Receive error 1
2019-06-06T10:07:33.396249> Receive error 1
2019-06-06T10:07:33.656435> Receive error 1
2019-06-06T10:07:33.917881> Receive error 1
2019-06-06T10:07:34.183514> Receive error 1
2019-06-06T10:07:34.443605> Receive error 1
2019-06-06T10:07:34.704766> Receive error 1
2019-06-06T10:07:34.965250> Receive error 1
2019-06-06T10:07:35.225295> Receive error 1
2019-06-06T10:07:35.485400> Receive error 1
2019-06-06T10:07:35.745635> Receive error 1
2019-06-06T10:07:36.006361> Receive error 1
2019-06-06T10:07:36.266851> Receive error 1
2019-06-06T10:07:36.527505> Receive error 1
2019-06-06T10:07:36.788050> Receive error 1
2019-06-06T10:07:37.048654> Receive error 1
2019-06-06T10:07:37.309234> Receive error 1
2019-06-06T10:07:37.569847> Receive error 1
2019-06-06T10:07:37.831458> Receive error 1
2019-06-06T10:07:38.093052> Receive error 1
2019-06-06T10:07:38.353824> Receive error 1
2019-06-06T10:07:38.616065> Receive error 1
2019-06-06T10:07:38.875519> Receive error 1
2019-06-06T10:07:39.136033> Receive error 1
2019-06-06T10:07:39.396594> Receive error 1
2019-06-06T10:07:39.657119> Receive error 1
2019-06-06T10:07:39.917644> Receive error 1
2019-06-06T10:07:40.177830> Receive error 1
2019-06-06T10:07:40.438133> Receive error 1
2019-06-06T10:07:40.438634> Low-level gw status ON
2019-06-06T10:07:40.698627> Receive error 1
2019-06-06T10:07:40.959501> Receive error 1
2019-06-06T10:07:41.220297> Receive error 1
2019-06-06T10:07:41.481134> Receive error 1
2019-06-06T10:07:41.741634> Receive error 1
2019-06-06T10:07:42.001936> Receive error 1
2019-06-06T10:07:42.262704> Receive error 1
2019-06-06T10:07:42.523354> Receive error 1
2019-06-06T10:07:42.783946> Receive error 1
2019-06-06T10:07:43.044504> Receive error 1
2019-06-06T10:07:43.305088> Receive error 1
2019-06-06T10:07:43.565386> Receive error 1
2019-06-06T10:07:43.825766> Receive error 1
2019-06-06T10:07:44.086067> Receive error 1
2019-06-06T10:07:44.346937> Receive error 1
2019-06-06T10:07:44.607521> Receive error 1
2019-06-06T10:07:44.868312> Receive error 1
2019-06-06T10:07:45.129999> Receive error 1
2019-06-06T10:07:45.390549> Receive error 1
2019-06-06T10:07:45.651139> Receive error 1
2019-06-06T10:07:45.911704> Receive error 1
2019-06-06T10:07:46.172255> Receive error 1
2019-06-06T10:07:46.432794> Receive error 1
2019-06-06T10:07:46.692875> Receive error 1
2019-06-06T10:07:46.952946> Receive error 1
2019-06-06T10:07:47.213098> Receive error 1
2019-06-06T10:07:47.473065> Receive error 1
2019-06-06T10:07:47.732937> Receive error 1
2019-06-06T10:07:47.992883> Receive error 1
2019-06-06T10:07:48.252903> Receive error 1
2019-06-06T10:07:48.512858> Receive error 1
2019-06-06T10:07:48.773015> Receive error 1
2019-06-06T10:07:49.033442> Receive error 1
2019-06-06T10:07:49.293624> Receive error 1
2019-06-06T10:07:49.553757> Receive error 1
2019-06-06T10:07:49.813333> Receive error 1
2019-06-06T10:07:50.073408> Receive error 1
2019-06-06T10:07:50.333399> Receive error 1
2019-06-06T10:07:50.594005> Receive error 1
2019-06-06T10:07:50.854515> Receive error 1
2019-06-06T10:07:51.114635> Receive error 1
2019-06-06T10:07:51.375263> Receive error 1
2019-06-06T10:07:51.635782> Receive error 1
2019-06-06T10:07:51.896295> Receive error 1
2019-06-06T10:07:52.156701> Receive error 1
2019-06-06T10:07:52.417130> Receive error 1
2019-06-06T10:07:52.677212> Receive error 1
2019-06-06T10:07:52.936865> Receive error 1
2019-06-06T10:07:53.197319> Receive error 1
2019-06-06T10:07:53.457456> Receive error 1
2019-06-06T10:07:53.717771> Receive error 1
2019-06-06T10:07:53.978276> Receive error 1
2019-06-06T10:07:54.239000> Receive error 1
2019-06-06T10:07:54.499262> Receive error 1
2019-06-06T10:07:54.759955> Receive error 1
2019-06-06T10:07:55.020427> Receive error 1
2019-06-06T10:07:55.280997> Receive error 1
2019-06-06T10:07:55.541166> Receive error 1
2019-06-06T10:07:55.801288> Receive error 1
2019-06-06T10:07:56.061496> Receive error 1
2019-06-06T10:07:56.062133> Low-level gw status ON
2019-06-06T10:07:56.321616> Receive error 1
2019-06-06T10:07:56.581795> Receive error 1
2019-06-06T10:07:56.842006> Receive error 1
2019-06-06T10:07:57.101969> Receive error 1
2019-06-06T10:07:57.362327> Receive error 1
2019-06-06T10:07:57.622431> Receive error 1
2019-06-06T10:07:57.882500> Receive error 1
2019-06-06T10:07:58.142633> Receive error 1
2019-06-06T10:07:58.402185> Receive error 1
2019-06-06T10:07:58.662232> Receive error 1
2019-06-06T10:07:58.922665> Receive error 1
2019-06-06T10:07:59.182750> Receive error 1
2019-06-06T10:07:59.442826> Receive error 1
2019-06-06T10:07:59.702917> Receive error 1
2019-06-06T10:07:59.963065> Receive error 1
2019-06-06T10:08:00.223038> Receive error 1
2019-06-06T10:08:00.483288> Receive error 1
2019-06-06T10:08:00.743782> Receive error 1
2019-06-06T10:08:01.006332> Receive error 1
2019-06-06T10:08:01.266463> Receive error 1
2019-06-06T10:08:01.526399> Receive error 1
2019-06-06T10:08:01.786849> Receive error 1
2019-06-06T10:08:02.046916> Receive error 1
2019-06-06T10:08:02.307014> Receive error 1
2019-06-06T10:08:02.567287> Receive error 1
2019-06-06T10:08:02.827460> Receive error 1
2019-06-06T10:08:03.087577> Receive error 1
2019-06-06T10:08:03.347742> Receive error 1
2019-06-06T10:08:03.607826> Receive error 1
2019-06-06T10:08:03.867942> Receive error 1
2019-06-06T10:08:04.127766> Receive error 1
2019-06-06T10:08:04.391481> Receive error 1
2019-06-06T10:08:04.651232> Receive error 1
2019-06-06T10:08:04.911705> Receive error 1
2019-06-06T10:08:05.171753> Receive error 1
2019-06-06T10:08:05.431397> Receive error 1
2019-06-06T10:08:05.691333> Receive error 1
2019-06-06T10:08:05.951285> Receive error 1
2019-06-06T10:08:06.211834> Receive error 1
2019-06-06T10:08:06.471918> Receive error 1
2019-06-06T10:08:06.732032> Receive error 1
2019-06-06T10:08:06.992251> Receive error 1
2019-06-06T10:08:07.252413> Receive error 1
2019-06-06T10:08:07.512488> Receive error 1
2019-06-06T10:08:07.772732> Receive error 1
2019-06-06T10:08:08.032820> Receive error 1
2019-06-06T10:08:08.292924> Receive error 1
2019-06-06T10:08:08.552476> Receive error 1
2019-06-06T10:08:08.812440> Receive error 1
2019-06-06T10:08:09.072404> Receive error 1
2019-06-06T10:08:09.332852> Receive error 1
2019-06-06T10:08:09.592487> Receive error 1
2019-06-06T10:08:09.852775> Receive error 1
2019-06-06T10:08:10.112785> Receive error 1
2019-06-06T10:08:10.372961> Receive error 1
2019-06-06T10:08:10.632876> Receive error 1
2019-06-06T10:08:10.892849> Receive error 1
2019-06-06T10:08:11.153340> Receive error 1
2019-06-06T10:08:11.413582> Receive error 1
2019-06-06T10:08:11.673786> Receive error 1
2019-06-06T10:08:11.674429> Low-level gw status ON
2019-06-06T10:08:11.933233> Receive error 1
2019-06-06T10:08:12.193230> Receive error 1
2019-06-06T10:08:12.453597> Receive error 1
2019-06-06T10:08:12.714011> Receive error 1
2019-06-06T10:08:12.974103> Receive error 1
2019-06-06T10:08:13.234138> Receive error 1
2019-06-06T10:08:13.494299> Receive error 1
2019-06-06T10:08:13.754431> Receive error 1
2019-06-06T10:08:14.014536> Receive error 1
2019-06-06T10:08:14.274674> Receive error 1
2019-06-06T10:08:14.534888> Receive error 1
2019-06-06T10:08:14.794446> Receive error 1
2019-06-06T10:08:15.054540> Receive error 1
2019-06-06T10:08:15.314699> Receive error 1
2019-06-06T10:08:15.574726> Receive error 1
2019-06-06T10:08:15.834713> Receive error 1
2019-06-06T10:08:16.094658> Receive error 1
2019-06-06T10:08:16.355164> Receive error 1
2019-06-06T10:08:16.614626> Receive error 1
2019-06-06T10:08:16.874636> Receive error 1
2019-06-06T10:08:17.134574> Receive error 1
2019-06-06T10:08:17.395033> Receive error 1
2019-06-06T10:08:17.654987> Receive error 1
2019-06-06T10:08:17.915609> Receive error 1
2019-06-06T10:08:18.176101> Receive error 1
2019-06-06T10:08:18.436754> Receive error 1
2019-06-06T10:08:18.697203> Receive error 1
2019-06-06T10:08:18.957807> Receive error 1
2019-06-06T10:08:19.217900> Receive error 1
2019-06-06T10:08:19.478024> Receive error 1
2019-06-06T10:08:19.738086> Receive error 1
2019-06-06T10:08:19.997756> Receive error 1
2019-06-06T10:08:20.257637> Receive error 1
2019-06-06T10:08:20.518255> Receive error 1
2019-06-06T10:08:20.778356> Receive error 1
2019-06-06T10:08:21.038729> Receive error 1
2019-06-06T10:08:21.298849> Receive error 1
2019-06-06T10:08:21.559191> Receive error 1
2019-06-06T10:08:21.819666> Receive error 1
2019-06-06T10:08:22.080344> Receive error 1
2019-06-06T10:08:22.341253> Receive error 1
2019-06-06T10:08:22.601383> Receive error 1
2019-06-06T10:08:22.861363> Receive error 1
2019-06-06T10:08:23.121610> Receive error 1
2019-06-06T10:08:23.381713> Receive error 1
2019-06-06T10:08:23.641847> Receive error 1
2019-06-06T10:08:23.901913> Receive error 1
2019-06-06T10:08:24.162303> Receive error 1
2019-06-06T10:08:24.422225> Receive error 1
2019-06-06T10:08:24.682252> Receive error 1
2019-06-06T10:08:24.942696> Receive error 1
2019-06-06T10:08:25.202787> Receive error 1
2019-06-06T10:08:25.463312> Receive error 1
2019-06-06T10:08:25.723400> Receive error 1
2019-06-06T10:08:25.983472> Receive error 1
2019-06-06T10:08:26.243433> Receive error 1
2019-06-06T10:08:26.503369> Receive error 1
2019-06-06T10:08:26.763398> Receive error 1
2019-06-06T10:08:27.023336> Receive error 1
2019-06-06T10:08:27.283446> Receive error 1
2019-06-06T10:08:27.283862> Low-level gw status ON
2019-06-06T10:08:27.543671> Receive error 1
2019-06-06T10:08:27.803600> Receive error 1
2019-06-06T10:08:28.063964> Receive error 1
2019-06-06T10:08:28.324118> Receive error 1
2019-06-06T10:08:28.584208> Receive error 1
2019-06-06T10:08:28.844284> Receive error 1
2019-06-06T10:08:29.104433> Receive error 1
2019-06-06T10:08:29.364551> Receive error 1
2019-06-06T10:08:29.624838> Receive error 1
2019-06-06T10:08:29.884381> Receive error 1
2019-06-06T10:08:30.144255> Receive error 1
2019-06-06T10:08:30.404847> Receive error 1
2019-06-06T10:08:30.664886> Receive error 1
2019-06-06T10:08:30.925007> Receive error 1
2019-06-06T10:08:31.184983> Receive error 1
2019-06-06T10:08:31.445210> Receive error 1
2019-06-06T10:08:31.705305> Receive error 1
2019-06-06T10:08:31.965503> Receive error 1
2019-06-06T10:08:32.225315> Receive error 1
2019-06-06T10:08:32.487421> Receive error 1
2019-06-06T10:08:32.747404> Receive error 1
2019-06-06T10:08:33.007900> Receive error 1
2019-06-06T10:08:33.267927> Receive error 1
2019-06-06T10:08:33.527810> Receive error 1
2019-06-06T10:08:33.787737> Receive error 1
2019-06-06T10:08:34.048247> Receive error 1
2019-06-06T10:08:34.308311> Receive error 1
2019-06-06T10:08:34.568466> Receive error 1
2019-06-06T10:08:34.828634> Receive error 1
2019-06-06T10:08:35.088746> Receive error 1
2019-06-06T10:08:35.348838> Receive error 1
2019-06-06T10:08:35.608967> Receive error 1
2019-06-06T10:08:35.869154> Receive error 1
2019-06-06T10:08:36.129227> Receive error 1
2019-06-06T10:08:36.389243> Receive error 1
2019-06-06T10:08:36.649374> Receive error 1
2019-06-06T10:08:36.909460> Receive error 1
2019-06-06T10:08:37.169575> Receive error 1
2019-06-06T10:08:37.429633> Receive error 1
2019-06-06T10:08:37.689859> Receive error 1
2019-06-06T10:08:37.949486> Receive error 1
2019-06-06T10:08:38.209525> Receive error 1
2019-06-06T10:08:38.469514> Receive error 1
2019-06-06T10:08:38.729520> Receive error 1
2019-06-06T10:08:38.989468> Receive error 1
2019-06-06T10:08:39.249947> Receive error 1
2019-06-06T10:08:39.510218> Receive error 1
2019-06-06T10:08:39.769645> Receive error 1
2019-06-06T10:08:40.029654> Receive error 1
2019-06-06T10:08:40.290436> Receive error 1
2019-06-06T10:08:40.550267> Receive error 1
2019-06-06T10:08:40.810473> Receive error 1
2019-06-06T10:08:41.070498> Receive error 1
2019-06-06T10:08:41.330601> Receive error 1
2019-06-06T10:08:41.590646> Receive error 1
2019-06-06T10:08:41.850997> Receive error 1
2019-06-06T10:08:42.110980> Receive error 1
2019-06-06T10:08:42.371557> Receive error 1
2019-06-06T10:08:42.631338> Receive error 1
2019-06-06T10:08:42.891632> Receive error 1
2019-06-06T10:08:42.892289> Low-level gw status ON
2019-06-06T10:08:43.151730> Receive error 1
2019-06-06T10:08:43.411236> Receive error 1
2019-06-06T10:08:43.671181> Receive error 1
2019-06-06T10:08:43.882274> 2019-06-06 10:08:43.879002
2019-06-06T10:08:43.883428> post status: gw ON
2019-06-06T10:08:43.884525> post status: executing periodic tasks
2019-06-06T10:08:43.931273> Receive error 1
2019-06-06T10:08:44.191350> Receive error 1
2019-06-06T10:08:44.451717> Receive error 1
2019-06-06T10:08:44.712047> Receive error 1
2019-06-06T10:08:44.974446> Receive error 1
2019-06-06T10:08:45.031153> no timezone support, time will be expressed only in local time
2019-06-06T10:08:45.031879> post status: start running
2019-06-06T10:08:45.234372> Receive error 1
2019-06-06T10:08:45.494526> Receive error 1
2019-06-06T10:08:45.754587> Receive error 1
2019-06-06T10:08:46.014527> Receive error 1
2019-06-06T10:08:46.121277> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:08:46.121792> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:08:46.122400> get_gps.py: invalid serial port
2019-06-06T10:08:46.259752> post status: dynamic GPS is requested
2019-06-06T10:08:46.260227> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:08:46.260714> post status get GPS: no GPS coordinates
2019-06-06T10:08:46.261088> post status: show current GPS position
2019-06-06T10:08:46.261437> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:08:46.261768> post status: exiting
2019-06-06T10:08:46.274765> Receive error 1
2019-06-06T10:08:46.534666> Receive error 1
2019-06-06T10:08:46.794599> Receive error 1
2019-06-06T10:08:47.055216> Receive error 1
2019-06-06T10:08:47.315206> Receive error 1
2019-06-06T10:08:47.575399> Receive error 1
2019-06-06T10:08:47.835419> Receive error 1
2019-06-06T10:08:48.095613> Receive error 1
2019-06-06T10:08:48.355803> Receive error 1
2019-06-06T10:08:48.615890> Receive error 1
2019-06-06T10:08:48.876092> Receive error 1
2019-06-06T10:08:49.135674> Receive error 1
2019-06-06T10:08:49.395955> Receive error 1
2019-06-06T10:08:49.656026> Receive error 1
2019-06-06T10:08:49.915885> Receive error 1
2019-06-06T10:08:50.175861> Receive error 1
2019-06-06T10:08:50.435797> Receive error 1
2019-06-06T10:08:50.696362> Receive error 1
2019-06-06T10:08:50.956738> Receive error 1
2019-06-06T10:08:51.218047> Receive error 1
2019-06-06T10:08:51.477553> Receive error 1
2019-06-06T10:08:51.737821> Receive error 1
2019-06-06T10:08:51.997750> Receive error 1
2019-06-06T10:08:52.257790> Receive error 1
2019-06-06T10:08:52.517730> Receive error 1
2019-06-06T10:08:52.778176> Receive error 1
2019-06-06T10:08:53.038974> Receive error 1
2019-06-06T10:08:53.299486> Receive error 1
2019-06-06T10:08:53.559961> Receive error 1
2019-06-06T10:08:53.820464> Receive error 1
2019-06-06T10:08:54.081005> Receive error 1
2019-06-06T10:08:54.341217> Receive error 1
2019-06-06T10:08:54.601444> Receive error 1
2019-06-06T10:08:54.862276> Receive error 1
2019-06-06T10:08:55.125182> Receive error 1
2019-06-06T10:08:55.385569> Receive error 1
2019-06-06T10:08:55.645814> Receive error 1
2019-06-06T10:08:55.905920> Receive error 1
2019-06-06T10:08:56.166040> Receive error 1
2019-06-06T10:08:56.426611> Receive error 1
2019-06-06T10:08:56.687107> Receive error 1
2019-06-06T10:08:56.947774> Receive error 1
2019-06-06T10:08:57.208282> Receive error 1
2019-06-06T10:08:57.468989> Receive error 1
2019-06-06T10:08:57.729568> Receive error 1
2019-06-06T10:08:57.990104> Receive error 1
2019-06-06T10:08:58.250682> Receive error 1
2019-06-06T10:08:58.511361> Receive error 1
2019-06-06T10:08:58.512005> Low-level gw status ON
2019-06-06T10:08:58.772463> Receive error 1
2019-06-06T10:08:59.033248> Receive error 1
2019-06-06T10:08:59.293453> Receive error 1
2019-06-06T10:08:59.555085> Receive error 1
2019-06-06T10:08:59.815103> Receive error 1
2019-06-06T10:09:00.075233> Receive error 1
2019-06-06T10:09:00.335124> Receive error 1
2019-06-06T10:09:00.595081> Receive error 1
2019-06-06T10:09:00.855024> Receive error 1
2019-06-06T10:09:01.114973> Receive error 1
2019-06-06T10:09:01.374882> Receive error 1
2019-06-06T10:09:01.634867> Receive error 1
2019-06-06T10:09:01.895214> Receive error 1
2019-06-06T10:09:02.155708> Receive error 1
2019-06-06T10:09:02.416220> Receive error 1
2019-06-06T10:09:02.676555> Receive error 1
2019-06-06T10:09:02.936611> Receive error 1
2019-06-06T10:09:03.196707> Receive error 1
2019-06-06T10:09:03.456886> Receive error 1
2019-06-06T10:09:03.717183> Receive error 1
2019-06-06T10:09:03.977572> Receive error 1
2019-06-06T10:09:04.238105> Receive error 1
2019-06-06T10:09:04.498785> Receive error 1
2019-06-06T10:09:04.759348> Receive error 1
2019-06-06T10:09:05.019753> Receive error 1
2019-06-06T10:09:05.279905> Receive error 1
2019-06-06T10:09:05.540181> Receive error 1
2019-06-06T10:09:05.802332> Receive error 1
2019-06-06T10:09:06.062489> Receive error 1
2019-06-06T10:09:06.322460> Receive error 1
2019-06-06T10:09:06.582789> Receive error 1
2019-06-06T10:09:06.844155> Receive error 1
2019-06-06T10:09:07.105690> Receive error 1
2019-06-06T10:09:07.367267> Receive error 1
2019-06-06T10:09:07.629003> Receive error 1
2019-06-06T10:09:07.890613> Receive error 1
2019-06-06T10:09:08.152220> Receive error 1
2019-06-06T10:09:08.413357> Receive error 1
2019-06-06T10:09:08.674959> Receive error 1
2019-06-06T10:09:08.936581> Receive error 1
2019-06-06T10:09:09.198211> Receive error 1
2019-06-06T10:09:09.459901> Receive error 1
2019-06-06T10:09:09.721465> Receive error 1
2019-06-06T10:09:09.983242> Receive error 1
2019-06-06T10:09:10.243804> Receive error 1
2019-06-06T10:09:10.504562> Receive error 1
2019-06-06T10:09:10.765096> Receive error 1
2019-06-06T10:09:11.025586> Receive error 1
2019-06-06T10:09:11.285723> Receive error 1
2019-06-06T10:09:11.546051> Receive error 1
2019-06-06T10:09:11.806620> Receive error 1
2019-06-06T10:09:12.067012> Receive error 1
2019-06-06T10:09:12.327222> Receive error 1
2019-06-06T10:09:12.587508> Receive error 1
2019-06-06T10:09:12.848194> Receive error 1
2019-06-06T10:09:13.108912> Receive error 1
2019-06-06T10:09:13.369109> Receive error 1
2019-06-06T10:09:13.629743> Receive error 1
2019-06-06T10:09:13.890320> Receive error 1
2019-06-06T10:09:14.151043> Receive error 1
2019-06-06T10:09:14.151685> Low-level gw status ON
2019-06-06T10:09:14.411234> Receive error 1
2019-06-06T10:09:14.671718> Receive error 1
2019-06-06T10:09:14.931293> Receive error 1
2019-06-06T10:09:15.191217> Receive error 1
2019-06-06T10:09:15.451159> Receive error 1
2019-06-06T10:09:15.711589> Receive error 1
2019-06-06T10:09:15.971705> Receive error 1
2019-06-06T10:09:16.232085> Receive error 1
2019-06-06T10:09:16.492505> Receive error 1
2019-06-06T10:09:16.752597> Receive error 1
2019-06-06T10:09:17.012198> Receive error 1
2019-06-06T10:09:17.274740> Receive error 1
2019-06-06T10:09:17.535013> Receive error 1
2019-06-06T10:09:17.795504> Receive error 1
2019-06-06T10:09:18.055437> Receive error 1
2019-06-06T10:09:18.315539> Receive error 1
2019-06-06T10:09:18.575495> Receive error 1
2019-06-06T10:09:18.835887> Receive error 1
2019-06-06T10:09:19.096012> Receive error 1
2019-06-06T10:09:19.356071> Receive error 1
2019-06-06T10:09:19.616181> Receive error 1
2019-06-06T10:09:19.876260> Receive error 1
2019-06-06T10:09:20.135970> Receive error 1
2019-06-06T10:09:20.395840> Receive error 1
2019-06-06T10:09:20.655782> Receive error 1
2019-06-06T10:09:20.916163> Receive error 1
2019-06-06T10:09:21.176676> Receive error 1
2019-06-06T10:09:21.437157> Receive error 1
2019-06-06T10:09:21.697671> Receive error 1
2019-06-06T10:09:21.958151> Receive error 1
2019-06-06T10:09:22.218724> Receive error 1
2019-06-06T10:09:22.479385> Receive error 1
2019-06-06T10:09:22.741454> Receive error 1
2019-06-06T10:09:23.001866> Receive error 1
2019-06-06T10:09:23.261856> Receive error 1
2019-06-06T10:09:23.522207> Receive error 1
2019-06-06T10:09:23.782712> Receive error 1
2019-06-06T10:09:24.043423> Receive error 1
2019-06-06T10:09:24.303002> Receive error 1
2019-06-06T10:09:24.562943> Receive error 1
2019-06-06T10:09:24.822797> Receive error 1
2019-06-06T10:09:25.083320> Receive error 1
2019-06-06T10:09:25.343433> Receive error 1
2019-06-06T10:09:25.603552> Receive error 1
2019-06-06T10:09:25.863657> Receive error 1
2019-06-06T10:09:26.123947> Receive error 1
2019-06-06T10:09:26.384018> Receive error 1
2019-06-06T10:09:26.644093> Receive error 1
2019-06-06T10:09:26.904240> Receive error 1
2019-06-06T10:09:27.164306> Receive error 1
2019-06-06T10:09:27.424443> Receive error 1
2019-06-06T10:09:27.684673> Receive error 1
2019-06-06T10:09:27.944758> Receive error 1
2019-06-06T10:09:28.205142> Receive error 1
2019-06-06T10:09:28.464859> Receive error 1
2019-06-06T10:09:28.724820> Receive error 1
2019-06-06T10:09:28.985103> Receive error 1
2019-06-06T10:09:29.245043> Receive error 1
2019-06-06T10:09:29.504992> Receive error 1
2019-06-06T10:09:29.765634> Receive error 1
2019-06-06T10:09:29.766279> Low-level gw status ON
2019-06-06T10:09:30.025614> Receive error 1
2019-06-06T10:09:30.285704> Receive error 1
2019-06-06T10:09:30.545287> Receive error 1
2019-06-06T10:09:30.805225> Receive error 1
2019-06-06T10:09:31.065200> Receive error 1
2019-06-06T10:09:31.325754> Receive error 1
2019-06-06T10:09:31.586034> Receive error 1
2019-06-06T10:09:31.846123> Receive error 1
2019-06-06T10:09:32.106261> Receive error 1
2019-06-06T10:09:32.366313> Receive error 1
2019-06-06T10:09:32.626435> Receive error 1
2019-06-06T10:09:32.886714> Receive error 1
2019-06-06T10:09:33.146839> Receive error 1
2019-06-06T10:09:33.406950> Receive error 1
2019-06-06T10:09:33.667076> Receive error 1
2019-06-06T10:09:33.930269> Receive error 1
2019-06-06T10:09:34.191117> Receive error 1
2019-06-06T10:09:34.451115> Receive error 1
2019-06-06T10:09:34.711627> Receive error 1
2019-06-06T10:09:34.971735> Receive error 1
2019-06-06T10:09:35.231820> Receive error 1
2019-06-06T10:09:35.491924> Receive error 1
2019-06-06T10:09:35.751976> Receive error 1
2019-06-06T10:09:36.012219> Receive error 1
2019-06-06T10:09:36.272306> Receive error 1
2019-06-06T10:09:36.532381> Receive error 1
2019-06-06T10:09:36.792511> Receive error 1
2019-06-06T10:09:37.052597> Receive error 1
2019-06-06T10:09:37.312692> Receive error 1
2019-06-06T10:09:37.573685> Receive error 1
2019-06-06T10:09:37.833799> Receive error 1
2019-06-06T10:09:38.094393> Receive error 1
2019-06-06T10:09:38.354987> Receive error 1
2019-06-06T10:09:38.615522> Receive error 1
2019-06-06T10:09:38.875973> Receive error 1
2019-06-06T10:09:39.136462> Receive error 1
2019-06-06T10:09:39.397535> Receive error 1
2019-06-06T10:09:39.657034> Receive error 1
2019-06-06T10:09:39.917015> Receive error 1
2019-06-06T10:09:40.176971> Receive error 1
2019-06-06T10:09:40.436892> Receive error 1
2019-06-06T10:09:40.696830> Receive error 1
2019-06-06T10:09:40.957240> Receive error 1
2019-06-06T10:09:41.217407> Receive error 1
2019-06-06T10:09:41.477500> Receive error 1
2019-06-06T10:09:41.737821> Receive error 1
2019-06-06T10:09:41.997612> Receive error 1
2019-06-06T10:09:42.257456> Receive error 1
2019-06-06T10:09:42.517908> Receive error 1
2019-06-06T10:09:42.778387> Receive error 1
2019-06-06T10:09:43.041213> Receive error 1
2019-06-06T10:09:43.300739> Receive error 1
2019-06-06T10:09:43.561308> Receive error 1
2019-06-06T10:09:43.821968> Receive error 1
2019-06-06T10:09:44.082285> Receive error 1
2019-06-06T10:09:44.342316> Receive error 1
2019-06-06T10:09:44.602708> Receive error 1
2019-06-06T10:09:44.863255> Receive error 1
2019-06-06T10:09:45.124046> Receive error 1
2019-06-06T10:09:45.385857> Receive error 1
2019-06-06T10:09:45.386464> Low-level gw status ON
2019-06-06T10:09:45.645709> Receive error 1
2019-06-06T10:09:45.906001> Receive error 1
2019-06-06T10:09:46.166607> Receive error 1
2019-06-06T10:09:46.427095> Receive error 1
2019-06-06T10:09:46.687712> Receive error 1
2019-06-06T10:09:46.948180> Receive error 1
2019-06-06T10:09:47.208973> Receive error 1
2019-06-06T10:09:47.469604> Receive error 1
2019-06-06T10:09:47.730127> Receive error 1
2019-06-06T10:09:47.990507> Receive error 1
2019-06-06T10:09:48.251196> Receive error 1
2019-06-06T10:09:48.511321> Receive error 1
2019-06-06T10:09:48.771644> Receive error 1
2019-06-06T10:09:49.031572> Receive error 1
2019-06-06T10:09:49.291767> Receive error 1
2019-06-06T10:09:49.551776> Receive error 1
2019-06-06T10:09:49.811939> Receive error 1
2019-06-06T10:09:50.072099> Receive error 1
2019-06-06T10:09:50.332372> Receive error 1
2019-06-06T10:09:50.593128> Receive error 1
2019-06-06T10:09:50.852564> Receive error 1
2019-06-06T10:09:51.112737> Receive error 1
2019-06-06T10:09:51.373148> Receive error 1
2019-06-06T10:09:51.633422> Receive error 1
2019-06-06T10:09:51.893489> Receive error 1
2019-06-06T10:09:52.153475> Receive error 1
2019-06-06T10:09:52.414249> Receive error 1
2019-06-06T10:09:52.674746> Receive error 1
2019-06-06T10:09:52.935208> Receive error 1
2019-06-06T10:09:53.195186> Receive error 1
2019-06-06T10:09:53.455655> Receive error 1
2019-06-06T10:09:53.715752> Receive error 1
2019-06-06T10:09:53.976219> Receive error 1
2019-06-06T10:09:54.246305> Receive error 1
2019-06-06T10:09:54.506368> Receive error 1
2019-06-06T10:09:54.766505> Receive error 1
2019-06-06T10:09:55.026851> Receive error 1
2019-06-06T10:09:55.287601> Receive error 1
2019-06-06T10:09:55.548122> Receive error 1
2019-06-06T10:09:55.808788> Receive error 1
2019-06-06T10:09:56.068760> Receive error 1
2019-06-06T10:09:56.334355> Receive error 1
2019-06-06T10:09:56.597489> Receive error 1
2019-06-06T10:09:56.857815> Receive error 1
2019-06-06T10:09:57.117789> Receive error 1
2019-06-06T10:09:57.378355> Receive error 1
2019-06-06T10:09:57.639562> Receive error 1
2019-06-06T10:09:57.901798> Receive error 1
2019-06-06T10:09:58.162316> Receive error 1
2019-06-06T10:09:58.422863> Receive error 1
2019-06-06T10:09:58.683023> Receive error 1
2019-06-06T10:09:58.943172> Receive error 1
2019-06-06T10:09:59.203301> Receive error 1
2019-06-06T10:09:59.463347> Receive error 1
2019-06-06T10:09:59.723505> Receive error 1
2019-06-06T10:09:59.983623> Receive error 1
2019-06-06T10:10:00.243698> Receive error 1
2019-06-06T10:10:00.503724> Receive error 1
2019-06-06T10:10:00.763939> Receive error 1
2019-06-06T10:10:01.024065> Receive error 1
2019-06-06T10:10:01.024814> Low-level gw status ON
2019-06-06T10:10:01.284276> Receive error 1
2019-06-06T10:10:01.544302> Receive error 1
2019-06-06T10:10:01.804472> Receive error 1
2019-06-06T10:10:02.064560> Receive error 1
2019-06-06T10:10:02.324988> Receive error 1
2019-06-06T10:10:02.584824> Receive error 1
2019-06-06T10:10:02.844743> Receive error 1
2019-06-06T10:10:03.105348> Receive error 1
2019-06-06T10:10:03.365383> Receive error 1
2019-06-06T10:10:03.625509> Receive error 1
2019-06-06T10:10:03.886149> Receive error 1
2019-06-06T10:10:04.146699> Receive error 1
2019-06-06T10:10:04.407209> Receive error 1
2019-06-06T10:10:04.667696> Receive error 1
2019-06-06T10:10:04.928217> Receive error 1
2019-06-06T10:10:05.188913> Receive error 1
2019-06-06T10:10:05.449499> Receive error 1
2019-06-06T10:10:05.710200> Receive error 1
2019-06-06T10:10:05.970787> Receive error 1
2019-06-06T10:10:06.231282> Receive error 1
2019-06-06T10:10:06.491831> Receive error 1
2019-06-06T10:10:06.752366> Receive error 1
2019-06-06T10:10:07.012473> Receive error 1
2019-06-06T10:10:07.272687> Receive error 1
2019-06-06T10:10:07.532441> Receive error 1
2019-06-06T10:10:07.792536> Receive error 1
2019-06-06T10:10:08.052600> Receive error 1
2019-06-06T10:10:08.312804> Receive error 1
2019-06-06T10:10:08.572786> Receive error 1
2019-06-06T10:10:08.832828> Receive error 1
2019-06-06T10:10:09.093339> Receive error 1
2019-06-06T10:10:09.353918> Receive error 1
2019-06-06T10:10:09.614432> Receive error 1
2019-06-06T10:10:09.875052> Receive error 1
2019-06-06T10:10:10.135173> Receive error 1
2019-06-06T10:10:10.395267> Receive error 1
2019-06-06T10:10:10.655449> Receive error 1
2019-06-06T10:10:10.915471> Receive error 1
2019-06-06T10:10:11.176004> Receive error 1
2019-06-06T10:10:11.436551> Receive error 1
2019-06-06T10:10:11.697929> Receive error 1
2019-06-06T10:10:11.958587> Receive error 1
2019-06-06T10:10:12.218838> Receive error 1
2019-06-06T10:10:12.479080> Receive error 1
2019-06-06T10:10:12.739142> Receive error 1
2019-06-06T10:10:13.000102> Receive error 1
2019-06-06T10:10:13.259389> Receive error 1
2019-06-06T10:10:13.519861> Receive error 1
2019-06-06T10:10:13.780031> Receive error 1
2019-06-06T10:10:14.039899> Receive error 1
2019-06-06T10:10:14.299899> Receive error 1
2019-06-06T10:10:14.559846> Receive error 1
2019-06-06T10:10:14.820213> Receive error 1
2019-06-06T10:10:15.080494> Receive error 1
2019-06-06T10:10:15.340117> Receive error 1
2019-06-06T10:10:15.600065> Receive error 1
2019-06-06T10:10:15.860524> Receive error 1
2019-06-06T10:10:16.120574> Receive error 1
2019-06-06T10:10:16.381137> Receive error 1
2019-06-06T10:10:16.641637> Receive error 1
2019-06-06T10:10:16.642337> Low-level gw status ON
2019-06-06T10:10:16.903017> Receive error 1
2019-06-06T10:10:17.163512> Receive error 1
2019-06-06T10:10:17.424170> Receive error 1
2019-06-06T10:10:17.684351> Receive error 1
2019-06-06T10:10:17.944549> Receive error 1
2019-06-06T10:10:18.204785> Receive error 1
2019-06-06T10:10:18.465390> Receive error 1
2019-06-06T10:10:18.726150> Receive error 1
2019-06-06T10:10:18.987315> Receive error 1
2019-06-06T10:10:19.247732> Receive error 1
2019-06-06T10:10:19.508262> Receive error 1
2019-06-06T10:10:19.769038> Receive error 1
2019-06-06T10:10:20.029729> Receive error 1
2019-06-06T10:10:20.289884> Receive error 1
2019-06-06T10:10:20.550120> Receive error 1
2019-06-06T10:10:20.810858> Receive error 1
2019-06-06T10:10:21.071538> Receive error 1
2019-06-06T10:10:21.332044> Receive error 1
2019-06-06T10:10:21.592557> Receive error 1
2019-06-06T10:10:21.853398> Receive error 1
2019-06-06T10:10:22.114460> Receive error 1
2019-06-06T10:10:22.375600> Receive error 1
2019-06-06T10:10:22.636125> Receive error 1
2019-06-06T10:10:22.896567> Receive error 1
2019-06-06T10:10:23.157233> Receive error 1
2019-06-06T10:10:23.417287> Receive error 1
2019-06-06T10:10:23.677497> Receive error 1
2019-06-06T10:10:23.937552> Receive error 1
2019-06-06T10:10:24.197756> Receive error 1
2019-06-06T10:10:24.457593> Receive error 1
2019-06-06T10:10:24.717702> Receive error 1
2019-06-06T10:10:24.977668> Receive error 1
2019-06-06T10:10:25.239127> Receive error 1
2019-06-06T10:10:25.499285> Receive error 1
2019-06-06T10:10:25.759408> Receive error 1
2019-06-06T10:10:26.019482> Receive error 1
2019-06-06T10:10:26.279795> Receive error 1
2019-06-06T10:10:26.539667> Receive error 1
2019-06-06T10:10:26.800044> Receive error 1
2019-06-06T10:10:27.060312> Receive error 1
2019-06-06T10:10:27.320490> Receive error 1
2019-06-06T10:10:27.580594> Receive error 1
2019-06-06T10:10:27.840649> Receive error 1
2019-06-06T10:10:28.100702> Receive error 1
2019-06-06T10:10:28.360804> Receive error 1
2019-06-06T10:10:28.620983> Receive error 1
2019-06-06T10:10:28.881542> Receive error 1
2019-06-06T10:10:29.142069> Receive error 1
2019-06-06T10:10:29.402625> Receive error 1
2019-06-06T10:10:29.670058> Receive error 1
2019-06-06T10:10:29.930666> Receive error 1
2019-06-06T10:10:30.191538> Receive error 1
2019-06-06T10:10:30.451961> Receive error 1
2019-06-06T10:10:30.712238> Receive error 1
2019-06-06T10:10:30.973262> Receive error 1
2019-06-06T10:10:31.233890> Receive error 1
2019-06-06T10:10:31.493984> Receive error 1
2019-06-06T10:10:31.754112> Receive error 1
2019-06-06T10:10:32.014305> Receive error 1
2019-06-06T10:10:32.274372> Receive error 1
2019-06-06T10:10:32.275087> Low-level gw status ON
2019-06-06T10:10:32.534499> Receive error 1
2019-06-06T10:10:32.794518> Receive error 1
2019-06-06T10:10:33.054828> Receive error 1
2019-06-06T10:10:33.314809> Receive error 1
2019-06-06T10:10:33.575416> Receive error 1
2019-06-06T10:10:33.835171> Receive error 1
2019-06-06T10:10:34.095111> Receive error 1
2019-06-06T10:10:34.355051> Receive error 1
2019-06-06T10:10:34.615363> Receive error 1
2019-06-06T10:10:34.875553> Receive error 1
2019-06-06T10:10:35.135810> Receive error 1
2019-06-06T10:10:35.395901> Receive error 1
2019-06-06T10:10:35.657247> Receive error 1
2019-06-06T10:10:35.917496> Receive error 1
2019-06-06T10:10:36.177719> Receive error 1
2019-06-06T10:10:36.438349> Receive error 1
2019-06-06T10:10:36.698944> Receive error 1
2019-06-06T10:10:36.959472> Receive error 1
2019-06-06T10:10:37.219984> Receive error 1
2019-06-06T10:10:37.480923> Receive error 1
2019-06-06T10:10:37.741210> Receive error 1
2019-06-06T10:10:38.001447> Receive error 1
2019-06-06T10:10:38.262164> Receive error 1
2019-06-06T10:10:38.522764> Receive error 1
2019-06-06T10:10:38.783263> Receive error 1
2019-06-06T10:10:39.043924> Receive error 1
2019-06-06T10:10:39.304416> Receive error 1
2019-06-06T10:10:39.564949> Receive error 1
2019-06-06T10:10:39.825640> Receive error 1
2019-06-06T10:10:40.085786> Receive error 1
2019-06-06T10:10:40.346167> Receive error 1
2019-06-06T10:10:40.606367> Receive error 1
2019-06-06T10:10:40.866985> Receive error 1
2019-06-06T10:10:41.127601> Receive error 1
2019-06-06T10:10:41.387753> Receive error 1
2019-06-06T10:10:41.651263> Receive error 1
2019-06-06T10:10:41.911862> Receive error 1
2019-06-06T10:10:42.172498> Receive error 1
2019-06-06T10:10:42.432444> Receive error 1
2019-06-06T10:10:42.692748> Receive error 1
2019-06-06T10:10:42.953368> Receive error 1
2019-06-06T10:10:43.213900> Receive error 1
2019-06-06T10:10:43.474390> Receive error 1
2019-06-06T10:10:43.734912> Receive error 1
2019-06-06T10:10:43.995464> Receive error 1
2019-06-06T10:10:44.256055> Receive error 1
2019-06-06T10:10:44.516175> Receive error 1
2019-06-06T10:10:44.776464> Receive error 1
2019-06-06T10:10:45.039474> Receive error 1
2019-06-06T10:10:45.299551> Receive error 1
2019-06-06T10:10:45.559519> Receive error 1
2019-06-06T10:10:45.819436> Receive error 1
2019-06-06T10:10:46.079838> Receive error 1
2019-06-06T10:10:46.339532> Receive error 1
2019-06-06T10:10:46.599524> Receive error 1
2019-06-06T10:10:46.859810> Receive error 1
2019-06-06T10:10:47.120134> Receive error 1
2019-06-06T10:10:47.381076> Receive error 1
2019-06-06T10:10:47.641241> Receive error 1
2019-06-06T10:10:47.901928> Receive error 1
2019-06-06T10:10:47.902730> Low-level gw status ON
2019-06-06T10:10:48.162728> Receive error 1
2019-06-06T10:10:48.424473> Receive error 1
2019-06-06T10:10:48.685064> Receive error 1
2019-06-06T10:10:48.945586> Receive error 1
2019-06-06T10:10:49.206233> Receive error 1
2019-06-06T10:10:49.466789> Receive error 1
2019-06-06T10:10:49.727335> Receive error 1
2019-06-06T10:10:49.987923> Receive error 1
2019-06-06T10:10:50.248480> Receive error 1
2019-06-06T10:10:50.509117> Receive error 1
2019-06-06T10:10:50.769779> Receive error 1
2019-06-06T10:10:51.030673> Receive error 1
2019-06-06T10:10:51.290703> Receive error 1
2019-06-06T10:10:51.551456> Receive error 1
2019-06-06T10:10:51.811986> Receive error 1
2019-06-06T10:10:52.072508> Receive error 1
2019-06-06T10:10:52.333008> Receive error 1
2019-06-06T10:10:52.594328> Receive error 1
2019-06-06T10:10:52.855861> Receive error 1
2019-06-06T10:10:53.116876> Receive error 1
2019-06-06T10:10:53.378269> Receive error 1
2019-06-06T10:10:53.640100> Receive error 1
2019-06-06T10:10:53.900646> Receive error 1
2019-06-06T10:10:54.161209> Receive error 1
2019-06-06T10:10:54.421730> Receive error 1
2019-06-06T10:10:54.682333> Receive error 1
2019-06-06T10:10:54.942837> Receive error 1
2019-06-06T10:10:55.203383> Receive error 1
2019-06-06T10:10:55.463973> Receive error 1
2019-06-06T10:10:55.724127> Receive error 1
2019-06-06T10:10:55.984850> Receive error 1
2019-06-06T10:10:56.244852> Receive error 1
2019-06-06T10:10:56.505660> Receive error 1
2019-06-06T10:10:56.766145> Receive error 1
2019-06-06T10:10:57.026816> Receive error 1
2019-06-06T10:10:57.286887> Receive error 1
2019-06-06T10:10:57.547088> Receive error 1
2019-06-06T10:10:57.807162> Receive error 1
2019-06-06T10:10:58.066764> Receive error 1
2019-06-06T10:10:58.326749> Receive error 1
2019-06-06T10:10:58.586970> Receive error 1
2019-06-06T10:10:58.848044> Receive error 1
2019-06-06T10:10:59.108593> Receive error 1
2019-06-06T10:10:59.368467> Receive error 1
2019-06-06T10:10:59.629072> Receive error 1
2019-06-06T10:10:59.888939> Receive error 1
2019-06-06T10:11:00.148779> Receive error 1
2019-06-06T10:11:00.408796> Receive error 1
2019-06-06T10:11:00.669284> Receive error 1
2019-06-06T10:11:00.929462> Receive error 1
2019-06-06T10:11:01.189898> Receive error 1
2019-06-06T10:11:01.449974> Receive error 1
2019-06-06T10:11:01.710168> Receive error 1
2019-06-06T10:11:01.969744> Receive error 1
2019-06-06T10:11:02.229735> Receive error 1
2019-06-06T10:11:02.489705> Receive error 1
2019-06-06T10:11:02.750115> Receive error 1
2019-06-06T10:11:03.010156> Receive error 1
2019-06-06T10:11:03.270259> Receive error 1
2019-06-06T10:11:03.529977> Receive error 1
2019-06-06T10:11:03.530457> Low-level gw status ON
2019-06-06T10:11:03.790189> Receive error 1
2019-06-06T10:11:04.051110> Receive error 1
2019-06-06T10:11:04.310881> Receive error 1
2019-06-06T10:11:04.570795> Receive error 1
2019-06-06T10:11:04.830733> Receive error 1
2019-06-06T10:11:05.091209> Receive error 1
2019-06-06T10:11:05.351243> Receive error 1
2019-06-06T10:11:05.611377> Receive error 1
2019-06-06T10:11:05.871428> Receive error 1
2019-06-06T10:11:06.131068> Receive error 1
2019-06-06T10:11:06.390968> Receive error 1
2019-06-06T10:11:06.650933> Receive error 1
2019-06-06T10:11:06.911645> Receive error 1
2019-06-06T10:11:07.171682> Receive error 1
2019-06-06T10:11:07.431800> Receive error 1
2019-06-06T10:11:07.691883> Receive error 1
2019-06-06T10:11:07.952164> Receive error 1
2019-06-06T10:11:08.212258> Receive error 1
2019-06-06T10:11:08.472375> Receive error 1
2019-06-06T10:11:08.732434> Receive error 1
2019-06-06T10:11:08.992489> Receive error 1
2019-06-06T10:11:09.252565> Receive error 1
2019-06-06T10:11:09.512331> Receive error 1
2019-06-06T10:11:09.772449> Receive error 1
2019-06-06T10:11:10.032304> Receive error 1
2019-06-06T10:11:10.292737> Receive error 1
2019-06-06T10:11:10.552819> Receive error 1
2019-06-06T10:11:10.812899> Receive error 1
2019-06-06T10:11:11.073020> Receive error 1
2019-06-06T10:11:11.333114> Receive error 1
2019-06-06T10:11:11.593430> Receive error 1
2019-06-06T10:11:11.853302> Receive error 1
2019-06-06T10:11:12.117560> Receive error 1
2019-06-06T10:11:12.377450> Receive error 1
2019-06-06T10:11:12.637909> Receive error 1
2019-06-06T10:11:12.898023> Receive error 1
2019-06-06T10:11:13.158137> Receive error 1
2019-06-06T10:11:13.418009> Receive error 1
2019-06-06T10:11:13.677971> Receive error 1
2019-06-06T10:11:13.938407> Receive error 1
2019-06-06T10:11:14.198462> Receive error 1
2019-06-06T10:11:14.458661> Receive error 1
2019-06-06T10:11:14.718776> Receive error 1
2019-06-06T10:11:14.979326> Receive error 1
2019-06-06T10:11:15.239255> Receive error 1
2019-06-06T10:11:15.499393> Receive error 1
2019-06-06T10:11:15.759800> Receive error 1
2019-06-06T10:11:16.019844> Receive error 1
2019-06-06T10:11:16.280058> Receive error 1
2019-06-06T10:11:16.540085> Receive error 1
2019-06-06T10:11:16.800163> Receive error 1
2019-06-06T10:11:17.059931> Receive error 1
2019-06-06T10:11:17.319735> Receive error 1
2019-06-06T10:11:17.579671> Receive error 1
2019-06-06T10:11:17.840188> Receive error 1
2019-06-06T10:11:18.100185> Receive error 1
2019-06-06T10:11:18.360194> Receive error 1
2019-06-06T10:11:18.620360> Receive error 1
2019-06-06T10:11:18.880682> Receive error 1
2019-06-06T10:11:19.140881> Receive error 1
2019-06-06T10:11:19.141520> Low-level gw status ON
2019-06-06T10:11:19.400762> Receive error 1
2019-06-06T10:11:19.660985> Receive error 1
2019-06-06T10:11:19.921117> Receive error 1
2019-06-06T10:11:20.181305> Receive error 1
2019-06-06T10:11:20.441362> Receive error 1
2019-06-06T10:11:20.701248> Receive error 1
2019-06-06T10:11:20.961392> Receive error 1
2019-06-06T10:11:21.221291> Receive error 1
2019-06-06T10:11:21.481709> Receive error 1
2019-06-06T10:11:21.741810> Receive error 1
2019-06-06T10:11:22.001921> Receive error 1
2019-06-06T10:11:22.262418> Receive error 1
2019-06-06T10:11:22.522511> Receive error 1
2019-06-06T10:11:22.782109> Receive error 1
2019-06-06T10:11:23.042059> Receive error 1
2019-06-06T10:11:23.302099> Receive error 1
2019-06-06T10:11:23.562569> Receive error 1
2019-06-06T10:11:23.822165> Receive error 1
2019-06-06T10:11:24.082317> Receive error 1
2019-06-06T10:11:24.342713> Receive error 1
2019-06-06T10:11:24.603572> Receive error 1
2019-06-06T10:11:24.863140> Receive error 1
2019-06-06T10:11:25.123409> Receive error 1
2019-06-06T10:11:25.383321> Receive error 1
2019-06-06T10:11:25.643803> Receive error 1
2019-06-06T10:11:25.903939> Receive error 1
2019-06-06T10:11:26.164005> Receive error 1
2019-06-06T10:11:26.424600> Receive error 1
2019-06-06T10:11:26.684195> Receive error 1
2019-06-06T10:11:26.944173> Receive error 1
2019-06-06T10:11:27.204168> Receive error 1
2019-06-06T10:11:27.464078> Receive error 1
2019-06-06T10:11:27.724513> Receive error 1
2019-06-06T10:11:27.984591> Receive error 1
2019-06-06T10:11:28.244725> Receive error 1
2019-06-06T10:11:28.504783> Receive error 1
2019-06-06T10:11:28.764866> Receive error 1
2019-06-06T10:11:29.024943> Receive error 1
2019-06-06T10:11:29.284593> Receive error 1
2019-06-06T10:11:29.544532> Receive error 1
2019-06-06T10:11:29.804464> Receive error 1
2019-06-06T10:11:30.064873> Receive error 1
2019-06-06T10:11:30.324967> Receive error 1
2019-06-06T10:11:30.585114> Receive error 1
2019-06-06T10:11:30.845286> Receive error 1
2019-06-06T10:11:31.105402> Receive error 1
2019-06-06T10:11:31.365502> Receive error 1
2019-06-06T10:11:31.625633> Receive error 1
2019-06-06T10:11:31.885854> Receive error 1
2019-06-06T10:11:32.145460> Receive error 1
2019-06-06T10:11:32.405477> Receive error 1
2019-06-06T10:11:32.665598> Receive error 1
2019-06-06T10:11:32.926008> Receive error 1
2019-06-06T10:11:33.186258> Receive error 1
2019-06-06T10:11:33.446316> Receive error 1
2019-06-06T10:11:33.706473> Receive error 1
2019-06-06T10:11:33.966605> Receive error 1
2019-06-06T10:11:34.226810> Receive error 1
2019-06-06T10:11:34.486992> Receive error 1
2019-06-06T10:11:34.747357> Receive error 1
2019-06-06T10:11:34.748058> Low-level gw status ON
2019-06-06T10:11:35.007424> Receive error 1
2019-06-06T10:11:35.267425> Receive error 1
2019-06-06T10:11:35.527520> Receive error 1
2019-06-06T10:11:35.787647> Receive error 1
2019-06-06T10:11:36.047812> Receive error 1
2019-06-06T10:11:36.307884> Receive error 1
2019-06-06T10:11:36.568450> Receive error 1
2019-06-06T10:11:36.828331> Receive error 1
2019-06-06T10:11:37.088374> Receive error 1
2019-06-06T10:11:37.348707> Receive error 1
2019-06-06T10:11:37.608410> Receive error 1
2019-06-06T10:11:37.869660> Receive error 1
2019-06-06T10:11:38.129318> Receive error 1
2019-06-06T10:11:38.389844> Receive error 1
2019-06-06T10:11:38.649421> Receive error 1
2019-06-06T10:11:38.910964> Receive error 1
2019-06-06T10:11:39.170752> Receive error 1
2019-06-06T10:11:39.431134> Receive error 1
2019-06-06T10:11:39.691716> Receive error 1
2019-06-06T10:11:39.952255> Receive error 1
2019-06-06T10:11:40.213026> Receive error 1
2019-06-06T10:11:40.473541> Receive error 1
2019-06-06T10:11:40.734227> Receive error 1
2019-06-06T10:11:40.994365> Receive error 1
2019-06-06T10:11:41.254339> Receive error 1
2019-06-06T10:11:41.514784> Receive error 1
2019-06-06T10:11:41.775312> Receive error 1
2019-06-06T10:11:42.035812> Receive error 1
2019-06-06T10:11:42.303409> Receive error 1
2019-06-06T10:11:42.559446> Receive error 1
2019-06-06T10:11:42.819679> Receive error 1
2019-06-06T10:11:43.079831> Receive error 1
2019-06-06T10:11:43.339549> Receive error 1
2019-06-06T10:11:43.599529> Receive error 1
2019-06-06T10:11:43.859509> Receive error 1
2019-06-06T10:11:44.121229> Receive error 1
2019-06-06T10:11:44.380117> Receive error 1
2019-06-06T10:11:44.640308> Receive error 1
2019-06-06T10:11:44.900553> Receive error 1
2019-06-06T10:11:45.160557> Receive error 1
2019-06-06T10:11:45.420554> Receive error 1
2019-06-06T10:11:45.680727> Receive error 1
2019-06-06T10:11:45.940872> Receive error 1
2019-06-06T10:11:46.201072> Receive error 1
2019-06-06T10:11:46.461233> Receive error 1
2019-06-06T10:11:46.721410> Receive error 1
2019-06-06T10:11:46.981900> Receive error 1
2019-06-06T10:11:47.241833> Receive error 1
2019-06-06T10:11:47.502322> Receive error 1
2019-06-06T10:11:47.763072> Receive error 1
2019-06-06T10:11:48.023182> Receive error 1
2019-06-06T10:11:48.283415> Receive error 1
2019-06-06T10:11:48.543616> Receive error 1
2019-06-06T10:11:48.804616> Receive error 1
2019-06-06T10:11:49.065319> Receive error 1
2019-06-06T10:11:49.325518> Receive error 1
2019-06-06T10:11:49.585703> Receive error 1
2019-06-06T10:11:49.845392> Receive error 1
2019-06-06T10:11:50.106740> Receive error 1
2019-06-06T10:11:50.366989> Receive error 1
2019-06-06T10:11:50.367704> Low-level gw status ON
2019-06-06T10:11:50.627179> Receive error 1
2019-06-06T10:11:50.887184> Receive error 1
2019-06-06T10:11:51.147309> Receive error 1
2019-06-06T10:11:51.407712> Receive error 1
2019-06-06T10:11:51.667813> Receive error 1
2019-06-06T10:11:51.927894> Receive error 1
2019-06-06T10:11:52.188016> Receive error 1
2019-06-06T10:11:52.448084> Receive error 1
2019-06-06T10:11:52.708189> Receive error 1
2019-06-06T10:11:52.968959> Receive error 1
2019-06-06T10:11:53.229703> Receive error 1
2019-06-06T10:11:53.490176> Receive error 1
2019-06-06T10:11:53.750798> Receive error 1
2019-06-06T10:11:54.011234> Receive error 1
2019-06-06T10:11:54.271735> Receive error 1
2019-06-06T10:11:54.531934> Receive error 1
2019-06-06T10:11:54.792473> Receive error 1
2019-06-06T10:11:55.053424> Receive error 1
2019-06-06T10:11:55.315680> Receive error 1
2019-06-06T10:11:55.576200> Receive error 1
2019-06-06T10:11:55.836621> Receive error 1
2019-06-06T10:11:56.097259> Receive error 1
2019-06-06T10:11:56.357721> Receive error 1
2019-06-06T10:11:56.618222> Receive error 1
2019-06-06T10:11:56.878831> Receive error 1
2019-06-06T10:11:57.139497> Receive error 1
2019-06-06T10:11:57.400017> Receive error 1
2019-06-06T10:11:57.660148> Receive error 1
2019-06-06T10:11:57.921107> Receive error 1
2019-06-06T10:11:58.187567> Receive error 1
2019-06-06T10:11:58.448347> Receive error 1
2019-06-06T10:11:58.708824> Receive error 1
2019-06-06T10:11:58.969227> Receive error 1
2019-06-06T10:11:59.229834> Receive error 1
2019-06-06T10:11:59.492034> Receive error 1
2019-06-06T10:11:59.752520> Receive error 1
2019-06-06T10:12:00.012533> Receive error 1
2019-06-06T10:12:00.279230> Receive error 1
2019-06-06T10:12:00.540331> Receive error 1
2019-06-06T10:12:00.800798> Receive error 1
2019-06-06T10:12:01.060979> Receive error 1
2019-06-06T10:12:01.321181> Receive error 1
2019-06-06T10:12:01.581407> Receive error 1
2019-06-06T10:12:01.841656> Receive error 1
2019-06-06T10:12:02.101738> Receive error 1
2019-06-06T10:12:02.361919> Receive error 1
2019-06-06T10:12:02.622178> Receive error 1
2019-06-06T10:12:02.882227> Receive error 1
2019-06-06T10:12:03.142359> Receive error 1
2019-06-06T10:12:03.402525> Receive error 1
2019-06-06T10:12:03.664305> Receive error 1
2019-06-06T10:12:03.924504> Receive error 1
2019-06-06T10:12:04.184703> Receive error 1
2019-06-06T10:12:04.444700> Receive error 1
2019-06-06T10:12:04.704804> Receive error 1
2019-06-06T10:12:04.964984> Receive error 1
2019-06-06T10:12:05.224891> Receive error 1
2019-06-06T10:12:05.490088> Receive error 1
2019-06-06T10:12:05.750010> Receive error 1
2019-06-06T10:12:06.010228> Receive error 1
2019-06-06T10:12:06.011124> Low-level gw status ON
2019-06-06T10:12:06.270266> Receive error 1
2019-06-06T10:12:06.530787> Receive error 1
2019-06-06T10:12:06.790961> Receive error 1
2019-06-06T10:12:07.050980> Receive error 1
2019-06-06T10:12:07.311124> Receive error 1
2019-06-06T10:12:07.571247> Receive error 1
2019-06-06T10:12:07.831342> Receive error 1
2019-06-06T10:12:08.091416> Receive error 1
2019-06-06T10:12:08.351496> Receive error 1
2019-06-06T10:12:08.611650> Receive error 1
2019-06-06T10:12:08.871702> Receive error 1
2019-06-06T10:12:09.131819> Receive error 1
2019-06-06T10:12:09.391859> Receive error 1
2019-06-06T10:12:09.651989> Receive error 1
2019-06-06T10:12:09.912064> Receive error 1
2019-06-06T10:12:10.172283> Receive error 1
2019-06-06T10:12:10.432383> Receive error 1
2019-06-06T10:12:10.692515> Receive error 1
2019-06-06T10:12:10.952589> Receive error 1
2019-06-06T10:12:11.212836> Receive error 1
2019-06-06T10:12:11.472633> Receive error 1
2019-06-06T10:12:11.732626> Receive error 1
2019-06-06T10:12:11.993046> Receive error 1
2019-06-06T10:12:12.253106> Receive error 1
2019-06-06T10:12:12.513384> Receive error 1
2019-06-06T10:12:12.773116> Receive error 1
2019-06-06T10:12:13.033070> Receive error 1
2019-06-06T10:12:13.293522> Receive error 1
2019-06-06T10:12:13.553531> Receive error 1
2019-06-06T10:12:13.813701> Receive error 1
2019-06-06T10:12:14.073782> Receive error 1
2019-06-06T10:12:14.333587> Receive error 1
2019-06-06T10:12:14.593627> Receive error 1
2019-06-06T10:12:14.853590> Receive error 1
2019-06-06T10:12:15.114431> Receive error 1
2019-06-06T10:12:15.374716> Receive error 1
2019-06-06T10:12:15.634308> Receive error 1
2019-06-06T10:12:15.894233> Receive error 1
2019-06-06T10:12:16.154474> Receive error 1
2019-06-06T10:12:16.414844> Receive error 1
2019-06-06T10:12:16.675430> Receive error 1
2019-06-06T10:12:16.935680> Receive error 1
2019-06-06T10:12:17.195951> Receive error 1
2019-06-06T10:12:17.456072> Receive error 1
2019-06-06T10:12:17.716040> Receive error 1
2019-06-06T10:12:17.976041> Receive error 1
2019-06-06T10:12:18.236517> Receive error 1
2019-06-06T10:12:18.496656> Receive error 1
2019-06-06T10:12:18.756800> Receive error 1
2019-06-06T10:12:19.016875> Receive error 1
2019-06-06T10:12:19.277007> Receive error 1
2019-06-06T10:12:19.537099> Receive error 1
2019-06-06T10:12:19.797425> Receive error 1
2019-06-06T10:12:20.057500> Receive error 1
2019-06-06T10:12:20.317680> Receive error 1
2019-06-06T10:12:20.577740> Receive error 1
2019-06-06T10:12:20.837825> Receive error 1
2019-06-06T10:12:21.097411> Receive error 1
2019-06-06T10:12:21.357443> Receive error 1
2019-06-06T10:12:21.617996> Receive error 1
2019-06-06T10:12:21.618840> Low-level gw status ON
2019-06-06T10:12:21.877915> Receive error 1
2019-06-06T10:12:22.138090> Receive error 1
2019-06-06T10:12:22.400861> Receive error 1
2019-06-06T10:12:22.661499> Receive error 1
2019-06-06T10:12:22.921406> Receive error 1
2019-06-06T10:12:23.181308> Receive error 1
2019-06-06T10:12:23.441274> Receive error 1
2019-06-06T10:12:23.701212> Receive error 1
2019-06-06T10:12:23.961569> Receive error 1
2019-06-06T10:12:24.221306> Receive error 1
2019-06-06T10:12:24.481343> Receive error 1
2019-06-06T10:12:24.741703> Receive error 1
2019-06-06T10:12:25.001769> Receive error 1
2019-06-06T10:12:25.261921> Receive error 1
2019-06-06T10:12:25.521990> Receive error 1
2019-06-06T10:12:25.782129> Receive error 1
2019-06-06T10:12:26.042331> Receive error 1
2019-06-06T10:12:26.302411> Receive error 1
2019-06-06T10:12:26.562510> Receive error 1
2019-06-06T10:12:26.824669> Receive error 1
2019-06-06T10:12:27.083226> Receive error 1
2019-06-06T10:12:27.343745> Receive error 1
2019-06-06T10:12:27.604317> Receive error 1
2019-06-06T10:12:27.864509> Receive error 1
2019-06-06T10:12:28.124638> Receive error 1
2019-06-06T10:12:28.395106> Receive error 1
2019-06-06T10:12:28.655205> Receive error 1
2019-06-06T10:12:28.915286> Receive error 1
2019-06-06T10:12:29.175245> Receive error 1
2019-06-06T10:12:29.435200> Receive error 1
2019-06-06T10:12:29.695543> Receive error 1
2019-06-06T10:12:29.955700> Receive error 1
2019-06-06T10:12:30.215672> Receive error 1
2019-06-06T10:12:30.476187> Receive error 1
2019-06-06T10:12:30.736680> Receive error 1
2019-06-06T10:12:30.997165> Receive error 1
2019-06-06T10:12:31.257727> Receive error 1
2019-06-06T10:12:31.518326> Receive error 1
2019-06-06T10:12:31.778948> Receive error 1
2019-06-06T10:12:32.039534> Receive error 1
2019-06-06T10:12:32.300067> Receive error 1
2019-06-06T10:12:32.561610> Receive error 1
2019-06-06T10:12:32.821703> Receive error 1
2019-06-06T10:12:33.081797> Receive error 1
2019-06-06T10:12:33.341952> Receive error 1
2019-06-06T10:12:33.601651> Receive error 1
2019-06-06T10:12:33.861991> Receive error 1
2019-06-06T10:12:34.121971> Receive error 1
2019-06-06T10:12:34.382756> Receive error 1
2019-06-06T10:12:34.642824> Receive error 1
2019-06-06T10:12:34.902898> Receive error 1
2019-06-06T10:12:35.163175> Receive error 1
2019-06-06T10:12:35.423321> Receive error 1
2019-06-06T10:12:35.684006> Receive error 1
2019-06-06T10:12:35.944534> Receive error 1
2019-06-06T10:12:36.205091> Receive error 1
2019-06-06T10:12:36.465567> Receive error 1
2019-06-06T10:12:36.726194> Receive error 1
2019-06-06T10:12:36.986343> Receive error 1
2019-06-06T10:12:37.246535> Receive error 1
2019-06-06T10:12:37.247160> Low-level gw status ON
2019-06-06T10:12:37.506636> Receive error 1
2019-06-06T10:12:37.766713> Receive error 1
2019-06-06T10:12:38.026864> Receive error 1
2019-06-06T10:12:38.286940> Receive error 1
2019-06-06T10:12:38.546999> Receive error 1
2019-06-06T10:12:38.807086> Receive error 1
2019-06-06T10:12:39.067204> Receive error 1
2019-06-06T10:12:39.326912> Receive error 1
2019-06-06T10:12:39.586974> Receive error 1
2019-06-06T10:12:39.847083> Receive error 1
2019-06-06T10:12:40.106970> Receive error 1
2019-06-06T10:12:40.366911> Receive error 1
2019-06-06T10:12:40.627375> Receive error 1
2019-06-06T10:12:40.887477> Receive error 1
2019-06-06T10:12:41.147568> Receive error 1
2019-06-06T10:12:41.407813> Receive error 1
2019-06-06T10:12:41.667833> Receive error 1
2019-06-06T10:12:41.927489> Receive error 1
2019-06-06T10:12:42.190352> Receive error 1
2019-06-06T10:12:42.456022> Receive error 1
2019-06-06T10:12:42.716117> Receive error 1
2019-06-06T10:12:42.976070> Receive error 1
2019-06-06T10:12:43.236334> Receive error 1
2019-06-06T10:12:43.496799> Receive error 1
2019-06-06T10:12:43.756853> Receive error 1
2019-06-06T10:12:44.017530> Receive error 1
2019-06-06T10:12:44.277671> Receive error 1
2019-06-06T10:12:44.537960> Receive error 1
2019-06-06T10:12:44.797589> Receive error 1
2019-06-06T10:12:45.057702> Receive error 1
2019-06-06T10:12:45.317754> Receive error 1
2019-06-06T10:12:45.578242> Receive error 1
2019-06-06T10:12:45.838331> Receive error 1
2019-06-06T10:12:46.098420> Receive error 1
2019-06-06T10:12:46.358642> Receive error 1
2019-06-06T10:12:46.618810> Receive error 1
2019-06-06T10:12:46.879265> Receive error 1
2019-06-06T10:12:47.139253> Receive error 1
2019-06-06T10:12:47.399418> Receive error 1
2019-06-06T10:12:47.659495> Receive error 1
2019-06-06T10:12:47.919589> Receive error 1
2019-06-06T10:12:48.179650> Receive error 1
2019-06-06T10:12:48.439724> Receive error 1
2019-06-06T10:12:48.699858> Receive error 1
2019-06-06T10:12:48.960591> Receive error 1
2019-06-06T10:12:49.220927> Receive error 1
2019-06-06T10:12:49.481037> Receive error 1
2019-06-06T10:12:49.741106> Receive error 1
2019-06-06T10:12:50.001249> Receive error 1
2019-06-06T10:12:50.261651> Receive error 1
2019-06-06T10:12:50.521291> Receive error 1
2019-06-06T10:12:50.781790> Receive error 1
2019-06-06T10:12:51.041482> Receive error 1
2019-06-06T10:12:51.301455> Receive error 1
2019-06-06T10:12:51.561375> Receive error 1
2019-06-06T10:12:51.821372> Receive error 1
2019-06-06T10:12:52.081803> Receive error 1
2019-06-06T10:12:52.342010> Receive error 1
2019-06-06T10:12:52.602005> Receive error 1
2019-06-06T10:12:52.862364> Receive error 1
2019-06-06T10:12:52.862996> Low-level gw status ON
2019-06-06T10:12:53.122365> Receive error 1
2019-06-06T10:12:53.382534> Receive error 1
2019-06-06T10:12:53.642632> Receive error 1
2019-06-06T10:12:53.902193> Receive error 1
2019-06-06T10:12:54.162283> Receive error 1
2019-06-06T10:12:54.422755> Receive error 1
2019-06-06T10:12:54.682850> Receive error 1
2019-06-06T10:12:54.943062> Receive error 1
2019-06-06T10:12:55.202699> Receive error 1
2019-06-06T10:12:55.462747> Receive error 1
2019-06-06T10:12:55.722826> Receive error 1
2019-06-06T10:12:55.983261> Receive error 1
2019-06-06T10:12:56.243669> Receive error 1
2019-06-06T10:12:56.503677> Receive error 1
2019-06-06T10:12:56.763083> Receive error 1
2019-06-06T10:12:57.023525> Receive error 1
2019-06-06T10:12:57.283607> Receive error 1
2019-06-06T10:12:57.544062> Receive error 1
2019-06-06T10:12:57.804399> Receive error 1
2019-06-06T10:12:58.064579> Receive error 1
2019-06-06T10:12:58.324613> Receive error 1
2019-06-06T10:12:58.584514> Receive error 1
2019-06-06T10:12:58.844529> Receive error 1
2019-06-06T10:12:59.105171> Receive error 1
2019-06-06T10:12:59.365745> Receive error 1
2019-06-06T10:12:59.626348> Receive error 1
2019-06-06T10:12:59.886875> Receive error 1
2019-06-06T10:13:00.147340> Receive error 1
2019-06-06T10:13:00.408364> Receive error 1
2019-06-06T10:13:00.926072> Receive error 1
2019-06-06T10:13:01.191664> Receive error 1
2019-06-06T10:13:01.720210> Receive error 1
2019-06-06T10:13:02.242357> Receive error 1
2019-06-06T10:13:12.675686> Receive error 5
2019-06-06T10:13:13.484216> Receive error 5
2019-06-06T10:13:14.534381> Receive error 4
2019-06-06T10:13:24.805204> Receive error 5
2019-06-06T10:13:25.605608> Receive error 5
2019-06-06T10:13:26.125387> Receive error 1
2019-06-06T10:13:26.642886> Receive error 1
2019-06-06T10:13:27.266921> Receive error 4
2019-06-06T10:13:29.205052> Receive error 5
2019-06-06T10:13:29.494725> Receive error 5
2019-06-06T10:13:40.013878> Receive error 5
2019-06-06T10:13:40.286914> Receive error 5
2019-06-06T10:13:40.572553> Receive error 5
2019-06-06T10:13:40.848188> Receive error 1
2019-06-06T10:13:41.959256> Receive error 1
2019-06-06T10:13:42.227760> Receive error 1
2019-06-06T10:13:42.497467> Receive error 1
2019-06-06T10:13:43.014891> Receive error 1
2019-06-06T10:13:43.275830> Receive error 1
2019-06-06T10:13:43.552548> Receive error 4
2019-06-06T10:13:43.815665> Receive error 1
2019-06-06T10:13:44.077549> Receive error 1
2019-06-06T10:13:44.343476> Receive error 1
2019-06-06T10:13:44.605284> Receive error 1
2019-06-06T10:13:44.865797> Receive error 1
2019-06-06T10:13:44.866600> Low-level gw status ON
2019-06-06T10:13:45.126560> Receive error 1
2019-06-06T10:13:45.386716> Receive error 1
2019-06-06T10:13:45.646722> Receive error 1
2019-06-06T10:13:45.906927> Receive error 1
2019-06-06T10:13:46.167043> Receive error 1
2019-06-06T10:13:46.426812> Receive error 1
2019-06-06T10:13:46.686992> Receive error 1
2019-06-06T10:13:46.947104> Receive error 1
2019-06-06T10:13:47.207561> Receive error 1
2019-06-06T10:13:47.472294> Receive error 1
2019-06-06T10:13:47.732763> Receive error 1
2019-06-06T10:13:47.993285> Receive error 1
2019-06-06T10:13:48.253898> Receive error 1
2019-06-06T10:13:48.514484> Receive error 1
2019-06-06T10:13:48.775225> Receive error 1
2019-06-06T10:13:49.035831> Receive error 1
2019-06-06T10:13:49.295105> Receive error 1
2019-06-06T10:13:49.555211> Receive error 1
2019-06-06T10:13:49.815253> Receive error 1
2019-06-06T10:13:50.076859> Receive error 1
2019-06-06T10:13:50.336811> Receive error 1
2019-06-06T10:13:50.597068> Receive error 1
2019-06-06T10:13:50.857271> Receive error 1
2019-06-06T10:13:51.117536> Receive error 1
2019-06-06T10:13:51.377955> Receive error 1
2019-06-06T10:13:51.637902> Receive error 1
2019-06-06T10:13:51.898213> Receive error 1
2019-06-06T10:13:52.161557> Receive error 1
2019-06-06T10:13:52.422166> Receive error 1
2019-06-06T10:13:52.682082> Receive error 1
2019-06-06T10:13:52.942140> Receive error 1
2019-06-06T10:13:53.202038> Receive error 1
2019-06-06T10:13:53.462541> Receive error 1
2019-06-06T10:13:53.722635> Receive error 1
2019-06-06T10:13:53.982775> Receive error 1
2019-06-06T10:13:54.242882> Receive error 1
2019-06-06T10:13:54.503214> Receive error 1
2019-06-06T10:13:54.763388> Receive error 1
2019-06-06T10:13:55.023620> Receive error 1
2019-06-06T10:13:55.285682> Receive error 1
2019-06-06T10:13:55.545481> Receive error 1
2019-06-06T10:13:55.805161> Receive error 1
2019-06-06T10:13:56.065326> Receive error 1
2019-06-06T10:13:56.325457> Receive error 1
2019-06-06T10:13:56.585618> Receive error 1
2019-06-06T10:13:56.845785> Receive error 1
2019-06-06T10:13:57.106007> Receive error 1
2019-06-06T10:13:57.374964> Receive error 1
2019-06-06T10:13:57.638934> Receive error 1
2019-06-06T10:13:57.897719> Receive error 1
2019-06-06T10:13:58.158054> Receive error 1
2019-06-06T10:13:58.418369> Receive error 1
2019-06-06T10:13:58.678320> Receive error 1
2019-06-06T10:13:58.938353> Receive error 1
2019-06-06T10:13:59.199083> Receive error 1
2019-06-06T10:13:59.459348> Receive error 1
2019-06-06T10:13:59.719515> Receive error 1
2019-06-06T10:13:59.979850> Receive error 1
2019-06-06T10:14:00.239846> Receive error 1
2019-06-06T10:14:00.499922> Receive error 1
2019-06-06T10:14:00.500901> Low-level gw status ON
2019-06-06T10:14:00.759901> Receive error 1
2019-06-06T10:14:01.020060> Receive error 1
2019-06-06T10:14:01.280267> Receive error 1
2019-06-06T10:14:01.539958> Receive error 1
2019-06-06T10:14:01.800037> Receive error 1
2019-06-06T10:14:02.060175> Receive error 1
2019-06-06T10:14:02.320292> Receive error 1
2019-06-06T10:14:02.580496> Receive error 1
2019-06-06T10:14:02.840797> Receive error 1
2019-06-06T10:14:03.100834> Receive error 1
2019-06-06T10:14:03.360752> Receive error 1
2019-06-06T10:14:03.620952> Receive error 1
2019-06-06T10:14:03.881483> Receive error 1
2019-06-06T10:14:04.140896> Receive error 1
2019-06-06T10:14:04.401910> Receive error 1
2019-06-06T10:14:04.922730> Receive error 1
2019-06-06T10:14:05.438142> Receive error 1
2019-06-06T10:14:05.703429> Receive error 1
2019-06-06T10:14:06.224674> Receive error 1
2019-06-06T10:14:09.350401> Receive error 1
2019-06-06T10:14:09.616189> Receive error 1
2019-06-06T10:14:09.876757> Receive error 1
2019-06-06T10:14:10.137341> Receive error 1
2019-06-06T10:14:10.398393> Receive error 1
2019-06-06T10:14:10.659766> Receive error 1
2019-06-06T10:14:10.920816> Receive error 1
2019-06-06T10:14:11.180980> Receive error 1
2019-06-06T10:14:11.444658> Receive error 1
2019-06-06T10:14:11.701168> Receive error 1
2019-06-06T10:14:11.961201> Receive error 1
2019-06-06T10:14:12.221261> Receive error 1
2019-06-06T10:14:12.481721> Receive error 1
2019-06-06T10:14:12.744547> Receive error 1
2019-06-06T10:14:13.005428> Receive error 1
2019-06-06T10:14:13.265530> Receive error 1
2019-06-06T10:14:13.525717> Receive error 1
2019-06-06T10:14:13.786277> Receive error 1
2019-06-06T10:14:14.046258> Receive error 1
2019-06-06T10:14:14.306902> Receive error 1
2019-06-06T10:14:14.566923> Receive error 1
2019-06-06T10:14:14.827198> Receive error 1
2019-06-06T10:14:15.089580> Receive error 1
2019-06-06T10:14:15.866126> Receive error 1
2019-06-06T10:14:16.126824> Receive error 1
2019-06-06T10:14:16.388409> Receive error 1
2019-06-06T10:14:16.654954> Receive error 1
2019-06-06T10:14:17.176090> Receive error 1
2019-06-06T10:14:21.089395> Receive error 5
2019-06-06T10:14:21.629539> Receive error 5
2019-06-06T10:14:21.898330> Receive error 1
2019-06-06T10:14:22.713658> Receive error 4
2019-06-06T10:14:22.974639> Receive error 1
2019-06-06T10:14:24.122293> Receive error 1
2019-06-06T10:14:34.649267> Receive error 1
2019-06-06T10:14:35.181503> Receive error 1
2019-06-06T10:14:35.959713> Receive error 1
2019-06-06T10:14:35.960429> Low-level gw status ON
2019-06-06T10:14:45.989980> Receive error 5
2019-06-06T10:14:46.507782> Receive error 1
2019-06-06T10:14:47.029739> Receive error 1
2019-06-06T10:14:47.572897> Receive error 5
2019-06-06T10:14:57.840036> Receive error 5
2019-06-06T10:14:58.101156> Receive error 1
2019-06-06T10:18:46.439482> 2019-06-06 10:18:46.438678
2019-06-06T10:18:46.439939> post status: gw ON
2019-06-06T10:18:46.440244> post status: executing periodic tasks
2019-06-06T10:18:47.515987> no timezone support, time will be expressed only in local time
2019-06-06T10:18:47.516460> post status: start running
2019-06-06T10:18:48.649504> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:18:48.650118> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:18:48.650499> get_gps.py: invalid serial port
2019-06-06T10:18:48.826934> post status: dynamic GPS is requested
2019-06-06T10:18:48.827397> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:18:48.827911> post status get GPS: no GPS coordinates
2019-06-06T10:18:48.828364> post status: show current GPS position
2019-06-06T10:18:48.828847> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:18:48.829514> post status: exiting
2019-06-06T10:28:49.110269> 2019-06-06 10:28:49.109453
2019-06-06T10:28:49.110723> post status: gw ON
2019-06-06T10:28:49.111038> post status: executing periodic tasks
2019-06-06T10:28:50.147489> no timezone support, time will be expressed only in local time
2019-06-06T10:28:50.147884> post status: start running
2019-06-06T10:28:51.227107> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:28:51.227479> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:28:51.227750> get_gps.py: invalid serial port
2019-06-06T10:28:51.379199> post status: dynamic GPS is requested
2019-06-06T10:28:51.379688> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:28:51.379991> post status get GPS: no GPS coordinates
2019-06-06T10:28:51.380280> post status: show current GPS position
2019-06-06T10:28:51.380554> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:28:51.380831> post status: exiting
2019-06-06T10:38:51.611804> 2019-06-06 10:38:51.610731
2019-06-06T10:38:51.612498> post status: gw ON
2019-06-06T10:38:51.613146> post status: executing periodic tasks
2019-06-06T10:38:52.772121> no timezone support, time will be expressed only in local time
2019-06-06T10:38:52.772536> post status: start running
2019-06-06T10:38:53.871213> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:38:53.871729> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:38:53.872119> get_gps.py: invalid serial port
2019-06-06T10:38:54.013885> post status: dynamic GPS is requested
2019-06-06T10:38:54.014272> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:38:54.014610> post status get GPS: no GPS coordinates
2019-06-06T10:38:54.014909> post status: show current GPS position
2019-06-06T10:38:54.015201> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:38:54.015492> post status: exiting
2019-06-06T10:48:54.271147> 2019-06-06 10:48:54.270312
2019-06-06T10:48:54.271586> post status: gw ON
2019-06-06T10:48:54.271893> post status: executing periodic tasks
2019-06-06T10:48:55.383808> no timezone support, time will be expressed only in local time
2019-06-06T10:48:55.384270> post status: start running
2019-06-06T10:48:56.595258> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:48:56.595802> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:48:56.596202> get_gps.py: invalid serial port
2019-06-06T10:48:56.737457> post status: dynamic GPS is requested
2019-06-06T10:48:56.737852> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:48:56.738192> post status get GPS: no GPS coordinates
2019-06-06T10:48:56.738583> post status: show current GPS position
2019-06-06T10:48:56.738967> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:48:56.739283> post status: exiting
2019-06-06T10:58:56.999399> 2019-06-06 10:58:56.998584
2019-06-06T10:58:56.999895> post status: gw ON
2019-06-06T10:58:57.000221> post status: executing periodic tasks
2019-06-06T10:58:58.101027> no timezone support, time will be expressed only in local time
2019-06-06T10:58:58.101511> post status: start running
2019-06-06T10:58:59.302543> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T10:58:59.303603> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T10:58:59.304292> get_gps.py: invalid serial port
2019-06-06T10:58:59.487733> post status: dynamic GPS is requested
2019-06-06T10:58:59.488248> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T10:58:59.488887> post status get GPS: no GPS coordinates
2019-06-06T10:58:59.489363> post status: show current GPS position
2019-06-06T10:58:59.489805> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T10:58:59.490246> post status: exiting
2019-06-06T11:08:59.749454> 2019-06-06 11:08:59.748629
2019-06-06T11:08:59.749910> post status: gw ON
2019-06-06T11:08:59.750216> post status: executing periodic tasks
2019-06-06T11:09:00.880356> no timezone support, time will be expressed only in local time
2019-06-06T11:09:00.880825> post status: start running
2019-06-06T11:09:02.066485> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:09:02.066927> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:09:02.067199> get_gps.py: invalid serial port
2019-06-06T11:09:02.209135> post status: dynamic GPS is requested
2019-06-06T11:09:02.209547> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:09:02.209845> post status get GPS: no GPS coordinates
2019-06-06T11:09:02.210140> post status: show current GPS position
2019-06-06T11:09:02.210406> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:09:02.210697> post status: exiting
2019-06-06T11:19:02.449601> 2019-06-06 11:19:02.448659
2019-06-06T11:19:02.450255> post status: gw ON
2019-06-06T11:19:02.450792> post status: executing periodic tasks
2019-06-06T11:19:03.484694> no timezone support, time will be expressed only in local time
2019-06-06T11:19:03.485059> post status: start running
2019-06-06T11:19:04.537455> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:19:04.538005> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:19:04.538345> get_gps.py: invalid serial port
2019-06-06T11:19:04.687746> post status: dynamic GPS is requested
2019-06-06T11:19:04.689897> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:19:04.696503> post status get GPS: no GPS coordinates
2019-06-06T11:19:04.697101> post status: show current GPS position
2019-06-06T11:19:04.697747> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:19:04.698406> post status: exiting
2019-06-06T11:29:04.960864> 2019-06-06 11:29:04.958587
2019-06-06T11:29:04.961325> post status: gw ON
2019-06-06T11:29:04.961644> post status: executing periodic tasks
2019-06-06T11:29:06.060731> no timezone support, time will be expressed only in local time
2019-06-06T11:29:06.061211> post status: start running
2019-06-06T11:29:07.141514> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:29:07.142141> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:29:07.142724> get_gps.py: invalid serial port
2019-06-06T11:29:07.283761> post status: dynamic GPS is requested
2019-06-06T11:29:07.284822> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:29:07.286389> post status get GPS: no GPS coordinates
2019-06-06T11:29:07.287599> post status: show current GPS position
2019-06-06T11:29:07.288941> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:29:07.289857> post status: exiting
2019-06-06T11:39:07.521043> 2019-06-06 11:39:07.518625
2019-06-06T11:39:07.521605> post status: gw ON
2019-06-06T11:39:07.522076> post status: executing periodic tasks
2019-06-06T11:39:08.631220> no timezone support, time will be expressed only in local time
2019-06-06T11:39:08.631727> post status: start running
2019-06-06T11:39:09.716557> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:39:09.716961> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:39:09.717311> get_gps.py: invalid serial port
2019-06-06T11:39:09.862487> post status: dynamic GPS is requested
2019-06-06T11:39:09.862904> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:39:09.863453> post status get GPS: no GPS coordinates
2019-06-06T11:39:09.863808> post status: show current GPS position
2019-06-06T11:39:09.864109> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:39:09.864403> post status: exiting
2019-06-06T11:44:21.714854> no timezone support, time will be expressed only in local time
2019-06-06T11:44:21.717918> post_processing_gw.py found an alert_conf section
2019-06-06T11:44:21.718335> Starting thread to perform periodic gw status/tasks
2019-06-06T11:44:21.718669> 2019-06-06 11:44:21.713562
2019-06-06T11:44:21.718938> post status: gw ON
2019-06-06T11:44:21.719206> post status: executing periodic tasks
2019-06-06T11:44:22.715559> 
2019-06-06T11:44:22.715946> Current working directory: /app
2019-06-06T11:44:22.716590> SX1276 detected, starting.
2019-06-06T11:44:22.717600> SX1276 LF/HF calibration
2019-06-06T11:44:22.717968> ...
2019-06-06T11:44:22.718271> **********Power ON: state 0
2019-06-06T11:44:22.718593> Default sync word: 0x12
2019-06-06T11:44:22.718935> LoRa mode 2
2019-06-06T11:44:22.719211> Setting mode: state 0
2019-06-06T11:44:22.719483> Frequency 865.200000: state 0
2019-06-06T11:44:22.719765> Use PA_BOOST amplifier line
2019-06-06T11:44:22.720037> Set LoRa power dBm to 14
2019-06-06T11:44:22.720309> Power: state 0
2019-06-06T11:44:22.720579> Get Preamble Length: state 0
2019-06-06T11:44:22.720853> Preamble Length: 8
2019-06-06T11:44:22.721126> LoRa addr 1: state 0
2019-06-06T11:44:22.721398> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T11:44:22.721682> Low-level gw status ON
2019-06-06T11:44:22.920559> no timezone support, time will be expressed only in local time
2019-06-06T11:44:22.921009> post status: start running
2019-06-06T11:44:24.019032> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:44:24.019549> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:44:24.019940> get_gps.py: invalid serial port
2019-06-06T11:44:24.160063> post status: dynamic GPS is requested
2019-06-06T11:44:24.160521> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:44:24.161007> post status get GPS: no GPS coordinates
2019-06-06T11:44:24.161436> post status: show current GPS position
2019-06-06T11:44:24.161914> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:44:24.162792> post status: exiting
2019-06-06T11:52:03.934682> no timezone support, time will be expressed only in local time
2019-06-06T11:52:03.935584> post_processing_gw.py found an alert_conf section
2019-06-06T11:52:03.936632> Starting thread to perform periodic gw status/tasks
2019-06-06T11:52:03.937688> 2019-06-06 11:52:03.934803
2019-06-06T11:52:03.938813> post status: gw ON
2019-06-06T11:52:03.939850> post status: executing periodic tasks
2019-06-06T11:52:04.936782> 
2019-06-06T11:52:04.937937> Current working directory: /app
2019-06-06T11:52:04.939245> SX1276 detected, starting.
2019-06-06T11:52:04.940589> SX1276 LF/HF calibration
2019-06-06T11:52:04.942181> ...
2019-06-06T11:52:04.943389> **********Power ON: state 0
2019-06-06T11:52:04.944494> Default sync word: 0x12
2019-06-06T11:52:04.945789> LoRa mode 2
2019-06-06T11:52:04.947015> Setting mode: state 0
2019-06-06T11:52:04.948027> Frequency 865.200000: state 0
2019-06-06T11:52:04.949382> Use PA_BOOST amplifier line
2019-06-06T11:52:04.950724> Set LoRa power dBm to 14
2019-06-06T11:52:04.952032> Power: state 0
2019-06-06T11:52:04.953315> Get Preamble Length: state 0
2019-06-06T11:52:04.954491> Preamble Length: 8
2019-06-06T11:52:04.955745> LoRa addr 1: state 0
2019-06-06T11:52:04.956982> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T11:52:04.958385> Low-level gw status ON
2019-06-06T11:52:05.053970> no timezone support, time will be expressed only in local time
2019-06-06T11:52:05.054841> post status: start running
2019-06-06T11:52:06.152745> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T11:52:06.154042> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T11:52:06.155685> get_gps.py: invalid serial port
2019-06-06T11:52:06.299787> post status: dynamic GPS is requested
2019-06-06T11:52:06.300808> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T11:52:06.301979> post status get GPS: no GPS coordinates
2019-06-06T11:52:06.303268> post status: show current GPS position
2019-06-06T11:52:06.304334> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T11:52:06.305388> post status: exiting
2019-06-06T12:41:46.087596> no timezone support, time will be expressed only in local time
2019-06-06T12:41:46.088172> post_processing_gw.py found an alert_conf section
2019-06-06T12:41:46.089053> Starting thread to perform periodic gw status/tasks
2019-06-06T12:41:46.090683> 2019-06-06 12:41:46.089867
2019-06-06T12:41:46.091381> post status: gw ON
2019-06-06T12:41:46.091855> post status: executing periodic tasks
2019-06-06T12:41:47.092237> 
2019-06-06T12:41:47.092832> Current working directory: /app
2019-06-06T12:41:47.094478> SX1276 detected, starting.
2019-06-06T12:41:47.100875> SX1276 LF/HF calibration
2019-06-06T12:41:47.101550> ...
2019-06-06T12:41:47.102010> **********Power ON: state 0
2019-06-06T12:41:47.102515> Default sync word: 0x12
2019-06-06T12:41:47.102861> LoRa mode 2
2019-06-06T12:41:47.103178> Setting mode: state 0
2019-06-06T12:41:47.103498> Frequency 865.200000: state 0
2019-06-06T12:41:47.103809> Use PA_BOOST amplifier line
2019-06-06T12:41:47.104131> Set LoRa power dBm to 14
2019-06-06T12:41:47.104441> Power: state 0
2019-06-06T12:41:47.104737> Get Preamble Length: state 0
2019-06-06T12:41:47.105037> Preamble Length: 8
2019-06-06T12:41:47.105444> LoRa addr 1: state 0
2019-06-06T12:41:47.106031> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T12:41:47.106581> Low-level gw status ON
2019-06-06T12:41:47.166691> no timezone support, time will be expressed only in local time
2019-06-06T12:41:47.167299> post status: start running
2019-06-06T12:41:48.375991> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T12:41:48.376605> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T12:41:48.377080> get_gps.py: invalid serial port
2019-06-06T12:41:48.521351> post status: dynamic GPS is requested
2019-06-06T12:41:48.523357> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T12:41:48.524397> post status get GPS: no GPS coordinates
2019-06-06T12:41:48.525331> post status: show current GPS position
2019-06-06T12:41:48.526308> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T12:41:48.527379> post status: exiting
2019-06-06T12:44:39.816548> no timezone support, time will be expressed only in local time
2019-06-06T12:44:39.817362> post_processing_gw.py found an alert_conf section
2019-06-06T12:44:39.819741> Starting thread to perform periodic gw status/tasks
2019-06-06T12:44:39.820954> 2019-06-06 12:44:39.817476
2019-06-06T12:44:39.822231> post status: gw ON
2019-06-06T12:44:39.823646> post status: executing periodic tasks
2019-06-06T12:44:40.828191> 
2019-06-06T12:44:40.828800> Current working directory: /app
2019-06-06T12:44:40.830474> SX1276 detected, starting.
2019-06-06T12:44:40.831763> SX1276 LF/HF calibration
2019-06-06T12:44:40.833542> ...
2019-06-06T12:44:40.834937> **********Power ON: state 0
2019-06-06T12:44:40.836629> Default sync word: 0x12
2019-06-06T12:44:40.838272> LoRa mode 1
2019-06-06T12:44:40.839712> Setting mode: state 0
2019-06-06T12:44:40.843046> Frequency 865.200000: state 0
2019-06-06T12:44:40.845058> Use PA_BOOST amplifier line
2019-06-06T12:44:40.845830> Set LoRa power dBm to 14
2019-06-06T12:44:40.848025> Power: state 0
2019-06-06T12:44:40.851208> Get Preamble Length: state 0
2019-06-06T12:44:40.852329> Preamble Length: 8
2019-06-06T12:44:40.853122> LoRa addr 1: state 0
2019-06-06T12:44:40.853722> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T12:44:40.854306> Low-level gw status ON
2019-06-06T12:44:41.041814> no timezone support, time will be expressed only in local time
2019-06-06T12:44:41.043891> post status: start running
2019-06-06T12:44:42.228313> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T12:44:42.229234> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T12:44:42.229984> get_gps.py: invalid serial port
2019-06-06T12:44:42.367768> post status: dynamic GPS is requested
2019-06-06T12:44:42.368333> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T12:44:42.368951> post status get GPS: no GPS coordinates
2019-06-06T12:44:42.369409> post status: show current GPS position
2019-06-06T12:44:42.369809> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T12:44:42.371425> post status: exiting
2019-06-06T12:46:30.150457> no timezone support, time will be expressed only in local time
2019-06-06T12:46:30.151368> post_processing_gw.py found an alert_conf section
2019-06-06T12:46:30.152573> Starting thread to perform periodic gw status/tasks
2019-06-06T12:46:30.153840> 2019-06-06 12:46:30.150788
2019-06-06T12:46:30.154926> post status: gw ON
2019-06-06T12:46:30.155970> post status: executing periodic tasks
2019-06-06T12:46:31.153007> 
2019-06-06T12:46:31.153547> Current working directory: /app
2019-06-06T12:46:31.154084> SX1276 detected, starting.
2019-06-06T12:46:31.155786> SX1276 LF/HF calibration
2019-06-06T12:46:31.156316> ...
2019-06-06T12:46:31.156847> **********Power ON: state 0
2019-06-06T12:46:31.157274> Default sync word: 0x12
2019-06-06T12:46:31.157627> LoRa mode 1
2019-06-06T12:46:31.157980> Setting mode: state 0
2019-06-06T12:46:31.158325> Frequency 865.200000: state 0
2019-06-06T12:46:31.158644> Use PA_BOOST amplifier line
2019-06-06T12:46:31.158968> Set LoRa power dBm to 14
2019-06-06T12:46:31.159308> Power: state 0
2019-06-06T12:46:31.159644> Get Preamble Length: state 0
2019-06-06T12:46:31.159997> Preamble Length: 8
2019-06-06T12:46:31.160335> LoRa addr 1: state 0
2019-06-06T12:46:31.160668> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T12:46:31.160990> Low-level gw status ON
2019-06-06T12:46:31.247117> no timezone support, time will be expressed only in local time
2019-06-06T12:46:31.247637> post status: start running
2019-06-06T12:46:32.350957> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T12:46:32.351605> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T12:46:32.352494> get_gps.py: invalid serial port
2019-06-06T12:46:32.496087> post status: dynamic GPS is requested
2019-06-06T12:46:32.496714> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T12:46:32.497382> post status get GPS: no GPS coordinates
2019-06-06T12:46:32.498193> post status: show current GPS position
2019-06-06T12:46:32.499032> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T12:46:32.499940> post status: exiting
2019-06-06T12:48:14.671092> --- rxlora. dst=1 type=0x12 src=8 seq=203 len=14 SNR=5 RSSIpkt=-45 BW=125 CR=4/5 SF=12
2019-06-06T12:48:14.671634> 2019-06-06T12:48:14.670686
2019-06-06T12:48:14.673918> rcv ctrl pkt info (^p): 1,18,8,203,14,5,-45
2019-06-06T12:48:14.674744> splitted in: [1, 18, 8, 203, 14, 5, -45]
2019-06-06T12:48:14.676278> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=203 len=14 SNR=5 RSSI=-45)
2019-06-06T12:48:14.679100> rcv ctrl radio info (^r): 125,5,12
2019-06-06T12:48:14.680672> splitted in: [125, 5, 12]
2019-06-06T12:48:14.682100> (BW=125 CR=5 SF=12)
2019-06-06T12:48:14.683450> rcv timestamp (^t): 2019-06-06T12:48:14.667
2019-06-06T12:48:14.684729> 
2019-06-06T12:48:14.686069> Got first framing byte
2019-06-06T12:48:14.687036> --> got LoRa data prefix
2019-06-06T12:48:14.688308> --> DATA with_appkey: read app key sequence
2019-06-06T12:48:14.689652> app key is 0x05 0x06 0x07 0x08
2019-06-06T12:48:14.690746> app key disabled
2019-06-06T12:48:14.691955> valid app key: accept data
2019-06-06T12:48:14.693049> uploading with python /app/data_acq/edgeCall.py
2019-06-06T12:48:14.694333> python /app/data_acq/edgeCall.py "TC/92.81" "1,18,8,203,10,5,-45" "125,5,12" "2019-06-06T12:48:14.667" "B827EB4E30A8"
2019-06-06T12:48:17.851357> CloudEdge: uploading
2019-06-06T12:48:17.852178> CloudEdge: run under guest identity, all data is public
2019-06-06T12:48:17.854304> CloudEdge: check if entity exits
2019-06-06T12:48:17.855944> CloudEdge: will issue requests with
2019-06-06T12:48:17.857275> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-06-06T12:48:17.858707> CloudEdge: returned msg from server is 200
2019-06-06T12:48:17.859975> CloudEdge: entity exists
2019-06-06T12:48:17.861373> CloudEdge: check if measurement exits
2019-06-06T12:48:17.872882> CloudEdge: will issue requests with
2019-06-06T12:48:17.874357> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-06-06T12:48:17.875078> CloudEdge: returned msg from server is 200
2019-06-06T12:48:17.875523> CloudEdge: measurement exists
2019-06-06T12:48:17.875876> CloudEdge: will issue requests with
2019-06-06T12:48:17.876213> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-06-06T12:48:17.876538> data: {"value":92.81,"timestamp":"2019-06-06T12:48:14.667"}
2019-06-06T12:48:17.876860> CloudEdge: returned msg from server is 200
2019-06-06T12:48:17.877187> CloudEdge: upload success
2019-06-06T12:48:18.028968> --> cloud end
2019-06-06T12:48:18.029433> 
2019-06-06T12:49:16.816282> --- rxlora. dst=1 type=0x12 src=8 seq=204 len=14 SNR=6 RSSIpkt=-47 BW=125 CR=4/5 SF=12
2019-06-06T12:49:16.818132> 2019-06-06T12:49:16.815733
2019-06-06T12:49:16.820384> rcv ctrl pkt info (^p): 1,18,8,204,14,6,-47
2019-06-06T12:49:16.822312> splitted in: [1, 18, 8, 204, 14, 6, -47]
2019-06-06T12:49:16.824346> (dst=1 type=0x12(DATA WAPPKEY) src=8 seq=204 len=14 SNR=6 RSSI=-47)
2019-06-06T12:49:16.826007> rcv ctrl radio info (^r): 125,5,12
2019-06-06T12:49:16.827583> splitted in: [125, 5, 12]
2019-06-06T12:49:16.829347> (BW=125 CR=5 SF=12)
2019-06-06T12:49:16.830369> rcv timestamp (^t): 2019-06-06T12:49:16.811
2019-06-06T12:49:16.831262> 
2019-06-06T12:49:16.832581> Got first framing byte
2019-06-06T12:49:16.833470> --> got LoRa data prefix
2019-06-06T12:49:16.834459> --> DATA with_appkey: read app key sequence
2019-06-06T12:49:16.835297> app key is 0x05 0x06 0x07 0x08
2019-06-06T12:49:16.837702> app key disabled
2019-06-06T12:49:16.838485> valid app key: accept data
2019-06-06T12:49:16.839214> uploading with python /app/data_acq/edgeCall.py
2019-06-06T12:49:16.839895> python /app/data_acq/edgeCall.py "TC/92.81" "1,18,8,204,10,6,-47" "125,5,12" "2019-06-06T12:49:16.811" "B827EB4E30A8"
2019-06-06T12:49:19.909430> CloudEdge: uploading
2019-06-06T12:49:19.910675> CloudEdge: run under guest identity, all data is public
2019-06-06T12:49:19.912475> CloudEdge: check if entity exits
2019-06-06T12:49:19.914192> CloudEdge: will issue requests with
2019-06-06T12:49:19.915801> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac
2019-06-06T12:49:19.917337> CloudEdge: returned msg from server is 200
2019-06-06T12:49:19.918603> CloudEdge: entity exists
2019-06-06T12:49:19.920008> CloudEdge: check if measurement exits
2019-06-06T12:49:19.921259> CloudEdge: will issue requests with
2019-06-06T12:49:19.922862> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-06-06T12:49:19.924169> CloudEdge: returned msg from server is 200
2019-06-06T12:49:19.925612> CloudEdge: measurement exists
2019-06-06T12:49:19.926863> CloudEdge: will issue requests with
2019-06-06T12:49:19.928318> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor8_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-06-06T12:49:19.929605> data: {"value":92.81,"timestamp":"2019-06-06T12:49:16.811"}
2019-06-06T12:49:19.931109> CloudEdge: returned msg from server is 200
2019-06-06T12:49:19.931957> CloudEdge: upload success
2019-06-06T12:49:20.094118> --> cloud end
2019-06-06T12:49:20.095350> 
2019-06-06T13:16:07.005220> no timezone support, time will be expressed only in local time
2019-06-06T13:16:07.005728> post_processing_gw.py found an alert_conf section
2019-06-06T13:16:07.006565> Starting thread to perform periodic gw status/tasks
2019-06-06T13:16:07.008658> 2019-06-06 13:16:07.007475
2019-06-06T13:16:07.009418> post status: gw ON
2019-06-06T13:16:07.010187> post status: executing periodic tasks
2019-06-06T13:16:08.009988> 
2019-06-06T13:16:08.010639> Current working directory: /app
2019-06-06T13:16:08.012360> SX1276 detected, starting.
2019-06-06T13:16:08.013409> SX1276 LF/HF calibration
2019-06-06T13:16:08.014553> ...
2019-06-06T13:16:08.015692> **********Power ON: state 0
2019-06-06T13:16:08.016877> Default sync word: 0x12
2019-06-06T13:16:08.017901> LoRa mode 1
2019-06-06T13:16:08.019011> Setting mode: state 0
2019-06-06T13:16:08.019973> Frequency 865.200000: state 0
2019-06-06T13:16:08.020792> Use PA_BOOST amplifier line
2019-06-06T13:16:08.021692> Set LoRa power dBm to 14
2019-06-06T13:16:08.022658> Power: state 0
2019-06-06T13:16:08.023491> Get Preamble Length: state 0
2019-06-06T13:16:08.024317> Preamble Length: 8
2019-06-06T13:16:08.025117> LoRa addr 1: state 0
2019-06-06T13:16:08.025903> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-06T13:16:08.026706> Low-level gw status ON
2019-06-06T13:16:08.125403> no timezone support, time will be expressed only in local time
2019-06-06T13:16:08.126208> post status: start running
2019-06-06T13:16:09.204924> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-06T13:16:09.205991> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-06T13:16:09.207546> get_gps.py: invalid serial port
2019-06-06T13:16:09.349550> post status: dynamic GPS is requested
2019-06-06T13:16:09.351188> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-06T13:16:09.352661> post status get GPS: no GPS coordinates
2019-06-06T13:16:09.354325> post status: show current GPS position
2019-06-06T13:16:09.355694> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-06T13:16:09.357844> post status: exiting
2019-06-06T13:16:31.674725> --- rxlora. dst=1 type=0x10 src=118 seq=1 len=19 SNR=7 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-06-06T13:16:31.675483> 2019-06-06T13:16:31.674305
2019-06-06T13:16:31.676325> rcv ctrl pkt info (^p): 1,16,118,1,19,7,-40
2019-06-06T13:16:31.677197> splitted in: [1, 16, 118, 1, 19, 7, -40]
2019-06-06T13:16:31.678217> (dst=1 type=0x10(DATA) src=118 seq=1 len=19 SNR=7 RSSI=-40)
2019-06-06T13:16:31.679306> rcv ctrl radio info (^r): 125,5,12
2019-06-06T13:16:31.680375> splitted in: [125, 5, 12]
2019-06-06T13:16:31.681361> (BW=125 CR=5 SF=12)
2019-06-06T13:16:31.682367> rcv timestamp (^t): 2019-06-06T13:16:31.670
2019-06-06T13:16:31.683293> 
2019-06-06T13:16:31.684090> Got first framing byte
2019-06-06T13:16:31.684790> --> got LoRa data prefix
2019-06-06T13:16:31.685617> valid app key: accept data
2019-06-06T13:16:31.686204> uploading with python /app/data_acq/edgeCall.py
2019-06-06T13:16:31.686859> python /app/data_acq/edgeCall.py "TC/26.00/HU/26.00" "1,16,118,1,19,7,-40" "125,5,12" "2019-06-06T13:16:31.670" "B827EB4E30A8"
2019-06-06T13:16:34.847003> CloudEdge: uploading
2019-06-06T13:16:34.847742> CloudEdge: run under guest identity, all data is public
2019-06-06T13:16:34.848470> CloudEdge: check if entity exits
2019-06-06T13:16:34.849292> CloudEdge: will issue requests with
2019-06-06T13:16:34.850097> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor118_aed2992a838b576a8f0097979be492ac
2019-06-06T13:16:34.850781> CloudEdge: returned msg from server is 200
2019-06-06T13:16:34.851529> CloudEdge: entity exists
2019-06-06T13:16:34.852402> CloudEdge: check if measurement exits
2019-06-06T13:16:34.853201> CloudEdge: will issue requests with
2019-06-06T13:16:34.853912> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor118_aed2992a838b576a8f0097979be492ac/measurements/TC
2019-06-06T13:16:34.854627> CloudEdge: returned msg from server is 200
2019-06-06T13:16:34.855335> CloudEdge: measurement exists
2019-06-06T13:16:34.856012> CloudEdge: will issue requests with
2019-06-06T13:16:34.856813> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor118_aed2992a838b576a8f0097979be492ac/measurements/TC/values
2019-06-06T13:16:34.857625> data: {"value":26.00,"timestamp":"2019-06-06T13:16:31.670"}
2019-06-06T13:16:34.858358> CloudEdge: returned msg from server is 200
2019-06-06T13:16:34.859126> CloudEdge: upload success
2019-06-06T13:16:34.859863> CloudEdge: check if measurement exits
2019-06-06T13:16:34.861032> CloudEdge: will issue requests with
2019-06-06T13:16:34.861804> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor118_aed2992a838b576a8f0097979be492ac/measurements/HU
2019-06-06T13:16:34.863020> CloudEdge: returned msg from server is 200
2019-06-06T13:16:34.863948> CloudEdge: measurement exists
2019-06-06T13:16:34.864849> CloudEdge: will issue requests with
2019-06-06T13:16:34.865772> url: http://api.waziup.io/api/v1/sensors/my_domain_Sensor118_aed2992a838b576a8f0097979be492ac/measurements/HU/values
2019-06-06T13:16:34.866680> data: {"value":26.00,"timestamp":"2019-06-06T13:16:31.670"}
2019-06-06T13:16:34.867573> CloudEdge: returned msg from server is 200
2019-06-06T13:16:34.868443> CloudEdge: upload success
2019-06-06T13:16:35.033452> --> cloud end
2019-06-06T13:16:35.034034> 
2019-06-07T07:37:05.209794> no timezone support, time will be expressed only in local time
2019-06-07T07:37:05.210517> post_processing_gw.py found an alert_conf section
2019-06-07T07:37:05.211032> Starting thread to perform periodic gw status/tasks
2019-06-07T07:37:05.211586> 2019-06-07 07:37:05.209920
2019-06-07T07:37:05.212126> post status: gw ON
2019-06-07T07:37:05.212643> post status: executing periodic tasks
2019-06-07T07:37:06.211359> 
2019-06-07T07:37:06.211872> Current working directory: /app
2019-06-07T07:37:06.212396> SX1276 detected, starting.
2019-06-07T07:37:06.214191> SX1276 LF/HF calibration
2019-06-07T07:37:06.216194> ...
2019-06-07T07:37:06.218911> **********Power ON: state 0
2019-06-07T07:37:06.221298> Default sync word: 0x12
2019-06-07T07:37:06.223058> LoRa mode 1
2019-06-07T07:37:06.224779> Setting mode: state 0
2019-06-07T07:37:06.226506> Frequency 865.200000: state 0
2019-06-07T07:37:06.228351> Use PA_BOOST amplifier line
2019-06-07T07:37:06.230072> Set LoRa power dBm to 14
2019-06-07T07:37:06.231822> Power: state 0
2019-06-07T07:37:06.233652> Get Preamble Length: state 0
2019-06-07T07:37:06.235342> Preamble Length: 8
2019-06-07T07:37:06.237569> LoRa addr 1: state 0
2019-06-07T07:37:06.239352> SX1272/76 configured as LR-BS. Waiting RF input for transparent RF-serial bridge
2019-06-07T07:37:06.241201> Low-level gw status ON
2019-06-07T07:37:06.325166> no timezone support, time will be expressed only in local time
2019-06-07T07:37:06.326129> post status: start running
2019-06-07T07:37:07.485963> get_gps.py: removing /app/logs/gateway_gps.txt file
2019-06-07T07:37:07.486601> get_gps.py: no /app/logs/gateway_gps.txt file
2019-06-07T07:37:07.487290> get_gps.py: invalid serial port
2019-06-07T07:37:07.633028> post status: dynamic GPS is requested
2019-06-07T07:37:07.635656> post status get GPS: use sensors_in_raspi/get_gps.py to get GPS position
2019-06-07T07:37:07.637861> post status get GPS: no GPS coordinates
2019-06-07T07:37:07.639469> post status: show current GPS position
2019-06-07T07:37:07.640260> post status show GPS: current GPS coordinate: gw lat 43.51 long -1.36
2019-06-07T07:37:07.641226> post status: exiting
2019-06-07T07:37:19.762437> --- rxlora. dst=1 type=0x10 src=118 seq=2 len=19 SNR=8 RSSIpkt=-40 BW=125 CR=4/5 SF=12
2019-06-07T07:37:19.763402> 2019-06-07T07:37:19.761999
2019-06-07T07:37:19.764559> rcv ctrl pkt info (^p): 1,16,118,2,19,8,-40
2019-06-07T07:37:19.765638> splitted in: [1, 16, 118, 2, 19, 8, -40]
2019-06-07T07:37:19.767235> (dst=1 type=0x10(DATA) src=118 seq=2 len=19 SNR=8 RSSI=-40)
2019-06-07T07:37:19.768474> rcv ctrl radio info (^r): 125,5,12
2019-06-07T07:37:19.769242> splitted in: [125, 5, 12]
2019-06-07T07:37:19.770448> (BW=125 CR=5 SF=12)
2019-06-07T07:37:19.771574> rcv timestamp (^t): 2019-06-07T07:37:19.757
2019-06-07T07:37:19.772886> 
2019-06-07T07:37:19.774210> Got first framing byte
2019-06-07T07:37:19.775493> --> got LoRa data prefix
2019-06-07T07:37:19.776955> valid app key: accept data
2019-06-07T07:37:19.778324> uploading with python /app/data_acq/edgeCall.py
2019-06-07T07:37:19.779730> python /app/data_acq/edgeCall.py "TC/24.00/HU/24.00" "1,16,118,2,19,8,-40" "125,5,12" "2019-06-07T07:37:19.757" "B827EB4E30A8"
2019-06-07T07:37:22.947146> Received data (from 118):  {'TC': '24.00', 'HU': '24.00'}
2019-06-07T07:37:22.948673> New sensor created with ID:  TC
2019-06-07T07:37:22.950225> Edge: upload success TC 24.00
2019-06-07T07:37:22.951467> New sensor created with ID:  HU
2019-06-07T07:37:22.952843> Edge: upload success HU 24.00
2019-06-07T07:37:23.114096> --> cloud end
2019-06-07T07:37:23.115181> 
2019-06-07T07:38:21.412180> --- rxlora. dst=1 type=0x10 src=118 seq=3 len=19 SNR=7 RSSIpkt=-53 BW=125 CR=4/5 SF=12
2019-06-07T07:38:21.413683> 2019-06-07T07:38:21.411769
2019-06-07T07:38:21.415292> rcv ctrl pkt info (^p): 1,16,118,3,19,7,-53
2019-06-07T07:38:21.416946> splitted in: [1, 16, 118, 3, 19, 7, -53]
2019-06-07T07:38:21.418356> (dst=1 type=0x10(DATA) src=118 seq=3 len=19 SNR=7 RSSI=-53)
2019-06-07T07:38:21.419555> rcv ctrl radio info (^r): 125,5,12
2019-06-07T07:38:21.420802> splitted in: [125, 5, 12]
2019-06-07T07:38:21.421973> (BW=125 CR=5 SF=12)
2019-06-07T07:38:21.423169> rcv timestamp (^t): 2019-06-07T07:38:21.408
2019-06-07T07:38:21.424543> 
2019-06-07T07:38:21.425665> Got first framing byte
2019-06-07T07:38:21.426859> --> got LoRa data prefix
2019-06-07T07:38:21.428061> valid app key: accept data
2019-06-07T07:38:21.429173> uploading with python /app/data_acq/edgeCall.py
2019-06-07T07:38:21.430262> python /app/data_acq/edgeCall.py "TC/24.00/HU/30.00" "1,16,118,3,19,7,-53" "125,5,12" "2019-06-07T07:38:21.408" "B827EB4E30A8"
2019-06-07T07:38:24.443851> Received data (from 118):  {'TC': '24.00', 'HU': '30.00'}
2019-06-07T07:38:24.445105> Edge: upload success TC 24.00
2019-06-07T07:38:24.446813> Edge: upload success HU 30.00
2019-06-07T07:38:24.619617> --> cloud end
2019-06-07T07:38:24.621397> 
2019-06-07T07:39:36.633721> --- rxlora. dst=1 type=0x10 src=118 seq=4 len=19 SNR=7 RSSIpkt=-53 BW=125 CR=4/5 SF=12
2019-06-07T07:39:36.634346> 2019-06-07T07:39:36.633321
2019-06-07T07:39:36.635462> rcv ctrl pkt info (^p): 1,16,118,4,19,7,-53
2019-06-07T07:39:36.636348> splitted in: [1, 16, 118, 4, 19, 7, -53]
2019-06-07T07:39:36.637346> (dst=1 type=0x10(DATA) src=118 seq=4 len=19 SNR=7 RSSI=-53)
2019-06-07T07:39:36.638215> rcv ctrl radio info (^r): 125,5,12
2019-06-07T07:39:36.639067> splitted in: [125, 5, 12]
2019-06-07T07:39:36.639901> (BW=125 CR=5 SF=12)
2019-06-07T07:39:36.640741> rcv timestamp (^t): 2019-06-07T07:39:36.629
2019-06-07T07:39:36.641644> 
2019-06-07T07:39:36.642456> Got first framing byte
2019-06-07T07:39:36.643321> --> got LoRa data prefix
2019-06-07T07:39:36.644243> valid app key: accept data
2019-06-07T07:39:36.645039> uploading with python /app/data_acq/edgeCall.py
2019-06-07T07:39:36.645875> python /app/data_acq/edgeCall.py "TC/31.00/HU/25.00" "1,16,118,4,19,7,-53" "125,5,12" "2019-06-07T07:39:36.629" "B827EB4E30A8"
2019-06-07T07:39:39.633188> Received data (from 118):  {'TC': '31.00', 'HU': '25.00'}
2019-06-07T07:39:39.634390> Edge: upload success TC 31.00
2019-06-07T07:39:39.635904> Edge: upload success HU 25.00
2019-06-07T07:39:39.799117> --> cloud end
2019-06-07T07:39:39.802005> 
2019-06-07T07:40:52.104697> --- rxlora. dst=1 type=0x10 src=118 seq=5 len=19 SNR=6 RSSIpkt=-55 BW=125 CR=4/5 SF=12
2019-06-07T07:40:52.106191> 2019-06-07T07:40:52.104194
2019-06-07T07:40:52.107360> rcv ctrl pkt info (^p): 1,16,118,5,19,6,-55
2019-06-07T07:40:52.108551> splitted in: [1, 16, 118, 5, 19, 6, -55]
2019-06-07T07:40:52.109906> (dst=1 type=0x10(DATA) src=118 seq=5 len=19 SNR=6 RSSI=-55)
2019-06-07T07:40:52.111314> rcv ctrl radio info (^r): 125,5,12
2019-06-07T07:40:52.112592> splitted in: [125, 5, 12]
2019-06-07T07:40:52.113900> (BW=125 CR=5 SF=12)
2019-06-07T07:40:52.115298> rcv timestamp (^t): 2019-06-07T07:40:52.100
2019-06-07T07:40:52.116852> 
2019-06-07T07:40:52.118070> Got first framing byte
2019-06-07T07:40:52.119347> --> got LoRa data prefix
2019-06-07T07:40:52.120833> valid app key: accept data
2019-06-07T07:40:52.122207> uploading with python /app/data_acq/edgeCall.py
2019-06-07T07:40:52.123241> python /app/data_acq/edgeCall.py "TC/25.00/HU/24.00" "1,16,118,5,19,6,-55" "125,5,12" "2019-06-07T07:40:52.100" "B827EB4E30A8"
2019-06-07T07:40:55.077484> Received data (from 118):  {'TC': '25.00', 'HU': '24.00'}
2019-06-07T07:40:55.078309> Edge: upload success TC 25.00
2019-06-07T07:40:55.079522> Edge: upload success HU 24.00
2019-06-07T07:40:55.240581> --> cloud end
2019-06-07T07:40:55.241589> 
